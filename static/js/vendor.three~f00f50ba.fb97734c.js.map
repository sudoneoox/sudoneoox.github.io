{"version":3,"file":"static/js/vendor.three~f00f50ba.fb97734c.js","mappings":"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M,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEzgD,IAAIC,GAAQ,QAGZ,MAAMC,GAAUC,KAAKC,GAAK,IACpBC,GAAU,IAAMF,KAAKC,GAG3B,SAASE,KAER,MAAMC,EAAqB,WAAhBJ,KAAKK,SAAwB,EAClCC,EAAqB,WAAhBN,KAAKK,SAAwB,EAClCE,EAAqB,WAAhBP,KAAKK,SAAwB,EAClCG,EAAqB,WAAhBR,KAAKK,SAAwB,EAOxC,OANaR,GAAW,IAALO,GAAcP,GAAMO,GAAM,EAAI,KAASP,GAAMO,GAAM,GAAK,KAASP,GAAMO,GAAM,GAAK,KAAS,IAC5GP,GAAW,IAALS,GAAcT,GAAMS,GAAM,EAAI,KAAS,IAAMT,GAAMS,GAAM,GAAK,GAAO,IAAST,GAAMS,GAAM,GAAK,KAAS,IAC9GT,GAAW,GAALU,EAAY,KAASV,GAAMU,GAAM,EAAI,KAAS,IAAMV,GAAMU,GAAM,GAAK,KAASV,GAAMU,GAAM,GAAK,KACrGV,GAAW,IAALW,GAAcX,GAAMW,GAAM,EAAI,KAASX,GAAMW,GAAM,GAAK,KAASX,GAAMW,GAAM,GAAK,MAG9EC,aAEb,CAEA,SAASC,GAAOC,EAAOC,EAAKC,GAE3B,OAAOb,KAAKa,IAAKD,EAAKZ,KAAKY,IAAKC,EAAKF,GAEtC,CAIA,SAASG,GAAiBC,EAAGC,GAE5B,OAAWD,EAAIC,EAAMA,GAAMA,CAE5B,CAyBA,SAASC,GAAMC,EAAGC,EAAGC,GAEpB,OAAS,EAAIA,GAAMF,EAAIE,EAAID,CAE5B,CAmKA,SAASE,GAAaV,EAAOpB,GAE5B,OAASA,EAAM+B,aAEd,KAAKC,aAEJ,OAAOZ,EAER,KAAKa,YAEJ,OAAOb,EAAQ,WAEhB,KAAKc,YAEJ,OAAOd,EAAQ,MAEhB,KAAKe,WAEJ,OAAOf,EAAQ,IAEhB,KAAKgB,WAEJ,OAAO3B,KAAKa,IAAKF,EAAQ,YAAgB,GAE1C,KAAKiB,WAEJ,OAAO5B,KAAKa,IAAKF,EAAQ,OAAW,GAErC,KAAKkB,UAEJ,OAAO7B,KAAKa,IAAKF,EAAQ,KAAS,GAEnC,QAEC,MAAM,IAAImB,MAAO,2BAIpB,CAEA,SAASC,GAAWpB,EAAOpB,GAE1B,OAASA,EAAM+B,aAEd,KAAKC,aAEJ,OAAOZ,EAER,KAAKa,YAEJ,OAAOxB,KAAKgC,MAAe,WAARrB,GAEpB,KAAKc,YAEJ,OAAOzB,KAAKgC,MAAe,MAARrB,GAEpB,KAAKe,WAEJ,OAAO1B,KAAKgC,MAAe,IAARrB,GAEpB,KAAKgB,WAEJ,OAAO3B,KAAKgC,MAAe,WAARrB,GAEpB,KAAKiB,WAEJ,OAAO5B,KAAKgC,MAAe,MAARrB,GAEpB,KAAKkB,UAEJ,OAAO7B,KAAKgC,MAAe,IAARrB,GAEpB,QAEC,MAAM,IAAImB,MAAO,2BAIpB,CAEA,MAAMG,GAAY,CACjBlC,QAASA,GACTG,QAASA,GACTC,aAAcA,GACdO,MAAOA,GACPI,gBAAiBA,GACjBoB,UAnRD,SAAoBhB,EAAGiB,EAAIC,EAAIC,EAAIC,GAElC,OAAOD,GAAOnB,EAAIiB,IAASG,EAAKD,IAASD,EAAKD,EAE/C,EAgRCI,YA7QD,SAAsBrB,EAAGC,EAAGR,GAE3B,OAAKO,IAAMC,GAEDR,EAAQO,IAAQC,EAAID,GAItB,CAIT,EAkQCD,KAAMA,GACNuB,KAzPD,SAAetB,EAAGC,EAAGsB,EAAQC,GAE5B,OAAOzB,GAAMC,EAAGC,EAAG,EAAInB,KAAK2C,KAAOF,EAASC,GAE7C,EAsPCE,SAnPD,SAAmB1B,GAAgB,IAAbvB,EAAMkD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE9B,OAAOlD,EAASK,KAAK8C,IAAKhC,GAAiBI,EAAY,EAATvB,GAAeA,EAE9D,EAgPCoD,WA7OD,SAAqB7B,EAAGN,EAAKC,GAE5B,OAAKK,GAAKN,EAAa,EAClBM,GAAKL,EAAa,GAEvBK,GAAMA,EAAIN,IAAUC,EAAMD,IAEfM,GAAM,EAAI,EAAIA,EAE1B,EAqOC8B,aAnOD,SAAuB9B,EAAGN,EAAKC,GAE9B,OAAKK,GAAKN,EAAa,EAClBM,GAAKL,EAAa,GAEvBK,GAAMA,EAAIN,IAAUC,EAAMD,IAEfM,EAAIA,GAAMA,GAAU,EAAJA,EAAQ,IAAO,GAE3C,EA2NC+B,QAxND,SAAkBC,EAAKC,GAEtB,OAAOD,EAAMlD,KAAKoD,MAAOpD,KAAKK,UAAa8C,EAAOD,EAAM,GAEzD,EAqNCG,UAlND,SAAoBH,EAAKC,GAExB,OAAOD,EAAMlD,KAAKK,UAAa8C,EAAOD,EAEvC,EA+MCI,gBA5MD,SAA0BC,GAEzB,OAAOA,GAAU,GAAMvD,KAAKK,SAE7B,EAyMCmD,aAtMD,SAAuBC,QAEXhF,IAANgF,IAAkB3D,GAAQ2D,GAI/B,IAAIrC,EAAItB,IAAS,WAMjB,OAJAsB,EAAIpB,KAAK0D,KAAMtC,EAAIA,IAAM,GAAQ,EAAJA,GAE7BA,GAAKA,EAAIpB,KAAK0D,KAAMtC,EAAIA,IAAM,EAAO,GAAJA,KAEtBA,EAAIA,IAAM,MAAS,GAAM,UAErC,EAyLCuC,SAvLD,SAAmBC,GAElB,OAAOA,EAAU7D,EAElB,EAoLC8D,SAlLD,SAAmBC,GAElB,OAAOA,EAAU5D,EAElB,EA+KC6D,aA7KD,SAAuBpD,GAEtB,OAAqC,KAA5BA,EAAUA,EAAQ,IAAyB,IAAVA,CAE3C,EA0KCqD,eAxKD,SAAyBrD,GAExB,OAAOX,KAAKiE,IAAK,EAAGjE,KAAKkE,KAAMlE,KAAKmE,IAAKxD,GAAUX,KAAKoE,KAEzD,EAqKCC,gBAnKD,SAA0B1D,GAEzB,OAAOX,KAAKiE,IAAK,EAAGjE,KAAKoD,MAAOpD,KAAKmE,IAAKxD,GAAUX,KAAKoE,KAE1D,EAgKCE,6BA9JD,SAAuCC,EAAGC,EAAGC,EAAGC,EAAGC,GAQlD,MAAMC,EAAM5E,KAAK4E,IACXC,EAAM7E,KAAK6E,IAEXC,EAAKF,EAAKH,EAAI,GACdM,EAAKF,EAAKJ,EAAI,GAEdO,EAAMJ,GAAOJ,EAAIE,GAAM,GACvBO,EAAMJ,GAAOL,EAAIE,GAAM,GAEvBQ,EAAON,GAAOJ,EAAIE,GAAM,GACxBS,EAAON,GAAOL,EAAIE,GAAM,GAExBU,EAAOR,GAAOF,EAAIF,GAAM,GACxBa,EAAOR,GAAOH,EAAIF,GAAM,GAE9B,OAASG,GAER,IAAK,MACJJ,EAAEe,IAAKR,EAAKG,EAAKF,EAAKG,EAAMH,EAAKI,EAAML,EAAKE,GAC5C,MAED,IAAK,MACJT,EAAEe,IAAKP,EAAKI,EAAML,EAAKG,EAAKF,EAAKG,EAAMJ,EAAKE,GAC5C,MAED,IAAK,MACJT,EAAEe,IAAKP,EAAKG,EAAMH,EAAKI,EAAML,EAAKG,EAAKH,EAAKE,GAC5C,MAED,IAAK,MACJT,EAAEe,IAAKR,EAAKG,EAAKF,EAAKM,EAAMN,EAAKK,EAAMN,EAAKE,GAC5C,MAED,IAAK,MACJT,EAAEe,IAAKP,EAAKK,EAAMN,EAAKG,EAAKF,EAAKM,EAAMP,EAAKE,GAC5C,MAED,IAAK,MACJT,EAAEe,IAAKP,EAAKM,EAAMN,EAAKK,EAAMN,EAAKG,EAAKH,EAAKE,GAC5C,MAED,QACCO,QAAQC,KAAM,kFAAoFb,GAIrG,EAyGC5C,UAAWA,GACXV,YAAaA,IAGd,MAAMoE,GAELnE,WAAAA,GAA4B,IAAfJ,EAAC2B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG1B,EAAC0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEvB4C,GAAQC,UAAUC,WAAY,EAE9BjH,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,CAEV,CAEA,SAAIyE,GAEH,OAAOlH,KAAKwC,CAEb,CAEA,SAAI0E,CAAOjF,GAEVjC,KAAKwC,EAAIP,CAEV,CAEA,UAAIkF,GAEH,OAAOnH,KAAKyC,CAEb,CAEA,UAAI0E,CAAQlF,GAEXjC,KAAKyC,EAAIR,CAEV,CAEA2E,GAAAA,CAAKpE,EAAGC,GAKP,OAHAzC,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,EAEFzC,IAER,CAEAoH,SAAAA,CAAWC,GAKV,OAHArH,KAAKwC,EAAI6E,EACTrH,KAAKyC,EAAI4E,EAEFrH,IAER,CAEAsH,IAAAA,CAAM9E,GAIL,OAFAxC,KAAKwC,EAAIA,EAEFxC,IAER,CAEAuH,IAAAA,CAAM9E,GAIL,OAFAzC,KAAKyC,EAAIA,EAEFzC,IAER,CAEAwH,YAAAA,CAAchH,EAAOyB,GAEpB,OAASzB,GAER,KAAK,EAAGR,KAAKwC,EAAIP,EAAO,MACxB,KAAK,EAAGjC,KAAKyC,EAAIR,EAAO,MACxB,QAAS,MAAM,IAAImB,MAAO,0BAA4B5C,GAIvD,OAAOR,IAER,CAEAyH,YAAAA,CAAcjH,GAEb,OAASA,GAER,KAAK,EAAG,OAAOR,KAAKwC,EACpB,KAAK,EAAG,OAAOxC,KAAKyC,EACpB,QAAS,MAAM,IAAIW,MAAO,0BAA4B5C,GAIxD,CAEAkH,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKwC,EAAGxC,KAAKyC,EAE3C,CAEAkF,IAAAA,CAAMC,GAKL,OAHA5H,KAAKwC,EAAIoF,EAAEpF,EACXxC,KAAKyC,EAAImF,EAAEnF,EAEJzC,IAER,CAEA6H,GAAAA,CAAKD,GAKJ,OAHA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EAELzC,IAER,CAEA8H,SAAAA,CAAW/C,GAKV,OAHA/E,KAAKwC,GAAKuC,EACV/E,KAAKyC,GAAKsC,EAEH/E,IAER,CAEA+H,UAAAA,CAAYjC,EAAGC,GAKd,OAHA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EAEVzC,IAER,CAEAgI,eAAAA,CAAiBJ,EAAG7C,GAKnB,OAHA/E,KAAKwC,GAAKoF,EAAEpF,EAAIuC,EAChB/E,KAAKyC,GAAKmF,EAAEnF,EAAIsC,EAET/E,IAER,CAEAiI,GAAAA,CAAKL,GAKJ,OAHA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EAELzC,IAER,CAEAkI,SAAAA,CAAWnD,GAKV,OAHA/E,KAAKwC,GAAKuC,EACV/E,KAAKyC,GAAKsC,EAEH/E,IAER,CAEAmI,UAAAA,CAAYrC,EAAGC,GAKd,OAHA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EAEVzC,IAER,CAEAoI,QAAAA,CAAUR,GAKT,OAHA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EAELzC,IAER,CAEAqI,cAAAA,CAAgBhB,GAKf,OAHArH,KAAKwC,GAAK6E,EACVrH,KAAKyC,GAAK4E,EAEHrH,IAER,CAEAsI,MAAAA,CAAQV,GAKP,OAHA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EAELzC,IAER,CAEAuI,YAAAA,CAAclB,GAEb,OAAOrH,KAAKqI,eAAgB,EAAIhB,EAEjC,CAEAmB,YAAAA,CAAclG,GAEb,MAAME,EAAIxC,KAAKwC,EAAGC,EAAIzC,KAAKyC,EACrBgG,EAAInG,EAAEoG,SAKZ,OAHA1I,KAAKwC,EAAIiG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GACtCzI,KAAKyC,EAAIgG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAE/BzI,IAER,CAEAkC,GAAAA,CAAK0F,GAKJ,OAHA5H,KAAKwC,EAAIlB,KAAKY,IAAKlC,KAAKwC,EAAGoF,EAAEpF,GAC7BxC,KAAKyC,EAAInB,KAAKY,IAAKlC,KAAKyC,EAAGmF,EAAEnF,GAEtBzC,IAER,CAEAmC,GAAAA,CAAKyF,GAKJ,OAHA5H,KAAKwC,EAAIlB,KAAKa,IAAKnC,KAAKwC,EAAGoF,EAAEpF,GAC7BxC,KAAKyC,EAAInB,KAAKa,IAAKnC,KAAKyC,EAAGmF,EAAEnF,GAEtBzC,IAER,CAEAgC,KAAAA,CAAOE,EAAKC,GAOX,OAHAnC,KAAKwC,EAAIR,GAAOhC,KAAKwC,EAAGN,EAAIM,EAAGL,EAAIK,GACnCxC,KAAKyC,EAAIT,GAAOhC,KAAKyC,EAAGP,EAAIO,EAAGN,EAAIM,GAE5BzC,IAER,CAEA2I,WAAAA,CAAaC,EAAQC,GAKpB,OAHA7I,KAAKwC,EAAIR,GAAOhC,KAAKwC,EAAGoG,EAAQC,GAChC7I,KAAKyC,EAAIT,GAAOhC,KAAKyC,EAAGmG,EAAQC,GAEzB7I,IAER,CAEA8I,WAAAA,CAAa5G,EAAKC,GAEjB,MAAMlB,EAASjB,KAAKiB,SAEpB,OAAOjB,KAAKuI,aAActH,GAAU,GAAIoH,eAAgBrG,GAAOf,EAAQiB,EAAKC,GAE7E,CAEAuC,KAAAA,GAKC,OAHA1E,KAAKwC,EAAIlB,KAAKoD,MAAO1E,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAKoD,MAAO1E,KAAKyC,GAEnBzC,IAER,CAEAwF,IAAAA,GAKC,OAHAxF,KAAKwC,EAAIlB,KAAKkE,KAAMxF,KAAKwC,GACzBxC,KAAKyC,EAAInB,KAAKkE,KAAMxF,KAAKyC,GAElBzC,IAER,CAEAsD,KAAAA,GAKC,OAHAtD,KAAKwC,EAAIlB,KAAKgC,MAAOtD,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAKgC,MAAOtD,KAAKyC,GAEnBzC,IAER,CAEA+I,WAAAA,GAKC,OAHA/I,KAAKwC,EAAIlB,KAAK0H,MAAOhJ,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAK0H,MAAOhJ,KAAKyC,GAEnBzC,IAER,CAEAiJ,MAAAA,GAKC,OAHAjJ,KAAKwC,GAAMxC,KAAKwC,EAChBxC,KAAKyC,GAAMzC,KAAKyC,EAETzC,IAER,CAEAkJ,GAAAA,CAAKtB,GAEJ,OAAO5H,KAAKwC,EAAIoF,EAAEpF,EAAIxC,KAAKyC,EAAImF,EAAEnF,CAElC,CAEA0G,KAAAA,CAAOvB,GAEN,OAAO5H,KAAKwC,EAAIoF,EAAEnF,EAAIzC,KAAKyC,EAAImF,EAAEpF,CAElC,CAEA4G,QAAAA,GAEC,OAAOpJ,KAAKwC,EAAIxC,KAAKwC,EAAIxC,KAAKyC,EAAIzC,KAAKyC,CAExC,CAEAxB,MAAAA,GAEC,OAAOK,KAAK+H,KAAMrJ,KAAKwC,EAAIxC,KAAKwC,EAAIxC,KAAKyC,EAAIzC,KAAKyC,EAEnD,CAEA6G,eAAAA,GAEC,OAAOhI,KAAK8C,IAAKpE,KAAKwC,GAAMlB,KAAK8C,IAAKpE,KAAKyC,EAE5C,CAEAY,SAAAA,GAEC,OAAOrD,KAAKuI,aAAcvI,KAAKiB,UAAY,EAE5C,CAEAsI,KAAAA,GAMC,OAFcjI,KAAKkI,OAASxJ,KAAKyC,GAAKzC,KAAKwC,GAAMlB,KAAKC,EAIvD,CAEAkI,OAAAA,CAAS7B,GAER,MAAM8B,EAAcpI,KAAK+H,KAAMrJ,KAAKoJ,WAAaxB,EAAEwB,YAEnD,GAAqB,IAAhBM,EAAoB,OAAOpI,KAAKC,GAAK,EAE1C,MAAMoI,EAAQ3J,KAAKkJ,IAAKtB,GAAM8B,EAI9B,OAAOpI,KAAKsI,KAAM5H,GAAO2H,GAAS,EAAG,GAEtC,CAEAE,UAAAA,CAAYjC,GAEX,OAAOtG,KAAK+H,KAAMrJ,KAAK8J,kBAAmBlC,GAE3C,CAEAkC,iBAAAA,CAAmBlC,GAElB,MAAMmC,EAAK/J,KAAKwC,EAAIoF,EAAEpF,EAAGwH,EAAKhK,KAAKyC,EAAImF,EAAEnF,EACzC,OAAOsH,EAAKA,EAAKC,EAAKA,CAEvB,CAEAC,mBAAAA,CAAqBrC,GAEpB,OAAOtG,KAAK8C,IAAKpE,KAAKwC,EAAIoF,EAAEpF,GAAMlB,KAAK8C,IAAKpE,KAAKyC,EAAImF,EAAEnF,EAExD,CAEAyH,SAAAA,CAAWjJ,GAEV,OAAOjB,KAAKqD,YAAYgF,eAAgBpH,EAEzC,CAEAsB,IAAAA,CAAMqF,EAAGuC,GAKR,OAHAnK,KAAKwC,IAAOoF,EAAEpF,EAAIxC,KAAKwC,GAAM2H,EAC7BnK,KAAKyC,IAAOmF,EAAEnF,EAAIzC,KAAKyC,GAAM0H,EAEtBnK,IAER,CAEAoK,WAAAA,CAAaC,EAAIC,EAAIH,GAKpB,OAHAnK,KAAKwC,EAAI6H,EAAG7H,GAAM8H,EAAG9H,EAAI6H,EAAG7H,GAAM2H,EAClCnK,KAAKyC,EAAI4H,EAAG5H,GAAM6H,EAAG7H,EAAI4H,EAAG5H,GAAM0H,EAE3BnK,IAER,CAEAuK,MAAAA,CAAQ3C,GAEP,OAAWA,EAAEpF,IAAMxC,KAAKwC,GAASoF,EAAEnF,IAAMzC,KAAKyC,CAE/C,CAEA+H,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAK1B,OAHAnE,KAAKwC,EAAI3B,EAAO4J,GAChBzK,KAAKyC,EAAI5B,EAAO4J,EAAS,GAElBzK,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAK7B,OAHAtD,EAAO4J,GAAWzK,KAAKwC,EACvB3B,EAAO4J,EAAS,GAAMzK,KAAKyC,EAEpB5B,CAER,CAEA8J,mBAAAA,CAAqBC,EAAWpK,GAK/B,OAHAR,KAAKwC,EAAIoI,EAAUC,KAAMrK,GACzBR,KAAKyC,EAAImI,EAAUE,KAAMtK,GAElBR,IAER,CAEA+K,YAAAA,CAAcC,EAAQzB,GAErB,MAAMvD,EAAI1E,KAAK4E,IAAKqD,GAASxE,EAAIzD,KAAK6E,IAAKoD,GAErC/G,EAAIxC,KAAKwC,EAAIwI,EAAOxI,EACpBC,EAAIzC,KAAKyC,EAAIuI,EAAOvI,EAK1B,OAHAzC,KAAKwC,EAAIA,EAAIwD,EAAIvD,EAAIsC,EAAIiG,EAAOxI,EAChCxC,KAAKyC,EAAID,EAAIuC,EAAItC,EAAIuD,EAAIgF,EAAOvI,EAEzBzC,IAER,CAEA2B,MAAAA,GAKC,OAHA3B,KAAKwC,EAAIlB,KAAKK,SACd3B,KAAKyC,EAAInB,KAAKK,SAEP3B,IAER,CAEA,EAAGiL,OAAOC,kBAEHlL,KAAKwC,QACLxC,KAAKyC,CAEZ,EAID,MAAM0I,GAELvI,WAAAA,CAAawI,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAEpDT,GAAQnE,UAAU6E,WAAY,EAE9B7L,KAAK0I,SAAW,CAEf,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,QAIM3I,IAARqL,GAEJpL,KAAK4G,IAAKwE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAIpD,CAEAhF,GAAAA,CAAKwE,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,GAE5C,MAAME,EAAK9L,KAAK0I,SAMhB,OAJAoD,EAAI,GAAMV,EAAKU,EAAI,GAAMP,EAAKO,EAAI,GAAMJ,EACxCI,EAAI,GAAMT,EAAKS,EAAI,GAAMN,EAAKM,EAAI,GAAMH,EACxCG,EAAI,GAAMR,EAAKQ,EAAI,GAAML,EAAKK,EAAI,GAAMF,EAEjC5L,IAER,CAEA+L,QAAAA,GAUC,OARA/L,KAAK4G,IAEJ,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GAIA5G,IAER,CAEA2H,IAAAA,CAAMrF,GAEL,MAAMwJ,EAAK9L,KAAK0I,SACVsD,EAAK1J,EAAEoG,SAMb,OAJAoD,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACpDF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACpDF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAE7ChM,IAER,CAEAiM,YAAAA,CAAcC,EAAOC,EAAOC,GAM3B,OAJAF,EAAMG,qBAAsBrM,KAAM,GAClCmM,EAAME,qBAAsBrM,KAAM,GAClCoM,EAAMC,qBAAsBrM,KAAM,GAE3BA,IAER,CAEAsM,cAAAA,CAAgBhK,GAEf,MAAM0J,EAAK1J,EAAEoG,SAUb,OARA1I,KAAK4G,IAEJoF,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GACtBA,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAIhBhM,IAER,CAEAoI,QAAAA,CAAU9F,GAET,OAAOtC,KAAKuM,iBAAkBvM,KAAMsC,EAErC,CAEAkK,WAAAA,CAAalK,GAEZ,OAAOtC,KAAKuM,iBAAkBjK,EAAGtC,KAElC,CAEAuM,gBAAAA,CAAkBzG,EAAGC,GAEpB,MAAM0G,EAAK3G,EAAE4C,SACPgE,EAAK3G,EAAE2C,SACPoD,EAAK9L,KAAK0I,SAEViE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GAAKI,EAAMJ,EAAI,GACxCK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GAAKO,EAAMP,EAAI,GACxCQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,GAAKU,EAAMV,EAAI,GAExCW,EAAMV,EAAI,GAAKW,EAAMX,EAAI,GAAKY,EAAMZ,EAAI,GACxCa,EAAMb,EAAI,GAAKc,EAAMd,EAAI,GAAKe,EAAMf,EAAI,GACxCgB,EAAMhB,EAAI,GAAKiB,EAAMjB,EAAI,GAAKkB,EAAMlB,EAAI,GAc9C,OAZAZ,EAAI,GAAMa,EAAMS,EAAMR,EAAMW,EAAMV,EAAMa,EACxC5B,EAAI,GAAMa,EAAMU,EAAMT,EAAMY,EAAMX,EAAMc,EACxC7B,EAAI,GAAMa,EAAMW,EAAMV,EAAMa,EAAMZ,EAAMe,EAExC9B,EAAI,GAAMgB,EAAMM,EAAML,EAAMQ,EAAMP,EAAMU,EACxC5B,EAAI,GAAMgB,EAAMO,EAAMN,EAAMS,EAAMR,EAAMW,EACxC7B,EAAI,GAAMgB,EAAMQ,EAAMP,EAAMU,EAAMT,EAAMY,EAExC9B,EAAI,GAAMmB,EAAMG,EAAMF,EAAMK,EAAMJ,EAAMO,EACxC5B,EAAI,GAAMmB,EAAMI,EAAMH,EAAMM,EAAML,EAAMQ,EACxC7B,EAAI,GAAMmB,EAAMK,EAAMJ,EAAMO,EAAMN,EAAMS,EAEjC5N,IAER,CAEAqI,cAAAA,CAAgBtD,GAEf,MAAM+G,EAAK9L,KAAK0I,SAMhB,OAJAoD,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EACvC+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EACvC+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAEhC/E,IAER,CAEA6N,WAAAA,GAEC,MAAM/B,EAAK9L,KAAK0I,SAEV5C,EAAIgG,EAAI,GAAK/F,EAAI+F,EAAI,GAAK9F,EAAI8F,EAAI,GACvCgC,EAAIhC,EAAI,GAAKrD,EAAIqD,EAAI,GAAKiC,EAAIjC,EAAI,GAClCkC,EAAIlC,EAAI,GAAKmC,EAAInC,EAAI,GAAK/K,EAAI+K,EAAI,GAEnC,OAAOhG,EAAI2C,EAAI1H,EAAI+E,EAAIiI,EAAIE,EAAIlI,EAAI+H,EAAI/M,EAAIgF,EAAIgI,EAAIC,EAAIhI,EAAI8H,EAAIG,EAAIjI,EAAIyC,EAAIuF,CAE5E,CAEAE,MAAAA,GAEC,MAAMpC,EAAK9L,KAAK0I,SAEf0C,EAAMU,EAAI,GAAKP,EAAMO,EAAI,GAAKJ,EAAMI,EAAI,GACxCT,EAAMS,EAAI,GAAKN,EAAMM,EAAI,GAAKH,EAAMG,EAAI,GACxCR,EAAMQ,EAAI,GAAKL,EAAMK,EAAI,GAAKF,EAAME,EAAI,GAExCqC,EAAMvC,EAAMJ,EAAMG,EAAMF,EACxB2C,EAAMzC,EAAML,EAAMM,EAAMP,EACxBgD,EAAM5C,EAAMJ,EAAMG,EAAMF,EAExBgD,EAAMlD,EAAM+C,EAAM5C,EAAM6C,EAAM1C,EAAM2C,EAErC,GAAa,IAARC,EAAY,OAAOtO,KAAK4G,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE1D,MAAM2H,EAAS,EAAID,EAcnB,OAZAxC,EAAI,GAAMqC,EAAMI,EAChBzC,EAAI,IAAQJ,EAAMD,EAAMG,EAAML,GAAQgD,EACtCzC,EAAI,IAAQH,EAAMJ,EAAMG,EAAMF,GAAQ+C,EAEtCzC,EAAI,GAAMsC,EAAMG,EAChBzC,EAAI,IAAQF,EAAMR,EAAMM,EAAMJ,GAAQiD,EACtCzC,EAAI,IAAQJ,EAAML,EAAMM,EAAMP,GAAQmD,EAEtCzC,EAAI,GAAMuC,EAAME,EAChBzC,EAAI,IAAQP,EAAMD,EAAMG,EAAML,GAAQmD,EACtCzC,EAAI,IAAQN,EAAMJ,EAAMG,EAAMF,GAAQkD,EAE/BvO,IAER,CAEAwO,SAAAA,GAEC,IAAIC,EACJ,MAAMnM,EAAItC,KAAK0I,SAMf,OAJA+F,EAAMnM,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAMmM,EACxCA,EAAMnM,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAMmM,EACxCA,EAAMnM,EAAG,GAAKA,EAAG,GAAMA,EAAG,GAAKA,EAAG,GAAMmM,EAEjCzO,IAER,CAEA0O,eAAAA,CAAiBC,GAEhB,OAAO3O,KAAKsM,eAAgBqC,GAAUT,SAASM,WAEhD,CAEAI,kBAAAA,CAAoBC,GAEnB,MAAMvM,EAAItC,KAAK0I,SAYf,OAVAmG,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GACZuM,EAAG,GAAMvM,EAAG,GAELtC,IAER,CAEA8O,cAAAA,CAAgBC,EAAIC,EAAIC,EAAIC,EAAIC,EAAUC,EAAIC,GAE7C,MAAMrJ,EAAI1E,KAAK4E,IAAKiJ,GACdpK,EAAIzD,KAAK6E,IAAKgJ,GAQpB,OANAnP,KAAK4G,IACJqI,EAAKjJ,EAAGiJ,EAAKlK,GAAKkK,GAAOjJ,EAAIoJ,EAAKrK,EAAIsK,GAAOD,EAAKL,GAChDG,EAAKnK,EAAGmK,EAAKlJ,GAAKkJ,IAASnK,EAAIqK,EAAKpJ,EAAIqJ,GAAOA,EAAKL,EACtD,EAAG,EAAG,GAGAhP,IAER,CAIAsP,KAAAA,CAAOL,EAAIC,GAIV,OAFAlP,KAAKwM,YAAa+C,GAAIC,UAAWP,EAAIC,IAE9BlP,IAER,CAEAyP,MAAAA,CAAQ9F,GAIP,OAFA3J,KAAKwM,YAAa+C,GAAIG,cAAgB/F,IAE/B3J,IAER,CAEA2P,SAAAA,CAAWZ,EAAIC,GAId,OAFAhP,KAAKwM,YAAa+C,GAAIK,gBAAiBb,EAAIC,IAEpChP,IAER,CAIA4P,eAAAA,CAAiBpN,EAAGC,GAwBnB,OAtBKD,EAAEyE,UAENjH,KAAK4G,IAEJ,EAAG,EAAGpE,EAAEA,EACR,EAAG,EAAGA,EAAEC,EACR,EAAG,EAAG,GAMPzC,KAAK4G,IAEJ,EAAG,EAAGpE,EACN,EAAG,EAAGC,EACN,EAAG,EAAG,GAMDzC,IAER,CAEA0P,YAAAA,CAAc/F,GAIb,MAAM3D,EAAI1E,KAAK4E,IAAKyD,GACd5E,EAAIzD,KAAK6E,IAAKwD,GAUpB,OARA3J,KAAK4G,IAEJZ,GAAKjB,EAAG,EACRA,EAAGiB,EAAG,EACN,EAAG,EAAG,GAIAhG,IAER,CAEAwP,SAAAA,CAAWhN,EAAGC,GAUb,OARAzC,KAAK4G,IAEJpE,EAAG,EAAG,EACN,EAAGC,EAAG,EACN,EAAG,EAAG,GAIAzC,IAER,CAIAuK,MAAAA,CAAQsF,GAEP,MAAM/D,EAAK9L,KAAK0I,SACVsD,EAAK6D,EAAOnH,SAElB,IAAM,IAAI3H,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAK+K,EAAI/K,KAAQiL,EAAIjL,GAAM,OAAO,EAInC,OAAO,CAER,CAEAyJ,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE1B,IAAM,IAAIpD,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK0I,SAAU3H,GAAMF,EAAOE,EAAI0J,GAIjC,OAAOzK,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE7B,MAAM2H,EAAK9L,KAAK0I,SAchB,OAZA7H,EAAO4J,GAAWqB,EAAI,GACtBjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAE1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAE1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAEnBjL,CAER,CAEA6G,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc4H,UAAWxK,KAAK0I,SAE/C,EAID,MAAM6G,GAAoB,IAAIpE,GAE9B,SAAS2E,GAAkBjP,GAI1B,IAAM,IAAIE,EAAIF,EAAMI,OAAS,EAAGF,GAAK,IAAMA,EAE1C,GAAKF,EAAOE,IAAO,MAAQ,OAAO,EAInC,OAAO,CAER,CAEA,MAAMgP,GAAe,CACpB5M,UAAWA,UACXH,WAAYA,WACZgN,kBAAmBA,kBACnB9M,WAAYA,WACZH,YAAaA,YACbE,WAAYA,WACZH,YAAaA,YACbD,aAAcA,aACdoN,aAAcA,cAGf,SAASC,GAAerQ,EAAMsQ,GAE7B,OAAO,IAAIJ,GAAclQ,GAAQsQ,EAElC,CAEA,SAASC,GAAiBC,GAEzB,OAAOC,SAASF,gBAAiB,+BAAgCC,EAElE,CAEA,SAASE,KAER,MAAMC,EAASJ,GAAiB,UAEhC,OADAI,EAAOC,MAAMC,QAAU,QAChBF,CAER,CAEA,MAAMG,GAAS,CAAC,EAEhB,SAASC,GAAUC,GAEbA,KAAWF,KAEhBA,GAAQE,IAAY,EAEpBhK,QAAQC,KAAM+J,GAEf,CAEA,SAASC,GAAYC,EAAIC,EAAMC,GAE9B,OAAO,IAAIC,SAAS,SAAWC,EAASC,GAqBvCC,YAnBA,SAASC,IAER,OAASP,EAAGQ,eAAgBP,EAAMD,EAAGS,wBAAyB,IAE7D,KAAKT,EAAGU,YACPL,IACA,MAED,KAAKL,EAAGW,gBACPL,WAAYC,EAAOL,GACnB,MAED,QACCE,IAIH,GAEmBF,EAEpB,GAED,CAEA,SAASU,GAA8BC,GAEtC,MAAMtP,EAAIsP,EAAiBlJ,SAG3BpG,EAAG,GAAM,GAAMA,EAAG,GAAM,GAAMA,EAAG,GACjCA,EAAG,GAAM,GAAMA,EAAG,GAAM,GAAMA,EAAG,GACjCA,EAAG,IAAO,GAAMA,EAAG,IAAO,GAAMA,EAAG,IACnCA,EAAG,IAAO,GAAMA,EAAG,IAAO,GAAMA,EAAG,GAEpC,CAEA,SAASuP,GAA4BD,GAEpC,MAAMtP,EAAIsP,EAAiBlJ,UACe,IAAdpG,EAAG,KAK9BA,EAAG,KAASA,EAAG,IAAO,EACtBA,EAAG,KAASA,EAAG,MAIfA,EAAG,KAASA,EAAG,IACfA,EAAG,IAAmB,EAAVA,EAAG,IAIjB,CAEA,MAAMwP,IAAqC,IAAI3G,IAAUvE,IACxD,SAAW,SAAW,SACtB,QAAW,SAAW,SACtB,SAAW,SAAW,UAGjBmL,IAAqC,IAAI5G,IAAUvE,IACxD,WAAa,WAAa,UACxB,SAAW,UAAW,SACxB,UAAa,QAAW,WAGzB,SAASoL,KAER,MAAMC,EAAkB,CAEvBC,SAAS,EAETC,kBAAmBnV,GAoBnBoV,OAAQ,CAAC,EAETC,QAAS,SAAWC,EAAOC,EAAkBC,GAE5C,OAAsB,IAAjBxS,KAAKkS,SAAqBK,IAAqBC,GAAsBD,GAAsBC,GAM3FxS,KAAKoS,OAAQG,GAAmBE,WAAavV,KAEjDoV,EAAMzD,EAAI6D,GAAcJ,EAAMzD,GAC9ByD,EAAMtE,EAAI0E,GAAcJ,EAAMtE,GAC9BsE,EAAMvM,EAAI2M,GAAcJ,EAAMvM,IAI1B/F,KAAKoS,OAAQG,GAAmBI,YAAc3S,KAAKoS,OAAQI,GAAmBG,YAElFL,EAAM9J,aAAcxI,KAAKoS,OAAQG,GAAmBK,OACpDN,EAAM9J,aAAcxI,KAAKoS,OAAQI,GAAmBK,UAIhD7S,KAAKoS,OAAQI,GAAmBC,WAAavV,KAEjDoV,EAAMzD,EAAIiE,GAAcR,EAAMzD,GAC9ByD,EAAMtE,EAAI8E,GAAcR,EAAMtE,GAC9BsE,EAAMvM,EAAI+M,GAAcR,EAAMvM,IAIxBuM,GA3BCA,CA6BT,EAEAS,sBAAuB,SAAWT,EAAOE,GAExC,OAAOxS,KAAKqS,QAASC,EAAOtS,KAAKmS,kBAAmBK,EAErD,EAEAQ,oBAAqB,SAAWV,EAAOC,GAEtC,OAAOvS,KAAKqS,QAASC,EAAOC,EAAkBvS,KAAKmS,kBAEpD,EAEAc,aAAc,SAAWC,GAExB,OAAOlT,KAAKoS,OAAQc,GAAaP,SAElC,EAEAQ,YAAa,SAAWD,GAEvB,OAAKA,IAAepW,GAAsBG,GAEnC+C,KAAKoS,OAAQc,GAAaT,QAElC,EAEAW,yBAA0B,SAAWxS,GAA8C,IAAtCsS,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGnE,KAAKmS,kBAE9D,OAAOvR,EAAO4J,UAAWxK,KAAKoS,OAAQc,GAAaG,sBAEpD,EAEAC,OAAQ,SAAWC,GAElBC,OAAOC,OAAQzT,KAAKoS,OAAQmB,EAE7B,EAIAG,WAAY,SAAWC,EAAcpB,EAAkBC,GAEtD,OAAOmB,EACLhM,KAAM3H,KAAKoS,OAAQG,GAAmBK,OACtCxK,SAAUpI,KAAKoS,OAAQI,GAAmBK,QAE7C,EAEAe,4BAA6B,SAAWV,GAEvC,OAAOlT,KAAKoS,OAAQc,GAAaW,uBAAuBC,uBAEzD,EAEAC,qBAAsB,WAAiD,IAAtCb,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGnE,KAAKmS,kBAElD,OAAOnS,KAAKoS,OAAQc,GAAac,wBAAwBC,gBAE1D,GAQKC,EAAmB,CAAE,IAAO,IAAO,GAAO,GAAO,IAAO,KACxDC,EAAgC,CAAE,MAAQ,MAAQ,OAClDC,EAAM,CAAE,MAAQ,MA2BtB,OAzBAnC,EAAgBqB,OAAQ,CAEvB,CAAEtW,IAAwB,CACzB2V,UAAWuB,EACXG,WAAYD,EACZ3B,SAAUxV,GACV2V,MAAOd,GACPe,QAASd,GACTsB,sBAAuBc,EACvBH,wBAAyB,CAAEC,iBAAkBlX,IAC7C8W,uBAAwB,CAAEC,wBAAyB/W,KAGpD,CAAEA,IAAkB,CACnB4V,UAAWuB,EACXG,WAAYD,EACZ3B,SAAUvV,GACV0V,MAAOd,GACPe,QAASd,GACTsB,sBAAuBc,EACvBN,uBAAwB,CAAEC,wBAAyB/W,OAK9CkV,CAER,CAEA,MAAMA,GAAgCD,KAEtC,SAASU,GAAc1M,GAEtB,OAASA,EAAI,OAAgB,YAAJA,EAAmB1E,KAAKiE,IAAS,YAAJS,EAAmB,YAAc,IAExF,CAEA,SAAS8M,GAAc9M,GAEtB,OAASA,EAAI,SAAkB,MAAJA,EAAY,MAAU1E,KAAKiE,IAAKS,EAAG,QAAc,IAE7E,CAEA,IAAIsO,GAEJ,MAAMC,GAEL,iBAAOC,CAAYC,GAElB,GAAK,UAAUC,KAAMD,EAAME,KAE1B,OAAOF,EAAME,IAId,GAAkC,qBAAtBC,kBAEX,OAAOH,EAAME,IAId,IAAInE,EAEJ,GAAKiE,aAAiBG,kBAErBpE,EAASiE,MAEH,MAEW1U,IAAZuU,KAAwBA,GAAUlE,GAAiB,WAExDkE,GAAQpN,MAAQuN,EAAMvN,MACtBoN,GAAQnN,OAASsN,EAAMtN,OAEvB,MAAM0N,EAAUP,GAAQQ,WAAY,MAE/BL,aAAiBM,UAErBF,EAAQG,aAAcP,EAAO,EAAG,GAIhCI,EAAQI,UAAWR,EAAO,EAAG,EAAGA,EAAMvN,MAAOuN,EAAMtN,QAIpDqJ,EAAS8D,EAEV,CAEA,OAAO9D,EAAO0E,UAAW,YAE1B,CAEA,mBAAOC,CAAcV,GAEpB,GAAmC,qBAArBW,kBAAoCX,aAAiBW,kBACnC,qBAAtBR,mBAAqCH,aAAiBG,mBACtC,qBAAhBS,aAA+BZ,aAAiBY,YAAgB,CAEzE,MAAM7E,EAASJ,GAAiB,UAEhCI,EAAOtJ,MAAQuN,EAAMvN,MACrBsJ,EAAOrJ,OAASsN,EAAMtN,OAEtB,MAAM0N,EAAUrE,EAAOsE,WAAY,MACnCD,EAAQI,UAAWR,EAAO,EAAG,EAAGA,EAAMvN,MAAOuN,EAAMtN,QAEnD,MAAMmO,EAAYT,EAAQU,aAAc,EAAG,EAAGd,EAAMvN,MAAOuN,EAAMtN,QAC3DqO,EAAOF,EAAUE,KAEvB,IAAM,IAAIzU,EAAI,EAAGA,EAAIyU,EAAKvU,OAAQF,IAEjCyU,EAAMzU,GAAwC,IAAlC2R,GAAc8C,EAAMzU,GAAM,KAMvC,OAFA8T,EAAQG,aAAcM,EAAW,EAAG,GAE7B9E,CAER,CAAO,GAAKiE,EAAMe,KAAO,CAExB,MAAMA,EAAOf,EAAMe,KAAK1U,MAAO,GAE/B,IAAM,IAAIC,EAAI,EAAGA,EAAIyU,EAAKvU,OAAQF,IAE5ByU,aAAgBxS,YAAcwS,aAAgBxF,kBAElDwF,EAAMzU,GAAMO,KAAKoD,MAAyC,IAAlCgO,GAAc8C,EAAMzU,GAAM,MAMlDyU,EAAMzU,GAAM2R,GAAc8C,EAAMzU,IAMlC,MAAO,CACNyU,KAAMA,EACNtO,MAAOuN,EAAMvN,MACbC,OAAQsN,EAAMtN,OAGhB,CAGC,OADAN,QAAQC,KAAM,+FACP2N,CAIT,EAID,IAAIgB,GAAY,EAEhB,MAAMC,GAEL9S,WAAAA,GAA2B,IAAd4S,EAAIrR,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAEnBnE,KAAK2V,UAAW,EAEhBnC,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAOwT,OAE5CzV,KAAK6V,KAAOpU,KAEZzB,KAAKwV,KAAOA,EACZxV,KAAK8V,WAAY,EAEjB9V,KAAK+V,QAAU,CAEhB,CAEA,eAAIC,CAAa/T,IAED,IAAVA,GAAiBjC,KAAK+V,SAE5B,CAEAE,MAAAA,CAAQC,GAEP,MAAMC,OAA0BpW,IAATmW,GAAsC,kBAATA,EAEpD,IAAOC,QAA6CpW,IAA7BmW,EAAKE,OAAQpW,KAAK6V,MAExC,OAAOK,EAAKE,OAAQpW,KAAK6V,MAI1B,MAAMQ,EAAS,CACdR,KAAM7V,KAAK6V,KACXS,IAAK,IAGAd,EAAOxV,KAAKwV,KAElB,GAAc,OAATA,EAAgB,CAEpB,IAAIc,EAEJ,GAAKC,MAAMC,QAAShB,GAAS,CAI5Bc,EAAM,GAEN,IAAM,IAAIvV,EAAI,EAAGC,EAAIwU,EAAKvU,OAAQF,EAAIC,EAAGD,IAEnCyU,EAAMzU,GAAI0V,cAEdH,EAAIlW,KAAMsW,GAAgBlB,EAAMzU,GAAI0T,QAIpC6B,EAAIlW,KAAMsW,GAAgBlB,EAAMzU,IAMnC,MAICuV,EAAMI,GAAgBlB,GAIvBa,EAAOC,IAAMA,CAEd,CAQA,OANOH,IAEND,EAAKE,OAAQpW,KAAK6V,MAASQ,GAIrBA,CAER,EAID,SAASK,GAAgBjC,GAExB,MAAmC,qBAArBW,kBAAoCX,aAAiBW,kBACnC,qBAAtBR,mBAAqCH,aAAiBG,mBACtC,qBAAhBS,aAA+BZ,aAAiBY,YAIlDd,GAAWC,WAAYC,GAIzBA,EAAMe,KAIH,CACNA,KAAMe,MAAMI,KAAMlC,EAAMe,MACxBtO,MAAOuN,EAAMvN,MACbC,OAAQsN,EAAMtN,OACdtH,KAAM4U,EAAMe,KAAK5S,YAAYyN,OAK9BxJ,QAAQC,KAAM,+CACP,CAAC,EAMX,CAEA,IAAI8P,GAAa,EAEjB,MAAMC,WAAgBlX,GAErBiD,WAAAA,GAA4T,IAA/S6R,EAAKtQ,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG0S,GAAQC,cAAeC,EAAO5S,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG0S,GAAQG,gBAAiBC,EAAK9S,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG9M,GAAqB6f,EAAK/S,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG9M,GAAqB8f,EAAShT,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGvM,GAAcwf,EAASjT,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpM,GAA0Bsf,EAAMlT,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpL,GAAY8G,EAAIsE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGlM,GAAkBqf,EAAUnT,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG0S,GAAQU,mBAAoBrE,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGrH,GAE5S0a,QAEAxX,KAAKyX,WAAY,EAEjBjE,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAO2U,OAE5C5W,KAAK6V,KAAOpU,KAEZzB,KAAKqQ,KAAO,GAEZrQ,KAAK0X,OAAS,IAAIhC,GAAQjB,GAC1BzU,KAAK2X,QAAU,GAEf3X,KAAK+W,QAAUA,EACf/W,KAAK4X,QAAU,EAEf5X,KAAKiX,MAAQA,EACbjX,KAAKkX,MAAQA,EAEblX,KAAKmX,UAAYA,EACjBnX,KAAKoX,UAAYA,EAEjBpX,KAAKsX,WAAaA,EAElBtX,KAAKqX,OAASA,EACdrX,KAAK6X,eAAiB,KACtB7X,KAAKH,KAAOA,EAEZG,KAAKyK,OAAS,IAAI1D,GAAS,EAAG,GAC9B/G,KAAK8X,OAAS,IAAI/Q,GAAS,EAAG,GAC9B/G,KAAKgL,OAAS,IAAIjE,GAAS,EAAG,GAC9B/G,KAAKmP,SAAW,EAEhBnP,KAAK+X,kBAAmB,EACxB/X,KAAK6P,OAAS,IAAI1E,GAElBnL,KAAKgY,iBAAkB,EACvBhY,KAAKiY,kBAAmB,EACxBjY,KAAKkY,OAAQ,EACblY,KAAKmY,gBAAkB,EAEvBnY,KAAKkT,WAAaA,EAElBlT,KAAKoY,SAAW,CAAC,EAEjBpY,KAAK+V,QAAU,EACf/V,KAAKqY,SAAW,KAEhBrY,KAAKsY,aAAe,KACpBtY,KAAKuY,uBAAwB,EAC7BvY,KAAKwY,aAAe,CAErB,CAEA,SAAI/D,GAEH,OAAOzU,KAAK0X,OAAOlC,IAEpB,CAEA,SAAIf,CAAOxS,QAAK,IAALA,IAAAA,EAAQ,MAElBjC,KAAK0X,OAAOlC,KAAOvT,CAEpB,CAEAwW,YAAAA,GAECzY,KAAK6P,OAAOf,eAAgB9O,KAAKyK,OAAOjI,EAAGxC,KAAKyK,OAAOhI,EAAGzC,KAAK8X,OAAOtV,EAAGxC,KAAK8X,OAAOrV,EAAGzC,KAAKmP,SAAUnP,KAAKgL,OAAOxI,EAAGxC,KAAKgL,OAAOvI,EAEnI,CAEAiF,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAM+P,GA2CL,OAzCA1X,KAAKqQ,KAAOqH,EAAOrH,KAEnBrQ,KAAK0X,OAASA,EAAOA,OACrB1X,KAAK2X,QAAUD,EAAOC,QAAQ7W,MAAO,GAErCd,KAAK+W,QAAUW,EAAOX,QACtB/W,KAAK4X,QAAUF,EAAOE,QAEtB5X,KAAKiX,MAAQS,EAAOT,MACpBjX,KAAKkX,MAAQQ,EAAOR,MAEpBlX,KAAKmX,UAAYO,EAAOP,UACxBnX,KAAKoX,UAAYM,EAAON,UAExBpX,KAAKsX,WAAaI,EAAOJ,WAEzBtX,KAAKqX,OAASK,EAAOL,OACrBrX,KAAK6X,eAAiBH,EAAOG,eAC7B7X,KAAKH,KAAO6X,EAAO7X,KAEnBG,KAAKyK,OAAO9C,KAAM+P,EAAOjN,QACzBzK,KAAK8X,OAAOnQ,KAAM+P,EAAOI,QACzB9X,KAAKgL,OAAOrD,KAAM+P,EAAO1M,QACzBhL,KAAKmP,SAAWuI,EAAOvI,SAEvBnP,KAAK+X,iBAAmBL,EAAOK,iBAC/B/X,KAAK6P,OAAOlI,KAAM+P,EAAO7H,QAEzB7P,KAAKgY,gBAAkBN,EAAOM,gBAC9BhY,KAAKiY,iBAAmBP,EAAOO,iBAC/BjY,KAAKkY,MAAQR,EAAOQ,MACpBlY,KAAKmY,gBAAkBT,EAAOS,gBAC9BnY,KAAKkT,WAAawE,EAAOxE,WAEzBlT,KAAKsY,aAAeZ,EAAOY,aAC3BtY,KAAKuY,sBAAwBb,EAAOa,sBAEpCvY,KAAKoY,SAAWM,KAAKC,MAAOD,KAAKE,UAAWlB,EAAOU,WAEnDpY,KAAKgW,aAAc,EAEZhW,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMC,OAA0BpW,IAATmW,GAAsC,kBAATA,EAEpD,IAAOC,QAA+CpW,IAA/BmW,EAAK2C,SAAU7Y,KAAK6V,MAE1C,OAAOK,EAAK2C,SAAU7Y,KAAK6V,MAI5B,MAAMQ,EAAS,CAEdyC,SAAU,CACT/C,QAAS,IACTlW,KAAM,UACNkZ,UAAW,kBAGZlD,KAAM7V,KAAK6V,KACXxF,KAAMrQ,KAAKqQ,KAEXoE,MAAOzU,KAAK0X,OAAOzB,OAAQC,GAAOL,KAElCkB,QAAS/W,KAAK+W,QACda,QAAS5X,KAAK4X,QAEdE,OAAQ,CAAE9X,KAAK8X,OAAOtV,EAAGxC,KAAK8X,OAAOrV,GACrCgI,OAAQ,CAAEzK,KAAKyK,OAAOjI,EAAGxC,KAAKyK,OAAOhI,GACrCuI,OAAQ,CAAEhL,KAAKgL,OAAOxI,EAAGxC,KAAKgL,OAAOvI,GACrC0M,SAAUnP,KAAKmP,SAEf6J,KAAM,CAAEhZ,KAAKiX,MAAOjX,KAAKkX,OAEzBG,OAAQrX,KAAKqX,OACbQ,eAAgB7X,KAAK6X,eACrBhY,KAAMG,KAAKH,KACXqT,WAAYlT,KAAKkT,WAEjBkE,UAAWpX,KAAKoX,UAChBD,UAAWnX,KAAKmX,UAChBG,WAAYtX,KAAKsX,WAEjBY,MAAOlY,KAAKkY,MAEZF,gBAAiBhY,KAAKgY,gBACtBC,iBAAkBjY,KAAKiY,iBACvBE,gBAAiBnY,KAAKmY,iBAYvB,OARK3E,OAAOyF,KAAMjZ,KAAKoY,UAAWnX,OAAS,IAAIoV,EAAO+B,SAAWpY,KAAKoY,UAE/DjC,IAEND,EAAK2C,SAAU7Y,KAAK6V,MAASQ,GAIvBA,CAER,CAEA6C,OAAAA,GAEClZ,KAAKU,cAAe,CAAEb,KAAM,WAE7B,CAEAsZ,WAAAA,CAAaC,GAEZ,GAAKpZ,KAAK+W,UAAYjgB,GAAY,OAAOsiB,EAIzC,GAFAA,EAAG5Q,aAAcxI,KAAK6P,QAEjBuJ,EAAG5W,EAAI,GAAK4W,EAAG5W,EAAI,EAEvB,OAASxC,KAAKiX,OAEb,KAAK7f,GAEJgiB,EAAG5W,EAAI4W,EAAG5W,EAAIlB,KAAKoD,MAAO0U,EAAG5W,GAC7B,MAED,KAAKnL,GAEJ+hB,EAAG5W,EAAI4W,EAAG5W,EAAI,EAAI,EAAI,EACtB,MAED,KAAKlL,GAEwC,IAAvCgK,KAAK8C,IAAK9C,KAAKoD,MAAO0U,EAAG5W,GAAM,GAEnC4W,EAAG5W,EAAIlB,KAAKkE,KAAM4T,EAAG5W,GAAM4W,EAAG5W,EAI9B4W,EAAG5W,EAAI4W,EAAG5W,EAAIlB,KAAKoD,MAAO0U,EAAG5W,GAUjC,GAAK4W,EAAG3W,EAAI,GAAK2W,EAAG3W,EAAI,EAEvB,OAASzC,KAAKkX,OAEb,KAAK9f,GAEJgiB,EAAG3W,EAAI2W,EAAG3W,EAAInB,KAAKoD,MAAO0U,EAAG3W,GAC7B,MAED,KAAKpL,GAEJ+hB,EAAG3W,EAAI2W,EAAG3W,EAAI,EAAI,EAAI,EACtB,MAED,KAAKnL,GAEwC,IAAvCgK,KAAK8C,IAAK9C,KAAKoD,MAAO0U,EAAG3W,GAAM,GAEnC2W,EAAG3W,EAAInB,KAAKkE,KAAM4T,EAAG3W,GAAM2W,EAAG3W,EAI9B2W,EAAG3W,EAAI2W,EAAG3W,EAAInB,KAAKoD,MAAO0U,EAAG3W,GAgBjC,OANKzC,KAAKkY,QAETkB,EAAG3W,EAAI,EAAI2W,EAAG3W,GAIR2W,CAER,CAEA,eAAIpD,CAAa/T,IAED,IAAVA,IAEJjC,KAAK+V,UACL/V,KAAK0X,OAAO1B,aAAc,EAI5B,CAEA,oBAAIqD,CAAkBpX,IAEN,IAAVA,GAEJjC,KAAKwY,cAIP,EAID3B,GAAQC,cAAgB,KACxBD,GAAQG,gBAAkBlgB,GAC1B+f,GAAQU,mBAAqB,EAE7B,MAAM+B,GAEL1W,WAAAA,GAA0C,IAA7BJ,EAAC2B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG1B,EAAC0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAACpV,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGqV,EAACrV,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAErCmV,GAAQtS,UAAUyS,WAAY,EAE9BzZ,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,EACTzC,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,CAEV,CAEA,SAAItS,GAEH,OAAOlH,KAAKuZ,CAEb,CAEA,SAAIrS,CAAOjF,GAEVjC,KAAKuZ,EAAItX,CAEV,CAEA,UAAIkF,GAEH,OAAOnH,KAAKwZ,CAEb,CAEA,UAAIrS,CAAQlF,GAEXjC,KAAKwZ,EAAIvX,CAEV,CAEA2E,GAAAA,CAAKpE,EAAGC,EAAG8W,EAAGC,GAOb,OALAxZ,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,EACTzC,KAAKuZ,EAAIA,EACTvZ,KAAKwZ,EAAIA,EAEFxZ,IAER,CAEAoH,SAAAA,CAAWC,GAOV,OALArH,KAAKwC,EAAI6E,EACTrH,KAAKyC,EAAI4E,EACTrH,KAAKuZ,EAAIlS,EACTrH,KAAKwZ,EAAInS,EAEFrH,IAER,CAEAsH,IAAAA,CAAM9E,GAIL,OAFAxC,KAAKwC,EAAIA,EAEFxC,IAER,CAEAuH,IAAAA,CAAM9E,GAIL,OAFAzC,KAAKyC,EAAIA,EAEFzC,IAER,CAEA0Z,IAAAA,CAAMH,GAIL,OAFAvZ,KAAKuZ,EAAIA,EAEFvZ,IAER,CAEA2Z,IAAAA,CAAMH,GAIL,OAFAxZ,KAAKwZ,EAAIA,EAEFxZ,IAER,CAEAwH,YAAAA,CAAchH,EAAOyB,GAEpB,OAASzB,GAER,KAAK,EAAGR,KAAKwC,EAAIP,EAAO,MACxB,KAAK,EAAGjC,KAAKyC,EAAIR,EAAO,MACxB,KAAK,EAAGjC,KAAKuZ,EAAItX,EAAO,MACxB,KAAK,EAAGjC,KAAKwZ,EAAIvX,EAAO,MACxB,QAAS,MAAM,IAAImB,MAAO,0BAA4B5C,GAIvD,OAAOR,IAER,CAEAyH,YAAAA,CAAcjH,GAEb,OAASA,GAER,KAAK,EAAG,OAAOR,KAAKwC,EACpB,KAAK,EAAG,OAAOxC,KAAKyC,EACpB,KAAK,EAAG,OAAOzC,KAAKuZ,EACpB,KAAK,EAAG,OAAOvZ,KAAKwZ,EACpB,QAAS,MAAM,IAAIpW,MAAO,0BAA4B5C,GAIxD,CAEAkH,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKwC,EAAGxC,KAAKyC,EAAGzC,KAAKuZ,EAAGvZ,KAAKwZ,EAE3D,CAEA7R,IAAAA,CAAMC,GAOL,OALA5H,KAAKwC,EAAIoF,EAAEpF,EACXxC,KAAKyC,EAAImF,EAAEnF,EACXzC,KAAKuZ,EAAI3R,EAAE2R,EACXvZ,KAAKwZ,OAAczZ,IAAR6H,EAAE4R,EAAoB5R,EAAE4R,EAAI,EAEhCxZ,IAER,CAEA6H,GAAAA,CAAKD,GAOJ,OALA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EACZvZ,KAAKwZ,GAAK5R,EAAE4R,EAELxZ,IAER,CAEA8H,SAAAA,CAAW/C,GAOV,OALA/E,KAAKwC,GAAKuC,EACV/E,KAAKyC,GAAKsC,EACV/E,KAAKuZ,GAAKxU,EACV/E,KAAKwZ,GAAKzU,EAEH/E,IAER,CAEA+H,UAAAA,CAAYjC,EAAGC,GAOd,OALA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EACjBzC,KAAKuZ,EAAIzT,EAAEyT,EAAIxT,EAAEwT,EACjBvZ,KAAKwZ,EAAI1T,EAAE0T,EAAIzT,EAAEyT,EAEVxZ,IAER,CAEAgI,eAAAA,CAAiBJ,EAAG7C,GAOnB,OALA/E,KAAKwC,GAAKoF,EAAEpF,EAAIuC,EAChB/E,KAAKyC,GAAKmF,EAAEnF,EAAIsC,EAChB/E,KAAKuZ,GAAK3R,EAAE2R,EAAIxU,EAChB/E,KAAKwZ,GAAK5R,EAAE4R,EAAIzU,EAET/E,IAER,CAEAiI,GAAAA,CAAKL,GAOJ,OALA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EACZvZ,KAAKwZ,GAAK5R,EAAE4R,EAELxZ,IAER,CAEAkI,SAAAA,CAAWnD,GAOV,OALA/E,KAAKwC,GAAKuC,EACV/E,KAAKyC,GAAKsC,EACV/E,KAAKuZ,GAAKxU,EACV/E,KAAKwZ,GAAKzU,EAEH/E,IAER,CAEAmI,UAAAA,CAAYrC,EAAGC,GAOd,OALA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EACjBzC,KAAKuZ,EAAIzT,EAAEyT,EAAIxT,EAAEwT,EACjBvZ,KAAKwZ,EAAI1T,EAAE0T,EAAIzT,EAAEyT,EAEVxZ,IAER,CAEAoI,QAAAA,CAAUR,GAOT,OALA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EACZvZ,KAAKwZ,GAAK5R,EAAE4R,EAELxZ,IAER,CAEAqI,cAAAA,CAAgBhB,GAOf,OALArH,KAAKwC,GAAK6E,EACVrH,KAAKyC,GAAK4E,EACVrH,KAAKuZ,GAAKlS,EACVrH,KAAKwZ,GAAKnS,EAEHrH,IAER,CAEA4Z,YAAAA,CAActX,GAEb,MAAME,EAAIxC,KAAKwC,EAAGC,EAAIzC,KAAKyC,EAAG8W,EAAIvZ,KAAKuZ,EAAGC,EAAIxZ,KAAKwZ,EAC7C/Q,EAAInG,EAAEoG,SAOZ,OALA1I,KAAKwC,EAAIiG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAAI9Q,EAAG,IAAO+Q,EAC1DxZ,KAAKyC,EAAIgG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAAI9Q,EAAG,IAAO+Q,EAC1DxZ,KAAKuZ,EAAI9Q,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,IAAO8Q,EAAI9Q,EAAG,IAAO+Q,EAC3DxZ,KAAKwZ,EAAI/Q,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,IAAO8Q,EAAI9Q,EAAG,IAAO+Q,EAEpDxZ,IAER,CAEAsI,MAAAA,CAAQV,GAOP,OALA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EACZvZ,KAAKwZ,GAAK5R,EAAE4R,EAELxZ,IAER,CAEAuI,YAAAA,CAAclB,GAEb,OAAOrH,KAAKqI,eAAgB,EAAIhB,EAEjC,CAEAwS,0BAAAA,CAA4BhU,GAM3B7F,KAAKwZ,EAAI,EAAIlY,KAAKsI,KAAM/D,EAAE2T,GAE1B,MAAMzU,EAAIzD,KAAK+H,KAAM,EAAIxD,EAAE2T,EAAI3T,EAAE2T,GAgBjC,OAdKzU,EAAI,MAER/E,KAAKwC,EAAI,EACTxC,KAAKyC,EAAI,EACTzC,KAAKuZ,EAAI,IAITvZ,KAAKwC,EAAIqD,EAAErD,EAAIuC,EACf/E,KAAKyC,EAAIoD,EAAEpD,EAAIsC,EACf/E,KAAKuZ,EAAI1T,EAAE0T,EAAIxU,GAIT/E,IAER,CAEA8Z,8BAAAA,CAAgCxX,GAM/B,IAAIiH,EAAO/G,EAAGC,EAAG8W,EACjB,MAAMQ,EAAU,IACfC,EAAW,GAEXlO,EAAKxJ,EAAEoG,SAEPuR,EAAMnO,EAAI,GAAKoO,EAAMpO,EAAI,GAAKqO,EAAMrO,EAAI,GACxCsO,EAAMtO,EAAI,GAAKuO,EAAMvO,EAAI,GAAKwO,EAAMxO,EAAI,GACxCyO,EAAMzO,EAAI,GAAK0O,EAAM1O,EAAI,GAAK2O,EAAM3O,EAAI,IAEzC,GAAOxK,KAAK8C,IAAK8V,EAAME,GAAQL,GACxBzY,KAAK8C,IAAK+V,EAAMI,GAAQR,GACxBzY,KAAK8C,IAAKkW,EAAME,GAAQT,EAAY,CAM1C,GAAOzY,KAAK8C,IAAK8V,EAAME,GAAQJ,GACxB1Y,KAAK8C,IAAK+V,EAAMI,GAAQP,GACxB1Y,KAAK8C,IAAKkW,EAAME,GAAQR,GACxB1Y,KAAK8C,IAAK6V,EAAMI,EAAMI,EAAM,GAAMT,EAMxC,OAFAha,KAAK4G,IAAK,EAAG,EAAG,EAAG,GAEZ5G,KAMRuJ,EAAQjI,KAAKC,GAEb,MAAMmZ,GAAOT,EAAM,GAAM,EACnBU,GAAON,EAAM,GAAM,EACnBO,GAAOH,EAAM,GAAM,EACnBI,GAAOX,EAAME,GAAQ,EACrBU,GAAOX,EAAMI,GAAQ,EACrBQ,GAAOT,EAAME,GAAQ,EA4D3B,OA1DOE,EAAKC,GAAUD,EAAKE,EAIrBF,EAAKX,GAETvX,EAAI,EACJC,EAAI,WACJ8W,EAAI,aAIJ/W,EAAIlB,KAAK+H,KAAMqR,GACfjY,EAAIoY,EAAKrY,EACT+W,EAAIuB,EAAKtY,GAICmY,EAAKC,EAIXD,EAAKZ,GAETvX,EAAI,WACJC,EAAI,EACJ8W,EAAI,aAIJ9W,EAAInB,KAAK+H,KAAMsR,GACfnY,EAAIqY,EAAKpY,EACT8W,EAAIwB,EAAKtY,GAQLmY,EAAKb,GAETvX,EAAI,WACJC,EAAI,WACJ8W,EAAI,IAIJA,EAAIjY,KAAK+H,KAAMuR,GACfpY,EAAIsY,EAAKvB,EACT9W,EAAIsY,EAAKxB,GAMXvZ,KAAK4G,IAAKpE,EAAGC,EAAG8W,EAAGhQ,GAEZvJ,IAER,CAIA,IAAI+E,EAAIzD,KAAK+H,MAAQmR,EAAMF,IAAUE,EAAMF,IACxCH,EAAMI,IAAUJ,EAAMI,IACtBH,EAAMF,IAAUE,EAAMF,IAYzB,OAVK5Y,KAAK8C,IAAKW,GAAM,OAAQA,EAAI,GAKjC/E,KAAKwC,GAAMgY,EAAMF,GAAQvV,EACzB/E,KAAKyC,GAAM0X,EAAMI,GAAQxV,EACzB/E,KAAKuZ,GAAMa,EAAMF,GAAQnV,EACzB/E,KAAKwZ,EAAIlY,KAAKsI,MAAQqQ,EAAMI,EAAMI,EAAM,GAAM,GAEvCza,IAER,CAEAgb,qBAAAA,CAAuB1Y,GAEtB,MAAMmG,EAAInG,EAAEoG,SAOZ,OALA1I,KAAKwC,EAAIiG,EAAG,IACZzI,KAAKyC,EAAIgG,EAAG,IACZzI,KAAKuZ,EAAI9Q,EAAG,IACZzI,KAAKwZ,EAAI/Q,EAAG,IAELzI,IAER,CAEAkC,GAAAA,CAAK0F,GAOJ,OALA5H,KAAKwC,EAAIlB,KAAKY,IAAKlC,KAAKwC,EAAGoF,EAAEpF,GAC7BxC,KAAKyC,EAAInB,KAAKY,IAAKlC,KAAKyC,EAAGmF,EAAEnF,GAC7BzC,KAAKuZ,EAAIjY,KAAKY,IAAKlC,KAAKuZ,EAAG3R,EAAE2R,GAC7BvZ,KAAKwZ,EAAIlY,KAAKY,IAAKlC,KAAKwZ,EAAG5R,EAAE4R,GAEtBxZ,IAER,CAEAmC,GAAAA,CAAKyF,GAOJ,OALA5H,KAAKwC,EAAIlB,KAAKa,IAAKnC,KAAKwC,EAAGoF,EAAEpF,GAC7BxC,KAAKyC,EAAInB,KAAKa,IAAKnC,KAAKyC,EAAGmF,EAAEnF,GAC7BzC,KAAKuZ,EAAIjY,KAAKa,IAAKnC,KAAKuZ,EAAG3R,EAAE2R,GAC7BvZ,KAAKwZ,EAAIlY,KAAKa,IAAKnC,KAAKwZ,EAAG5R,EAAE4R,GAEtBxZ,IAER,CAEAgC,KAAAA,CAAOE,EAAKC,GASX,OALAnC,KAAKwC,EAAIR,GAAOhC,KAAKwC,EAAGN,EAAIM,EAAGL,EAAIK,GACnCxC,KAAKyC,EAAIT,GAAOhC,KAAKyC,EAAGP,EAAIO,EAAGN,EAAIM,GACnCzC,KAAKuZ,EAAIvX,GAAOhC,KAAKuZ,EAAGrX,EAAIqX,EAAGpX,EAAIoX,GACnCvZ,KAAKwZ,EAAIxX,GAAOhC,KAAKwZ,EAAGtX,EAAIsX,EAAGrX,EAAIqX,GAE5BxZ,IAER,CAEA2I,WAAAA,CAAaC,EAAQC,GAOpB,OALA7I,KAAKwC,EAAIR,GAAOhC,KAAKwC,EAAGoG,EAAQC,GAChC7I,KAAKyC,EAAIT,GAAOhC,KAAKyC,EAAGmG,EAAQC,GAChC7I,KAAKuZ,EAAIvX,GAAOhC,KAAKuZ,EAAG3Q,EAAQC,GAChC7I,KAAKwZ,EAAIxX,GAAOhC,KAAKwZ,EAAG5Q,EAAQC,GAEzB7I,IAER,CAEA8I,WAAAA,CAAa5G,EAAKC,GAEjB,MAAMlB,EAASjB,KAAKiB,SAEpB,OAAOjB,KAAKuI,aAActH,GAAU,GAAIoH,eAAgBrG,GAAOf,EAAQiB,EAAKC,GAE7E,CAEAuC,KAAAA,GAOC,OALA1E,KAAKwC,EAAIlB,KAAKoD,MAAO1E,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAKoD,MAAO1E,KAAKyC,GAC1BzC,KAAKuZ,EAAIjY,KAAKoD,MAAO1E,KAAKuZ,GAC1BvZ,KAAKwZ,EAAIlY,KAAKoD,MAAO1E,KAAKwZ,GAEnBxZ,IAER,CAEAwF,IAAAA,GAOC,OALAxF,KAAKwC,EAAIlB,KAAKkE,KAAMxF,KAAKwC,GACzBxC,KAAKyC,EAAInB,KAAKkE,KAAMxF,KAAKyC,GACzBzC,KAAKuZ,EAAIjY,KAAKkE,KAAMxF,KAAKuZ,GACzBvZ,KAAKwZ,EAAIlY,KAAKkE,KAAMxF,KAAKwZ,GAElBxZ,IAER,CAEAsD,KAAAA,GAOC,OALAtD,KAAKwC,EAAIlB,KAAKgC,MAAOtD,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAKgC,MAAOtD,KAAKyC,GAC1BzC,KAAKuZ,EAAIjY,KAAKgC,MAAOtD,KAAKuZ,GAC1BvZ,KAAKwZ,EAAIlY,KAAKgC,MAAOtD,KAAKwZ,GAEnBxZ,IAER,CAEA+I,WAAAA,GAOC,OALA/I,KAAKwC,EAAIlB,KAAK0H,MAAOhJ,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAK0H,MAAOhJ,KAAKyC,GAC1BzC,KAAKuZ,EAAIjY,KAAK0H,MAAOhJ,KAAKuZ,GAC1BvZ,KAAKwZ,EAAIlY,KAAK0H,MAAOhJ,KAAKwZ,GAEnBxZ,IAER,CAEAiJ,MAAAA,GAOC,OALAjJ,KAAKwC,GAAMxC,KAAKwC,EAChBxC,KAAKyC,GAAMzC,KAAKyC,EAChBzC,KAAKuZ,GAAMvZ,KAAKuZ,EAChBvZ,KAAKwZ,GAAMxZ,KAAKwZ,EAETxZ,IAER,CAEAkJ,GAAAA,CAAKtB,GAEJ,OAAO5H,KAAKwC,EAAIoF,EAAEpF,EAAIxC,KAAKyC,EAAImF,EAAEnF,EAAIzC,KAAKuZ,EAAI3R,EAAE2R,EAAIvZ,KAAKwZ,EAAI5R,EAAE4R,CAEhE,CAEApQ,QAAAA,GAEC,OAAOpJ,KAAKwC,EAAIxC,KAAKwC,EAAIxC,KAAKyC,EAAIzC,KAAKyC,EAAIzC,KAAKuZ,EAAIvZ,KAAKuZ,EAAIvZ,KAAKwZ,EAAIxZ,KAAKwZ,CAE5E,CAEAvY,MAAAA,GAEC,OAAOK,KAAK+H,KAAMrJ,KAAKwC,EAAIxC,KAAKwC,EAAIxC,KAAKyC,EAAIzC,KAAKyC,EAAIzC,KAAKuZ,EAAIvZ,KAAKuZ,EAAIvZ,KAAKwZ,EAAIxZ,KAAKwZ,EAEvF,CAEAlQ,eAAAA,GAEC,OAAOhI,KAAK8C,IAAKpE,KAAKwC,GAAMlB,KAAK8C,IAAKpE,KAAKyC,GAAMnB,KAAK8C,IAAKpE,KAAKuZ,GAAMjY,KAAK8C,IAAKpE,KAAKwZ,EAEtF,CAEAnW,SAAAA,GAEC,OAAOrD,KAAKuI,aAAcvI,KAAKiB,UAAY,EAE5C,CAEAiJ,SAAAA,CAAWjJ,GAEV,OAAOjB,KAAKqD,YAAYgF,eAAgBpH,EAEzC,CAEAsB,IAAAA,CAAMqF,EAAGuC,GAOR,OALAnK,KAAKwC,IAAOoF,EAAEpF,EAAIxC,KAAKwC,GAAM2H,EAC7BnK,KAAKyC,IAAOmF,EAAEnF,EAAIzC,KAAKyC,GAAM0H,EAC7BnK,KAAKuZ,IAAO3R,EAAE2R,EAAIvZ,KAAKuZ,GAAMpP,EAC7BnK,KAAKwZ,IAAO5R,EAAE4R,EAAIxZ,KAAKwZ,GAAMrP,EAEtBnK,IAER,CAEAoK,WAAAA,CAAaC,EAAIC,EAAIH,GAOpB,OALAnK,KAAKwC,EAAI6H,EAAG7H,GAAM8H,EAAG9H,EAAI6H,EAAG7H,GAAM2H,EAClCnK,KAAKyC,EAAI4H,EAAG5H,GAAM6H,EAAG7H,EAAI4H,EAAG5H,GAAM0H,EAClCnK,KAAKuZ,EAAIlP,EAAGkP,GAAMjP,EAAGiP,EAAIlP,EAAGkP,GAAMpP,EAClCnK,KAAKwZ,EAAInP,EAAGmP,GAAMlP,EAAGkP,EAAInP,EAAGmP,GAAMrP,EAE3BnK,IAER,CAEAuK,MAAAA,CAAQ3C,GAEP,OAAWA,EAAEpF,IAAMxC,KAAKwC,GAASoF,EAAEnF,IAAMzC,KAAKyC,GAASmF,EAAE2R,IAAMvZ,KAAKuZ,GAAS3R,EAAE4R,IAAMxZ,KAAKwZ,CAE3F,CAEAhP,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAO1B,OALAnE,KAAKwC,EAAI3B,EAAO4J,GAChBzK,KAAKyC,EAAI5B,EAAO4J,EAAS,GACzBzK,KAAKuZ,EAAI1Y,EAAO4J,EAAS,GACzBzK,KAAKwZ,EAAI3Y,EAAO4J,EAAS,GAElBzK,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAO7B,OALAtD,EAAO4J,GAAWzK,KAAKwC,EACvB3B,EAAO4J,EAAS,GAAMzK,KAAKyC,EAC3B5B,EAAO4J,EAAS,GAAMzK,KAAKuZ,EAC3B1Y,EAAO4J,EAAS,GAAMzK,KAAKwZ,EAEpB3Y,CAER,CAEA8J,mBAAAA,CAAqBC,EAAWpK,GAO/B,OALAR,KAAKwC,EAAIoI,EAAUC,KAAMrK,GACzBR,KAAKyC,EAAImI,EAAUE,KAAMtK,GACzBR,KAAKuZ,EAAI3O,EAAUqQ,KAAMza,GACzBR,KAAKwZ,EAAI5O,EAAUsQ,KAAM1a,GAElBR,IAER,CAEA2B,MAAAA,GAOC,OALA3B,KAAKwC,EAAIlB,KAAKK,SACd3B,KAAKyC,EAAInB,KAAKK,SACd3B,KAAKuZ,EAAIjY,KAAKK,SACd3B,KAAKwZ,EAAIlY,KAAKK,SAEP3B,IAER,CAEA,EAAGiL,OAAOC,kBAEHlL,KAAKwC,QACLxC,KAAKyC,QACLzC,KAAKuZ,QACLvZ,KAAKwZ,CAEZ,EASD,MAAM2B,WAAqBxb,GAE1BiD,WAAAA,GAAmD,IAAtCsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGiX,EAAOjX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE9CqT,QAEAxX,KAAKqb,gBAAiB,EAEtBrb,KAAKkH,MAAQA,EACblH,KAAKmH,OAASA,EACdnH,KAAKsb,MAAQ,EAEbtb,KAAKub,QAAU,IAAIjC,GAAS,EAAG,EAAGpS,EAAOC,GACzCnH,KAAKwb,aAAc,EAEnBxb,KAAKyb,SAAW,IAAInC,GAAS,EAAG,EAAGpS,EAAOC,GAE1C,MAAMsN,EAAQ,CAAEvN,MAAOA,EAAOC,OAAQA,EAAQmU,MAAO,GAErDF,EAAU5H,OAAOC,OAAQ,CACxBuE,iBAAiB,EACjBH,eAAgB,KAChBT,UAAWxf,GACX8jB,aAAa,EACbC,eAAe,EACfC,oBAAoB,EACpBC,sBAAsB,EACtBC,aAAc,KACdC,QAAS,EACTC,MAAO,GACLZ,GAEH,MAAMa,EAAU,IAAIpF,GAASpC,EAAO2G,EAAQrE,QAASqE,EAAQnE,MAAOmE,EAAQlE,MAAOkE,EAAQjE,UAAWiE,EAAQhE,UAAWgE,EAAQ/D,OAAQ+D,EAAQvb,KAAMub,EAAQ9D,WAAY8D,EAAQlI,YAEnL+I,EAAQ/D,OAAQ,EAChB+D,EAAQjE,gBAAkBoD,EAAQpD,gBAClCiE,EAAQpE,eAAiBuD,EAAQvD,eAEjC7X,KAAK6Y,SAAW,GAEhB,MAAMmD,EAAQZ,EAAQY,MACtB,IAAM,IAAIjb,EAAI,EAAGA,EAAIib,EAAOjb,IAE3Bf,KAAK6Y,SAAU9X,GAAMkb,EAAQvU,QAC7B1H,KAAK6Y,SAAU9X,GAAIwX,uBAAwB,EAC3CvY,KAAK6Y,SAAU9X,GAAIuX,aAAetY,KAInCA,KAAK0b,YAAcN,EAAQM,YAC3B1b,KAAK2b,cAAgBP,EAAQO,cAE7B3b,KAAK4b,mBAAqBR,EAAQQ,mBAClC5b,KAAK6b,qBAAuBT,EAAQS,qBAEpC7b,KAAKkc,cAAgB,KACrBlc,KAAK8b,aAAeV,EAAQU,aAE5B9b,KAAK+b,QAAUX,EAAQW,OAExB,CAEA,WAAIE,GAEH,OAAOjc,KAAK6Y,SAAU,EAEvB,CAEA,WAAIoD,CAASha,GAEZjC,KAAK6Y,SAAU,GAAM5W,CAEtB,CAEA,gBAAI6Z,CAAcK,GAEW,OAAvBnc,KAAKkc,gBAAyBlc,KAAKkc,cAAc5D,aAAe,MACpD,OAAZ6D,IAAmBA,EAAQ7D,aAAetY,MAE/CA,KAAKkc,cAAgBC,CAEtB,CAEA,gBAAIL,GAEH,OAAO9b,KAAKkc,aAEb,CAEAE,OAAAA,CAASlV,EAAOC,GAAoB,IAAZmU,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE/B,GAAKnE,KAAKkH,QAAUA,GAASlH,KAAKmH,SAAWA,GAAUnH,KAAKsb,QAAUA,EAAQ,CAE7Etb,KAAKkH,MAAQA,EACblH,KAAKmH,OAASA,EACdnH,KAAKsb,MAAQA,EAEb,IAAM,IAAIva,EAAI,EAAGsb,EAAKrc,KAAK6Y,SAAS5X,OAAQF,EAAIsb,EAAItb,IAEnDf,KAAK6Y,SAAU9X,GAAI0T,MAAMvN,MAAQA,EACjClH,KAAK6Y,SAAU9X,GAAI0T,MAAMtN,OAASA,EAClCnH,KAAK6Y,SAAU9X,GAAI0T,MAAM6G,MAAQA,EAIlCtb,KAAKkZ,SAEN,CAEAlZ,KAAKyb,SAAS7U,IAAK,EAAG,EAAGM,EAAOC,GAChCnH,KAAKub,QAAQ3U,IAAK,EAAG,EAAGM,EAAOC,EAEhC,CAEAO,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAM+P,GAEL1X,KAAKkH,MAAQwQ,EAAOxQ,MACpBlH,KAAKmH,OAASuQ,EAAOvQ,OACrBnH,KAAKsb,MAAQ5D,EAAO4D,MAEpBtb,KAAKub,QAAQ5T,KAAM+P,EAAO6D,SAC1Bvb,KAAKwb,YAAc9D,EAAO8D,YAE1Bxb,KAAKyb,SAAS9T,KAAM+P,EAAO+D,UAE3Bzb,KAAK6Y,SAAS5X,OAAS,EAEvB,IAAM,IAAIF,EAAI,EAAGsb,EAAK3E,EAAOmB,SAAS5X,OAAQF,EAAIsb,EAAItb,IAErDf,KAAK6Y,SAAU9X,GAAM2W,EAAOmB,SAAU9X,GAAI2G,QAC1C1H,KAAK6Y,SAAU9X,GAAIwX,uBAAwB,EAC3CvY,KAAK6Y,SAAU9X,GAAIuX,aAAetY,KAMnC,MAAMyU,EAAQjB,OAAOC,OAAQ,CAAC,EAAGiE,EAAOuE,QAAQxH,OAahD,OAZAzU,KAAKic,QAAQvE,OAAS,IAAIhC,GAAQjB,GAElCzU,KAAK0b,YAAchE,EAAOgE,YAC1B1b,KAAK2b,cAAgBjE,EAAOiE,cAE5B3b,KAAK4b,mBAAqBlE,EAAOkE,mBACjC5b,KAAK6b,qBAAuBnE,EAAOmE,qBAEN,OAAxBnE,EAAOoE,eAAwB9b,KAAK8b,aAAepE,EAAOoE,aAAapU,SAE5E1H,KAAK+b,QAAUrE,EAAOqE,QAEf/b,IAER,CAEAkZ,OAAAA,GAEClZ,KAAKU,cAAe,CAAEb,KAAM,WAE7B,EAID,MAAMyc,WAA0BnB,GAE/BvY,WAAAA,GAEC4U,MAFiBrT,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAASA,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAUA,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAI9CnE,KAAKuc,qBAAsB,CAE5B,EAID,MAAMC,WAAyB3F,GAE9BjU,WAAAA,GAA6D,IAAhD4S,EAAIrR,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAAM+C,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAExDqT,MAAO,MAEPxX,KAAKyc,oBAAqB,EAE1Bzc,KAAKyU,MAAQ,CAAEe,OAAMtO,QAAOC,SAAQmU,SAEpCtb,KAAKmX,UAAY5f,GACjByI,KAAKoX,UAAY7f,GAEjByI,KAAK0c,MAAQrlB,GAEb2I,KAAKgY,iBAAkB,EACvBhY,KAAKkY,OAAQ,EACblY,KAAKmY,gBAAkB,EAEvBnY,KAAK2c,aAAe,IAAIC,GAEzB,CAEAC,cAAAA,CAAgBC,GAEf9c,KAAK2c,aAAa9U,IAAKiV,EAExB,CAEAC,iBAAAA,GAEC/c,KAAK2c,aAAaK,OAEnB,EAID,MAAMC,WAA+BX,GAEpC1Z,WAAAA,GAA8D,IAAjDsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE3CqT,MAAOtQ,EAAOC,EAFuChD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAIzDnE,KAAKkd,0BAA2B,EAEhCld,KAAKsb,MAAQA,EAEbtb,KAAKic,QAAU,IAAIO,GAAkB,KAAMtV,EAAOC,EAAQmU,GAE1Dtb,KAAKic,QAAQ1D,uBAAwB,CAEtC,EAID,MAAM4E,WAAsBtG,GAE3BjU,WAAAA,GAA6D,IAAhD4S,EAAIrR,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAAM+C,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAUxDqT,MAAO,MAEPxX,KAAKod,iBAAkB,EAEvBpd,KAAKyU,MAAQ,CAAEe,OAAMtO,QAAOC,SAAQmU,SAEpCtb,KAAKmX,UAAY5f,GACjByI,KAAKoX,UAAY7f,GAEjByI,KAAK0c,MAAQrlB,GAEb2I,KAAKgY,iBAAkB,EACvBhY,KAAKkY,OAAQ,EACblY,KAAKmY,gBAAkB,CAExB,EAID,MAAMkF,WAA4Bf,GAEjC1Z,WAAAA,GAA8D,IAAjDsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE3CqT,MAAOtQ,EAAOC,EAFuChD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAIzDnE,KAAKsd,uBAAwB,EAE7Btd,KAAKsb,MAAQA,EAEbtb,KAAKic,QAAU,IAAIkB,GAAe,KAAMjW,EAAOC,EAAQmU,GAEvDtb,KAAKic,QAAQ1D,uBAAwB,CAEtC,EAID,MAAMgF,GAEL3a,WAAAA,GAA0C,IAA7BJ,EAAC2B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG1B,EAAC0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAACpV,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGqV,EAACrV,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAErCnE,KAAKwd,cAAe,EAEpBxd,KAAKyd,GAAKjb,EACVxC,KAAK0d,GAAKjb,EACVzC,KAAK2d,GAAKpE,EACVvZ,KAAK4d,GAAKpE,CAEX,CAEA,gBAAOqE,CAAWC,EAAKC,EAAWC,EAAMC,EAAYC,EAAMC,EAAYzb,GAIrE,IAAI0b,EAAKJ,EAAMC,EAAa,GAC3BI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAEzB,MAAMO,EAAKN,EAAMC,EAAa,GAC7BM,EAAKP,EAAMC,EAAa,GACxBO,EAAKR,EAAMC,EAAa,GACxBQ,EAAKT,EAAMC,EAAa,GAEzB,GAAW,IAANzb,EAMJ,OAJAob,EAAKC,EAAY,GAAMK,EACvBN,EAAKC,EAAY,GAAMM,EACvBP,EAAKC,EAAY,GAAMO,OACvBR,EAAKC,EAAY,GAAMQ,GAKxB,GAAW,IAAN7b,EAMJ,OAJAob,EAAKC,EAAY,GAAMS,EACvBV,EAAKC,EAAY,GAAMU,EACvBX,EAAKC,EAAY,GAAMW,OACvBZ,EAAKC,EAAY,GAAMY,GAKxB,GAAKJ,IAAOI,GAAMP,IAAOI,GAAMH,IAAOI,GAAMH,IAAOI,EAAK,CAEvD,IAAI3Z,EAAI,EAAIrC,EACZ,MAAMwD,EAAMkY,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAC9CC,EAAQ1Y,GAAO,EAAI,GAAM,EACzB2Y,EAAS,EAAI3Y,EAAMA,EAGpB,GAAK2Y,EAASC,OAAOC,QAAU,CAE9B,MAAM5Y,EAAM7E,KAAK+H,KAAMwV,GACtBG,EAAM1d,KAAKkI,MAAOrD,EAAKD,EAAM0Y,GAE9B7Z,EAAIzD,KAAK6E,IAAKpB,EAAIia,GAAQ7Y,EAC1BzD,EAAIpB,KAAK6E,IAAKzD,EAAIsc,GAAQ7Y,CAE3B,CAEA,MAAM8Y,EAAOvc,EAAIkc,EAQjB,GANAR,EAAKA,EAAKrZ,EAAIyZ,EAAKS,EACnBZ,EAAKA,EAAKtZ,EAAI0Z,EAAKQ,EACnBX,EAAKA,EAAKvZ,EAAI2Z,EAAKO,EACnBV,EAAKA,EAAKxZ,EAAI4Z,EAAKM,EAGdla,IAAM,EAAIrC,EAAI,CAElB,MAAMqL,EAAI,EAAIzM,KAAK+H,KAAM+U,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,GAE5DH,GAAMrQ,EACNsQ,GAAMtQ,EACNuQ,GAAMvQ,EACNwQ,GAAMxQ,CAEP,CAED,CAEA+P,EAAKC,GAAcK,EACnBN,EAAKC,EAAY,GAAMM,EACvBP,EAAKC,EAAY,GAAMO,EACvBR,EAAKC,EAAY,GAAMQ,CAExB,CAEA,8BAAOW,CAAyBpB,EAAKC,EAAWC,EAAMC,EAAYC,EAAMC,GAEvE,MAAMC,EAAKJ,EAAMC,GACXI,EAAKL,EAAMC,EAAa,GACxBK,EAAKN,EAAMC,EAAa,GACxBM,EAAKP,EAAMC,EAAa,GAExBO,EAAKN,EAAMC,GACXM,EAAKP,EAAMC,EAAa,GACxBO,EAAKR,EAAMC,EAAa,GACxBQ,EAAKT,EAAMC,EAAa,GAO9B,OALAL,EAAKC,GAAcK,EAAKO,EAAKJ,EAAKC,EAAKH,EAAKK,EAAKJ,EAAKG,EACtDX,EAAKC,EAAY,GAAMM,EAAKM,EAAKJ,EAAKE,EAAKH,EAAKE,EAAKJ,EAAKM,EAC1DZ,EAAKC,EAAY,GAAMO,EAAKK,EAAKJ,EAAKG,EAAKN,EAAKK,EAAKJ,EAAKG,EAC1DV,EAAKC,EAAY,GAAMQ,EAAKI,EAAKP,EAAKI,EAAKH,EAAKI,EAAKH,EAAKI,EAEnDZ,CAER,CAEA,KAAItb,GAEH,OAAOxC,KAAKyd,EAEb,CAEA,KAAIjb,CAAGP,GAENjC,KAAKyd,GAAKxb,EACVjC,KAAKmf,mBAEN,CAEA,KAAI1c,GAEH,OAAOzC,KAAK0d,EAEb,CAEA,KAAIjb,CAAGR,GAENjC,KAAK0d,GAAKzb,EACVjC,KAAKmf,mBAEN,CAEA,KAAI5F,GAEH,OAAOvZ,KAAK2d,EAEb,CAEA,KAAIpE,CAAGtX,GAENjC,KAAK2d,GAAK1b,EACVjC,KAAKmf,mBAEN,CAEA,KAAI3F,GAEH,OAAOxZ,KAAK4d,EAEb,CAEA,KAAIpE,CAAGvX,GAENjC,KAAK4d,GAAK3b,EACVjC,KAAKmf,mBAEN,CAEAvY,GAAAA,CAAKpE,EAAGC,EAAG8W,EAAGC,GASb,OAPAxZ,KAAKyd,GAAKjb,EACVxC,KAAK0d,GAAKjb,EACVzC,KAAK2d,GAAKpE,EACVvZ,KAAK4d,GAAKpE,EAEVxZ,KAAKmf,oBAEEnf,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKyd,GAAIzd,KAAK0d,GAAI1d,KAAK2d,GAAI3d,KAAK4d,GAE9D,CAEAjW,IAAAA,CAAMyX,GASL,OAPApf,KAAKyd,GAAK2B,EAAW5c,EACrBxC,KAAK0d,GAAK0B,EAAW3c,EACrBzC,KAAK2d,GAAKyB,EAAW7F,EACrBvZ,KAAK4d,GAAKwB,EAAW5F,EAErBxZ,KAAKmf,oBAEEnf,IAER,CAEAqf,YAAAA,CAAcC,GAAuB,IAAhBC,IAAMpb,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,KAAAA,UAAA,GAE1B,MAAM3B,EAAI8c,EAAM7B,GAAIhb,EAAI6c,EAAM5B,GAAInE,EAAI+F,EAAM3B,GAAI1X,EAAQqZ,EAAME,OAMxDtZ,EAAM5E,KAAK4E,IACXC,EAAM7E,KAAK6E,IAEXsZ,EAAKvZ,EAAK1D,EAAI,GACd4D,EAAKF,EAAKzD,EAAI,GACdid,EAAKxZ,EAAKqT,EAAI,GAEdoG,EAAKxZ,EAAK3D,EAAI,GACd6D,EAAKF,EAAK1D,EAAI,GACdmd,EAAKzZ,EAAKoT,EAAI,GAEpB,OAAStT,GAER,IAAK,MACJjG,KAAKyd,GAAKkC,EAAKvZ,EAAKsZ,EAAKD,EAAKpZ,EAAKuZ,EACnC5f,KAAK0d,GAAK+B,EAAKpZ,EAAKqZ,EAAKC,EAAKvZ,EAAKwZ,EACnC5f,KAAK2d,GAAK8B,EAAKrZ,EAAKwZ,EAAKD,EAAKtZ,EAAKqZ,EACnC1f,KAAK4d,GAAK6B,EAAKrZ,EAAKsZ,EAAKC,EAAKtZ,EAAKuZ,EACnC,MAED,IAAK,MACJ5f,KAAKyd,GAAKkC,EAAKvZ,EAAKsZ,EAAKD,EAAKpZ,EAAKuZ,EACnC5f,KAAK0d,GAAK+B,EAAKpZ,EAAKqZ,EAAKC,EAAKvZ,EAAKwZ,EACnC5f,KAAK2d,GAAK8B,EAAKrZ,EAAKwZ,EAAKD,EAAKtZ,EAAKqZ,EACnC1f,KAAK4d,GAAK6B,EAAKrZ,EAAKsZ,EAAKC,EAAKtZ,EAAKuZ,EACnC,MAED,IAAK,MACJ5f,KAAKyd,GAAKkC,EAAKvZ,EAAKsZ,EAAKD,EAAKpZ,EAAKuZ,EACnC5f,KAAK0d,GAAK+B,EAAKpZ,EAAKqZ,EAAKC,EAAKvZ,EAAKwZ,EACnC5f,KAAK2d,GAAK8B,EAAKrZ,EAAKwZ,EAAKD,EAAKtZ,EAAKqZ,EACnC1f,KAAK4d,GAAK6B,EAAKrZ,EAAKsZ,EAAKC,EAAKtZ,EAAKuZ,EACnC,MAED,IAAK,MACJ5f,KAAKyd,GAAKkC,EAAKvZ,EAAKsZ,EAAKD,EAAKpZ,EAAKuZ,EACnC5f,KAAK0d,GAAK+B,EAAKpZ,EAAKqZ,EAAKC,EAAKvZ,EAAKwZ,EACnC5f,KAAK2d,GAAK8B,EAAKrZ,EAAKwZ,EAAKD,EAAKtZ,EAAKqZ,EACnC1f,KAAK4d,GAAK6B,EAAKrZ,EAAKsZ,EAAKC,EAAKtZ,EAAKuZ,EACnC,MAED,IAAK,MACJ5f,KAAKyd,GAAKkC,EAAKvZ,EAAKsZ,EAAKD,EAAKpZ,EAAKuZ,EACnC5f,KAAK0d,GAAK+B,EAAKpZ,EAAKqZ,EAAKC,EAAKvZ,EAAKwZ,EACnC5f,KAAK2d,GAAK8B,EAAKrZ,EAAKwZ,EAAKD,EAAKtZ,EAAKqZ,EACnC1f,KAAK4d,GAAK6B,EAAKrZ,EAAKsZ,EAAKC,EAAKtZ,EAAKuZ,EACnC,MAED,IAAK,MACJ5f,KAAKyd,GAAKkC,EAAKvZ,EAAKsZ,EAAKD,EAAKpZ,EAAKuZ,EACnC5f,KAAK0d,GAAK+B,EAAKpZ,EAAKqZ,EAAKC,EAAKvZ,EAAKwZ,EACnC5f,KAAK2d,GAAK8B,EAAKrZ,EAAKwZ,EAAKD,EAAKtZ,EAAKqZ,EACnC1f,KAAK4d,GAAK6B,EAAKrZ,EAAKsZ,EAAKC,EAAKtZ,EAAKuZ,EACnC,MAED,QACC/Y,QAAQC,KAAM,mEAAqEb,GAMrF,OAFgB,IAAXsZ,GAAkBvf,KAAKmf,oBAErBnf,IAER,CAEA6f,gBAAAA,CAAkBC,EAAMvW,GAMvB,MAAMwW,EAAYxW,EAAQ,EAAGxE,EAAIzD,KAAK6E,IAAK4Z,GAS3C,OAPA/f,KAAKyd,GAAKqC,EAAKtd,EAAIuC,EACnB/E,KAAK0d,GAAKoC,EAAKrd,EAAIsC,EACnB/E,KAAK2d,GAAKmC,EAAKvG,EAAIxU,EACnB/E,KAAK4d,GAAKtc,KAAK4E,IAAK6Z,GAEpB/f,KAAKmf,oBAEEnf,IAER,CAEAggB,qBAAAA,CAAuB1d,GAMtB,MAAMwJ,EAAKxJ,EAAEoG,SAEZuR,EAAMnO,EAAI,GAAKoO,EAAMpO,EAAI,GAAKqO,EAAMrO,EAAI,GACxCsO,EAAMtO,EAAI,GAAKuO,EAAMvO,EAAI,GAAKwO,EAAMxO,EAAI,GACxCyO,EAAMzO,EAAI,GAAK0O,EAAM1O,EAAI,GAAK2O,EAAM3O,EAAI,IAExCmU,EAAQhG,EAAMI,EAAMI,EAErB,GAAKwF,EAAQ,EAAI,CAEhB,MAAMlb,EAAI,GAAMzD,KAAK+H,KAAM4W,EAAQ,GAEnCjgB,KAAK4d,GAAK,IAAO7Y,EACjB/E,KAAKyd,IAAOjD,EAAMF,GAAQvV,EAC1B/E,KAAK0d,IAAOvD,EAAMI,GAAQxV,EAC1B/E,KAAK2d,IAAOvD,EAAMF,GAAQnV,CAE3B,MAAO,GAAKkV,EAAMI,GAAOJ,EAAMQ,EAAM,CAEpC,MAAM1V,EAAI,EAAMzD,KAAK+H,KAAM,EAAM4Q,EAAMI,EAAMI,GAE7Cza,KAAK4d,IAAOpD,EAAMF,GAAQvV,EAC1B/E,KAAKyd,GAAK,IAAO1Y,EACjB/E,KAAK0d,IAAOxD,EAAME,GAAQrV,EAC1B/E,KAAK2d,IAAOxD,EAAMI,GAAQxV,CAE3B,MAAO,GAAKsV,EAAMI,EAAM,CAEvB,MAAM1V,EAAI,EAAMzD,KAAK+H,KAAM,EAAMgR,EAAMJ,EAAMQ,GAE7Cza,KAAK4d,IAAOzD,EAAMI,GAAQxV,EAC1B/E,KAAKyd,IAAOvD,EAAME,GAAQrV,EAC1B/E,KAAK0d,GAAK,IAAO3Y,EACjB/E,KAAK2d,IAAOrD,EAAME,GAAQzV,CAE3B,KAAO,CAEN,MAAMA,EAAI,EAAMzD,KAAK+H,KAAM,EAAMoR,EAAMR,EAAMI,GAE7Cra,KAAK4d,IAAOxD,EAAMF,GAAQnV,EAC1B/E,KAAKyd,IAAOtD,EAAMI,GAAQxV,EAC1B/E,KAAK0d,IAAOpD,EAAME,GAAQzV,EAC1B/E,KAAK2d,GAAK,IAAO5Y,CAElB,CAIA,OAFA/E,KAAKmf,oBAEEnf,IAER,CAEAkgB,kBAAAA,CAAoBC,EAAOC,GAI1B,IAAIvR,EAAIsR,EAAMjX,IAAKkX,GAAQ,EAmC3B,OAjCKvR,EAAIiQ,OAAOC,SAIflQ,EAAI,EAECvN,KAAK8C,IAAK+b,EAAM3d,GAAMlB,KAAK8C,IAAK+b,EAAM5G,IAE1CvZ,KAAKyd,IAAO0C,EAAM1d,EAClBzC,KAAK0d,GAAKyC,EAAM3d,EAChBxC,KAAK2d,GAAK,EACV3d,KAAK4d,GAAK/O,IAIV7O,KAAKyd,GAAK,EACVzd,KAAK0d,IAAOyC,EAAM5G,EAClBvZ,KAAK2d,GAAKwC,EAAM1d,EAChBzC,KAAK4d,GAAK/O,KAQX7O,KAAKyd,GAAK0C,EAAM1d,EAAI2d,EAAI7G,EAAI4G,EAAM5G,EAAI6G,EAAI3d,EAC1CzC,KAAK0d,GAAKyC,EAAM5G,EAAI6G,EAAI5d,EAAI2d,EAAM3d,EAAI4d,EAAI7G,EAC1CvZ,KAAK2d,GAAKwC,EAAM3d,EAAI4d,EAAI3d,EAAI0d,EAAM1d,EAAI2d,EAAI5d,EAC1CxC,KAAK4d,GAAK/O,GAIJ7O,KAAKqD,WAEb,CAEAoG,OAAAA,CAAS5D,GAER,OAAO,EAAIvE,KAAKsI,KAAMtI,KAAK8C,IAAKpC,GAAOhC,KAAKkJ,IAAKrD,IAAO,EAAG,IAE5D,CAEAwa,aAAAA,CAAexa,EAAGya,GAEjB,MAAM/W,EAAQvJ,KAAKyJ,QAAS5D,GAE5B,GAAe,IAAV0D,EAAc,OAAOvJ,KAE1B,MAAM0C,EAAIpB,KAAKY,IAAK,EAAGoe,EAAO/W,GAI9B,OAFAvJ,KAAKugB,MAAO1a,EAAGnD,GAER1C,IAER,CAEA+L,QAAAA,GAEC,OAAO/L,KAAK4G,IAAK,EAAG,EAAG,EAAG,EAE3B,CAEAsH,MAAAA,GAIC,OAAOlO,KAAKwgB,WAEb,CAEAA,SAAAA,GAQC,OANAxgB,KAAKyd,KAAQ,EACbzd,KAAK0d,KAAQ,EACb1d,KAAK2d,KAAQ,EAEb3d,KAAKmf,oBAEEnf,IAER,CAEAkJ,GAAAA,CAAKtB,GAEJ,OAAO5H,KAAKyd,GAAK7V,EAAE6V,GAAKzd,KAAK0d,GAAK9V,EAAE8V,GAAK1d,KAAK2d,GAAK/V,EAAE+V,GAAK3d,KAAK4d,GAAKhW,EAAEgW,EAEvE,CAEAxU,QAAAA,GAEC,OAAOpJ,KAAKyd,GAAKzd,KAAKyd,GAAKzd,KAAK0d,GAAK1d,KAAK0d,GAAK1d,KAAK2d,GAAK3d,KAAK2d,GAAK3d,KAAK4d,GAAK5d,KAAK4d,EAEnF,CAEA3c,MAAAA,GAEC,OAAOK,KAAK+H,KAAMrJ,KAAKyd,GAAKzd,KAAKyd,GAAKzd,KAAK0d,GAAK1d,KAAK0d,GAAK1d,KAAK2d,GAAK3d,KAAK2d,GAAK3d,KAAK4d,GAAK5d,KAAK4d,GAE9F,CAEAva,SAAAA,GAEC,IAAIrC,EAAIhB,KAAKiB,SAsBb,OApBW,IAAND,GAEJhB,KAAKyd,GAAK,EACVzd,KAAK0d,GAAK,EACV1d,KAAK2d,GAAK,EACV3d,KAAK4d,GAAK,IAIV5c,EAAI,EAAIA,EAERhB,KAAKyd,GAAKzd,KAAKyd,GAAKzc,EACpBhB,KAAK0d,GAAK1d,KAAK0d,GAAK1c,EACpBhB,KAAK2d,GAAK3d,KAAK2d,GAAK3c,EACpBhB,KAAK4d,GAAK5d,KAAK4d,GAAK5c,GAIrBhB,KAAKmf,oBAEEnf,IAER,CAEAoI,QAAAA,CAAUvC,GAET,OAAO7F,KAAKygB,oBAAqBzgB,KAAM6F,EAExC,CAEA2G,WAAAA,CAAa3G,GAEZ,OAAO7F,KAAKygB,oBAAqB5a,EAAG7F,KAErC,CAEAygB,mBAAAA,CAAqB3a,EAAGC,GAIvB,MAAM2a,EAAM5a,EAAE2X,GAAIkD,EAAM7a,EAAE4X,GAAIkD,EAAM9a,EAAE6X,GAAIkD,EAAM/a,EAAE8X,GAC5CkD,EAAM/a,EAAE0X,GAAIsD,EAAMhb,EAAE2X,GAAIsD,EAAMjb,EAAE4X,GAAIsD,EAAMlb,EAAE6X,GASlD,OAPA5d,KAAKyd,GAAKiD,EAAMO,EAAMJ,EAAMC,EAAMH,EAAMK,EAAMJ,EAAMG,EACpD/gB,KAAK0d,GAAKiD,EAAMM,EAAMJ,EAAME,EAAMH,EAAME,EAAMJ,EAAMM,EACpDhhB,KAAK2d,GAAKiD,EAAMK,EAAMJ,EAAMG,EAAMN,EAAMK,EAAMJ,EAAMG,EACpD9gB,KAAK4d,GAAKiD,EAAMI,EAAMP,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAEpDhhB,KAAKmf,oBAEEnf,IAER,CAEAugB,KAAAA,CAAOW,EAAIxe,GAEV,GAAW,IAANA,EAAU,OAAO1C,KACtB,GAAW,IAAN0C,EAAU,OAAO1C,KAAK2H,KAAMuZ,GAEjC,MAAM1e,EAAIxC,KAAKyd,GAAIhb,EAAIzC,KAAK0d,GAAInE,EAAIvZ,KAAK2d,GAAInE,EAAIxZ,KAAK4d,GAItD,IAAIuD,EAAe3H,EAAI0H,EAAGtD,GAAKpb,EAAI0e,EAAGzD,GAAKhb,EAAIye,EAAGxD,GAAKnE,EAAI2H,EAAGvD,GAiB9D,GAfKwD,EAAe,GAEnBnhB,KAAK4d,IAAOsD,EAAGtD,GACf5d,KAAKyd,IAAOyD,EAAGzD,GACfzd,KAAK0d,IAAOwD,EAAGxD,GACf1d,KAAK2d,IAAOuD,EAAGvD,GAEfwD,GAAiBA,GAIjBnhB,KAAK2H,KAAMuZ,GAIPC,GAAgB,EAOpB,OALAnhB,KAAK4d,GAAKpE,EACVxZ,KAAKyd,GAAKjb,EACVxC,KAAK0d,GAAKjb,EACVzC,KAAK2d,GAAKpE,EAEHvZ,KAIR,MAAMohB,EAAkB,EAAMD,EAAeA,EAE7C,GAAKC,GAAmBtC,OAAOC,QAAU,CAExC,MAAMha,EAAI,EAAIrC,EAQd,OAPA1C,KAAK4d,GAAK7Y,EAAIyU,EAAI9W,EAAI1C,KAAK4d,GAC3B5d,KAAKyd,GAAK1Y,EAAIvC,EAAIE,EAAI1C,KAAKyd,GAC3Bzd,KAAK0d,GAAK3Y,EAAItC,EAAIC,EAAI1C,KAAK0d,GAC3B1d,KAAK2d,GAAK5Y,EAAIwU,EAAI7W,EAAI1C,KAAK2d,GAE3B3d,KAAKqD,YAEErD,IAER,CAEA,MAAMqhB,EAAe/f,KAAK+H,KAAM+X,GAC1BE,EAAYhgB,KAAKkI,MAAO6X,EAAcF,GACtCI,EAASjgB,KAAK6E,KAAO,EAAIzD,GAAM4e,GAAcD,EAClDG,EAASlgB,KAAK6E,IAAKzD,EAAI4e,GAAcD,EAStC,OAPArhB,KAAK4d,GAAOpE,EAAI+H,EAASvhB,KAAK4d,GAAK4D,EACnCxhB,KAAKyd,GAAOjb,EAAI+e,EAASvhB,KAAKyd,GAAK+D,EACnCxhB,KAAK0d,GAAOjb,EAAI8e,EAASvhB,KAAK0d,GAAK8D,EACnCxhB,KAAK2d,GAAOpE,EAAIgI,EAASvhB,KAAK2d,GAAK6D,EAEnCxhB,KAAKmf,oBAEEnf,IAER,CAEAyhB,gBAAAA,CAAkBC,EAAIR,EAAIxe,GAEzB,OAAO1C,KAAK2H,KAAM+Z,GAAKnB,MAAOW,EAAIxe,EAEnC,CAEAf,MAAAA,GAQC,MAAMggB,EAAS,EAAIrgB,KAAKC,GAAKD,KAAKK,SAC5BigB,EAAS,EAAItgB,KAAKC,GAAKD,KAAKK,SAE5Byc,EAAK9c,KAAKK,SACVkgB,EAAKvgB,KAAK+H,KAAM,EAAI+U,GACpB0D,EAAKxgB,KAAK+H,KAAM+U,GAEtB,OAAOpe,KAAK4G,IACXib,EAAKvgB,KAAK6E,IAAKwb,GACfE,EAAKvgB,KAAK4E,IAAKyb,GACfG,EAAKxgB,KAAK6E,IAAKyb,GACfE,EAAKxgB,KAAK4E,IAAK0b,GAGjB,CAEArX,MAAAA,CAAQ6U,GAEP,OAASA,EAAW3B,KAAOzd,KAAKyd,IAAU2B,EAAW1B,KAAO1d,KAAK0d,IAAU0B,EAAWzB,KAAO3d,KAAK2d,IAAUyB,EAAWxB,KAAO5d,KAAK4d,EAEpI,CAEApT,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAS1B,OAPAnE,KAAKyd,GAAK5c,EAAO4J,GACjBzK,KAAK0d,GAAK7c,EAAO4J,EAAS,GAC1BzK,KAAK2d,GAAK9c,EAAO4J,EAAS,GAC1BzK,KAAK4d,GAAK/c,EAAO4J,EAAS,GAE1BzK,KAAKmf,oBAEEnf,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAO7B,OALAtD,EAAO4J,GAAWzK,KAAKyd,GACvB5c,EAAO4J,EAAS,GAAMzK,KAAK0d,GAC3B7c,EAAO4J,EAAS,GAAMzK,KAAK2d,GAC3B9c,EAAO4J,EAAS,GAAMzK,KAAK4d,GAEpB/c,CAER,CAEA8J,mBAAAA,CAAqBC,EAAWpK,GAS/B,OAPAR,KAAKyd,GAAK7S,EAAUC,KAAMrK,GAC1BR,KAAK0d,GAAK9S,EAAUE,KAAMtK,GAC1BR,KAAK2d,GAAK/S,EAAUqQ,KAAMza,GAC1BR,KAAK4d,GAAKhT,EAAUsQ,KAAM1a,GAE1BR,KAAKmf,oBAEEnf,IAER,CAEAiW,MAAAA,GAEC,OAAOjW,KAAK0K,SAEb,CAEAqX,SAAAA,CAAWC,GAIV,OAFAhiB,KAAKmf,kBAAoB6C,EAElBhiB,IAER,CAEAmf,iBAAAA,GAAqB,CAErB,EAAGlU,OAAOC,kBAEHlL,KAAKyd,SACLzd,KAAK0d,SACL1d,KAAK2d,SACL3d,KAAK4d,EAEZ,EAID,MAAMqE,GAELrf,WAAAA,GAAmC,IAAtBJ,EAAC2B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG1B,EAAC0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAACpV,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE9B8d,GAAQjb,UAAUkb,WAAY,EAE9BliB,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,EACTzC,KAAKuZ,EAAIA,CAEV,CAEA3S,GAAAA,CAAKpE,EAAGC,EAAG8W,GAQV,YANWxZ,IAANwZ,IAAkBA,EAAIvZ,KAAKuZ,GAEhCvZ,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,EACTzC,KAAKuZ,EAAIA,EAEFvZ,IAER,CAEAoH,SAAAA,CAAWC,GAMV,OAJArH,KAAKwC,EAAI6E,EACTrH,KAAKyC,EAAI4E,EACTrH,KAAKuZ,EAAIlS,EAEFrH,IAER,CAEAsH,IAAAA,CAAM9E,GAIL,OAFAxC,KAAKwC,EAAIA,EAEFxC,IAER,CAEAuH,IAAAA,CAAM9E,GAIL,OAFAzC,KAAKyC,EAAIA,EAEFzC,IAER,CAEA0Z,IAAAA,CAAMH,GAIL,OAFAvZ,KAAKuZ,EAAIA,EAEFvZ,IAER,CAEAwH,YAAAA,CAAchH,EAAOyB,GAEpB,OAASzB,GAER,KAAK,EAAGR,KAAKwC,EAAIP,EAAO,MACxB,KAAK,EAAGjC,KAAKyC,EAAIR,EAAO,MACxB,KAAK,EAAGjC,KAAKuZ,EAAItX,EAAO,MACxB,QAAS,MAAM,IAAImB,MAAO,0BAA4B5C,GAIvD,OAAOR,IAER,CAEAyH,YAAAA,CAAcjH,GAEb,OAASA,GAER,KAAK,EAAG,OAAOR,KAAKwC,EACpB,KAAK,EAAG,OAAOxC,KAAKyC,EACpB,KAAK,EAAG,OAAOzC,KAAKuZ,EACpB,QAAS,MAAM,IAAInW,MAAO,0BAA4B5C,GAIxD,CAEAkH,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKwC,EAAGxC,KAAKyC,EAAGzC,KAAKuZ,EAEnD,CAEA5R,IAAAA,CAAMC,GAML,OAJA5H,KAAKwC,EAAIoF,EAAEpF,EACXxC,KAAKyC,EAAImF,EAAEnF,EACXzC,KAAKuZ,EAAI3R,EAAE2R,EAEJvZ,IAER,CAEA6H,GAAAA,CAAKD,GAMJ,OAJA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EAELvZ,IAER,CAEA8H,SAAAA,CAAW/C,GAMV,OAJA/E,KAAKwC,GAAKuC,EACV/E,KAAKyC,GAAKsC,EACV/E,KAAKuZ,GAAKxU,EAEH/E,IAER,CAEA+H,UAAAA,CAAYjC,EAAGC,GAMd,OAJA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EACjBzC,KAAKuZ,EAAIzT,EAAEyT,EAAIxT,EAAEwT,EAEVvZ,IAER,CAEAgI,eAAAA,CAAiBJ,EAAG7C,GAMnB,OAJA/E,KAAKwC,GAAKoF,EAAEpF,EAAIuC,EAChB/E,KAAKyC,GAAKmF,EAAEnF,EAAIsC,EAChB/E,KAAKuZ,GAAK3R,EAAE2R,EAAIxU,EAET/E,IAER,CAEAiI,GAAAA,CAAKL,GAMJ,OAJA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EAELvZ,IAER,CAEAkI,SAAAA,CAAWnD,GAMV,OAJA/E,KAAKwC,GAAKuC,EACV/E,KAAKyC,GAAKsC,EACV/E,KAAKuZ,GAAKxU,EAEH/E,IAER,CAEAmI,UAAAA,CAAYrC,EAAGC,GAMd,OAJA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EACjBzC,KAAKuZ,EAAIzT,EAAEyT,EAAIxT,EAAEwT,EAEVvZ,IAER,CAEAoI,QAAAA,CAAUR,GAMT,OAJA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EAELvZ,IAER,CAEAqI,cAAAA,CAAgBhB,GAMf,OAJArH,KAAKwC,GAAK6E,EACVrH,KAAKyC,GAAK4E,EACVrH,KAAKuZ,GAAKlS,EAEHrH,IAER,CAEAmiB,eAAAA,CAAiBrc,EAAGC,GAMnB,OAJA/F,KAAKwC,EAAIsD,EAAEtD,EAAIuD,EAAEvD,EACjBxC,KAAKyC,EAAIqD,EAAErD,EAAIsD,EAAEtD,EACjBzC,KAAKuZ,EAAIzT,EAAEyT,EAAIxT,EAAEwT,EAEVvZ,IAER,CAEAoiB,UAAAA,CAAY9C,GAEX,OAAOtf,KAAKqiB,gBAAiBC,GAAcjD,aAAcC,GAE1D,CAEAiD,cAAAA,CAAgBzC,EAAMvW,GAErB,OAAOvJ,KAAKqiB,gBAAiBC,GAAczC,iBAAkBC,EAAMvW,GAEpE,CAEAf,YAAAA,CAAclG,GAEb,MAAME,EAAIxC,KAAKwC,EAAGC,EAAIzC,KAAKyC,EAAG8W,EAAIvZ,KAAKuZ,EACjC9Q,EAAInG,EAAEoG,SAMZ,OAJA1I,KAAKwC,EAAIiG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAC5CvZ,KAAKyC,EAAIgG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAC5CvZ,KAAKuZ,EAAI9Q,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAErCvZ,IAER,CAEAwiB,iBAAAA,CAAmBlgB,GAElB,OAAOtC,KAAKwI,aAAclG,GAAIe,WAE/B,CAEAuW,YAAAA,CAActX,GAEb,MAAME,EAAIxC,KAAKwC,EAAGC,EAAIzC,KAAKyC,EAAG8W,EAAIvZ,KAAKuZ,EACjC9Q,EAAInG,EAAEoG,SAEN8Q,EAAI,GAAM/Q,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,IAAO8Q,EAAI9Q,EAAG,KAM3D,OAJAzI,KAAKwC,GAAMiG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAAI9Q,EAAG,KAAS+Q,EAC9DxZ,KAAKyC,GAAMgG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAAI9Q,EAAG,KAAS+Q,EAC9DxZ,KAAKuZ,GAAM9Q,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,IAAO8Q,EAAI9Q,EAAG,KAAS+Q,EAExDxZ,IAER,CAEAqiB,eAAAA,CAAiBxc,GAIhB,MAAM4c,EAAKziB,KAAKwC,EAAGkgB,EAAK1iB,KAAKyC,EAAGkgB,EAAK3iB,KAAKuZ,EACpCqJ,EAAK/c,EAAErD,EAAGqgB,EAAKhd,EAAEpD,EAAGqgB,EAAKjd,EAAE0T,EAAGwJ,EAAKld,EAAE2T,EAGrCzK,EAAK,GAAM8T,EAAKF,EAAKG,EAAKJ,GAC1B1T,EAAK,GAAM8T,EAAKL,EAAKG,EAAKD,GAC1BK,EAAK,GAAMJ,EAAKF,EAAKG,EAAKJ,GAOhC,OAJAziB,KAAKwC,EAAIigB,EAAKM,EAAKhU,EAAK8T,EAAKG,EAAKF,EAAK9T,EACvChP,KAAKyC,EAAIigB,EAAKK,EAAK/T,EAAK8T,EAAK/T,EAAK6T,EAAKI,EACvChjB,KAAKuZ,EAAIoJ,EAAKI,EAAKC,EAAKJ,EAAK5T,EAAK6T,EAAK9T,EAEhC/O,IAER,CAEAijB,OAAAA,CAASC,GAER,OAAOljB,KAAK4Z,aAAcsJ,EAAOC,oBAAqBvJ,aAAcsJ,EAAOtR,iBAE5E,CAEAwR,SAAAA,CAAWF,GAEV,OAAOljB,KAAK4Z,aAAcsJ,EAAOG,yBAA0BzJ,aAAcsJ,EAAOI,YAEjF,CAEAC,kBAAAA,CAAoBjhB,GAKnB,MAAME,EAAIxC,KAAKwC,EAAGC,EAAIzC,KAAKyC,EAAG8W,EAAIvZ,KAAKuZ,EACjC9Q,EAAInG,EAAEoG,SAMZ,OAJA1I,KAAKwC,EAAIiG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAC5CvZ,KAAKyC,EAAIgG,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,GAAM8Q,EAC5CvZ,KAAKuZ,EAAI9Q,EAAG,GAAMjG,EAAIiG,EAAG,GAAMhG,EAAIgG,EAAG,IAAO8Q,EAEtCvZ,KAAKqD,WAEb,CAEAiF,MAAAA,CAAQV,GAMP,OAJA5H,KAAKwC,GAAKoF,EAAEpF,EACZxC,KAAKyC,GAAKmF,EAAEnF,EACZzC,KAAKuZ,GAAK3R,EAAE2R,EAELvZ,IAER,CAEAuI,YAAAA,CAAclB,GAEb,OAAOrH,KAAKqI,eAAgB,EAAIhB,EAEjC,CAEAnF,GAAAA,CAAK0F,GAMJ,OAJA5H,KAAKwC,EAAIlB,KAAKY,IAAKlC,KAAKwC,EAAGoF,EAAEpF,GAC7BxC,KAAKyC,EAAInB,KAAKY,IAAKlC,KAAKyC,EAAGmF,EAAEnF,GAC7BzC,KAAKuZ,EAAIjY,KAAKY,IAAKlC,KAAKuZ,EAAG3R,EAAE2R,GAEtBvZ,IAER,CAEAmC,GAAAA,CAAKyF,GAMJ,OAJA5H,KAAKwC,EAAIlB,KAAKa,IAAKnC,KAAKwC,EAAGoF,EAAEpF,GAC7BxC,KAAKyC,EAAInB,KAAKa,IAAKnC,KAAKyC,EAAGmF,EAAEnF,GAC7BzC,KAAKuZ,EAAIjY,KAAKa,IAAKnC,KAAKuZ,EAAG3R,EAAE2R,GAEtBvZ,IAER,CAEAgC,KAAAA,CAAOE,EAAKC,GAQX,OAJAnC,KAAKwC,EAAIR,GAAOhC,KAAKwC,EAAGN,EAAIM,EAAGL,EAAIK,GACnCxC,KAAKyC,EAAIT,GAAOhC,KAAKyC,EAAGP,EAAIO,EAAGN,EAAIM,GACnCzC,KAAKuZ,EAAIvX,GAAOhC,KAAKuZ,EAAGrX,EAAIqX,EAAGpX,EAAIoX,GAE5BvZ,IAER,CAEA2I,WAAAA,CAAaC,EAAQC,GAMpB,OAJA7I,KAAKwC,EAAIR,GAAOhC,KAAKwC,EAAGoG,EAAQC,GAChC7I,KAAKyC,EAAIT,GAAOhC,KAAKyC,EAAGmG,EAAQC,GAChC7I,KAAKuZ,EAAIvX,GAAOhC,KAAKuZ,EAAG3Q,EAAQC,GAEzB7I,IAER,CAEA8I,WAAAA,CAAa5G,EAAKC,GAEjB,MAAMlB,EAASjB,KAAKiB,SAEpB,OAAOjB,KAAKuI,aAActH,GAAU,GAAIoH,eAAgBrG,GAAOf,EAAQiB,EAAKC,GAE7E,CAEAuC,KAAAA,GAMC,OAJA1E,KAAKwC,EAAIlB,KAAKoD,MAAO1E,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAKoD,MAAO1E,KAAKyC,GAC1BzC,KAAKuZ,EAAIjY,KAAKoD,MAAO1E,KAAKuZ,GAEnBvZ,IAER,CAEAwF,IAAAA,GAMC,OAJAxF,KAAKwC,EAAIlB,KAAKkE,KAAMxF,KAAKwC,GACzBxC,KAAKyC,EAAInB,KAAKkE,KAAMxF,KAAKyC,GACzBzC,KAAKuZ,EAAIjY,KAAKkE,KAAMxF,KAAKuZ,GAElBvZ,IAER,CAEAsD,KAAAA,GAMC,OAJAtD,KAAKwC,EAAIlB,KAAKgC,MAAOtD,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAKgC,MAAOtD,KAAKyC,GAC1BzC,KAAKuZ,EAAIjY,KAAKgC,MAAOtD,KAAKuZ,GAEnBvZ,IAER,CAEA+I,WAAAA,GAMC,OAJA/I,KAAKwC,EAAIlB,KAAK0H,MAAOhJ,KAAKwC,GAC1BxC,KAAKyC,EAAInB,KAAK0H,MAAOhJ,KAAKyC,GAC1BzC,KAAKuZ,EAAIjY,KAAK0H,MAAOhJ,KAAKuZ,GAEnBvZ,IAER,CAEAiJ,MAAAA,GAMC,OAJAjJ,KAAKwC,GAAMxC,KAAKwC,EAChBxC,KAAKyC,GAAMzC,KAAKyC,EAChBzC,KAAKuZ,GAAMvZ,KAAKuZ,EAETvZ,IAER,CAEAkJ,GAAAA,CAAKtB,GAEJ,OAAO5H,KAAKwC,EAAIoF,EAAEpF,EAAIxC,KAAKyC,EAAImF,EAAEnF,EAAIzC,KAAKuZ,EAAI3R,EAAE2R,CAEjD,CAIAnQ,QAAAA,GAEC,OAAOpJ,KAAKwC,EAAIxC,KAAKwC,EAAIxC,KAAKyC,EAAIzC,KAAKyC,EAAIzC,KAAKuZ,EAAIvZ,KAAKuZ,CAE1D,CAEAtY,MAAAA,GAEC,OAAOK,KAAK+H,KAAMrJ,KAAKwC,EAAIxC,KAAKwC,EAAIxC,KAAKyC,EAAIzC,KAAKyC,EAAIzC,KAAKuZ,EAAIvZ,KAAKuZ,EAErE,CAEAjQ,eAAAA,GAEC,OAAOhI,KAAK8C,IAAKpE,KAAKwC,GAAMlB,KAAK8C,IAAKpE,KAAKyC,GAAMnB,KAAK8C,IAAKpE,KAAKuZ,EAEjE,CAEAlW,SAAAA,GAEC,OAAOrD,KAAKuI,aAAcvI,KAAKiB,UAAY,EAE5C,CAEAiJ,SAAAA,CAAWjJ,GAEV,OAAOjB,KAAKqD,YAAYgF,eAAgBpH,EAEzC,CAEAsB,IAAAA,CAAMqF,EAAGuC,GAMR,OAJAnK,KAAKwC,IAAOoF,EAAEpF,EAAIxC,KAAKwC,GAAM2H,EAC7BnK,KAAKyC,IAAOmF,EAAEnF,EAAIzC,KAAKyC,GAAM0H,EAC7BnK,KAAKuZ,IAAO3R,EAAE2R,EAAIvZ,KAAKuZ,GAAMpP,EAEtBnK,IAER,CAEAoK,WAAAA,CAAaC,EAAIC,EAAIH,GAMpB,OAJAnK,KAAKwC,EAAI6H,EAAG7H,GAAM8H,EAAG9H,EAAI6H,EAAG7H,GAAM2H,EAClCnK,KAAKyC,EAAI4H,EAAG5H,GAAM6H,EAAG7H,EAAI4H,EAAG5H,GAAM0H,EAClCnK,KAAKuZ,EAAIlP,EAAGkP,GAAMjP,EAAGiP,EAAIlP,EAAGkP,GAAMpP,EAE3BnK,IAER,CAEAmJ,KAAAA,CAAOvB,GAEN,OAAO5H,KAAKwjB,aAAcxjB,KAAM4H,EAEjC,CAEA4b,YAAAA,CAAc1d,EAAGC,GAEhB,MAAM0d,EAAK3d,EAAEtD,EAAGkhB,EAAK5d,EAAErD,EAAGkhB,EAAK7d,EAAEyT,EAC3BqK,EAAK7d,EAAEvD,EAAGqhB,EAAK9d,EAAEtD,EAAGqhB,EAAK/d,EAAEwT,EAMjC,OAJAvZ,KAAKwC,EAAIkhB,EAAKI,EAAKH,EAAKE,EACxB7jB,KAAKyC,EAAIkhB,EAAKC,EAAKH,EAAKK,EACxB9jB,KAAKuZ,EAAIkK,EAAKI,EAAKH,EAAKE,EAEjB5jB,IAER,CAEA+jB,eAAAA,CAAiBnc,GAEhB,MAAM8B,EAAc9B,EAAEwB,WAEtB,GAAqB,IAAhBM,EAAoB,OAAO1J,KAAK4G,IAAK,EAAG,EAAG,GAEhD,MAAMS,EAASO,EAAEsB,IAAKlJ,MAAS0J,EAE/B,OAAO1J,KAAK2H,KAAMC,GAAIS,eAAgBhB,EAEvC,CAEA2c,cAAAA,CAAgBC,GAIf,OAFAC,GAAUvc,KAAM3H,MAAO+jB,gBAAiBE,GAEjCjkB,KAAKiI,IAAKic,GAElB,CAEAC,OAAAA,CAASC,GAKR,OAAOpkB,KAAKiI,IAAKic,GAAUvc,KAAMyc,GAAS/b,eAAgB,EAAIrI,KAAKkJ,IAAKkb,IAEzE,CAEA3a,OAAAA,CAAS7B,GAER,MAAM8B,EAAcpI,KAAK+H,KAAMrJ,KAAKoJ,WAAaxB,EAAEwB,YAEnD,GAAqB,IAAhBM,EAAoB,OAAOpI,KAAKC,GAAK,EAE1C,MAAMoI,EAAQ3J,KAAKkJ,IAAKtB,GAAM8B,EAI9B,OAAOpI,KAAKsI,KAAM5H,GAAO2H,GAAS,EAAG,GAEtC,CAEAE,UAAAA,CAAYjC,GAEX,OAAOtG,KAAK+H,KAAMrJ,KAAK8J,kBAAmBlC,GAE3C,CAEAkC,iBAAAA,CAAmBlC,GAElB,MAAMmC,EAAK/J,KAAKwC,EAAIoF,EAAEpF,EAAGwH,EAAKhK,KAAKyC,EAAImF,EAAEnF,EAAG4hB,EAAKrkB,KAAKuZ,EAAI3R,EAAE2R,EAE5D,OAAOxP,EAAKA,EAAKC,EAAKA,EAAKqa,EAAKA,CAEjC,CAEApa,mBAAAA,CAAqBrC,GAEpB,OAAOtG,KAAK8C,IAAKpE,KAAKwC,EAAIoF,EAAEpF,GAAMlB,KAAK8C,IAAKpE,KAAKyC,EAAImF,EAAEnF,GAAMnB,KAAK8C,IAAKpE,KAAKuZ,EAAI3R,EAAE2R,EAEnF,CAEA+K,gBAAAA,CAAkBvf,GAEjB,OAAO/E,KAAKukB,uBAAwBxf,EAAEyf,OAAQzf,EAAE0f,IAAK1f,EAAE4E,MAExD,CAEA4a,sBAAAA,CAAwBC,EAAQC,EAAK9a,GAEpC,MAAM+a,EAAepjB,KAAK6E,IAAKse,GAAQD,EAMvC,OAJAxkB,KAAKwC,EAAIkiB,EAAepjB,KAAK6E,IAAKwD,GAClC3J,KAAKyC,EAAInB,KAAK4E,IAAKue,GAAQD,EAC3BxkB,KAAKuZ,EAAImL,EAAepjB,KAAK4E,IAAKyD,GAE3B3J,IAER,CAEA2kB,kBAAAA,CAAoB3e,GAEnB,OAAOhG,KAAK4kB,yBAA0B5e,EAAEwe,OAAQxe,EAAE2D,MAAO3D,EAAEvD,EAE5D,CAEAmiB,wBAAAA,CAA0BJ,EAAQ7a,EAAOlH,GAMxC,OAJAzC,KAAKwC,EAAIgiB,EAASljB,KAAK6E,IAAKwD,GAC5B3J,KAAKyC,EAAIA,EACTzC,KAAKuZ,EAAIiL,EAASljB,KAAK4E,IAAKyD,GAErB3J,IAER,CAEAgb,qBAAAA,CAAuB1Y,GAEtB,MAAMmG,EAAInG,EAAEoG,SAMZ,OAJA1I,KAAKwC,EAAIiG,EAAG,IACZzI,KAAKyC,EAAIgG,EAAG,IACZzI,KAAKuZ,EAAI9Q,EAAG,IAELzI,IAER,CAEA6kB,kBAAAA,CAAoBviB,GAEnB,MAAM2M,EAAKjP,KAAK8kB,oBAAqBxiB,EAAG,GAAIrB,SACtCiO,EAAKlP,KAAK8kB,oBAAqBxiB,EAAG,GAAIrB,SACtC8jB,EAAK/kB,KAAK8kB,oBAAqBxiB,EAAG,GAAIrB,SAM5C,OAJAjB,KAAKwC,EAAIyM,EACTjP,KAAKyC,EAAIyM,EACTlP,KAAKuZ,EAAIwL,EAEF/kB,IAER,CAEA8kB,mBAAAA,CAAqBxiB,EAAG9B,GAEvB,OAAOR,KAAKwK,UAAWlI,EAAEoG,SAAkB,EAARlI,EAEpC,CAEA6L,oBAAAA,CAAsB/J,EAAG9B,GAExB,OAAOR,KAAKwK,UAAWlI,EAAEoG,SAAkB,EAARlI,EAEpC,CAEA6e,YAAAA,CAAc5W,GAMb,OAJAzI,KAAKwC,EAAIiG,EAAEgV,GACXzd,KAAKyC,EAAIgG,EAAEiV,GACX1d,KAAKuZ,EAAI9Q,EAAEkV,GAEJ3d,IAER,CAEAglB,YAAAA,CAAchf,GAMb,OAJAhG,KAAKwC,EAAIwD,EAAE6I,EACX7O,KAAKyC,EAAIuD,EAAEgI,EACXhO,KAAKuZ,EAAIvT,EAAED,EAEJ/F,IAER,CAEAuK,MAAAA,CAAQ3C,GAEP,OAAWA,EAAEpF,IAAMxC,KAAKwC,GAASoF,EAAEnF,IAAMzC,KAAKyC,GAASmF,EAAE2R,IAAMvZ,KAAKuZ,CAErE,CAEA/O,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAM1B,OAJAnE,KAAKwC,EAAI3B,EAAO4J,GAChBzK,KAAKyC,EAAI5B,EAAO4J,EAAS,GACzBzK,KAAKuZ,EAAI1Y,EAAO4J,EAAS,GAElBzK,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAM7B,OAJAtD,EAAO4J,GAAWzK,KAAKwC,EACvB3B,EAAO4J,EAAS,GAAMzK,KAAKyC,EAC3B5B,EAAO4J,EAAS,GAAMzK,KAAKuZ,EAEpB1Y,CAER,CAEA8J,mBAAAA,CAAqBC,EAAWpK,GAM/B,OAJAR,KAAKwC,EAAIoI,EAAUC,KAAMrK,GACzBR,KAAKyC,EAAImI,EAAUE,KAAMtK,GACzBR,KAAKuZ,EAAI3O,EAAUqQ,KAAMza,GAElBR,IAER,CAEA2B,MAAAA,GAMC,OAJA3B,KAAKwC,EAAIlB,KAAKK,SACd3B,KAAKyC,EAAInB,KAAKK,SACd3B,KAAKuZ,EAAIjY,KAAKK,SAEP3B,IAER,CAEAilB,eAAAA,GAIC,MAAMtb,EAAQrI,KAAKK,SAAWL,KAAKC,GAAK,EAClC2jB,EAAoB,EAAhB5jB,KAAKK,SAAe,EACxBqE,EAAI1E,KAAK+H,KAAM,EAAI6b,EAAIA,GAM7B,OAJAllB,KAAKwC,EAAIwD,EAAI1E,KAAK4E,IAAKyD,GACvB3J,KAAKyC,EAAIyiB,EACTllB,KAAKuZ,EAAIvT,EAAI1E,KAAK6E,IAAKwD,GAEhB3J,IAER,CAEA,EAAGiL,OAAOC,kBAEHlL,KAAKwC,QACLxC,KAAKyC,QACLzC,KAAKuZ,CAEZ,EAID,MAAM2K,GAA0B,IAAIjC,GAC9BK,GAA8B,IAAI/E,GAExC,MAAM4H,GAELviB,WAAAA,GAAgI,IAAnHV,EAAGiC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAWmD,IAAYA,IAAYA,KAAYjjB,EAAGgC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,IAAWmD,KAAYA,KAAYA,KAElHplB,KAAKqlB,QAAS,EAEdrlB,KAAKkC,IAAMA,EACXlC,KAAKmC,IAAMA,CAEZ,CAEAyE,GAAAA,CAAK1E,EAAKC,GAKT,OAHAnC,KAAKkC,IAAIyF,KAAMzF,GACflC,KAAKmC,IAAIwF,KAAMxF,GAERnC,IAER,CAEAslB,YAAAA,CAAczkB,GAEbb,KAAKulB,YAEL,IAAM,IAAIxkB,EAAI,EAAGsb,EAAKxb,EAAMI,OAAQF,EAAIsb,EAAItb,GAAK,EAEhDf,KAAKwlB,cAAeC,GAAUjb,UAAW3J,EAAOE,IAIjD,OAAOf,IAER,CAEA0lB,sBAAAA,CAAwB9a,GAEvB5K,KAAKulB,YAEL,IAAM,IAAIxkB,EAAI,EAAGsb,EAAKzR,EAAUoR,MAAOjb,EAAIsb,EAAItb,IAE9Cf,KAAKwlB,cAAeC,GAAU9a,oBAAqBC,EAAW7J,IAI/D,OAAOf,IAER,CAEA2lB,aAAAA,CAAeC,GAEd5lB,KAAKulB,YAEL,IAAM,IAAIxkB,EAAI,EAAGsb,EAAKuJ,EAAO3kB,OAAQF,EAAIsb,EAAItb,IAE5Cf,KAAKwlB,cAAeI,EAAQ7kB,IAI7B,OAAOf,IAER,CAEA6lB,oBAAAA,CAAsB7a,EAAQ8a,GAE7B,MAAMC,EAAWN,GAAU9d,KAAMme,GAAOzd,eAAgB,IAKxD,OAHArI,KAAKkC,IAAIyF,KAAMqD,GAAS/C,IAAK8d,GAC7B/lB,KAAKmC,IAAIwF,KAAMqD,GAASnD,IAAKke,GAEtB/lB,IAER,CAEAgmB,aAAAA,CAAeC,GAA0B,IAAlBC,EAAO/hB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAI7B,OAFAnE,KAAKulB,YAEEvlB,KAAKmmB,eAAgBF,EAAQC,EAErC,CAEAxe,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAMye,GAKL,OAHApmB,KAAKkC,IAAIyF,KAAMye,EAAIlkB,KACnBlC,KAAKmC,IAAIwF,KAAMye,EAAIjkB,KAEZnC,IAER,CAEAulB,SAAAA,GAKC,OAHAvlB,KAAKkC,IAAIM,EAAIxC,KAAKkC,IAAIO,EAAIzC,KAAKkC,IAAIqX,EAAM6L,IACzCplB,KAAKmC,IAAIK,EAAIxC,KAAKmC,IAAIM,EAAIzC,KAAKmC,IAAIoX,GAAM6L,IAElCplB,IAER,CAEAqmB,OAAAA,GAIC,OAASrmB,KAAKmC,IAAIK,EAAIxC,KAAKkC,IAAIM,GAASxC,KAAKmC,IAAIM,EAAIzC,KAAKkC,IAAIO,GAASzC,KAAKmC,IAAIoX,EAAIvZ,KAAKkC,IAAIqX,CAE9F,CAEA+M,SAAAA,CAAW1lB,GAEV,OAAOZ,KAAKqmB,UAAYzlB,EAAOgG,IAAK,EAAG,EAAG,GAAMhG,EAAOmH,WAAY/H,KAAKkC,IAAKlC,KAAKmC,KAAMkG,eAAgB,GAEzG,CAEAke,OAAAA,CAAS3lB,GAER,OAAOZ,KAAKqmB,UAAYzlB,EAAOgG,IAAK,EAAG,EAAG,GAAMhG,EAAOuH,WAAYnI,KAAKmC,IAAKnC,KAAKkC,IAEnF,CAEAsjB,aAAAA,CAAegB,GAKd,OAHAxmB,KAAKkC,IAAIA,IAAKskB,GACdxmB,KAAKmC,IAAIA,IAAKqkB,GAEPxmB,IAER,CAEAymB,cAAAA,CAAgBC,GAKf,OAHA1mB,KAAKkC,IAAI+F,IAAKye,GACd1mB,KAAKmC,IAAI0F,IAAK6e,GAEP1mB,IAER,CAEA2mB,cAAAA,CAAgBtf,GAKf,OAHArH,KAAKkC,IAAI4F,WAAaT,GACtBrH,KAAKmC,IAAI2F,UAAWT,GAEbrH,IAER,CAEAmmB,cAAAA,CAAgBF,GAA0B,IAAlBC,EAAO/hB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAK9B8hB,EAAOW,mBAAmB,GAAO,GAEjC,MAAMC,EAAWZ,EAAOY,SAExB,QAAkB9mB,IAAb8mB,EAAyB,CAE7B,MAAMC,EAAoBD,EAASE,aAAc,YAKjD,IAAiB,IAAZb,QAA0CnmB,IAAtB+mB,IAA8D,IAA3Bb,EAAOe,gBAElE,IAAM,IAAIjmB,EAAI,EAAGC,EAAI8lB,EAAkB9K,MAAOjb,EAAIC,EAAGD,KAE7B,IAAlBklB,EAAOgB,OAEXhB,EAAOiB,kBAAmBnmB,EAAG0kB,IAI7BA,GAAU9a,oBAAqBmc,EAAmB/lB,GAInD0kB,GAAU7L,aAAcqM,EAAO3C,aAC/BtjB,KAAKwlB,cAAeC,cAMO1lB,IAAvBkmB,EAAOkB,aAIiB,OAAvBlB,EAAOkB,aAEXlB,EAAOmB,qBAIRC,GAAO1f,KAAMse,EAAOkB,eAOU,OAAzBN,EAASM,aAEbN,EAASO,qBAIVC,GAAO1f,KAAMkf,EAASM,cAIvBE,GAAOzN,aAAcqM,EAAO3C,aAE5BtjB,KAAKsnB,MAAOD,GAId,CAEA,MAAME,EAAWtB,EAAOsB,SAExB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAE5Cf,KAAKmmB,eAAgBoB,EAAUxmB,GAAKmlB,GAIrC,OAAOlmB,IAER,CAEAwnB,aAAAA,CAAehB,GAEd,OAAOA,EAAMhkB,GAAKxC,KAAKkC,IAAIM,GAAKgkB,EAAMhkB,GAAKxC,KAAKmC,IAAIK,GACnDgkB,EAAM/jB,GAAKzC,KAAKkC,IAAIO,GAAK+jB,EAAM/jB,GAAKzC,KAAKmC,IAAIM,GAC7C+jB,EAAMjN,GAAKvZ,KAAKkC,IAAIqX,GAAKiN,EAAMjN,GAAKvZ,KAAKmC,IAAIoX,CAE/C,CAEAkO,WAAAA,CAAarB,GAEZ,OAAOpmB,KAAKkC,IAAIM,GAAK4jB,EAAIlkB,IAAIM,GAAK4jB,EAAIjkB,IAAIK,GAAKxC,KAAKmC,IAAIK,GACvDxC,KAAKkC,IAAIO,GAAK2jB,EAAIlkB,IAAIO,GAAK2jB,EAAIjkB,IAAIM,GAAKzC,KAAKmC,IAAIM,GACjDzC,KAAKkC,IAAIqX,GAAK6M,EAAIlkB,IAAIqX,GAAK6M,EAAIjkB,IAAIoX,GAAKvZ,KAAKmC,IAAIoX,CAEnD,CAEAmO,YAAAA,CAAclB,EAAO5lB,GAKpB,OAAOA,EAAOgG,KACX4f,EAAMhkB,EAAIxC,KAAKkC,IAAIM,IAAQxC,KAAKmC,IAAIK,EAAIxC,KAAKkC,IAAIM,IACjDgkB,EAAM/jB,EAAIzC,KAAKkC,IAAIO,IAAQzC,KAAKmC,IAAIM,EAAIzC,KAAKkC,IAAIO,IACjD+jB,EAAMjN,EAAIvZ,KAAKkC,IAAIqX,IAAQvZ,KAAKmC,IAAIoX,EAAIvZ,KAAKkC,IAAIqX,GAGrD,CAEAoO,aAAAA,CAAevB,GAGd,OAAOA,EAAIjkB,IAAIK,GAAKxC,KAAKkC,IAAIM,GAAK4jB,EAAIlkB,IAAIM,GAAKxC,KAAKmC,IAAIK,GACvD4jB,EAAIjkB,IAAIM,GAAKzC,KAAKkC,IAAIO,GAAK2jB,EAAIlkB,IAAIO,GAAKzC,KAAKmC,IAAIM,GACjD2jB,EAAIjkB,IAAIoX,GAAKvZ,KAAKkC,IAAIqX,GAAK6M,EAAIlkB,IAAIqX,GAAKvZ,KAAKmC,IAAIoX,CAEnD,CAEAqO,gBAAAA,CAAkBC,GAMjB,OAHA7nB,KAAK8nB,WAAYD,EAAO7c,OAAQya,IAGzBA,GAAU3b,kBAAmB+d,EAAO7c,SAAc6c,EAAOrD,OAASqD,EAAOrD,MAEjF,CAEAuD,eAAAA,CAAiBC,GAKhB,IAAI9lB,EAAKC,EAsCT,OApCK6lB,EAAM5D,OAAO5hB,EAAI,GAErBN,EAAM8lB,EAAM5D,OAAO5hB,EAAIxC,KAAKkC,IAAIM,EAChCL,EAAM6lB,EAAM5D,OAAO5hB,EAAIxC,KAAKmC,IAAIK,IAIhCN,EAAM8lB,EAAM5D,OAAO5hB,EAAIxC,KAAKmC,IAAIK,EAChCL,EAAM6lB,EAAM5D,OAAO5hB,EAAIxC,KAAKkC,IAAIM,GAI5BwlB,EAAM5D,OAAO3hB,EAAI,GAErBP,GAAO8lB,EAAM5D,OAAO3hB,EAAIzC,KAAKkC,IAAIO,EACjCN,GAAO6lB,EAAM5D,OAAO3hB,EAAIzC,KAAKmC,IAAIM,IAIjCP,GAAO8lB,EAAM5D,OAAO3hB,EAAIzC,KAAKmC,IAAIM,EACjCN,GAAO6lB,EAAM5D,OAAO3hB,EAAIzC,KAAKkC,IAAIO,GAI7BulB,EAAM5D,OAAO7K,EAAI,GAErBrX,GAAO8lB,EAAM5D,OAAO7K,EAAIvZ,KAAKkC,IAAIqX,EACjCpX,GAAO6lB,EAAM5D,OAAO7K,EAAIvZ,KAAKmC,IAAIoX,IAIjCrX,GAAO8lB,EAAM5D,OAAO7K,EAAIvZ,KAAKmC,IAAIoX,EACjCpX,GAAO6lB,EAAM5D,OAAO7K,EAAIvZ,KAAKkC,IAAIqX,GAIzBrX,IAAS8lB,EAAMC,UAAY9lB,IAAS6lB,EAAMC,QAEpD,CAEAC,kBAAAA,CAAoBC,GAEnB,GAAKnoB,KAAKqmB,UAET,OAAO,EAKRrmB,KAAKsmB,UAAW8B,IAChBC,GAASlgB,WAAYnI,KAAKmC,IAAKimB,IAG/BE,GAAMngB,WAAYggB,EAASriB,EAAGsiB,IAC9BG,GAAMpgB,WAAYggB,EAASpiB,EAAGqiB,IAC9BI,GAAMrgB,WAAYggB,EAASniB,EAAGoiB,IAG9BK,GAAItgB,WAAYogB,GAAOD,IACvBI,GAAIvgB,WAAYqgB,GAAOD,IACvBI,GAAIxgB,WAAYmgB,GAAOE,IAKvB,IAAII,EAAO,CACV,GAAKH,GAAIlP,EAAGkP,GAAIhmB,EAAG,GAAKimB,GAAInP,EAAGmP,GAAIjmB,EAAG,GAAKkmB,GAAIpP,EAAGoP,GAAIlmB,EACtDgmB,GAAIlP,EAAG,GAAKkP,GAAIjmB,EAAGkmB,GAAInP,EAAG,GAAKmP,GAAIlmB,EAAGmmB,GAAIpP,EAAG,GAAKoP,GAAInmB,GACpDimB,GAAIhmB,EAAGgmB,GAAIjmB,EAAG,GAAKkmB,GAAIjmB,EAAGimB,GAAIlmB,EAAG,GAAKmmB,GAAIlmB,EAAGkmB,GAAInmB,EAAG,GAEvD,QAAOqmB,GAAYD,EAAMN,GAAOC,GAAOC,GAAOH,MAO9CO,EAAO,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAC1BC,GAAYD,EAAMN,GAAOC,GAAOC,GAAOH,MAQ9CS,GAAgBtF,aAAciF,GAAKC,IACnCE,EAAO,CAAEE,GAAgBtmB,EAAGsmB,GAAgBrmB,EAAGqmB,GAAgBvP,GAExDsP,GAAYD,EAAMN,GAAOC,GAAOC,GAAOH,KAE/C,CAEAP,UAAAA,CAAYtB,EAAO5lB,GAElB,OAAOA,EAAO+G,KAAM6e,GAAQxkB,MAAOhC,KAAKkC,IAAKlC,KAAKmC,IAEnD,CAEA4mB,eAAAA,CAAiBvC,GAEhB,OAAOxmB,KAAK8nB,WAAYtB,EAAOf,IAAY5b,WAAY2c,EAExD,CAEAwC,iBAAAA,CAAmBpoB,GAclB,OAZKZ,KAAKqmB,UAETzlB,EAAO2kB,aAIPvlB,KAAKsmB,UAAW1lB,EAAOoK,QAEvBpK,EAAO4jB,OAA8C,GAArCxkB,KAAKumB,QAASd,IAAYxkB,UAIpCL,CAER,CAEAqoB,SAAAA,CAAW7C,GAQV,OANApmB,KAAKkC,IAAIC,IAAKikB,EAAIlkB,KAClBlC,KAAKmC,IAAID,IAAKkkB,EAAIjkB,KAGbnC,KAAKqmB,WAAYrmB,KAAKulB,YAEpBvlB,IAER,CAEAsnB,KAAAA,CAAOlB,GAKN,OAHApmB,KAAKkC,IAAIA,IAAKkkB,EAAIlkB,KAClBlC,KAAKmC,IAAIA,IAAKikB,EAAIjkB,KAEXnC,IAER,CAEA4Z,YAAAA,CAAc/J,GAGb,OAAK7P,KAAKqmB,YAGV6C,GAAS,GAAItiB,IAAK5G,KAAKkC,IAAIM,EAAGxC,KAAKkC,IAAIO,EAAGzC,KAAKkC,IAAIqX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKkC,IAAIM,EAAGxC,KAAKkC,IAAIO,EAAGzC,KAAKmC,IAAIoX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKkC,IAAIM,EAAGxC,KAAKmC,IAAIM,EAAGzC,KAAKkC,IAAIqX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKkC,IAAIM,EAAGxC,KAAKmC,IAAIM,EAAGzC,KAAKmC,IAAIoX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKmC,IAAIK,EAAGxC,KAAKkC,IAAIO,EAAGzC,KAAKkC,IAAIqX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKmC,IAAIK,EAAGxC,KAAKkC,IAAIO,EAAGzC,KAAKmC,IAAIoX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKmC,IAAIK,EAAGxC,KAAKmC,IAAIM,EAAGzC,KAAKkC,IAAIqX,GAAIK,aAAc/J,GACrEqZ,GAAS,GAAItiB,IAAK5G,KAAKmC,IAAIK,EAAGxC,KAAKmC,IAAIM,EAAGzC,KAAKmC,IAAIoX,GAAIK,aAAc/J,GAErE7P,KAAK2lB,cAAeuD,KAZSlpB,IAgB9B,CAEA2P,SAAAA,CAAWlF,GAKV,OAHAzK,KAAKkC,IAAI2F,IAAK4C,GACdzK,KAAKmC,IAAI0F,IAAK4C,GAEPzK,IAER,CAEAuK,MAAAA,CAAQ6b,GAEP,OAAOA,EAAIlkB,IAAIqI,OAAQvK,KAAKkC,MAASkkB,EAAIjkB,IAAIoI,OAAQvK,KAAKmC,IAE3D,EAID,MAAM+mB,GAAU,CACD,IAAIjH,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,GACJ,IAAIA,IAGbwD,GAA0B,IAAIxD,GAE9BoF,GAAuB,IAAIlC,GAI3BmD,GAAsB,IAAIrG,GAC1BsG,GAAsB,IAAItG,GAC1BuG,GAAsB,IAAIvG,GAI1BwG,GAAoB,IAAIxG,GACxByG,GAAoB,IAAIzG,GACxB0G,GAAoB,IAAI1G,GAExBmG,GAAwB,IAAInG,GAC5BoG,GAAyB,IAAIpG,GAC7B6G,GAAgC,IAAI7G,GACpCkH,GAA0B,IAAIlH,GAEpC,SAAS4G,GAAYD,EAAMQ,EAAI/e,EAAIC,EAAI+e,GAEtC,IAAM,IAAItoB,EAAI,EAAGuoB,EAAIV,EAAK3nB,OAAS,EAAGF,GAAKuoB,EAAGvoB,GAAK,EAAI,CAEtDooB,GAAU3e,UAAWoe,EAAM7nB,GAE3B,MAAM8N,EAAIwa,EAAQ7mB,EAAIlB,KAAK8C,IAAK+kB,GAAU3mB,GAAM6mB,EAAQ5mB,EAAInB,KAAK8C,IAAK+kB,GAAU1mB,GAAM4mB,EAAQ9P,EAAIjY,KAAK8C,IAAK+kB,GAAU5P,GAEhHgQ,EAAKH,EAAGlgB,IAAKigB,IACbK,EAAKnf,EAAGnB,IAAKigB,IACbM,EAAKnf,EAAGpB,IAAKigB,IAEnB,GAAK7nB,KAAKa,KAAOb,KAAKa,IAAKonB,EAAIC,EAAIC,GAAMnoB,KAAKY,IAAKqnB,EAAIC,EAAIC,IAAS5a,EAInE,OAAO,CAIT,CAEA,OAAO,CAER,CAEA,MAAM6a,GAAuB,IAAIvE,GAC3BwE,GAAsB,IAAI1H,GAC1B2H,GAAsB,IAAI3H,GAEhC,MAAM4H,GAELjnB,WAAAA,GAAoD,IAAvCoI,EAAM7G,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAWuC,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,IAAK,EAE/CnE,KAAK8pB,UAAW,EAEhB9pB,KAAKgL,OAASA,EACdhL,KAAKwkB,OAASA,CAEf,CAEA5d,GAAAA,CAAKoE,EAAQwZ,GAKZ,OAHAxkB,KAAKgL,OAAOrD,KAAMqD,GAClBhL,KAAKwkB,OAASA,EAEPxkB,IAER,CAEA2lB,aAAAA,CAAeC,EAAQmE,GAEtB,MAAM/e,EAAShL,KAAKgL,YAEIjL,IAAnBgqB,EAEJ/e,EAAOrD,KAAMoiB,GAIbL,GAAO/D,cAAeC,GAASU,UAAWtb,GAI3C,IAAIgf,EAAc,EAElB,IAAM,IAAIjpB,EAAI,EAAGsb,EAAKuJ,EAAO3kB,OAAQF,EAAIsb,EAAItb,IAE5CipB,EAAc1oB,KAAKa,IAAK6nB,EAAahf,EAAOlB,kBAAmB8b,EAAQ7kB,KAMxE,OAFAf,KAAKwkB,OAASljB,KAAK+H,KAAM2gB,GAElBhqB,IAER,CAEA2H,IAAAA,CAAMkgB,GAKL,OAHA7nB,KAAKgL,OAAOrD,KAAMkgB,EAAO7c,QACzBhL,KAAKwkB,OAASqD,EAAOrD,OAEdxkB,IAER,CAEAqmB,OAAAA,GAEC,OAASrmB,KAAKwkB,OAAS,CAExB,CAEAe,SAAAA,GAKC,OAHAvlB,KAAKgL,OAAOpE,IAAK,EAAG,EAAG,GACvB5G,KAAKwkB,QAAW,EAETxkB,IAER,CAEAwnB,aAAAA,CAAehB,GAEd,OAASA,EAAM1c,kBAAmB9J,KAAKgL,SAAchL,KAAKwkB,OAASxkB,KAAKwkB,MAEzE,CAEAuE,eAAAA,CAAiBvC,GAEhB,OAASA,EAAM3c,WAAY7J,KAAKgL,QAAWhL,KAAKwkB,MAEjD,CAEAoD,gBAAAA,CAAkBC,GAEjB,MAAMoC,EAAYjqB,KAAKwkB,OAASqD,EAAOrD,OAEvC,OAAOqD,EAAO7c,OAAOlB,kBAAmB9J,KAAKgL,SAAcif,EAAYA,CAExE,CAEAtC,aAAAA,CAAevB,GAEd,OAAOA,EAAIwB,iBAAkB5nB,KAE9B,CAEA+nB,eAAAA,CAAiBC,GAEhB,OAAO1mB,KAAK8C,IAAK4jB,EAAMe,gBAAiB/oB,KAAKgL,UAAchL,KAAKwkB,MAEjE,CAEAsD,UAAAA,CAAYtB,EAAO5lB,GAElB,MAAMspB,EAAgBlqB,KAAKgL,OAAOlB,kBAAmB0c,GAWrD,OATA5lB,EAAO+G,KAAM6e,GAER0D,EAAkBlqB,KAAKwkB,OAASxkB,KAAKwkB,SAEzC5jB,EAAOqH,IAAKjI,KAAKgL,QAAS3H,YAC1BzC,EAAOyH,eAAgBrI,KAAKwkB,QAAS3c,IAAK7H,KAAKgL,SAIzCpK,CAER,CAEAupB,cAAAA,CAAgBvpB,GAEf,OAAKZ,KAAKqmB,WAGTzlB,EAAO2kB,YACA3kB,IAIRA,EAAOgG,IAAK5G,KAAKgL,OAAQhL,KAAKgL,QAC9BpK,EAAO+lB,eAAgB3mB,KAAKwkB,QAErB5jB,EAER,CAEAgZ,YAAAA,CAAc/J,GAKb,OAHA7P,KAAKgL,OAAO4O,aAAc/J,GAC1B7P,KAAKwkB,OAASxkB,KAAKwkB,OAAS3U,EAAOua,oBAE5BpqB,IAER,CAEA2P,SAAAA,CAAWlF,GAIV,OAFAzK,KAAKgL,OAAOnD,IAAK4C,GAEVzK,IAER,CAEAwlB,aAAAA,CAAegB,GAEd,GAAKxmB,KAAKqmB,UAMT,OAJArmB,KAAKgL,OAAOrD,KAAM6e,GAElBxmB,KAAKwkB,OAAS,EAEPxkB,KAIR2pB,GAAMxhB,WAAYqe,EAAOxmB,KAAKgL,QAE9B,MAAM5B,EAAWugB,GAAMvgB,WAEvB,GAAKA,EAAapJ,KAAKwkB,OAASxkB,KAAKwkB,OAAW,CAI/C,MAAMvjB,EAASK,KAAK+H,KAAMD,GAEpBihB,EAAmC,IAAzBppB,EAASjB,KAAKwkB,QAE9BxkB,KAAKgL,OAAOhD,gBAAiB2hB,GAAOU,EAAQppB,GAE5CjB,KAAKwkB,QAAU6F,CAEhB,CAEA,OAAOrqB,IAER,CAEAsnB,KAAAA,CAAOO,GAEN,OAAKA,EAAOxB,UAEJrmB,KAIHA,KAAKqmB,WAETrmB,KAAK2H,KAAMkgB,GAEJ7nB,QAIqC,IAAxCA,KAAKgL,OAAOT,OAAQsd,EAAO7c,QAE9BhL,KAAKwkB,OAASljB,KAAKa,IAAKnC,KAAKwkB,OAAQqD,EAAOrD,SAI7CoF,GAAMzhB,WAAY0f,EAAO7c,OAAQhL,KAAKgL,QAASd,UAAW2d,EAAOrD,QAEjExkB,KAAKwlB,cAAemE,GAAMhiB,KAAMkgB,EAAO7c,QAASnD,IAAK+hB,KAErD5pB,KAAKwlB,cAAemE,GAAMhiB,KAAMkgB,EAAO7c,QAAS/C,IAAK2hB,MAI/C5pB,KAER,CAEAuK,MAAAA,CAAQsd,GAEP,OAAOA,EAAO7c,OAAOT,OAAQvK,KAAKgL,SAAc6c,EAAOrD,SAAWxkB,KAAKwkB,MAExE,CAEA9c,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAMsqB,GAA0B,IAAIrI,GAC9BsI,GAA2B,IAAItI,GAC/BuI,GAAwB,IAAIvI,GAC5BwI,GAAsB,IAAIxI,GAE1ByI,GAAuB,IAAIzI,GAC3B0I,GAAuB,IAAI1I,GAC3B2I,GAA0B,IAAI3I,GAEpC,MAAM4I,GAELjoB,WAAAA,GAA4E,IAA/DkoB,EAAM3mB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW8I,EAAS5mB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAS,EAAG,GAAK,GAErEjiB,KAAK8qB,OAASA,EACd9qB,KAAK+qB,UAAYA,CAElB,CAEAnkB,GAAAA,CAAKkkB,EAAQC,GAKZ,OAHA/qB,KAAK8qB,OAAOnjB,KAAMmjB,GAClB9qB,KAAK+qB,UAAUpjB,KAAMojB,GAEd/qB,IAER,CAEA2H,IAAAA,CAAMqjB,GAKL,OAHAhrB,KAAK8qB,OAAOnjB,KAAMqjB,EAAIF,QACtB9qB,KAAK+qB,UAAUpjB,KAAMqjB,EAAID,WAElB/qB,IAER,CAEAirB,EAAAA,CAAIvoB,EAAG9B,GAEN,OAAOA,EAAO+G,KAAM3H,KAAK8qB,QAAS9iB,gBAAiBhI,KAAK+qB,UAAWroB,EAEpE,CAEAwoB,MAAAA,CAAQtjB,GAIP,OAFA5H,KAAK+qB,UAAUpjB,KAAMC,GAAIK,IAAKjI,KAAK8qB,QAASznB,YAErCrD,IAER,CAEAmrB,MAAAA,CAAQzoB,GAIP,OAFA1C,KAAK8qB,OAAOnjB,KAAM3H,KAAKirB,GAAIvoB,EAAG4nB,KAEvBtqB,IAER,CAEAorB,mBAAAA,CAAqB5E,EAAO5lB,GAE3BA,EAAOuH,WAAYqe,EAAOxmB,KAAK8qB,QAE/B,MAAMO,EAAoBzqB,EAAOsI,IAAKlJ,KAAK+qB,WAE3C,OAAKM,EAAoB,EAEjBzqB,EAAO+G,KAAM3H,KAAK8qB,QAInBlqB,EAAO+G,KAAM3H,KAAK8qB,QAAS9iB,gBAAiBhI,KAAK+qB,UAAWM,EAEpE,CAEAtC,eAAAA,CAAiBvC,GAEhB,OAAOllB,KAAK+H,KAAMrJ,KAAKsrB,kBAAmB9E,GAE3C,CAEA8E,iBAAAA,CAAmB9E,GAElB,MAAM6E,EAAoBf,GAAUniB,WAAYqe,EAAOxmB,KAAK8qB,QAAS5hB,IAAKlJ,KAAK+qB,WAI/E,OAAKM,EAAoB,EAEjBrrB,KAAK8qB,OAAOhhB,kBAAmB0c,IAIvC8D,GAAU3iB,KAAM3H,KAAK8qB,QAAS9iB,gBAAiBhI,KAAK+qB,UAAWM,GAExDf,GAAUxgB,kBAAmB0c,GAErC,CAEA+E,mBAAAA,CAAqBnC,EAAI/e,EAAImhB,EAAoBC,GAShDlB,GAAW5iB,KAAMyhB,GAAKvhB,IAAKwC,GAAKhC,eAAgB,IAChDmiB,GAAQ7iB,KAAM0C,GAAKpC,IAAKmhB,GAAK/lB,YAC7BonB,GAAM9iB,KAAM3H,KAAK8qB,QAAS7iB,IAAKsiB,IAE/B,MAAMmB,EAAkC,GAAtBtC,EAAGvf,WAAYQ,GAC3BshB,GAAQ3rB,KAAK+qB,UAAU7hB,IAAKshB,IAC5BoB,EAAKnB,GAAMvhB,IAAKlJ,KAAK+qB,WACrBpnB,GAAO8mB,GAAMvhB,IAAKshB,IAClBxkB,EAAIykB,GAAMrhB,WACVkF,EAAMhN,KAAK8C,IAAK,EAAIunB,EAAMA,GAChC,IAAIE,EAAIlM,EAAImM,EAASC,EAErB,GAAKzd,EAAM,EAQV,GAJAud,EAAKF,EAAMhoB,EAAKioB,EAChBjM,EAAKgM,EAAMC,EAAKjoB,EAChBooB,EAASL,EAAYpd,EAEhBud,GAAM,EAEV,GAAKlM,IAAQoM,EAEZ,GAAKpM,GAAMoM,EAAS,CAKnB,MAAMC,EAAS,EAAI1d,EACnBud,GAAMG,EACNrM,GAAMqM,EACNF,EAAUD,GAAOA,EAAKF,EAAMhM,EAAK,EAAIiM,GAAOjM,GAAOgM,EAAME,EAAKlM,EAAK,EAAIhc,GAAOqC,CAE/E,MAIC2Z,EAAK+L,EACLG,EAAKvqB,KAAKa,IAAK,IAAOwpB,EAAMhM,EAAKiM,IACjCE,GAAYD,EAAKA,EAAKlM,GAAOA,EAAK,EAAIhc,GAAOqC,OAQ9C2Z,GAAO+L,EACPG,EAAKvqB,KAAKa,IAAK,IAAOwpB,EAAMhM,EAAKiM,IACjCE,GAAYD,EAAKA,EAAKlM,GAAOA,EAAK,EAAIhc,GAAOqC,OAMzC2Z,IAAQoM,GAIZF,EAAKvqB,KAAKa,IAAK,KAASwpB,EAAMD,EAAYE,IAC1CjM,EAAOkM,EAAK,GAAQH,EAAYpqB,KAAKY,IAAKZ,KAAKa,KAAOupB,GAAa/nB,GAAM+nB,GACzEI,GAAYD,EAAKA,EAAKlM,GAAOA,EAAK,EAAIhc,GAAOqC,GAElC2Z,GAAMoM,GAIjBF,EAAK,EACLlM,EAAKre,KAAKY,IAAKZ,KAAKa,KAAOupB,GAAa/nB,GAAM+nB,GAC9CI,EAAUnM,GAAOA,EAAK,EAAIhc,GAAOqC,IAMjC6lB,EAAKvqB,KAAKa,IAAK,IAAOwpB,EAAMD,EAAYE,IACxCjM,EAAOkM,EAAK,EAAMH,EAAYpqB,KAAKY,IAAKZ,KAAKa,KAAOupB,GAAa/nB,GAAM+nB,GACvEI,GAAYD,EAAKA,EAAKlM,GAAOA,EAAK,EAAIhc,GAAOqC,QAU/C2Z,EAAOgM,EAAM,GAAQD,EAAYA,EACjCG,EAAKvqB,KAAKa,IAAK,IAAOwpB,EAAMhM,EAAKiM,IACjCE,GAAYD,EAAKA,EAAKlM,GAAOA,EAAK,EAAIhc,GAAOqC,EAgB9C,OAZKwlB,GAEJA,EAAmB7jB,KAAM3H,KAAK8qB,QAAS9iB,gBAAiBhI,KAAK+qB,UAAWc,GAIpEJ,GAEJA,EAAuB9jB,KAAM4iB,IAAaviB,gBAAiBwiB,GAAS7K,GAI9DmM,CAER,CAEAG,eAAAA,CAAiBpE,EAAQjnB,GAExB0pB,GAAUniB,WAAY0f,EAAO7c,OAAQhL,KAAK8qB,QAC1C,MAAMoB,EAAM5B,GAAUphB,IAAKlJ,KAAK+qB,WAC1BlpB,EAAKyoB,GAAUphB,IAAKohB,IAAc4B,EAAMA,EACxCC,EAAUtE,EAAOrD,OAASqD,EAAOrD,OAEvC,GAAK3iB,EAAKsqB,EAAU,OAAO,KAE3B,MAAMC,EAAM9qB,KAAK+H,KAAM8iB,EAAUtqB,GAG3BwqB,EAAKH,EAAME,EAGXE,EAAKJ,EAAME,EAGjB,OAAKE,EAAK,EAAW,KAKhBD,EAAK,EAAWrsB,KAAKirB,GAAIqB,EAAI1rB,GAG3BZ,KAAKirB,GAAIoB,EAAIzrB,EAErB,CAEAgnB,gBAAAA,CAAkBC,GAEjB,OAAO7nB,KAAKsrB,kBAAmBzD,EAAO7c,SAAc6c,EAAOrD,OAASqD,EAAOrD,MAE5E,CAEA+H,eAAAA,CAAiBvE,GAEhB,MAAMte,EAAcse,EAAM5D,OAAOlb,IAAKlJ,KAAK+qB,WAE3C,GAAqB,IAAhBrhB,EAGJ,OAA8C,IAAzCse,EAAMe,gBAAiB/oB,KAAK8qB,QAEzB,EAMD,KAIR,MAAMpoB,IAAQ1C,KAAK8qB,OAAO5hB,IAAK8e,EAAM5D,QAAW4D,EAAMC,UAAave,EAInE,OAAOhH,GAAK,EAAIA,EAAI,IAErB,CAEA8pB,cAAAA,CAAgBxE,EAAOpnB,GAEtB,MAAM8B,EAAI1C,KAAKusB,gBAAiBvE,GAEhC,OAAW,OAANtlB,EAEG,KAID1C,KAAKirB,GAAIvoB,EAAG9B,EAEpB,CAEAmnB,eAAAA,CAAiBC,GAIhB,MAAMyE,EAAczE,EAAMe,gBAAiB/oB,KAAK8qB,QAEhD,GAAqB,IAAhB2B,EAEJ,OAAO,EAMR,OAFoBzE,EAAM5D,OAAOlb,IAAKlJ,KAAK+qB,WAExB0B,EAAc,CAUlC,CAEAC,YAAAA,CAActG,EAAKxlB,GAElB,IAAI+rB,EAAMC,EAAMC,EAAOC,EAAOC,EAAOC,EAErC,MAAMC,EAAU,EAAIjtB,KAAK+qB,UAAUvoB,EAClC0qB,EAAU,EAAIltB,KAAK+qB,UAAUtoB,EAC7B0qB,EAAU,EAAIntB,KAAK+qB,UAAUxR,EAExBuR,EAAS9qB,KAAK8qB,OA0BpB,OAxBKmC,GAAW,GAEfN,GAASvG,EAAIlkB,IAAIM,EAAIsoB,EAAOtoB,GAAMyqB,EAClCL,GAASxG,EAAIjkB,IAAIK,EAAIsoB,EAAOtoB,GAAMyqB,IAIlCN,GAASvG,EAAIjkB,IAAIK,EAAIsoB,EAAOtoB,GAAMyqB,EAClCL,GAASxG,EAAIlkB,IAAIM,EAAIsoB,EAAOtoB,GAAMyqB,GAI9BC,GAAW,GAEfL,GAAUzG,EAAIlkB,IAAIO,EAAIqoB,EAAOroB,GAAMyqB,EACnCJ,GAAU1G,EAAIjkB,IAAIM,EAAIqoB,EAAOroB,GAAMyqB,IAInCL,GAAUzG,EAAIjkB,IAAIM,EAAIqoB,EAAOroB,GAAMyqB,EACnCJ,GAAU1G,EAAIlkB,IAAIO,EAAIqoB,EAAOroB,GAAMyqB,GAI7BP,EAAOG,GAAaD,EAAQD,EAAgB,OAE9CC,EAAQF,GAAQS,MAAOT,MAASA,EAAOE,IAEvCC,EAAQF,GAAQQ,MAAOR,MAASA,EAAOE,GAEvCK,GAAW,GAEfJ,GAAU3G,EAAIlkB,IAAIqX,EAAIuR,EAAOvR,GAAM4T,EACnCH,GAAU5G,EAAIjkB,IAAIoX,EAAIuR,EAAOvR,GAAM4T,IAInCJ,GAAU3G,EAAIjkB,IAAIoX,EAAIuR,EAAOvR,GAAM4T,EACnCH,GAAU5G,EAAIlkB,IAAIqX,EAAIuR,EAAOvR,GAAM4T,GAI7BR,EAAOK,GAAaD,EAAQH,EAAgB,OAE9CG,EAAQJ,GAAQA,IAASA,KAAOA,EAAOI,IAEvCC,EAAQJ,GAAQA,IAASA,KAAOA,EAAOI,GAIvCJ,EAAO,EAAW,KAEhB5sB,KAAKirB,GAAI0B,GAAQ,EAAIA,EAAOC,EAAMhsB,IAE1C,CAEA+mB,aAAAA,CAAevB,GAEd,OAA+C,OAAxCpmB,KAAK0sB,aAActG,EAAKkE,GAEhC,CAEA+C,iBAAAA,CAAmBvnB,EAAGC,EAAGC,EAAGsnB,EAAiB1sB,GAM5C8pB,GAAOviB,WAAYpC,EAAGD,GACtB6kB,GAAOxiB,WAAYnC,EAAGF,GACtB8kB,GAAUpH,aAAckH,GAAQC,IAOhC,IACI4C,EADAC,EAAMxtB,KAAK+qB,UAAU7hB,IAAK0hB,IAG9B,GAAK4C,EAAM,EAAI,CAEd,GAAKF,EAAkB,OAAO,KAC9BC,EAAO,CAER,KAAO,MAAKC,EAAM,GAOjB,OAAO,KALPD,GAAS,EACTC,GAAQA,CAMT,CAEA/C,GAAMtiB,WAAYnI,KAAK8qB,OAAQhlB,GAC/B,MAAM2nB,EAASF,EAAOvtB,KAAK+qB,UAAU7hB,IAAKyhB,GAAOnH,aAAciH,GAAOE,KAGtE,GAAK8C,EAAS,EAEb,OAAO,KAIR,MAAMC,EAASH,EAAOvtB,KAAK+qB,UAAU7hB,IAAKwhB,GAAOvhB,MAAOshB,KAGxD,GAAKiD,EAAS,EAEb,OAAO,KAKR,GAAKD,EAASC,EAASF,EAEtB,OAAO,KAKR,MAAMG,GAAQJ,EAAO9C,GAAMvhB,IAAK0hB,IAGhC,OAAK+C,EAAM,EAEH,KAKD3tB,KAAKirB,GAAI0C,EAAMH,EAAK5sB,EAE5B,CAEAgZ,YAAAA,CAAcjL,GAKb,OAHA3O,KAAK8qB,OAAOlR,aAAcjL,GAC1B3O,KAAK+qB,UAAUxH,mBAAoB5U,GAE5B3O,IAER,CAEAuK,MAAAA,CAAQygB,GAEP,OAAOA,EAAIF,OAAOvgB,OAAQvK,KAAK8qB,SAAYE,EAAID,UAAUxgB,OAAQvK,KAAK+qB,UAEvE,CAEArjB,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAM4tB,GAELhrB,WAAAA,CAAawI,EAAKC,EAAKC,EAAKuiB,EAAKtiB,EAAKC,EAAKC,EAAKqiB,EAAKpiB,EAAKC,EAAKC,EAAKmiB,EAAKC,EAAKC,EAAKC,EAAKC,GAEvFP,GAAQ5mB,UAAUonB,WAAY,EAE9BpuB,KAAK0I,SAAW,CAEf,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,QAIG3I,IAARqL,GAEJpL,KAAK4G,IAAKwE,EAAKC,EAAKC,EAAKuiB,EAAKtiB,EAAKC,EAAKC,EAAKqiB,EAAKpiB,EAAKC,EAAKC,EAAKmiB,EAAKC,EAAKC,EAAKC,EAAKC,EAIvF,CAEAvnB,GAAAA,CAAKwE,EAAKC,EAAKC,EAAKuiB,EAAKtiB,EAAKC,EAAKC,EAAKqiB,EAAKpiB,EAAKC,EAAKC,EAAKmiB,EAAKC,EAAKC,EAAKC,EAAKC,GAE/E,MAAMriB,EAAK9L,KAAK0I,SAOhB,OALAoD,EAAI,GAAMV,EAAKU,EAAI,GAAMT,EAAKS,EAAI,GAAMR,EAAKQ,EAAI,IAAO+hB,EACxD/hB,EAAI,GAAMP,EAAKO,EAAI,GAAMN,EAAKM,EAAI,GAAML,EAAKK,EAAI,IAAOgiB,EACxDhiB,EAAI,GAAMJ,EAAKI,EAAI,GAAMH,EAAKG,EAAI,IAAOF,EAAKE,EAAI,IAAOiiB,EACzDjiB,EAAI,GAAMkiB,EAAKliB,EAAI,GAAMmiB,EAAKniB,EAAI,IAAOoiB,EAAKpiB,EAAI,IAAOqiB,EAElDnuB,IAER,CAEA+L,QAAAA,GAWC,OATA/L,KAAK4G,IAEJ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIH5G,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAIkmB,IAAUpjB,UAAWxK,KAAK0I,SAEtC,CAEAf,IAAAA,CAAMrF,GAEL,MAAMwJ,EAAK9L,KAAK0I,SACVsD,EAAK1J,EAAEoG,SAOb,OALAoD,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACvEF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GACvEF,EAAI,GAAME,EAAI,GAAKF,EAAI,GAAME,EAAI,GAAKF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAC1EF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAAMF,EAAI,IAAOE,EAAI,IAEvEhM,IAER,CAEAquB,YAAAA,CAAc/rB,GAEb,MAAMwJ,EAAK9L,KAAK0I,SAAUsD,EAAK1J,EAAEoG,SAMjC,OAJAoD,EAAI,IAAOE,EAAI,IACfF,EAAI,IAAOE,EAAI,IACfF,EAAI,IAAOE,EAAI,IAERhM,IAER,CAEAsuB,cAAAA,CAAgBhsB,GAEf,MAAM0J,EAAK1J,EAAEoG,SAWb,OATA1I,KAAK4G,IAEJoF,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,EAC3BA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,EAC3BA,EAAI,GAAKA,EAAI,GAAKA,EAAI,GAAK,EAC3B,EAAG,EAAG,EAAG,GAIHhM,IAER,CAEAiM,YAAAA,CAAcC,EAAOC,EAAOC,GAM3B,OAJAF,EAAM4Y,oBAAqB9kB,KAAM,GACjCmM,EAAM2Y,oBAAqB9kB,KAAM,GACjCoM,EAAM0Y,oBAAqB9kB,KAAM,GAE1BA,IAER,CAEAuuB,SAAAA,CAAWriB,EAAOC,EAAOC,GASxB,OAPApM,KAAK4G,IACJsF,EAAM1J,EAAG2J,EAAM3J,EAAG4J,EAAM5J,EAAG,EAC3B0J,EAAMzJ,EAAG0J,EAAM1J,EAAG2J,EAAM3J,EAAG,EAC3ByJ,EAAMqN,EAAGpN,EAAMoN,EAAGnN,EAAMmN,EAAG,EAC3B,EAAG,EAAG,EAAG,GAGHvZ,IAER,CAEAwuB,eAAAA,CAAiBlsB,GAIhB,MAAMwJ,EAAK9L,KAAK0I,SACVsD,EAAK1J,EAAEoG,SAEP+lB,EAAS,EAAIC,GAAM5J,oBAAqBxiB,EAAG,GAAIrB,SAC/C0tB,EAAS,EAAID,GAAM5J,oBAAqBxiB,EAAG,GAAIrB,SAC/C2tB,EAAS,EAAIF,GAAM5J,oBAAqBxiB,EAAG,GAAIrB,SAsBrD,OApBA6K,EAAI,GAAME,EAAI,GAAMyiB,EACpB3iB,EAAI,GAAME,EAAI,GAAMyiB,EACpB3iB,EAAI,GAAME,EAAI,GAAMyiB,EACpB3iB,EAAI,GAAM,EAEVA,EAAI,GAAME,EAAI,GAAM2iB,EACpB7iB,EAAI,GAAME,EAAI,GAAM2iB,EACpB7iB,EAAI,GAAME,EAAI,GAAM2iB,EACpB7iB,EAAI,GAAM,EAEVA,EAAI,GAAME,EAAI,GAAM4iB,EACpB9iB,EAAI,GAAME,EAAI,GAAM4iB,EACpB9iB,EAAI,IAAOE,EAAI,IAAO4iB,EACtB9iB,EAAI,IAAO,EAEXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EAEJ9L,IAER,CAEA6uB,qBAAAA,CAAuBvP,GAEtB,MAAMxT,EAAK9L,KAAK0I,SAEVlG,EAAI8c,EAAM9c,EAAGC,EAAI6c,EAAM7c,EAAG8W,EAAI+F,EAAM/F,EACpCzT,EAAIxE,KAAK4E,IAAK1D,GAAKuD,EAAIzE,KAAK6E,IAAK3D,GACjCwD,EAAI1E,KAAK4E,IAAKzD,GAAKqL,EAAIxM,KAAK6E,IAAK1D,GACjCgG,EAAInH,KAAK4E,IAAKqT,GAAKxL,EAAIzM,KAAK6E,IAAKoT,GAEvC,GAAqB,QAAhB+F,EAAMrZ,MAAkB,CAE5B,MAAMwG,EAAK3G,EAAI2C,EAAGqmB,EAAKhpB,EAAIiI,EAAGrB,EAAK3G,EAAI0C,EAAGsmB,EAAKhpB,EAAIgI,EAEnDjC,EAAI,GAAM9F,EAAIyC,EACdqD,EAAI,IAAQ9F,EAAI+H,EAChBjC,EAAI,GAAMgC,EAEVhC,EAAI,GAAMgjB,EAAKpiB,EAAKoB,EACpBhC,EAAI,GAAMW,EAAKsiB,EAAKjhB,EACpBhC,EAAI,IAAQ/F,EAAIC,EAEhB8F,EAAI,GAAMijB,EAAKtiB,EAAKqB,EACpBhC,EAAI,GAAMY,EAAKoiB,EAAKhhB,EACpBhC,EAAI,IAAOhG,EAAIE,CAEhB,MAAO,GAAqB,QAAhBsZ,EAAMrZ,MAAkB,CAEnC,MAAM+oB,EAAKhpB,EAAIyC,EAAGwmB,EAAKjpB,EAAI+H,EAAGmhB,EAAKphB,EAAIrF,EAAG0mB,EAAKrhB,EAAIC,EAEnDjC,EAAI,GAAMkjB,EAAKG,EAAKppB,EACpB+F,EAAI,GAAMojB,EAAKnpB,EAAIkpB,EACnBnjB,EAAI,GAAMhG,EAAIgI,EAEdhC,EAAI,GAAMhG,EAAIiI,EACdjC,EAAI,GAAMhG,EAAI2C,EACdqD,EAAI,IAAQ/F,EAEZ+F,EAAI,GAAMmjB,EAAKlpB,EAAImpB,EACnBpjB,EAAI,GAAMqjB,EAAKH,EAAKjpB,EACpB+F,EAAI,IAAOhG,EAAIE,CAEhB,MAAO,GAAqB,QAAhBsZ,EAAMrZ,MAAkB,CAEnC,MAAM+oB,EAAKhpB,EAAIyC,EAAGwmB,EAAKjpB,EAAI+H,EAAGmhB,EAAKphB,EAAIrF,EAAG0mB,EAAKrhB,EAAIC,EAEnDjC,EAAI,GAAMkjB,EAAKG,EAAKppB,EACpB+F,EAAI,IAAQhG,EAAIiI,EAChBjC,EAAI,GAAMojB,EAAKD,EAAKlpB,EAEpB+F,EAAI,GAAMmjB,EAAKC,EAAKnpB,EACpB+F,EAAI,GAAMhG,EAAI2C,EACdqD,EAAI,GAAMqjB,EAAKH,EAAKjpB,EAEpB+F,EAAI,IAAQhG,EAAIgI,EAChBhC,EAAI,GAAM/F,EACV+F,EAAI,IAAOhG,EAAIE,CAEhB,MAAO,GAAqB,QAAhBsZ,EAAMrZ,MAAkB,CAEnC,MAAMwG,EAAK3G,EAAI2C,EAAGqmB,EAAKhpB,EAAIiI,EAAGrB,EAAK3G,EAAI0C,EAAGsmB,EAAKhpB,EAAIgI,EAEnDjC,EAAI,GAAM9F,EAAIyC,EACdqD,EAAI,GAAMY,EAAKoB,EAAIghB,EACnBhjB,EAAI,GAAMW,EAAKqB,EAAIihB,EAEnBjjB,EAAI,GAAM9F,EAAI+H,EACdjC,EAAI,GAAMijB,EAAKjhB,EAAIrB,EACnBX,EAAI,GAAMgjB,EAAKhhB,EAAIpB,EAEnBZ,EAAI,IAAQgC,EACZhC,EAAI,GAAM/F,EAAIC,EACd8F,EAAI,IAAOhG,EAAIE,CAEhB,MAAO,GAAqB,QAAhBsZ,EAAMrZ,MAAkB,CAEnC,MAAMmpB,EAAKtpB,EAAIE,EAAGqpB,EAAKvpB,EAAIgI,EAAGwhB,EAAKvpB,EAAIC,EAAGupB,EAAKxpB,EAAI+H,EAEnDhC,EAAI,GAAM9F,EAAIyC,EACdqD,EAAI,GAAMyjB,EAAKH,EAAKrhB,EACpBjC,EAAI,GAAMwjB,EAAKvhB,EAAIshB,EAEnBvjB,EAAI,GAAMiC,EACVjC,EAAI,GAAMhG,EAAI2C,EACdqD,EAAI,IAAQ/F,EAAI0C,EAEhBqD,EAAI,IAAQgC,EAAIrF,EAChBqD,EAAI,GAAMujB,EAAKthB,EAAIuhB,EACnBxjB,EAAI,IAAOsjB,EAAKG,EAAKxhB,CAEtB,MAAO,GAAqB,QAAhBuR,EAAMrZ,MAAkB,CAEnC,MAAMmpB,EAAKtpB,EAAIE,EAAGqpB,EAAKvpB,EAAIgI,EAAGwhB,EAAKvpB,EAAIC,EAAGupB,EAAKxpB,EAAI+H,EAEnDhC,EAAI,GAAM9F,EAAIyC,EACdqD,EAAI,IAAQiC,EACZjC,EAAI,GAAMgC,EAAIrF,EAEdqD,EAAI,GAAMsjB,EAAKrhB,EAAIwhB,EACnBzjB,EAAI,GAAMhG,EAAI2C,EACdqD,EAAI,GAAMujB,EAAKthB,EAAIuhB,EAEnBxjB,EAAI,GAAMwjB,EAAKvhB,EAAIshB,EACnBvjB,EAAI,GAAM/F,EAAI0C,EACdqD,EAAI,IAAOyjB,EAAKxhB,EAAIqhB,CAErB,CAaA,OAVAtjB,EAAI,GAAM,EACVA,EAAI,GAAM,EACVA,EAAI,IAAO,EAGXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EACXA,EAAI,IAAO,EAEJ9L,IAER,CAEAwvB,0BAAAA,CAA4B3pB,GAE3B,OAAO7F,KAAKyvB,QAASC,GAAO7pB,EAAG8pB,GAEhC,CAEAzE,MAAAA,CAAQ0E,EAAKhvB,EAAQivB,GAEpB,MAAM/jB,EAAK9L,KAAK0I,SAyChB,OAvCAiV,GAAGxV,WAAYynB,EAAKhvB,GAEG,IAAlB+c,GAAGvU,aAIPuU,GAAGpE,EAAI,GAIRoE,GAAGta,YACHoa,GAAG+F,aAAcqM,EAAIlS,IAEE,IAAlBF,GAAGrU,aAImB,IAArB9H,KAAK8C,IAAKyrB,EAAGtW,GAEjBoE,GAAGnb,GAAK,KAIRmb,GAAGpE,GAAK,KAIToE,GAAGta,YACHoa,GAAG+F,aAAcqM,EAAIlS,KAItBF,GAAGpa,YACHqa,GAAG8F,aAAc7F,GAAIF,IAErB3R,EAAI,GAAM2R,GAAGjb,EAAGsJ,EAAI,GAAM4R,GAAGlb,EAAGsJ,EAAI,GAAM6R,GAAGnb,EAC7CsJ,EAAI,GAAM2R,GAAGhb,EAAGqJ,EAAI,GAAM4R,GAAGjb,EAAGqJ,EAAI,GAAM6R,GAAGlb,EAC7CqJ,EAAI,GAAM2R,GAAGlE,EAAGzN,EAAI,GAAM4R,GAAGnE,EAAGzN,EAAI,IAAO6R,GAAGpE,EAEvCvZ,IAER,CAEAoI,QAAAA,CAAU9F,GAET,OAAOtC,KAAKuM,iBAAkBvM,KAAMsC,EAErC,CAEAkK,WAAAA,CAAalK,GAEZ,OAAOtC,KAAKuM,iBAAkBjK,EAAGtC,KAElC,CAEAuM,gBAAAA,CAAkBzG,EAAGC,GAEpB,MAAM0G,EAAK3G,EAAE4C,SACPgE,EAAK3G,EAAE2C,SACPoD,EAAK9L,KAAK0I,SAEViE,EAAMF,EAAI,GAAKG,EAAMH,EAAI,GAAKI,EAAMJ,EAAI,GAAKqjB,EAAMrjB,EAAI,IACvDK,EAAML,EAAI,GAAKM,EAAMN,EAAI,GAAKO,EAAMP,EAAI,GAAKsjB,EAAMtjB,EAAI,IACvDQ,EAAMR,EAAI,GAAKS,EAAMT,EAAI,GAAKU,EAAMV,EAAI,IAAMujB,EAAMvjB,EAAI,IACxDwjB,EAAMxjB,EAAI,GAAKyjB,EAAMzjB,EAAI,GAAK0jB,EAAM1jB,EAAI,IAAM2jB,EAAM3jB,EAAI,IAExDW,EAAMV,EAAI,GAAKW,EAAMX,EAAI,GAAKY,EAAMZ,EAAI,GAAK2jB,EAAM3jB,EAAI,IACvDa,EAAMb,EAAI,GAAKc,EAAMd,EAAI,GAAKe,EAAMf,EAAI,GAAK4jB,EAAM5jB,EAAI,IACvDgB,EAAMhB,EAAI,GAAKiB,EAAMjB,EAAI,GAAKkB,EAAMlB,EAAI,IAAM6jB,EAAM7jB,EAAI,IACxD8jB,EAAM9jB,EAAI,GAAK+jB,EAAM/jB,EAAI,GAAKgkB,EAAMhkB,EAAI,IAAMikB,EAAMjkB,EAAI,IAsB9D,OApBAZ,EAAI,GAAMa,EAAMS,EAAMR,EAAMW,EAAMV,EAAMa,EAAMoiB,EAAMU,EACpD1kB,EAAI,GAAMa,EAAMU,EAAMT,EAAMY,EAAMX,EAAMc,EAAMmiB,EAAMW,EACpD3kB,EAAI,GAAMa,EAAMW,EAAMV,EAAMa,EAAMZ,EAAMe,EAAMkiB,EAAMY,EACpD5kB,EAAI,IAAOa,EAAM0jB,EAAMzjB,EAAM0jB,EAAMzjB,EAAM0jB,EAAMT,EAAMa,EAErD7kB,EAAI,GAAMgB,EAAMM,EAAML,EAAMQ,EAAMP,EAAMU,EAAMqiB,EAAMS,EACpD1kB,EAAI,GAAMgB,EAAMO,EAAMN,EAAMS,EAAMR,EAAMW,EAAMoiB,EAAMU,EACpD3kB,EAAI,GAAMgB,EAAMQ,EAAMP,EAAMU,EAAMT,EAAMY,EAAMmiB,EAAMW,EACpD5kB,EAAI,IAAOgB,EAAMujB,EAAMtjB,EAAMujB,EAAMtjB,EAAMujB,EAAMR,EAAMY,EAErD7kB,EAAI,GAAMmB,EAAMG,EAAMF,EAAMK,EAAMJ,EAAMO,EAAMsiB,EAAMQ,EACpD1kB,EAAI,GAAMmB,EAAMI,EAAMH,EAAMM,EAAML,EAAMQ,EAAMqiB,EAAMS,EACpD3kB,EAAI,IAAOmB,EAAMK,EAAMJ,EAAMO,EAAMN,EAAMS,EAAMoiB,EAAMU,EACrD5kB,EAAI,IAAOmB,EAAMojB,EAAMnjB,EAAMojB,EAAMnjB,EAAMojB,EAAMP,EAAMW,EAErD7kB,EAAI,GAAMmkB,EAAM7iB,EAAM8iB,EAAM3iB,EAAM4iB,EAAMziB,EAAM0iB,EAAMI,EACpD1kB,EAAI,GAAMmkB,EAAM5iB,EAAM6iB,EAAM1iB,EAAM2iB,EAAMxiB,EAAMyiB,EAAMK,EACpD3kB,EAAI,IAAOmkB,EAAM3iB,EAAM4iB,EAAMziB,EAAM0iB,EAAMviB,EAAMwiB,EAAMM,EACrD5kB,EAAI,IAAOmkB,EAAMI,EAAMH,EAAMI,EAAMH,EAAMI,EAAMH,EAAMO,EAE9C3wB,IAER,CAEAqI,cAAAA,CAAgBtD,GAEf,MAAM+G,EAAK9L,KAAK0I,SAOhB,OALAoD,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,KAAQ/G,EACtD+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,KAAQ/G,EACtD+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,KAAQ/G,EAAG+G,EAAI,KAAQ/G,EACvD+G,EAAI,IAAO/G,EAAG+G,EAAI,IAAO/G,EAAG+G,EAAI,KAAQ/G,EAAG+G,EAAI,KAAQ/G,EAEhD/E,IAER,CAEA6N,WAAAA,GAEC,MAAM/B,EAAK9L,KAAK0I,SAEV0C,EAAMU,EAAI,GAAKT,EAAMS,EAAI,GAAKR,EAAMQ,EAAI,GAAK+hB,EAAM/hB,EAAI,IACvDP,EAAMO,EAAI,GAAKN,EAAMM,EAAI,GAAKL,EAAMK,EAAI,GAAKgiB,EAAMhiB,EAAI,IACvDJ,EAAMI,EAAI,GAAKH,EAAMG,EAAI,GAAKF,EAAME,EAAI,IAAMiiB,EAAMjiB,EAAI,IAM9D,OALYA,EAAI,KAOZ+hB,EAAMpiB,EAAME,EACXL,EAAMwiB,EAAMniB,EACZkiB,EAAMriB,EAAMI,EACZP,EAAMyiB,EAAMliB,EACZN,EAAME,EAAMuiB,EACZ1iB,EAAMI,EAAMsiB,GAZUjiB,EAAI,KAe3BV,EAAMK,EAAMsiB,EACX3iB,EAAM0iB,EAAMliB,EACZiiB,EAAMtiB,EAAMK,EACZN,EAAMC,EAAMwiB,EACZziB,EAAMwiB,EAAMpiB,EACZmiB,EAAMpiB,EAAMC,GApByBI,EAAI,MAuB1CV,EAAM0iB,EAAMniB,EACXP,EAAMI,EAAMuiB,EACZF,EAAMtiB,EAAMI,EACZN,EAAME,EAAMwiB,EACZF,EAAMriB,EAAME,EACZL,EAAMyiB,EAAMpiB,GA5ByCI,EAAI,MA+B1DR,EAAME,EAAME,EACXN,EAAMK,EAAME,EACZP,EAAMI,EAAMI,EACZN,EAAMC,EAAMI,EACZN,EAAME,EAAMK,EACZP,EAAMI,EAAMC,EAKlB,CAEA8C,SAAAA,GAEC,MAAM1C,EAAK9L,KAAK0I,SAChB,IAAI+F,EAUJ,OARAA,EAAM3C,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM2C,EAC5CA,EAAM3C,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM2C,EAC5CA,EAAM3C,EAAI,GAAKA,EAAI,GAAMA,EAAI,GAAKA,EAAI,GAAM2C,EAE5CA,EAAM3C,EAAI,GAAKA,EAAI,GAAMA,EAAI,IAAMA,EAAI,IAAO2C,EAC9CA,EAAM3C,EAAI,GAAKA,EAAI,GAAMA,EAAI,IAAMA,EAAI,IAAO2C,EAC9CA,EAAM3C,EAAI,IAAMA,EAAI,IAAOA,EAAI,IAAMA,EAAI,IAAO2C,EAEzCzO,IAER,CAEA4wB,WAAAA,CAAapuB,EAAGC,EAAG8W,GAElB,MAAMzN,EAAK9L,KAAK0I,SAgBhB,OAdKlG,EAAE0f,WAENpW,EAAI,IAAOtJ,EAAEA,EACbsJ,EAAI,IAAOtJ,EAAEC,EACbqJ,EAAI,IAAOtJ,EAAE+W,IAIbzN,EAAI,IAAOtJ,EACXsJ,EAAI,IAAOrJ,EACXqJ,EAAI,IAAOyN,GAILvZ,IAER,CAEAkO,MAAAA,GAGC,MAAMpC,EAAK9L,KAAK0I,SAEf0C,EAAMU,EAAI,GAAKP,EAAMO,EAAI,GAAKJ,EAAMI,EAAI,GAAKkiB,EAAMliB,EAAI,GACvDT,EAAMS,EAAI,GAAKN,EAAMM,EAAI,GAAKH,EAAMG,EAAI,GAAKmiB,EAAMniB,EAAI,GACvDR,EAAMQ,EAAI,GAAKL,EAAMK,EAAI,GAAKF,EAAME,EAAI,IAAMoiB,EAAMpiB,EAAI,IACxD+hB,EAAM/hB,EAAI,IAAMgiB,EAAMhiB,EAAI,IAAMiiB,EAAMjiB,EAAI,IAAMqiB,EAAMriB,EAAI,IAE1DqC,EAAM1C,EAAMsiB,EAAME,EAAMH,EAAMliB,EAAMqiB,EAAMH,EAAMniB,EAAMuiB,EAAM1iB,EAAMuiB,EAAMG,EAAMziB,EAAME,EAAMwiB,EAAM3iB,EAAMI,EAAMuiB,EAC5G/f,EAAMyf,EAAMjiB,EAAMqiB,EAAM3iB,EAAMyiB,EAAME,EAAMJ,EAAMliB,EAAMuiB,EAAM7iB,EAAM0iB,EAAMG,EAAM5iB,EAAMK,EAAMwiB,EAAM9iB,EAAMO,EAAMuiB,EAC5G9f,EAAM/C,EAAMwiB,EAAMG,EAAMJ,EAAMpiB,EAAMwiB,EAAMJ,EAAMriB,EAAM0iB,EAAM7iB,EAAMyiB,EAAMI,EAAM5iB,EAAME,EAAM2iB,EAAM9iB,EAAMI,EAAM0iB,EAC5G0C,EAAMhD,EAAMpiB,EAAME,EAAML,EAAMwiB,EAAMniB,EAAMkiB,EAAMriB,EAAMI,EAAMP,EAAMyiB,EAAMliB,EAAMN,EAAME,EAAMuiB,EAAM1iB,EAAMI,EAAMsiB,EAEvGzf,EAAMlD,EAAM+C,EAAM5C,EAAM6C,EAAM1C,EAAM2C,EAAM2f,EAAM6C,EAEtD,GAAa,IAARviB,EAAY,OAAOtO,KAAK4G,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/E,MAAM2H,EAAS,EAAID,EAsBnB,OApBAxC,EAAI,GAAMqC,EAAMI,EAChBzC,EAAI,IAAQgiB,EAAMliB,EAAMoiB,EAAMviB,EAAMsiB,EAAMC,EAAMF,EAAMpiB,EAAMwiB,EAAM3iB,EAAMwiB,EAAMG,EAAMziB,EAAMC,EAAMyiB,EAAM5iB,EAAMK,EAAMuiB,GAAQ5f,EAC1HzC,EAAI,IAAQN,EAAMuiB,EAAMC,EAAMF,EAAMniB,EAAMqiB,EAAMF,EAAMpiB,EAAMuiB,EAAM1iB,EAAMwiB,EAAME,EAAMziB,EAAME,EAAMyiB,EAAM5iB,EAAMI,EAAMwiB,GAAQ5f,EAC1HzC,EAAI,IAAQL,EAAME,EAAMqiB,EAAMxiB,EAAMI,EAAMoiB,EAAMviB,EAAMC,EAAMuiB,EAAM1iB,EAAMK,EAAMqiB,EAAMziB,EAAME,EAAMwiB,EAAM3iB,EAAMI,EAAMuiB,GAAQ3f,EAE1HzC,EAAI,GAAMsC,EAAMG,EAChBzC,EAAI,IAAQR,EAAMyiB,EAAMC,EAAMH,EAAMjiB,EAAMoiB,EAAMH,EAAMniB,EAAMwiB,EAAM9iB,EAAM2iB,EAAMG,EAAM5iB,EAAMI,EAAMyiB,EAAM/iB,EAAMQ,EAAMuiB,GAAQ5f,EAC1HzC,EAAI,IAAQ+hB,EAAMliB,EAAMqiB,EAAM3iB,EAAM0iB,EAAMC,EAAMH,EAAMniB,EAAMuiB,EAAM7iB,EAAM2iB,EAAME,EAAM5iB,EAAMK,EAAMyiB,EAAM/iB,EAAMO,EAAMwiB,GAAQ5f,EAC1HzC,EAAI,IAAQT,EAAMO,EAAMoiB,EAAM1iB,EAAMK,EAAMqiB,EAAM1iB,EAAMI,EAAMuiB,EAAM7iB,EAAMQ,EAAMqiB,EAAM5iB,EAAMK,EAAMwiB,EAAM9iB,EAAMO,EAAMuiB,GAAQ3f,EAE1HzC,EAAI,GAAMuC,EAAME,EAChBzC,EAAI,IAAQ+hB,EAAMpiB,EAAMuiB,EAAM1iB,EAAMwiB,EAAME,EAAMH,EAAMtiB,EAAM2iB,EAAM9iB,EAAM0iB,EAAMI,EAAM5iB,EAAMC,EAAM4iB,EAAM/iB,EAAMK,EAAM0iB,GAAQ5f,EAC1HzC,EAAI,KAAST,EAAMyiB,EAAME,EAAMH,EAAMriB,EAAMwiB,EAAMH,EAAMtiB,EAAM0iB,EAAM7iB,EAAM0iB,EAAMG,EAAM5iB,EAAME,EAAM4iB,EAAM/iB,EAAMI,EAAM2iB,GAAQ5f,EAC3HzC,EAAI,KAASR,EAAME,EAAMwiB,EAAM3iB,EAAMI,EAAMuiB,EAAM1iB,EAAMC,EAAM0iB,EAAM7iB,EAAMK,EAAMwiB,EAAM5iB,EAAME,EAAM2iB,EAAM9iB,EAAMI,EAAM0iB,GAAQ3f,EAE3HzC,EAAI,IAAO+kB,EAAMtiB,EACjBzC,EAAI,KAASR,EAAMwiB,EAAMpiB,EAAMmiB,EAAMpiB,EAAMC,EAAMmiB,EAAMtiB,EAAMK,EAAMR,EAAM0iB,EAAMliB,EAAMN,EAAMC,EAAMwiB,EAAM3iB,EAAMK,EAAMsiB,GAAQxf,EAC3HzC,EAAI,KAAS+hB,EAAMriB,EAAME,EAAML,EAAMyiB,EAAMpiB,EAAMmiB,EAAMtiB,EAAMI,EAAMP,EAAM0iB,EAAMniB,EAAMN,EAAME,EAAMwiB,EAAM3iB,EAAMI,EAAMuiB,GAAQxf,EAC3HzC,EAAI,KAAST,EAAMI,EAAMC,EAAMJ,EAAME,EAAME,EAAMJ,EAAMC,EAAMI,EAAMP,EAAMK,EAAME,EAAMN,EAAME,EAAMK,EAAMR,EAAMI,EAAMI,GAAQ2C,EAEpHvO,IAER,CAEAsP,KAAAA,CAAO1H,GAEN,MAAMkE,EAAK9L,KAAK0I,SACVlG,EAAIoF,EAAEpF,EAAGC,EAAImF,EAAEnF,EAAG8W,EAAI3R,EAAE2R,EAO9B,OALAzN,EAAI,IAAOtJ,EAAGsJ,EAAI,IAAOrJ,EAAGqJ,EAAI,IAAOyN,EACvCzN,EAAI,IAAOtJ,EAAGsJ,EAAI,IAAOrJ,EAAGqJ,EAAI,IAAOyN,EACvCzN,EAAI,IAAOtJ,EAAGsJ,EAAI,IAAOrJ,EAAGqJ,EAAI,KAAQyN,EACxCzN,EAAI,IAAOtJ,EAAGsJ,EAAI,IAAOrJ,EAAGqJ,EAAI,KAAQyN,EAEjCvZ,IAER,CAEAoqB,iBAAAA,GAEC,MAAMte,EAAK9L,KAAK0I,SAEVooB,EAAWhlB,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjEilB,EAAWjlB,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GACjEklB,EAAWllB,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,GAAMA,EAAI,IAAOA,EAAI,IAExE,OAAOxK,KAAK+H,KAAM/H,KAAKa,IAAK2uB,EAAUC,EAAUC,GAEjD,CAEAphB,eAAAA,CAAiBpN,EAAGC,EAAG8W,GA0BtB,OAxBK/W,EAAE0f,UAENliB,KAAK4G,IAEJ,EAAG,EAAG,EAAGpE,EAAEA,EACX,EAAG,EAAG,EAAGA,EAAEC,EACX,EAAG,EAAG,EAAGD,EAAE+W,EACX,EAAG,EAAG,EAAG,GAMVvZ,KAAK4G,IAEJ,EAAG,EAAG,EAAGpE,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAG8W,EACT,EAAG,EAAG,EAAG,GAMJvZ,IAER,CAEAixB,aAAAA,CAAetnB,GAEd,MAAM3D,EAAI1E,KAAK4E,IAAKyD,GAAS5E,EAAIzD,KAAK6E,IAAKwD,GAW3C,OATA3J,KAAK4G,IAEJ,EAAG,EAAG,EAAG,EACT,EAAGZ,GAAKjB,EAAG,EACX,EAAGA,EAAGiB,EAAG,EACT,EAAG,EAAG,EAAG,GAIHhG,IAER,CAEAkxB,aAAAA,CAAevnB,GAEd,MAAM3D,EAAI1E,KAAK4E,IAAKyD,GAAS5E,EAAIzD,KAAK6E,IAAKwD,GAW3C,OATA3J,KAAK4G,IAEHZ,EAAG,EAAGjB,EAAG,EACT,EAAG,EAAG,EAAG,GACRA,EAAG,EAAGiB,EAAG,EACV,EAAG,EAAG,EAAG,GAIJhG,IAER,CAEAmxB,aAAAA,CAAexnB,GAEd,MAAM3D,EAAI1E,KAAK4E,IAAKyD,GAAS5E,EAAIzD,KAAK6E,IAAKwD,GAW3C,OATA3J,KAAK4G,IAEJZ,GAAKjB,EAAG,EAAG,EACXA,EAAGiB,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GAIHhG,IAER,CAEAoxB,gBAAAA,CAAkBtR,EAAMvW,GAIvB,MAAMvD,EAAI1E,KAAK4E,IAAKqD,GACdxE,EAAIzD,KAAK6E,IAAKoD,GACd7G,EAAI,EAAIsD,EACRxD,EAAIsd,EAAKtd,EAAGC,EAAIqd,EAAKrd,EAAG8W,EAAIuG,EAAKvG,EACjCxK,EAAKrM,EAAIF,EAAGwM,EAAKtM,EAAID,EAW3B,OATAzC,KAAK4G,IAEJmI,EAAKvM,EAAIwD,EAAG+I,EAAKtM,EAAIsC,EAAIwU,EAAGxK,EAAKwK,EAAIxU,EAAItC,EAAG,EAC5CsM,EAAKtM,EAAIsC,EAAIwU,EAAGvK,EAAKvM,EAAIuD,EAAGgJ,EAAKuK,EAAIxU,EAAIvC,EAAG,EAC5CuM,EAAKwK,EAAIxU,EAAItC,EAAGuM,EAAKuK,EAAIxU,EAAIvC,EAAGE,EAAI6W,EAAIA,EAAIvT,EAAG,EAC/C,EAAG,EAAG,EAAG,GAIHhG,IAER,CAEAwP,SAAAA,CAAWhN,EAAGC,EAAG8W,GAWhB,OATAvZ,KAAK4G,IAEJpE,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAG8W,EAAG,EACT,EAAG,EAAG,EAAG,GAIHvZ,IAER,CAEAqxB,SAAAA,CAAWxW,EAAIC,EAAIwW,EAAIvW,EAAIwW,EAAIC,GAW9B,OATAxxB,KAAK4G,IAEJ,EAAG0qB,EAAIC,EAAI,EACX1W,EAAI,EAAG2W,EAAI,EACX1W,EAAIC,EAAI,EAAG,EACX,EAAG,EAAG,EAAG,GAIH/a,IAER,CAEAyvB,OAAAA,CAASgC,EAAUrS,EAAY9P,GAE9B,MAAMxD,EAAK9L,KAAK0I,SAEVlG,EAAI4c,EAAW3B,GAAIhb,EAAI2c,EAAW1B,GAAInE,EAAI6F,EAAWzB,GAAInE,EAAI4F,EAAWxB,GACxE8T,EAAKlvB,EAAIA,EAAGmvB,EAAKlvB,EAAIA,EAAGmvB,EAAKrY,EAAIA,EACjCmB,EAAKlY,EAAIkvB,EAAI7W,EAAKrY,EAAImvB,EAAI7W,EAAKtY,EAAIovB,EACnCjX,EAAKlY,EAAIkvB,EAAI5W,EAAKtY,EAAImvB,EAAIhX,EAAKrB,EAAIqY,EACnCC,EAAKrY,EAAIkY,EAAII,EAAKtY,EAAImY,EAAII,EAAKvY,EAAIoY,EAEnC3iB,EAAKK,EAAM9M,EAAG0M,EAAKI,EAAM7M,EAAGsiB,EAAKzV,EAAMiK,EAsB7C,OApBAzN,EAAI,IAAQ,GAAM6O,EAAKC,IAAS3L,EAChCnD,EAAI,IAAQ+O,EAAKkX,GAAO9iB,EACxBnD,EAAI,IAAQgP,EAAKgX,GAAO7iB,EACxBnD,EAAI,GAAM,EAEVA,EAAI,IAAQ+O,EAAKkX,GAAO7iB,EACxBpD,EAAI,IAAQ,GAAM4O,EAAKE,IAAS1L,EAChCpD,EAAI,IAAQiP,EAAK8W,GAAO3iB,EACxBpD,EAAI,GAAM,EAEVA,EAAI,IAAQgP,EAAKgX,GAAO/M,EACxBjZ,EAAI,IAAQiP,EAAK8W,GAAO9M,EACxBjZ,EAAI,KAAS,GAAM4O,EAAKC,IAASoK,EACjCjZ,EAAI,IAAO,EAEXA,EAAI,IAAO2lB,EAASjvB,EACpBsJ,EAAI,IAAO2lB,EAAShvB,EACpBqJ,EAAI,IAAO2lB,EAASlY,EACpBzN,EAAI,IAAO,EAEJ9L,IAER,CAEAgyB,SAAAA,CAAWP,EAAUrS,EAAY9P,GAEhC,MAAMxD,EAAK9L,KAAK0I,SAEhB,IAAIuG,EAAKyf,GAAM9nB,IAAKkF,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM7K,SAChD,MAAMiO,EAAKwf,GAAM9nB,IAAKkF,EAAI,GAAKA,EAAI,GAAKA,EAAI,IAAM7K,SAC5C8jB,EAAK2J,GAAM9nB,IAAKkF,EAAI,GAAKA,EAAI,GAAKA,EAAI,KAAO7K,SAGvCjB,KAAK6N,cACN,IAAIoB,GAAOA,GAEtBwiB,EAASjvB,EAAIsJ,EAAI,IACjB2lB,EAAShvB,EAAIqJ,EAAI,IACjB2lB,EAASlY,EAAIzN,EAAI,IAGjBmmB,GAAMtqB,KAAM3H,MAEZ,MAAMkyB,EAAQ,EAAIjjB,EACZkjB,EAAQ,EAAIjjB,EACZkjB,EAAQ,EAAIrN,EAoBlB,OAlBAkN,GAAMvpB,SAAU,IAAOwpB,EACvBD,GAAMvpB,SAAU,IAAOwpB,EACvBD,GAAMvpB,SAAU,IAAOwpB,EAEvBD,GAAMvpB,SAAU,IAAOypB,EACvBF,GAAMvpB,SAAU,IAAOypB,EACvBF,GAAMvpB,SAAU,IAAOypB,EAEvBF,GAAMvpB,SAAU,IAAO0pB,EACvBH,GAAMvpB,SAAU,IAAO0pB,EACvBH,GAAMvpB,SAAU,KAAQ0pB,EAExBhT,EAAWY,sBAAuBiS,IAElC3iB,EAAM9M,EAAIyM,EACVK,EAAM7M,EAAIyM,EACVI,EAAMiK,EAAIwL,EAEH/kB,IAER,CAEAqyB,eAAAA,CAAiBC,EAAMC,EAAOC,EAAKC,EAAQC,EAAMC,GAAgD,IAA3CC,EAAgBzuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG7E,GAExE,MAAMwM,EAAK9L,KAAK0I,SACVlG,EAAI,EAAIkwB,GAASH,EAAQD,GACzB7vB,EAAI,EAAIiwB,GAASF,EAAMC,GAEvB3sB,GAAMysB,EAAQD,IAAWC,EAAQD,GACjCvsB,GAAMysB,EAAMC,IAAaD,EAAMC,GAErC,IAAIzsB,EAAG8H,EAEP,GAAK8kB,IAAqBtzB,GAEzB0G,IAAQ2sB,EAAMD,IAAWC,EAAMD,GAC/B5kB,GAAQ,EAAI6kB,EAAMD,GAAWC,EAAMD,OAE7B,IAAKE,IAAqBrzB,GAOhC,MAAM,IAAI6D,MAAO,+DAAiEwvB,GALlF5sB,GAAM2sB,GAAQA,EAAMD,GACpB5kB,GAAQ6kB,EAAMD,GAAWC,EAAMD,EAMhC,CAOA,OALA5mB,EAAI,GAAMtJ,EAAGsJ,EAAI,GAAM,EAAGA,EAAI,GAAMhG,EAAIgG,EAAI,IAAO,EACnDA,EAAI,GAAM,EAAGA,EAAI,GAAMrJ,EAAGqJ,EAAI,GAAM/F,EAAI+F,EAAI,IAAO,EACnDA,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,IAAO9F,EAAI8F,EAAI,IAAOgC,EACpDhC,EAAI,GAAM,EAAGA,EAAI,GAAM,EAAGA,EAAI,KAAS,EAAGA,EAAI,IAAO,EAE9C9L,IAER,CAEA6yB,gBAAAA,CAAkBP,EAAMC,EAAOC,EAAKC,EAAQC,EAAMC,GAAgD,IAA3CC,EAAgBzuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG7E,GAEzE,MAAMwM,EAAK9L,KAAK0I,SACV8Q,EAAI,GAAQ+Y,EAAQD,GACpBrkB,EAAI,GAAQukB,EAAMC,GAClBK,EAAI,GAAQH,EAAMD,GAElBlwB,GAAM+vB,EAAQD,GAAS9Y,EACvB/W,GAAM+vB,EAAMC,GAAWxkB,EAE7B,IAAIsL,EAAGwZ,EAEP,GAAKH,IAAqBtzB,GAEzBia,GAAMoZ,EAAMD,GAASI,EACrBC,GAAS,EAAID,MAEP,IAAKF,IAAqBrzB,GAOhC,MAAM,IAAI6D,MAAO,gEAAkEwvB,GALnFrZ,EAAImZ,EAAOI,EACXC,GAAS,EAAID,CAMd,CAOA,OALAhnB,EAAI,GAAM,EAAI0N,EAAG1N,EAAI,GAAM,EAAIA,EAAI,GAAM,EAAKA,EAAI,KAAStJ,EAC3DsJ,EAAI,GAAM,EAAKA,EAAI,GAAM,EAAImC,EAAGnC,EAAI,GAAM,EAAKA,EAAI,KAASrJ,EAC5DqJ,EAAI,GAAM,EAAKA,EAAI,GAAM,EAAIA,EAAI,IAAOinB,EAAMjnB,EAAI,KAASyN,EAC3DzN,EAAI,GAAM,EAAKA,EAAI,GAAM,EAAIA,EAAI,IAAO,EAAIA,EAAI,IAAO,EAEhD9L,IAER,CAEAuK,MAAAA,CAAQsF,GAEP,MAAM/D,EAAK9L,KAAK0I,SACVsD,EAAK6D,EAAOnH,SAElB,IAAM,IAAI3H,EAAI,EAAGA,EAAI,GAAIA,IAExB,GAAK+K,EAAI/K,KAAQiL,EAAIjL,GAAM,OAAO,EAInC,OAAO,CAER,CAEAyJ,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE1B,IAAM,IAAIpD,EAAI,EAAGA,EAAI,GAAIA,IAExBf,KAAK0I,SAAU3H,GAAMF,EAAOE,EAAI0J,GAIjC,OAAOzK,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE7B,MAAM2H,EAAK9L,KAAK0I,SAsBhB,OApBA7H,EAAO4J,GAAWqB,EAAI,GACtBjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAE1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAE1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,GAAMqB,EAAI,GAC1BjL,EAAO4J,EAAS,IAAOqB,EAAI,IAC3BjL,EAAO4J,EAAS,IAAOqB,EAAI,IAE3BjL,EAAO4J,EAAS,IAAOqB,EAAI,IAC3BjL,EAAO4J,EAAS,IAAOqB,EAAI,IAC3BjL,EAAO4J,EAAS,IAAOqB,EAAI,IAC3BjL,EAAO4J,EAAS,IAAOqB,EAAI,IAEpBjL,CAER,EAID,MAAM6tB,GAAsB,IAAIzM,GAC1BgQ,GAAsB,IAAIrE,GAC1B8B,GAAsB,IAAIzN,GAAS,EAAG,EAAG,GACzC0N,GAAqB,IAAI1N,GAAS,EAAG,EAAG,GACxCxE,GAAmB,IAAIwE,GACvBvE,GAAmB,IAAIuE,GACvBtE,GAAmB,IAAIsE,GAEvB+Q,GAA0B,IAAIpF,GAC9BqF,GAA8B,IAAI1V,GAExC,MAAM2V,GAELtwB,WAAAA,GAAgE,IAAnDJ,EAAC2B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG1B,EAAC0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGoV,EAACpV,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG8B,EAAK9B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG+uB,GAAMC,cAE/CnzB,KAAKozB,SAAU,EAEfpzB,KAAKyd,GAAKjb,EACVxC,KAAK0d,GAAKjb,EACVzC,KAAK2d,GAAKpE,EACVvZ,KAAKwf,OAASvZ,CAEf,CAEA,KAAIzD,GAEH,OAAOxC,KAAKyd,EAEb,CAEA,KAAIjb,CAAGP,GAENjC,KAAKyd,GAAKxb,EACVjC,KAAKmf,mBAEN,CAEA,KAAI1c,GAEH,OAAOzC,KAAK0d,EAEb,CAEA,KAAIjb,CAAGR,GAENjC,KAAK0d,GAAKzb,EACVjC,KAAKmf,mBAEN,CAEA,KAAI5F,GAEH,OAAOvZ,KAAK2d,EAEb,CAEA,KAAIpE,CAAGtX,GAENjC,KAAK2d,GAAK1b,EACVjC,KAAKmf,mBAEN,CAEA,SAAIlZ,GAEH,OAAOjG,KAAKwf,MAEb,CAEA,SAAIvZ,CAAOhE,GAEVjC,KAAKwf,OAASvd,EACdjC,KAAKmf,mBAEN,CAEAvY,GAAAA,CAAKpE,EAAGC,EAAG8W,GAAyB,IAAtBtT,EAAK9B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGnE,KAAKwf,OAS1B,OAPAxf,KAAKyd,GAAKjb,EACVxC,KAAK0d,GAAKjb,EACVzC,KAAK2d,GAAKpE,EACVvZ,KAAKwf,OAASvZ,EAEdjG,KAAKmf,oBAEEnf,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKyd,GAAIzd,KAAK0d,GAAI1d,KAAK2d,GAAI3d,KAAKwf,OAE9D,CAEA7X,IAAAA,CAAM2X,GASL,OAPAtf,KAAKyd,GAAK6B,EAAM7B,GAChBzd,KAAK0d,GAAK4B,EAAM5B,GAChB1d,KAAK2d,GAAK2B,EAAM3B,GAChB3d,KAAKwf,OAASF,EAAME,OAEpBxf,KAAKmf,oBAEEnf,IAER,CAEAggB,qBAAAA,CAAuB1d,GAAwC,IAArC2D,EAAK9B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGnE,KAAKwf,OAAQD,IAAMpb,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,KAAAA,UAAA,GAIpD,MAAM2H,EAAKxJ,EAAEoG,SACPuR,EAAMnO,EAAI,GAAKoO,EAAMpO,EAAI,GAAKqO,EAAMrO,EAAI,GACxCsO,EAAMtO,EAAI,GAAKuO,EAAMvO,EAAI,GAAKwO,EAAMxO,EAAI,GACxCyO,EAAMzO,EAAI,GAAK0O,EAAM1O,EAAI,GAAK2O,EAAM3O,EAAI,IAE9C,OAAS7F,GAER,IAAK,MAEJjG,KAAK0d,GAAKpc,KAAK+xB,KAAMrxB,GAAOmY,GAAO,EAAG,IAEjC7Y,KAAK8C,IAAK+V,GAAQ,UAEtBna,KAAKyd,GAAKnc,KAAKkI,OAAS8Q,EAAKG,GAC7Bza,KAAK2d,GAAKrc,KAAKkI,OAAS0Q,EAAKD,KAI7Bja,KAAKyd,GAAKnc,KAAKkI,MAAOgR,EAAKH,GAC3Bra,KAAK2d,GAAK,GAIX,MAED,IAAK,MAEJ3d,KAAKyd,GAAKnc,KAAK+xB,MAAQrxB,GAAOsY,GAAO,EAAG,IAEnChZ,KAAK8C,IAAKkW,GAAQ,UAEtBta,KAAK0d,GAAKpc,KAAKkI,MAAO2Q,EAAKM,GAC3Bza,KAAK2d,GAAKrc,KAAKkI,MAAO4Q,EAAKC,KAI3Bra,KAAK0d,GAAKpc,KAAKkI,OAAS+Q,EAAKN,GAC7Bja,KAAK2d,GAAK,GAIX,MAED,IAAK,MAEJ3d,KAAKyd,GAAKnc,KAAK+xB,KAAMrxB,GAAOwY,GAAO,EAAG,IAEjClZ,KAAK8C,IAAKoW,GAAQ,UAEtBxa,KAAK0d,GAAKpc,KAAKkI,OAAS+Q,EAAKE,GAC7Bza,KAAK2d,GAAKrc,KAAKkI,OAAS0Q,EAAKG,KAI7Bra,KAAK0d,GAAK,EACV1d,KAAK2d,GAAKrc,KAAKkI,MAAO4Q,EAAKH,IAI5B,MAED,IAAK,MAEJja,KAAK0d,GAAKpc,KAAK+xB,MAAQrxB,GAAOuY,GAAO,EAAG,IAEnCjZ,KAAK8C,IAAKmW,GAAQ,UAEtBva,KAAKyd,GAAKnc,KAAKkI,MAAOgR,EAAKC,GAC3Bza,KAAK2d,GAAKrc,KAAKkI,MAAO4Q,EAAKH,KAI3Bja,KAAKyd,GAAK,EACVzd,KAAK2d,GAAKrc,KAAKkI,OAAS0Q,EAAKG,IAI9B,MAED,IAAK,MAEJra,KAAK2d,GAAKrc,KAAK+xB,KAAMrxB,GAAOoY,GAAO,EAAG,IAEjC9Y,KAAK8C,IAAKgW,GAAQ,UAEtBpa,KAAKyd,GAAKnc,KAAKkI,OAAS8Q,EAAKD,GAC7Bra,KAAK0d,GAAKpc,KAAKkI,OAAS+Q,EAAKN,KAI7Bja,KAAKyd,GAAK,EACVzd,KAAK0d,GAAKpc,KAAKkI,MAAO2Q,EAAKM,IAI5B,MAED,IAAK,MAEJza,KAAK2d,GAAKrc,KAAK+xB,MAAQrxB,GAAOkY,GAAO,EAAG,IAEnC5Y,KAAK8C,IAAK8V,GAAQ,UAEtBla,KAAKyd,GAAKnc,KAAKkI,MAAOgR,EAAKH,GAC3Bra,KAAK0d,GAAKpc,KAAKkI,MAAO2Q,EAAKF,KAI3Bja,KAAKyd,GAAKnc,KAAKkI,OAAS8Q,EAAKG,GAC7Bza,KAAK0d,GAAK,GAIX,MAED,QAEC7W,QAAQC,KAAM,uEAAyEb,GAQzF,OAJAjG,KAAKwf,OAASvZ,GAEE,IAAXsZ,GAAkBvf,KAAKmf,oBAErBnf,IAER,CAEAszB,iBAAAA,CAAmBztB,EAAGI,EAAOsZ,GAI5B,OAFAyT,GAAUxD,2BAA4B3pB,GAE/B7F,KAAKggB,sBAAuBgT,GAAW/sB,EAAOsZ,EAEtD,CAEAgU,cAAAA,CAAgB3rB,GAAyB,IAAtB3B,EAAK9B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGnE,KAAKwf,OAE/B,OAAOxf,KAAK4G,IAAKgB,EAAEpF,EAAGoF,EAAEnF,EAAGmF,EAAE2R,EAAGtT,EAEjC,CAEAutB,OAAAA,CAASC,GAMR,OAFAR,GAAc5T,aAAcrf,MAErBA,KAAKszB,kBAAmBL,GAAeQ,EAE/C,CAEAlpB,MAAAA,CAAQ+U,GAEP,OAASA,EAAM7B,KAAOzd,KAAKyd,IAAU6B,EAAM5B,KAAO1d,KAAK0d,IAAU4B,EAAM3B,KAAO3d,KAAK2d,IAAU2B,EAAME,SAAWxf,KAAKwf,MAEpH,CAEAhV,SAAAA,CAAW3J,GASV,OAPAb,KAAKyd,GAAK5c,EAAO,GACjBb,KAAK0d,GAAK7c,EAAO,GACjBb,KAAK2d,GAAK9c,EAAO,QACGd,IAAfc,EAAO,KAAoBb,KAAKwf,OAAS3e,EAAO,IAErDb,KAAKmf,oBAEEnf,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAO7B,OALAtD,EAAO4J,GAAWzK,KAAKyd,GACvB5c,EAAO4J,EAAS,GAAMzK,KAAK0d,GAC3B7c,EAAO4J,EAAS,GAAMzK,KAAK2d,GAC3B9c,EAAO4J,EAAS,GAAMzK,KAAKwf,OAEpB3e,CAER,CAEAkhB,SAAAA,CAAWC,GAIV,OAFAhiB,KAAKmf,kBAAoB6C,EAElBhiB,IAER,CAEAmf,iBAAAA,GAAqB,CAErB,EAAGlU,OAAOC,kBAEHlL,KAAKyd,SACLzd,KAAK0d,SACL1d,KAAK2d,SACL3d,KAAKwf,MAEZ,EAID0T,GAAMC,cAAgB,MAEtB,MAAMO,GAEL9wB,WAAAA,GAEC5C,KAAK2zB,KAAO,CAEb,CAEA/sB,GAAAA,CAAKgR,GAEJ5X,KAAK2zB,KAAS,GAAK/b,IAAkB,CAEtC,CAEAgc,MAAAA,CAAQhc,GAEP5X,KAAK2zB,MAAQ,GAAK/b,CAEnB,CAEAic,SAAAA,GAEC7zB,KAAK2zB,MAAO,CAEb,CAEAG,MAAAA,CAAQlc,GAEP5X,KAAK2zB,MAAQ,GAAK/b,CAEnB,CAEAmc,OAAAA,CAASnc,GAER5X,KAAK2zB,QAAY,GAAK/b,EAEvB,CAEAoc,UAAAA,GAECh0B,KAAK2zB,KAAO,CAEb,CAEAjf,IAAAA,CAAMuf,GAEL,OAAuC,KAA9Bj0B,KAAK2zB,KAAOM,EAAON,KAE7B,CAEAO,SAAAA,CAAWtc,GAEV,OAAgD,KAAvC5X,KAAK2zB,KAAS,GAAK/b,EAE7B,EAID,IAAIuc,GAAc,EAElB,MAAMC,GAAsB,IAAInS,GAC1BoS,GAAoB,IAAI9W,GACxB+W,GAAsB,IAAI1G,GAC1B2G,GAAwB,IAAItS,GAE5BuS,GAA4B,IAAIvS,GAChCwS,GAAyB,IAAIxS,GAC7ByS,GAA8B,IAAInX,GAElCoX,GAAuB,IAAI1S,GAAS,EAAG,EAAG,GAC1C2S,GAAuB,IAAI3S,GAAS,EAAG,EAAG,GAC1C4S,GAAuB,IAAI5S,GAAS,EAAG,EAAG,GAE1C6S,GAAc,CAAEj1B,KAAM,SACtBk1B,GAAgB,CAAEl1B,KAAM,WAExBm1B,GAAmB,CAAEn1B,KAAM,aAAco1B,MAAO,MAChDC,GAAqB,CAAEr1B,KAAM,eAAgBo1B,MAAO,MAE1D,MAAME,WAAiBx1B,GAEtBiD,WAAAA,GAEC4U,QAEAxX,KAAKo1B,YAAa,EAElB5hB,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAOkyB,OAE5Cn0B,KAAK6V,KAAOpU,KAEZzB,KAAKqQ,KAAO,GACZrQ,KAAKH,KAAO,WAEZG,KAAKq1B,OAAS,KACdr1B,KAAKunB,SAAW,GAEhBvnB,KAAK6vB,GAAKsF,GAASG,WAAW5tB,QAE9B,MAAM+pB,EAAW,IAAIxP,GACf9S,EAAW,IAAI+jB,GACf9T,EAAa,IAAI7B,GACjBjO,EAAQ,IAAI2S,GAAS,EAAG,EAAG,GAcjC9S,EAAS4S,WAZT,WAEC3C,EAAWC,aAAclQ,GAAU,EAEpC,IASAiQ,EAAW2C,WAPX,WAEC5S,EAASmkB,kBAAmBlU,OAAYrf,GAAW,EAEpD,IAKAyT,OAAO+hB,iBAAkBv1B,KAAM,CAC9ByxB,SAAU,CACT+D,cAAc,EACdC,YAAY,EACZxzB,MAAOwvB,GAERtiB,SAAU,CACTqmB,cAAc,EACdC,YAAY,EACZxzB,MAAOkN,GAERiQ,WAAY,CACXoW,cAAc,EACdC,YAAY,EACZxzB,MAAOmd,GAER9P,MAAO,CACNkmB,cAAc,EACdC,YAAY,EACZxzB,MAAOqN,GAERomB,gBAAiB,CAChBzzB,MAAO,IAAI2rB,IAEZ+H,aAAc,CACb1zB,MAAO,IAAIkJ,MAIbnL,KAAK6P,OAAS,IAAI+d,GAClB5tB,KAAKsjB,YAAc,IAAIsK,GAEvB5tB,KAAK+X,iBAAmBod,GAASS,2BAEjC51B,KAAK61B,sBAAwBV,GAASW,iCACtC91B,KAAK+1B,wBAAyB,EAE9B/1B,KAAKi0B,OAAS,IAAIP,GAClB1zB,KAAKg2B,SAAU,EAEfh2B,KAAKi2B,YAAa,EAClBj2B,KAAKk2B,eAAgB,EAErBl2B,KAAKm2B,eAAgB,EACrBn2B,KAAKo2B,YAAc,EAEnBp2B,KAAKq2B,WAAa,GAElBr2B,KAAKoY,SAAW,CAAC,CAElB,CAEAke,cAAAA,GAAgG,CAEhGC,aAAAA,GAA+F,CAE/FC,cAAAA,GAA4E,CAE5EC,aAAAA,GAA2E,CAE3E7c,YAAAA,CAAc/J,GAER7P,KAAK+X,kBAAmB/X,KAAKyY,eAElCzY,KAAK6P,OAAOrD,YAAaqD,GAEzB7P,KAAK6P,OAAOmiB,UAAWhyB,KAAKyxB,SAAUzxB,KAAKof,WAAYpf,KAAKsP,MAE7D,CAEA+S,eAAAA,CAAiBxc,GAIhB,OAFA7F,KAAKof,WAAW5S,YAAa3G,GAEtB7F,IAER,CAEA02B,wBAAAA,CAA0B5W,EAAMvW,GAI/BvJ,KAAKof,WAAWS,iBAAkBC,EAAMvW,EAEzC,CAEAotB,oBAAAA,CAAsBrX,GAErBtf,KAAKof,WAAWC,aAAcC,GAAO,EAEtC,CAEAsX,qBAAAA,CAAuBt0B,GAItBtC,KAAKof,WAAWY,sBAAuB1d,EAExC,CAEAu0B,yBAAAA,CAA2BhxB,GAI1B7F,KAAKof,WAAWzX,KAAM9B,EAEvB,CAEAixB,YAAAA,CAAchX,EAAMvW,GASnB,OAJA8qB,GAAIxU,iBAAkBC,EAAMvW,GAE5BvJ,KAAKof,WAAWhX,SAAUisB,IAEnBr0B,IAER,CAEA+2B,iBAAAA,CAAmBjX,EAAMvW,GAUxB,OAJA8qB,GAAIxU,iBAAkBC,EAAMvW,GAE5BvJ,KAAKof,WAAW5S,YAAa6nB,IAEtBr0B,IAER,CAEAg3B,OAAAA,CAASztB,GAER,OAAOvJ,KAAK82B,aAAcnC,GAAQprB,EAEnC,CAEA0tB,OAAAA,CAAS1tB,GAER,OAAOvJ,KAAK82B,aAAclC,GAAQrrB,EAEnC,CAEA2tB,OAAAA,CAAS3tB,GAER,OAAOvJ,KAAK82B,aAAcjC,GAAQtrB,EAEnC,CAEA4tB,eAAAA,CAAiBrX,EAAMsX,GAStB,OAJAhD,GAAMzsB,KAAMmY,GAAOuC,gBAAiBriB,KAAKof,YAEzCpf,KAAKyxB,SAAS5pB,IAAKusB,GAAM/rB,eAAgB+uB,IAElCp3B,IAER,CAEAq3B,UAAAA,CAAYD,GAEX,OAAOp3B,KAAKm3B,gBAAiBxC,GAAQyC,EAEtC,CAEAE,UAAAA,CAAYF,GAEX,OAAOp3B,KAAKm3B,gBAAiBvC,GAAQwC,EAEtC,CAEAG,UAAAA,CAAYH,GAEX,OAAOp3B,KAAKm3B,gBAAiBtC,GAAQuC,EAEtC,CAEAI,YAAAA,CAAc9Q,GAIb,OAFA1mB,KAAK4mB,mBAAmB,GAAM,GAEvBF,EAAO9M,aAAc5Z,KAAKsjB,YAElC,CAEAmU,YAAAA,CAAc/Q,GAIb,OAFA1mB,KAAK4mB,mBAAmB,GAAM,GAEvBF,EAAO9M,aAAc0a,GAAM3sB,KAAM3H,KAAKsjB,aAAcpV,SAE5D,CAEAgd,MAAAA,CAAQ1oB,EAAGC,EAAG8W,GAIR/W,EAAE0f,UAENqS,GAAQ5sB,KAAMnF,GAId+xB,GAAQ3tB,IAAKpE,EAAGC,EAAG8W,GAIpB,MAAM8b,EAASr1B,KAAKq1B,OAEpBr1B,KAAK4mB,mBAAmB,GAAM,GAE9B4N,GAAYxZ,sBAAuBhb,KAAKsjB,aAEnCtjB,KAAK03B,UAAY13B,KAAK23B,QAE1BrD,GAAMpJ,OAAQsJ,GAAaD,GAASv0B,KAAK6vB,IAIzCyE,GAAMpJ,OAAQqJ,GAASC,GAAax0B,KAAK6vB,IAI1C7vB,KAAKof,WAAWY,sBAAuBsU,IAElCe,IAEJf,GAAM9F,gBAAiB6G,EAAO/R,aAC9B+Q,GAAIrU,sBAAuBsU,IAC3Bt0B,KAAKof,WAAW5S,YAAa6nB,GAAInmB,UAInC,CAEArG,GAAAA,CAAKoe,GAEJ,GAAK9hB,UAAUlD,OAAS,EAAI,CAE3B,IAAM,IAAIF,EAAI,EAAGA,EAAIoD,UAAUlD,OAAQF,IAEtCf,KAAK6H,IAAK1D,UAAWpD,IAItB,OAAOf,IAER,CAEA,OAAKimB,IAAWjmB,MAEf6G,QAAQ+wB,MAAO,kEAAoE3R,GAC5EjmB,OAIHimB,GAAUA,EAAOmP,YAErBnP,EAAO4R,mBACP5R,EAAOoP,OAASr1B,KAChBA,KAAKunB,SAASnnB,KAAM6lB,GAEpBA,EAAOvlB,cAAeo0B,IAEtBE,GAAiBC,MAAQhP,EACzBjmB,KAAKU,cAAes0B,IACpBA,GAAiBC,MAAQ,MAIzBpuB,QAAQ+wB,MAAO,gEAAiE3R,GAI1EjmB,KAER,CAEA83B,MAAAA,CAAQ7R,GAEP,GAAK9hB,UAAUlD,OAAS,EAAI,CAE3B,IAAM,IAAIF,EAAI,EAAGA,EAAIoD,UAAUlD,OAAQF,IAEtCf,KAAK83B,OAAQ3zB,UAAWpD,IAIzB,OAAOf,IAER,CAEA,MAAMQ,EAAQR,KAAKunB,SAASpnB,QAAS8lB,GAerC,OAbiB,IAAZzlB,IAEJylB,EAAOoP,OAAS,KAChBr1B,KAAKunB,SAAS9mB,OAAQD,EAAO,GAE7BylB,EAAOvlB,cAAeq0B,IAEtBG,GAAmBD,MAAQhP,EAC3BjmB,KAAKU,cAAew0B,IACpBA,GAAmBD,MAAQ,MAIrBj1B,IAER,CAEA63B,gBAAAA,GAEC,MAAMxC,EAASr1B,KAAKq1B,OAQpB,OANgB,OAAXA,GAEJA,EAAOyC,OAAQ93B,MAITA,IAER,CAEAgd,KAAAA,GAEC,OAAOhd,KAAK83B,UAAY93B,KAAKunB,SAE9B,CAEAwQ,MAAAA,CAAQ9R,GAgCP,OA1BAjmB,KAAK4mB,mBAAmB,GAAM,GAE9B0N,GAAM3sB,KAAM3H,KAAKsjB,aAAcpV,SAER,OAAlB+X,EAAOoP,SAEXpP,EAAOoP,OAAOzO,mBAAmB,GAAM,GAEvC0N,GAAMlsB,SAAU6d,EAAOoP,OAAO/R,cAI/B2C,EAAOrM,aAAc0a,IAErBrO,EAAO4R,mBACP5R,EAAOoP,OAASr1B,KAChBA,KAAKunB,SAASnnB,KAAM6lB,GAEpBA,EAAOW,mBAAmB,GAAO,GAEjCX,EAAOvlB,cAAeo0B,IAEtBE,GAAiBC,MAAQhP,EACzBjmB,KAAKU,cAAes0B,IACpBA,GAAiBC,MAAQ,KAElBj1B,IAER,CAEAg4B,aAAAA,CAAeC,GAEd,OAAOj4B,KAAKk4B,oBAAqB,KAAMD,EAExC,CAEAE,eAAAA,CAAiB9nB,GAEhB,OAAOrQ,KAAKk4B,oBAAqB,OAAQ7nB,EAE1C,CAEA6nB,mBAAAA,CAAqB7nB,EAAMpO,GAE1B,GAAKjC,KAAMqQ,KAAWpO,EAAQ,OAAOjC,KAErC,IAAM,IAAIe,EAAI,EAAGC,EAAIhB,KAAKunB,SAAStmB,OAAQF,EAAIC,EAAGD,IAAO,CAExD,MACMklB,EADQjmB,KAAKunB,SAAUxmB,GACRm3B,oBAAqB7nB,EAAMpO,GAEhD,QAAgBlC,IAAXkmB,EAEJ,OAAOA,CAIT,CAID,CAEAmS,oBAAAA,CAAsB/nB,EAAMpO,GAAqB,IAAdo2B,EAAMl0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEtCnE,KAAMqQ,KAAWpO,GAAQo2B,EAAOj4B,KAAMJ,MAE3C,MAAMunB,EAAWvnB,KAAKunB,SAEtB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAE5CwmB,EAAUxmB,GAAIq3B,qBAAsB/nB,EAAMpO,EAAOo2B,GAIlD,OAAOA,CAER,CAEAC,gBAAAA,CAAkB13B,GAIjB,OAFAZ,KAAK4mB,mBAAmB,GAAM,GAEvBhmB,EAAOoa,sBAAuBhb,KAAKsjB,YAE3C,CAEAiV,kBAAAA,CAAoB33B,GAMnB,OAJAZ,KAAK4mB,mBAAmB,GAAM,GAE9B5mB,KAAKsjB,YAAY0O,UAAWwC,GAAa5zB,EAAQ6zB,IAE1C7zB,CAER,CAEA43B,aAAAA,CAAe53B,GAMd,OAJAZ,KAAK4mB,mBAAmB,GAAM,GAE9B5mB,KAAKsjB,YAAY0O,UAAWwC,GAAaE,GAAe9zB,GAEjDA,CAER,CAEA63B,iBAAAA,CAAmB73B,GAElBZ,KAAK4mB,mBAAmB,GAAM,GAE9B,MAAMne,EAAIzI,KAAKsjB,YAAY5a,SAE3B,OAAO9H,EAAOgG,IAAK6B,EAAG,GAAKA,EAAG,GAAKA,EAAG,KAAOpF,WAE9C,CAEAq1B,OAAAA,GAAwC,CAExCC,QAAAA,CAAU3W,GAETA,EAAUhiB,MAEV,MAAMunB,EAAWvnB,KAAKunB,SAEtB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAE5CwmB,EAAUxmB,GAAI43B,SAAU3W,EAI1B,CAEA4W,eAAAA,CAAiB5W,GAEhB,IAAsB,IAAjBhiB,KAAKg2B,QAAoB,OAE9BhU,EAAUhiB,MAEV,MAAMunB,EAAWvnB,KAAKunB,SAEtB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAE5CwmB,EAAUxmB,GAAI63B,gBAAiB5W,EAIjC,CAEA6W,iBAAAA,CAAmB7W,GAElB,MAAMqT,EAASr1B,KAAKq1B,OAEJ,OAAXA,IAEJrT,EAAUqT,GAEVA,EAAOwD,kBAAmB7W,GAI5B,CAEAvJ,YAAAA,GAECzY,KAAK6P,OAAO4f,QAASzvB,KAAKyxB,SAAUzxB,KAAKof,WAAYpf,KAAKsP,OAE1DtP,KAAK+1B,wBAAyB,CAE/B,CAEA+C,iBAAAA,CAAmBC,GAEb/4B,KAAK+X,kBAAmB/X,KAAKyY,gBAE7BzY,KAAK+1B,wBAA0BgD,MAEC,IAA/B/4B,KAAK61B,wBAEY,OAAhB71B,KAAKq1B,OAETr1B,KAAKsjB,YAAY3b,KAAM3H,KAAK6P,QAI5B7P,KAAKsjB,YAAY/W,iBAAkBvM,KAAKq1B,OAAO/R,YAAatjB,KAAK6P,SAMnE7P,KAAK+1B,wBAAyB,EAE9BgD,GAAQ,GAMT,MAAMxR,EAAWvnB,KAAKunB,SAEtB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAAO,CAErCwmB,EAAUxmB,GAElB+3B,kBAAmBC,EAE1B,CAED,CAEAnS,iBAAAA,CAAmBoS,EAAeC,GAEjC,MAAM5D,EAASr1B,KAAKq1B,OA0BpB,IAxBuB,IAAlB2D,GAAqC,OAAX3D,GAE9BA,EAAOzO,mBAAmB,GAAM,GAI5B5mB,KAAK+X,kBAAmB/X,KAAKyY,gBAEE,IAA/BzY,KAAK61B,wBAEY,OAAhB71B,KAAKq1B,OAETr1B,KAAKsjB,YAAY3b,KAAM3H,KAAK6P,QAI5B7P,KAAKsjB,YAAY/W,iBAAkBvM,KAAKq1B,OAAO/R,YAAatjB,KAAK6P,UAQ3C,IAAnBopB,EAA0B,CAE9B,MAAM1R,EAAWvnB,KAAKunB,SAEtB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAAO,CAErCwmB,EAAUxmB,GAElB6lB,mBAAmB,GAAO,EAEjC,CAED,CAED,CAEA3Q,MAAAA,CAAQC,GAGP,MAAMC,OAA0BpW,IAATmW,GAAsC,kBAATA,EAE9CG,EAAS,CAAC,EAKXF,IAGJD,EAAO,CACNgjB,WAAY,CAAC,EACbC,UAAW,CAAC,EACZtgB,SAAU,CAAC,EACXzC,OAAQ,CAAC,EACTgjB,OAAQ,CAAC,EACTC,UAAW,CAAC,EACZhD,WAAY,CAAC,EACbiD,MAAO,CAAC,GAGTjjB,EAAOyC,SAAW,CACjB/C,QAAS,IACTlW,KAAM,SACNkZ,UAAW,oBAOb,MAAMkN,EAAS,CAAC,EAoFhB,SAASsT,EAAWC,EAASC,GAQ5B,YANiC15B,IAA5By5B,EAASC,EAAQ5jB,QAErB2jB,EAASC,EAAQ5jB,MAAS4jB,EAAQxjB,OAAQC,IAIpCujB,EAAQ5jB,IAEhB,CAEA,GA9FAoQ,EAAOpQ,KAAO7V,KAAK6V,KACnBoQ,EAAOpmB,KAAOG,KAAKH,KAEA,KAAdG,KAAKqQ,OAAc4V,EAAO5V,KAAOrQ,KAAKqQ,OAClB,IAApBrQ,KAAKi2B,aAAsBhQ,EAAOgQ,YAAa,IACxB,IAAvBj2B,KAAKk2B,gBAAyBjQ,EAAOiQ,eAAgB,IACpC,IAAjBl2B,KAAKg2B,UAAoB/P,EAAO+P,SAAU,IACnB,IAAvBh2B,KAAKm2B,gBAA0BlQ,EAAOkQ,eAAgB,GACjC,IAArBn2B,KAAKo2B,cAAoBnQ,EAAOmQ,YAAcp2B,KAAKo2B,aACnD5iB,OAAOyF,KAAMjZ,KAAKoY,UAAWnX,OAAS,IAAIglB,EAAO7N,SAAWpY,KAAKoY,UAEtE6N,EAAOgO,OAASj0B,KAAKi0B,OAAON,KAC5B1N,EAAOpW,OAAS7P,KAAK6P,OAAOnF,UAC5Bub,EAAO4J,GAAK7vB,KAAK6vB,GAAGnlB,WAEW,IAA1B1K,KAAK+X,mBAA6BkO,EAAOlO,kBAAmB,GAI5D/X,KAAKgnB,kBAETf,EAAOpmB,KAAO,gBACdomB,EAAOjK,MAAQhc,KAAKgc,MACpBiK,EAAOyT,eAAiB15B,KAAK05B,eAAezjB,SAChB,OAAvBjW,KAAK25B,gBAAyB1T,EAAO0T,cAAgB35B,KAAK25B,cAAc1jB,WAIzEjW,KAAK45B,gBAET3T,EAAOpmB,KAAO,cACdomB,EAAO4T,uBAAyB75B,KAAK65B,uBACrC5T,EAAO6T,YAAc95B,KAAK85B,YAE1B7T,EAAO8T,WAAa/5B,KAAKg6B,YACzB/T,EAAOgU,eAAiBj6B,KAAKk6B,gBAE7BjU,EAAOkU,WAAan6B,KAAKo6B,YACzBnU,EAAOoU,OAASr6B,KAAKs6B,QACrBrU,EAAOsU,OAASv6B,KAAKw6B,QAAQC,KAAKC,IAAS,CAC1CC,eAAgBD,EAAMC,eACtBC,OAAQF,EAAMtU,IAAIlkB,IAAIwI,UACtBmwB,OAAQH,EAAMtU,IAAIjkB,IAAIuI,UAEtBowB,kBAAmBJ,EAAMI,kBACzBC,aAAcL,EAAM7S,OAAOrD,OAC3BwW,aAAcN,EAAM7S,OAAO7c,OAAON,cAGnCub,EAAOgV,iBAAmBj7B,KAAKk7B,kBAC/BjV,EAAOkV,eAAiBn7B,KAAKo7B,gBAC7BnV,EAAOoV,cAAgBr7B,KAAKs7B,eAE5BrV,EAAOsV,oBAAsBv7B,KAAKw7B,qBAClCvV,EAAOwV,cAAgBz7B,KAAK07B,eAE5BzV,EAAO0V,gBAAkB37B,KAAK47B,iBAAiB3lB,OAAQC,GAE1B,OAAxBlW,KAAK67B,iBAA0B5V,EAAO6V,cAAgB97B,KAAK67B,eAAe5lB,OAAQC,IAE1D,OAAxBlW,KAAK+7B,iBAET9V,EAAO8V,eAAiB,CACvB/wB,OAAQib,EAAO8V,eAAe/wB,OAAON,UACrC8Z,OAAQyB,EAAO8V,eAAevX,SAKN,OAArBxkB,KAAKmnB,cAETlB,EAAOkB,YAAc,CACpBjlB,IAAK+jB,EAAOkB,YAAYjlB,IAAIwI,UAC5BvI,IAAK8jB,EAAOkB,YAAYhlB,IAAIuI,aAqB1B1K,KAAKg8B,QAEJh8B,KAAKi8B,aAEJj8B,KAAKi8B,WAAWC,QAEpBjW,EAAOgW,WAAaj8B,KAAKi8B,WAAWhmB,SAEzBjW,KAAKi8B,WAAWxkB,YAE3BwO,EAAOgW,WAAaj8B,KAAKi8B,WAAWhmB,OAAQC,GAAOL,OAMhD7V,KAAKm8B,aAAen8B,KAAKm8B,YAAY1kB,YAAwD,IAA3CzX,KAAKm8B,YAAY5jB,wBAEvE0N,EAAOkW,YAAcn8B,KAAKm8B,YAAYlmB,OAAQC,GAAOL,WAIhD,GAAK7V,KAAKinB,QAAUjnB,KAAKo8B,QAAUp8B,KAAKq8B,SAAW,CAEzDpW,EAAOY,SAAW0S,EAAWrjB,EAAKgjB,WAAYl5B,KAAK6mB,UAEnD,MAAMyV,EAAat8B,KAAK6mB,SAASyV,WAEjC,QAAoBv8B,IAAfu8B,QAAkDv8B,IAAtBu8B,EAAWlD,OAAuB,CAElE,MAAMA,EAASkD,EAAWlD,OAE1B,GAAK7iB,MAAMC,QAAS4iB,GAEnB,IAAM,IAAIr4B,EAAI,EAAGC,EAAIo4B,EAAOn4B,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMw7B,EAAQnD,EAAQr4B,GAEtBw4B,EAAWrjB,EAAKkjB,OAAQmD,EAEzB,MAIAhD,EAAWrjB,EAAKkjB,OAAQA,EAI1B,CAED,CAiBA,GAfKp5B,KAAKw8B,gBAETvW,EAAOwW,SAAWz8B,KAAKy8B,SACvBxW,EAAOyW,WAAa18B,KAAK08B,WAAWhyB,eAEb3K,IAAlBC,KAAK28B,WAETpD,EAAWrjB,EAAKmjB,UAAWr5B,KAAK28B,UAEhC1W,EAAO0W,SAAW38B,KAAK28B,SAAS9mB,YAMX9V,IAAlBC,KAAK48B,SAET,GAAKrmB,MAAMC,QAASxW,KAAK48B,UAAa,CAErC,MAAMC,EAAQ,GAEd,IAAM,IAAI97B,EAAI,EAAGC,EAAIhB,KAAK48B,SAAS37B,OAAQF,EAAIC,EAAGD,IAEjD87B,EAAMz8B,KAAMm5B,EAAWrjB,EAAKijB,UAAWn5B,KAAK48B,SAAU77B,KAIvDklB,EAAO2W,SAAWC,CAEnB,MAEC5W,EAAO2W,SAAWrD,EAAWrjB,EAAKijB,UAAWn5B,KAAK48B,UAQpD,GAAK58B,KAAKunB,SAAStmB,OAAS,EAAI,CAE/BglB,EAAOsB,SAAW,GAElB,IAAM,IAAIxmB,EAAI,EAAGA,EAAIf,KAAKunB,SAAStmB,OAAQF,IAE1CklB,EAAOsB,SAASnnB,KAAMJ,KAAKunB,SAAUxmB,GAAIkV,OAAQC,GAAO+P,OAI1D,CAIA,GAAKjmB,KAAKq2B,WAAWp1B,OAAS,EAAI,CAEjCglB,EAAOoQ,WAAa,GAEpB,IAAM,IAAIt1B,EAAI,EAAGA,EAAIf,KAAKq2B,WAAWp1B,OAAQF,IAAO,CAEnD,MAAM+7B,EAAY98B,KAAKq2B,WAAYt1B,GAEnCklB,EAAOoQ,WAAWj2B,KAAMm5B,EAAWrjB,EAAKmgB,WAAYyG,GAErD,CAED,CAEA,GAAK3mB,EAAe,CAEnB,MAAM+iB,EAAa6D,EAAkB7mB,EAAKgjB,YACpCC,EAAY4D,EAAkB7mB,EAAKijB,WACnCtgB,EAAWkkB,EAAkB7mB,EAAK2C,UAClCzC,EAAS2mB,EAAkB7mB,EAAKE,QAChCgjB,EAAS2D,EAAkB7mB,EAAKkjB,QAChCC,EAAY0D,EAAkB7mB,EAAKmjB,WACnChD,EAAa0G,EAAkB7mB,EAAKmgB,YACpCiD,EAAQyD,EAAkB7mB,EAAKojB,OAEhCJ,EAAWj4B,OAAS,IAAIoV,EAAO6iB,WAAaA,GAC5CC,EAAUl4B,OAAS,IAAIoV,EAAO8iB,UAAYA,GAC1CtgB,EAAS5X,OAAS,IAAIoV,EAAOwC,SAAWA,GACxCzC,EAAOnV,OAAS,IAAIoV,EAAOD,OAASA,GACpCgjB,EAAOn4B,OAAS,IAAIoV,EAAO+iB,OAASA,GACpCC,EAAUp4B,OAAS,IAAIoV,EAAOgjB,UAAYA,GAC1ChD,EAAWp1B,OAAS,IAAIoV,EAAOggB,WAAaA,GAC5CiD,EAAMr4B,OAAS,IAAIoV,EAAOijB,MAAQA,EAExC,CAIA,OAFAjjB,EAAO4P,OAASA,EAET5P,EAKP,SAAS0mB,EAAkBC,GAE1B,MAAMC,EAAS,GACf,IAAM,MAAMC,KAAOF,EAAQ,CAE1B,MAAMxnB,EAAOwnB,EAAOE,UACb1nB,EAAKsD,SACZmkB,EAAO78B,KAAMoV,EAEd,CAEA,OAAOynB,CAER,CAED,CAEAv1B,KAAAA,CAAOy1B,GAEN,OAAO,IAAIn9B,KAAK4C,aAAc+E,KAAM3H,KAAMm9B,EAE3C,CAEAx1B,IAAAA,CAAM+P,GAA2B,IAAnBylB,IAASh5B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,KAAAA,UAAA,GAgCtB,GA9BAnE,KAAKqQ,KAAOqH,EAAOrH,KAEnBrQ,KAAK6vB,GAAGloB,KAAM+P,EAAOmY,IAErB7vB,KAAKyxB,SAAS9pB,KAAM+P,EAAO+Z,UAC3BzxB,KAAKmP,SAASlJ,MAAQyR,EAAOvI,SAASlJ,MACtCjG,KAAKof,WAAWzX,KAAM+P,EAAO0H,YAC7Bpf,KAAKsP,MAAM3H,KAAM+P,EAAOpI,OAExBtP,KAAK6P,OAAOlI,KAAM+P,EAAO7H,QACzB7P,KAAKsjB,YAAY3b,KAAM+P,EAAO4L,aAE9BtjB,KAAK+X,iBAAmBL,EAAOK,iBAE/B/X,KAAK61B,sBAAwBne,EAAOme,sBACpC71B,KAAK+1B,uBAAyBre,EAAOqe,uBAErC/1B,KAAKi0B,OAAON,KAAOjc,EAAOuc,OAAON,KACjC3zB,KAAKg2B,QAAUte,EAAOse,QAEtBh2B,KAAKi2B,WAAave,EAAOue,WACzBj2B,KAAKk2B,cAAgBxe,EAAOwe,cAE5Bl2B,KAAKm2B,cAAgBze,EAAOye,cAC5Bn2B,KAAKo2B,YAAc1e,EAAO0e,YAE1Bp2B,KAAKq2B,WAAa3e,EAAO2e,WAAWv1B,QAEpCd,KAAKoY,SAAWM,KAAKC,MAAOD,KAAKE,UAAWlB,EAAOU,YAEhC,IAAd+kB,EAEJ,IAAM,IAAIp8B,EAAI,EAAGA,EAAI2W,EAAO6P,SAAStmB,OAAQF,IAAO,CAEnD,MAAMk0B,EAAQvd,EAAO6P,SAAUxmB,GAC/Bf,KAAK6H,IAAKotB,EAAMvtB,QAEjB,CAID,OAAO1H,IAER,EAIDm1B,GAASG,WAA2B,IAAIrT,GAAS,EAAG,EAAG,GACvDkT,GAASS,4BAA6B,EACtCT,GAASW,kCAAmC,EAE5C,MAAMsH,GAAsB,IAAInb,GAC1Bob,GAAsB,IAAIpb,GAC1Bqb,GAAsB,IAAIrb,GAC1Bsb,GAAsB,IAAItb,GAE1Bub,GAAqB,IAAIvb,GACzBwb,GAAqB,IAAIxb,GACzByb,GAAqB,IAAIzb,GACzB0b,GAAqB,IAAI1b,GACzB2b,GAAqB,IAAI3b,GACzB4b,GAAqB,IAAI5b,GAEzB6b,GAAqB,IAAIxkB,GACzBykB,GAAqB,IAAIzkB,GACzB0kB,GAAqB,IAAI1kB,GAE/B,MAAM2kB,GAELr7B,WAAAA,GAAuE,IAA1DkD,EAAC3B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAWlc,EAAC5B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAWjc,EAAC7B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAE1DjiB,KAAK8F,EAAIA,EACT9F,KAAK+F,EAAIA,EACT/F,KAAKgG,EAAIA,CAEV,CAEA,gBAAOk4B,CAAWp4B,EAAGC,EAAGC,EAAGpF,GAE1BA,EAAOuH,WAAYnC,EAAGD,GACtBq3B,GAAMj1B,WAAYrC,EAAGC,GACrBnF,EAAOuI,MAAOi0B,IAEd,MAAMe,EAAiBv9B,EAAOwI,WAC9B,OAAK+0B,EAAiB,EAEdv9B,EAAOyH,eAAgB,EAAI/G,KAAK+H,KAAM80B,IAIvCv9B,EAAOgG,IAAK,EAAG,EAAG,EAE1B,CAIA,mBAAOw3B,CAAc5X,EAAO1gB,EAAGC,EAAGC,EAAGpF,GAEpCw8B,GAAMj1B,WAAYnC,EAAGF,GACrBu3B,GAAMl1B,WAAYpC,EAAGD,GACrBw3B,GAAMn1B,WAAYqe,EAAO1gB,GAEzB,MAAMu4B,EAAQjB,GAAMl0B,IAAKk0B,IACnBkB,EAAQlB,GAAMl0B,IAAKm0B,IACnBkB,EAAQnB,GAAMl0B,IAAKo0B,IACnBkB,EAAQnB,GAAMn0B,IAAKm0B,IACnBoB,EAAQpB,GAAMn0B,IAAKo0B,IAEnBoB,EAAUL,EAAQG,EAAQF,EAAQA,EAGxC,GAAe,IAAVI,EAGJ,OADA99B,EAAOgG,IAAK,EAAG,EAAG,GACX,KAIR,MAAM+3B,EAAW,EAAID,EACfxZ,GAAMsZ,EAAQD,EAAQD,EAAQG,GAAUE,EACxC/2B,GAAMy2B,EAAQI,EAAQH,EAAQC,GAAUI,EAG9C,OAAO/9B,EAAOgG,IAAK,EAAIse,EAAItd,EAAGA,EAAGsd,EAElC,CAEA,oBAAOsC,CAAehB,EAAO1gB,EAAGC,EAAGC,GAGlC,OAAoD,OAA/ChG,KAAKo+B,aAAc5X,EAAO1gB,EAAGC,EAAGC,EAAGu3B,MAM/BA,GAAM/6B,GAAK,GAAS+6B,GAAM96B,GAAK,GAAW86B,GAAM/6B,EAAI+6B,GAAM96B,GAAO,EAE3E,CAEA,uBAAOm8B,CAAkBpY,EAAOgD,EAAIC,EAAIoV,EAAIx0B,EAAIC,EAAIw0B,EAAIl+B,GAEvD,OAAuD,OAAlDZ,KAAKo+B,aAAc5X,EAAOgD,EAAIC,EAAIoV,EAAItB,KAE1C38B,EAAO4B,EAAI,EACX5B,EAAO6B,EAAI,EACN,MAAO7B,IAASA,EAAO2Y,EAAI,GAC3B,MAAO3Y,IAASA,EAAO4Y,EAAI,GACzB,OAIR5Y,EAAOwG,UAAW,GAClBxG,EAAOoH,gBAAiBqC,EAAIkzB,GAAM/6B,GAClC5B,EAAOoH,gBAAiBsC,EAAIizB,GAAM96B,GAClC7B,EAAOoH,gBAAiB82B,EAAIvB,GAAMhkB,GAE3B3Y,EAER,CAEA,+BAAOm+B,CAA0BC,EAAMC,EAAIC,EAAIC,EAAIC,EAAWx+B,GAe7D,OAbAk9B,GAAK12B,UAAW,GAChB22B,GAAK32B,UAAW,GAChB42B,GAAK52B,UAAW,GAEhB02B,GAAKnzB,oBAAqBq0B,EAAMC,GAChClB,GAAKpzB,oBAAqBq0B,EAAME,GAChClB,GAAKrzB,oBAAqBq0B,EAAMG,GAEhCv+B,EAAOwG,UAAW,GAClBxG,EAAOoH,gBAAiB81B,GAAMsB,EAAU58B,GACxC5B,EAAOoH,gBAAiB+1B,GAAMqB,EAAU38B,GACxC7B,EAAOoH,gBAAiBg2B,GAAMoB,EAAU7lB,GAEjC3Y,CAER,CAEA,oBAAOy+B,CAAev5B,EAAGC,EAAGC,EAAG+kB,GAM9B,OAJAqS,GAAMj1B,WAAYnC,EAAGD,GACrBs3B,GAAMl1B,WAAYrC,EAAGC,GAGZq3B,GAAMj0B,MAAOk0B,IAAQn0B,IAAK6hB,GAAc,CAElD,CAEAnkB,GAAAA,CAAKd,EAAGC,EAAGC,GAMV,OAJAhG,KAAK8F,EAAE6B,KAAM7B,GACb9F,KAAK+F,EAAE4B,KAAM5B,GACb/F,KAAKgG,EAAE2B,KAAM3B,GAENhG,IAER,CAEAs/B,uBAAAA,CAAyB1Z,EAAQ2Z,EAAIN,EAAIC,GAMxC,OAJAl/B,KAAK8F,EAAE6B,KAAMie,EAAQ2Z,IACrBv/B,KAAK+F,EAAE4B,KAAMie,EAAQqZ,IACrBj/B,KAAKgG,EAAE2B,KAAMie,EAAQsZ,IAEdl/B,IAER,CAEAw/B,0BAAAA,CAA4B50B,EAAW20B,EAAIN,EAAIC,GAM9C,OAJAl/B,KAAK8F,EAAE6E,oBAAqBC,EAAW20B,GACvCv/B,KAAK+F,EAAE4E,oBAAqBC,EAAWq0B,GACvCj/B,KAAKgG,EAAE2E,oBAAqBC,EAAWs0B,GAEhCl/B,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAMwgB,GAML,OAJAnoB,KAAK8F,EAAE6B,KAAMwgB,EAASriB,GACtB9F,KAAK+F,EAAE4B,KAAMwgB,EAASpiB,GACtB/F,KAAKgG,EAAE2B,KAAMwgB,EAASniB,GAEfhG,IAER,CAEAy/B,OAAAA,GAKC,OAHArC,GAAMj1B,WAAYnI,KAAKgG,EAAGhG,KAAK+F,GAC/Bs3B,GAAMl1B,WAAYnI,KAAK8F,EAAG9F,KAAK+F,GAEQ,GAAhCq3B,GAAMj0B,MAAOk0B,IAAQp8B,QAE7B,CAEAy+B,WAAAA,CAAa9+B,GAEZ,OAAOA,EAAOmH,WAAY/H,KAAK8F,EAAG9F,KAAK+F,GAAI8B,IAAK7H,KAAKgG,GAAIqC,eAAgB,EAAI,EAE9E,CAEA61B,SAAAA,CAAWt9B,GAEV,OAAOq9B,GAASC,UAAWl+B,KAAK8F,EAAG9F,KAAK+F,EAAG/F,KAAKgG,EAAGpF,EAEpD,CAEA++B,QAAAA,CAAU/+B,GAET,OAAOA,EAAOg/B,sBAAuB5/B,KAAK8F,EAAG9F,KAAK+F,EAAG/F,KAAKgG,EAE3D,CAEAo4B,YAAAA,CAAc5X,EAAO5lB,GAEpB,OAAOq9B,GAASG,aAAc5X,EAAOxmB,KAAK8F,EAAG9F,KAAK+F,EAAG/F,KAAKgG,EAAGpF,EAE9D,CAEAg+B,gBAAAA,CAAkBpY,EAAOnc,EAAIC,EAAIw0B,EAAIl+B,GAEpC,OAAOq9B,GAASW,iBAAkBpY,EAAOxmB,KAAK8F,EAAG9F,KAAK+F,EAAG/F,KAAKgG,EAAGqE,EAAIC,EAAIw0B,EAAIl+B,EAE9E,CAEA4mB,aAAAA,CAAehB,GAEd,OAAOyX,GAASzW,cAAehB,EAAOxmB,KAAK8F,EAAG9F,KAAK+F,EAAG/F,KAAKgG,EAE5D,CAEAq5B,aAAAA,CAAetU,GAEd,OAAOkT,GAASoB,cAAer/B,KAAK8F,EAAG9F,KAAK+F,EAAG/F,KAAKgG,EAAG+kB,EAExD,CAEApD,aAAAA,CAAevB,GAEd,OAAOA,EAAI8B,mBAAoBloB,KAEhC,CAEAorB,mBAAAA,CAAqB0H,EAAGlyB,GAEvB,MAAMkF,EAAI9F,KAAK8F,EAAGC,EAAI/F,KAAK+F,EAAGC,EAAIhG,KAAKgG,EACvC,IAAI4B,EAAG4R,EAQPgkB,GAAKr1B,WAAYpC,EAAGD,GACpB23B,GAAKt1B,WAAYnC,EAAGF,GACpB63B,GAAKx1B,WAAY2qB,EAAGhtB,GACpB,MAAMlE,EAAK47B,GAAKt0B,IAAKy0B,IACf97B,EAAK47B,GAAKv0B,IAAKy0B,IACrB,GAAK/7B,GAAM,GAAKC,GAAM,EAGrB,OAAOjB,EAAO+G,KAAM7B,GAIrB83B,GAAKz1B,WAAY2qB,EAAG/sB,GACpB,MAAMjE,EAAK07B,GAAKt0B,IAAK00B,IACfiC,EAAKpC,GAAKv0B,IAAK00B,IACrB,GAAK97B,GAAM,GAAK+9B,GAAM/9B,EAGrB,OAAOlB,EAAO+G,KAAM5B,GAIrB,MAAM+5B,EAAKl+B,EAAKi+B,EAAK/9B,EAAKD,EAC1B,GAAKi+B,GAAM,GAAKl+B,GAAM,GAAKE,GAAM,EAIhC,OAFA8F,EAAIhG,GAAOA,EAAKE,GAETlB,EAAO+G,KAAM7B,GAAIkC,gBAAiBw1B,GAAM51B,GAIhDi2B,GAAK11B,WAAY2qB,EAAG9sB,GACpB,MAAM+5B,EAAKvC,GAAKt0B,IAAK20B,IACfmC,EAAKvC,GAAKv0B,IAAK20B,IACrB,GAAKmC,GAAM,GAAKD,GAAMC,EAGrB,OAAOp/B,EAAO+G,KAAM3B,GAIrB,MAAMi6B,EAAKF,EAAKl+B,EAAKD,EAAKo+B,EAC1B,GAAKC,GAAM,GAAKp+B,GAAM,GAAKm+B,GAAM,EAIhC,OAFAxmB,EAAI3X,GAAOA,EAAKm+B,GAETp/B,EAAO+G,KAAM7B,GAAIkC,gBAAiBy1B,GAAMjkB,GAIhD,MAAM0mB,EAAKp+B,EAAKk+B,EAAKD,EAAKF,EAC1B,GAAKK,GAAM,GAAOL,EAAK/9B,GAAQ,GAAOi+B,EAAKC,GAAQ,EAKlD,OAHAtC,GAAKv1B,WAAYnC,EAAGD,GACpByT,GAAMqmB,EAAK/9B,IAAW+9B,EAAK/9B,GAASi+B,EAAKC,IAElCp/B,EAAO+G,KAAM5B,GAAIiC,gBAAiB01B,GAAMlkB,GAKhD,MAAMklB,EAAQ,GAAMwB,EAAKD,EAAKH,GAK9B,OAHAl4B,EAAIq4B,EAAKvB,EACTllB,EAAIsmB,EAAKpB,EAEF99B,EAAO+G,KAAM7B,GAAIkC,gBAAiBw1B,GAAM51B,GAAII,gBAAiBy1B,GAAMjkB,EAE3E,CAEAjP,MAAAA,CAAQ4d,GAEP,OAAOA,EAASriB,EAAEyE,OAAQvK,KAAK8F,IAAOqiB,EAASpiB,EAAEwE,OAAQvK,KAAK+F,IAAOoiB,EAASniB,EAAEuE,OAAQvK,KAAKgG,EAE9F,EAID,MAAMm6B,GAAiB,CAAE,UAAa,SAAU,aAAgB,SAAU,KAAQ,MAAU,WAAc,QAAU,MAAS,SAC5H,MAAS,SAAU,OAAU,SAAU,MAAS,EAAU,eAAkB,SAAU,KAAQ,IAAU,WAAc,QACtH,MAAS,SAAU,UAAa,SAAU,UAAa,QAAU,WAAc,QAAU,UAAa,SAAU,MAAS,SACzH,eAAkB,QAAU,SAAY,SAAU,QAAW,SAAU,KAAQ,MAAU,SAAY,IAAU,SAAY,MAC3H,cAAiB,SAAU,SAAY,SAAU,UAAa,MAAU,SAAY,SAAU,UAAa,SAAU,YAAe,QACpI,eAAkB,QAAU,WAAc,SAAU,WAAc,SAAU,QAAW,QAAU,WAAc,SAAU,aAAgB,QACzI,cAAiB,QAAU,cAAiB,QAAU,cAAiB,QAAU,cAAiB,MAAU,WAAc,QAC1H,SAAY,SAAU,YAAe,MAAU,QAAW,QAAU,QAAW,QAAU,WAAc,QAAU,UAAa,SAC9H,YAAe,SAAU,YAAe,QAAU,QAAW,SAAU,UAAa,SAAU,WAAc,SAAU,KAAQ,SAC9H,UAAa,SAAU,KAAQ,QAAU,MAAS,MAAU,YAAe,SAAU,KAAQ,QAAU,SAAY,SAAU,QAAW,SACxI,UAAa,SAAU,OAAU,QAAU,MAAS,SAAU,MAAS,SAAU,SAAY,SAAU,cAAiB,SAAU,UAAa,QAC/I,aAAgB,SAAU,UAAa,SAAU,WAAc,SAAU,UAAa,SAAU,qBAAwB,SAAU,UAAa,SAC/I,WAAc,QAAU,UAAa,SAAU,UAAa,SAAU,YAAe,SAAU,cAAiB,QAAU,aAAgB,QAC1I,eAAkB,QAAU,eAAkB,QAAU,eAAkB,SAAU,YAAe,SAAU,KAAQ,MAAU,UAAa,QAC5I,MAAS,SAAU,QAAW,SAAU,OAAU,QAAU,iBAAoB,QAAU,WAAc,IAAU,aAAgB,SAClI,aAAgB,QAAU,eAAkB,QAAU,gBAAmB,QAAU,kBAAqB,MAAU,gBAAmB,QACrI,gBAAmB,SAAU,aAAgB,QAAU,UAAa,SAAU,UAAa,SAAU,SAAY,SAAU,YAAe,SAC1I,KAAQ,IAAU,QAAW,SAAU,MAAS,QAAU,UAAa,QAAU,OAAU,SAAU,UAAa,SAAU,OAAU,SACtI,cAAiB,SAAU,UAAa,SAAU,cAAiB,SAAU,cAAiB,SAAU,WAAc,SAAU,UAAa,SAC7I,KAAQ,SAAU,KAAQ,SAAU,KAAQ,SAAU,WAAc,SAAU,OAAU,QAAU,cAAiB,QAAU,IAAO,SAAU,UAAa,SAC3J,UAAa,QAAU,YAAe,QAAU,OAAU,SAAU,WAAc,SAAU,SAAY,QAAU,SAAY,SAC9H,OAAU,SAAU,OAAU,SAAU,QAAW,QAAU,UAAa,QAAU,UAAa,QAAU,UAAa,QAAU,KAAQ,SAC1I,YAAe,MAAU,UAAa,QAAU,IAAO,SAAU,KAAQ,MAAU,QAAW,SAAU,OAAU,SAAU,UAAa,QACzI,OAAU,SAAU,MAAS,SAAU,MAAS,SAAU,WAAc,SAAU,OAAU,SAAU,YAAe,UAEhHC,GAAQ,CAAEnyB,EAAG,EAAGlJ,EAAG,EAAG/D,EAAG,GACzBq/B,GAAQ,CAAEpyB,EAAG,EAAGlJ,EAAG,EAAG/D,EAAG,GAE/B,SAASs/B,GAASxN,EAAGjtB,EAAGnD,GAIvB,OAFKA,EAAI,IAAIA,GAAK,GACbA,EAAI,IAAIA,GAAK,GACbA,EAAI,EAAI,EAAWowB,EAAgB,GAAVjtB,EAAIitB,GAAUpwB,EACvCA,EAAI,GAAemD,EACnBnD,EAAI,EAAI,EAAWowB,EAAgB,GAAVjtB,EAAIitB,IAAY,EAAI,EAAIpwB,GAC/CowB,CAER,CAEA,MAAMyN,GAEL39B,WAAAA,CAAaiM,EAAGb,EAAGjI,GAQlB,OANA/F,KAAKk8B,SAAU,EAEfl8B,KAAK6O,EAAI,EACT7O,KAAKgO,EAAI,EACThO,KAAK+F,EAAI,EAEF/F,KAAK4G,IAAKiI,EAAGb,EAAGjI,EAExB,CAEAa,GAAAA,CAAKiI,EAAGb,EAAGjI,GAEV,QAAWhG,IAANiO,QAAyBjO,IAANgG,EAAkB,CAIzC,MAAM9D,EAAQ4M,EAET5M,GAASA,EAAMi6B,QAEnBl8B,KAAK2H,KAAM1F,GAEiB,kBAAVA,EAElBjC,KAAKwgC,OAAQv+B,GAEe,kBAAVA,GAElBjC,KAAKygC,SAAUx+B,EAIjB,MAECjC,KAAK0gC,OAAQ7xB,EAAGb,EAAGjI,GAIpB,OAAO/F,IAER,CAEAoH,SAAAA,CAAWC,GAMV,OAJArH,KAAK6O,EAAIxH,EACTrH,KAAKgO,EAAI3G,EACTrH,KAAK+F,EAAIsB,EAEFrH,IAER,CAEAwgC,MAAAA,CAAQG,GAAmC,IAA9BztB,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpH,GAUzB,OARA4jC,EAAMr/B,KAAKoD,MAAOi8B,GAElB3gC,KAAK6O,GAAM8xB,GAAO,GAAK,KAAQ,IAC/B3gC,KAAKgO,GAAM2yB,GAAO,EAAI,KAAQ,IAC9B3gC,KAAK+F,GAAY,IAAN46B,GAAc,IAEzB1uB,GAAgBe,oBAAqBhT,KAAMkT,GAEpClT,IAER,CAEA0gC,MAAAA,CAAQ7xB,EAAGb,EAAGjI,GAAoD,IAAjDmN,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG8N,GAAgBE,kBAQ7C,OANAnS,KAAK6O,EAAIA,EACT7O,KAAKgO,EAAIA,EACThO,KAAK+F,EAAIA,EAETkM,GAAgBe,oBAAqBhT,KAAMkT,GAEpClT,IAER,CAEA4gC,MAAAA,CAAQ3yB,EAAGlJ,EAAG/D,GAAoD,IAAjDkS,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG8N,GAAgBE,kBAO7C,GAJAlE,EAAI7L,GAAiB6L,EAAG,GACxBlJ,EAAI/C,GAAO+C,EAAG,EAAG,GACjB/D,EAAIgB,GAAOhB,EAAG,EAAG,GAEN,IAAN+D,EAEJ/E,KAAK6O,EAAI7O,KAAKgO,EAAIhO,KAAK+F,EAAI/E,MAErB,CAEN,MAAM8xB,EAAI9xB,GAAK,GAAMA,GAAM,EAAI+D,GAAM/D,EAAI+D,EAAM/D,EAAI+D,EAC7Cc,EAAM,EAAI7E,EAAM8xB,EAEtB9yB,KAAK6O,EAAIyxB,GAASz6B,EAAGitB,EAAG7kB,EAAI,EAAI,GAChCjO,KAAKgO,EAAIsyB,GAASz6B,EAAGitB,EAAG7kB,GACxBjO,KAAK+F,EAAIu6B,GAASz6B,EAAGitB,EAAG7kB,EAAI,EAAI,EAEjC,CAIA,OAFAgE,GAAgBe,oBAAqBhT,KAAMkT,GAEpClT,IAER,CAEAygC,QAAAA,CAAUhwB,GAAqC,IAe1CnO,EAfY4Q,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpH,GAE7B,SAAS8jC,EAAaC,QAEL/gC,IAAX+gC,GAEAC,WAAYD,GAAW,GAE3Bj6B,QAAQC,KAAM,mCAAqC2J,EAAQ,oBAI7D,CAKA,GAAKnO,EAAI,qBAAqB0+B,KAAMvwB,GAAU,CAI7C,IAAI6B,EACJ,MAAMjC,EAAO/N,EAAG,GACV2+B,EAAa3+B,EAAG,GAEtB,OAAS+N,GAER,IAAK,MACL,IAAK,OAEJ,GAAKiC,EAAQ,+DAA+D0uB,KAAMC,GAMjF,OAFAJ,EAAavuB,EAAO,IAEbtS,KAAK0gC,OACXp/B,KAAKY,IAAK,IAAKg/B,SAAU5uB,EAAO,GAAK,KAAS,IAC9ChR,KAAKY,IAAK,IAAKg/B,SAAU5uB,EAAO,GAAK,KAAS,IAC9ChR,KAAKY,IAAK,IAAKg/B,SAAU5uB,EAAO,GAAK,KAAS,IAC9CY,GAKF,GAAKZ,EAAQ,qEAAqE0uB,KAAMC,GAMvF,OAFAJ,EAAavuB,EAAO,IAEbtS,KAAK0gC,OACXp/B,KAAKY,IAAK,IAAKg/B,SAAU5uB,EAAO,GAAK,KAAS,IAC9ChR,KAAKY,IAAK,IAAKg/B,SAAU5uB,EAAO,GAAK,KAAS,IAC9ChR,KAAKY,IAAK,IAAKg/B,SAAU5uB,EAAO,GAAK,KAAS,IAC9CY,GAKF,MAED,IAAK,MACL,IAAK,OAEJ,GAAKZ,EAAQ,qFAAqF0uB,KAAMC,GAMvG,OAFAJ,EAAavuB,EAAO,IAEbtS,KAAK4gC,OACXG,WAAYzuB,EAAO,IAAQ,IAC3ByuB,WAAYzuB,EAAO,IAAQ,IAC3ByuB,WAAYzuB,EAAO,IAAQ,IAC3BY,GAKF,MAED,QAECrM,QAAQC,KAAM,oCAAsC2J,GAIvD,MAAO,GAAKnO,EAAI,oBAAoB0+B,KAAMvwB,GAAU,CAInD,MAAMkwB,EAAMr+B,EAAG,GACTwjB,EAAO6a,EAAI1/B,OAEjB,GAAc,IAAT6kB,EAGJ,OAAO9lB,KAAK0gC,OACXQ,SAAUP,EAAIQ,OAAQ,GAAK,IAAO,GAClCD,SAAUP,EAAIQ,OAAQ,GAAK,IAAO,GAClCD,SAAUP,EAAIQ,OAAQ,GAAK,IAAO,GAClCjuB,GAGK,GAAc,IAAT4S,EAGX,OAAO9lB,KAAKwgC,OAAQU,SAAUP,EAAK,IAAMztB,GAIzCrM,QAAQC,KAAM,kCAAoC2J,EAIpD,MAAO,GAAKA,GAASA,EAAMxP,OAAS,EAEnC,OAAOjB,KAAKohC,aAAc3wB,EAAOyC,GAIlC,OAAOlT,IAER,CAEAohC,YAAAA,CAAc3wB,GAAqC,IAA9ByC,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpH,GAGjC,MAAM4jC,EAAMR,GAAgB1vB,EAAM1O,eAclC,YAZahC,IAAR4gC,EAGJ3gC,KAAKwgC,OAAQG,EAAKztB,GAKlBrM,QAAQC,KAAM,8BAAgC2J,GAIxCzQ,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAK6O,EAAG7O,KAAKgO,EAAGhO,KAAK+F,EAEnD,CAEA4B,IAAAA,CAAM2K,GAML,OAJAtS,KAAK6O,EAAIyD,EAAMzD,EACf7O,KAAKgO,EAAIsE,EAAMtE,EACfhO,KAAK+F,EAAIuM,EAAMvM,EAER/F,IAER,CAEAqhC,gBAAAA,CAAkB/uB,GAMjB,OAJAtS,KAAK6O,EAAI6D,GAAcJ,EAAMzD,GAC7B7O,KAAKgO,EAAI0E,GAAcJ,EAAMtE,GAC7BhO,KAAK+F,EAAI2M,GAAcJ,EAAMvM,GAEtB/F,IAER,CAEAshC,gBAAAA,CAAkBhvB,GAMjB,OAJAtS,KAAK6O,EAAIiE,GAAcR,EAAMzD,GAC7B7O,KAAKgO,EAAI8E,GAAcR,EAAMtE,GAC7BhO,KAAK+F,EAAI+M,GAAcR,EAAMvM,GAEtB/F,IAER,CAEAuhC,mBAAAA,GAIC,OAFAvhC,KAAKqhC,iBAAkBrhC,MAEhBA,IAER,CAEAwhC,mBAAAA,GAIC,OAFAxhC,KAAKshC,iBAAkBthC,MAEhBA,IAER,CAEAyhC,MAAAA,GAAsC,IAA9BvuB,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpH,GAIpB,OAFAkV,GAAgBc,sBAAuB2uB,GAAO/5B,KAAM3H,MAAQkT,GAEL,MAAhD5R,KAAKgC,MAAOtB,GAAkB,IAAX0/B,GAAO7yB,EAAS,EAAG,MAAkE,IAAhDvN,KAAKgC,MAAOtB,GAAkB,IAAX0/B,GAAO1zB,EAAS,EAAG,MAAgB1M,KAAKgC,MAAOtB,GAAkB,IAAX0/B,GAAO37B,EAAS,EAAG,KAE5J,CAEA47B,YAAAA,GAA4C,IAA9BzuB,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpH,GAE1B,OAAS,SAAWiD,KAAKyhC,OAAQvuB,GAAa0uB,SAAU,KAAO9gC,OAAS,EAEzE,CAEA+gC,MAAAA,CAAQjhC,GAAyD,IAAjDsS,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG8N,GAAgBE,kBAI5CF,GAAgBc,sBAAuB2uB,GAAO/5B,KAAM3H,MAAQkT,GAE5D,MAAMrE,EAAI6yB,GAAO7yB,EAAGb,EAAI0zB,GAAO1zB,EAAGjI,EAAI27B,GAAO37B,EAEvC5D,EAAMb,KAAKa,IAAK0M,EAAGb,EAAGjI,GACtB7D,EAAMZ,KAAKY,IAAK2M,EAAGb,EAAGjI,GAE5B,IAAI+7B,EAAKC,EACT,MAAMC,GAAc9/B,EAAMC,GAAQ,EAElC,GAAKD,IAAQC,EAEZ2/B,EAAM,EACNC,EAAa,MAEP,CAEN,MAAM1X,EAAQloB,EAAMD,EAIpB,OAFA6/B,EAAaC,GAAa,GAAM3X,GAAUloB,EAAMD,GAAQmoB,GAAU,EAAIloB,EAAMD,GAEnEC,GAER,KAAK0M,EAAGizB,GAAQ9zB,EAAIjI,GAAMskB,GAAUrc,EAAIjI,EAAI,EAAI,GAAK,MACrD,KAAKiI,EAAG8zB,GAAQ/7B,EAAI8I,GAAMwb,EAAQ,EAAG,MACrC,KAAKtkB,EAAG+7B,GAAQjzB,EAAIb,GAAMqc,EAAQ,EAInCyX,GAAO,CAER,CAMA,OAJAlhC,EAAOqN,EAAI6zB,EACXlhC,EAAOmE,EAAIg9B,EACXnhC,EAAOI,EAAIghC,EAEJphC,CAER,CAEAqhC,MAAAA,CAAQrhC,GAAyD,IAAjDsS,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG8N,GAAgBE,kBAQ5C,OANAF,GAAgBc,sBAAuB2uB,GAAO/5B,KAAM3H,MAAQkT,GAE5DtS,EAAOiO,EAAI6yB,GAAO7yB,EAClBjO,EAAOoN,EAAI0zB,GAAO1zB,EAClBpN,EAAOmF,EAAI27B,GAAO37B,EAEXnF,CAER,CAEAshC,QAAAA,GAAwC,IAA9BhvB,EAAU/O,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGpH,GAEtBkV,GAAgBc,sBAAuB2uB,GAAO/5B,KAAM3H,MAAQkT,GAE5D,MAAMrE,EAAI6yB,GAAO7yB,EAAGb,EAAI0zB,GAAO1zB,EAAGjI,EAAI27B,GAAO37B,EAE7C,OAAKmN,IAAenW,GAGZ,SAAUmW,KAAgBrE,EAAEszB,QAAS,MAASn0B,EAAEm0B,QAAS,MAASp8B,EAAEo8B,QAAS,MAI9E,OAAQ7gC,KAAKgC,MAAW,IAAJuL,MAAevN,KAAKgC,MAAW,IAAJ0K,MAAe1M,KAAKgC,MAAW,IAAJyC,KAElF,CAEAq8B,SAAAA,CAAWn0B,EAAGlJ,EAAG/D,GAIhB,OAFAhB,KAAK6hC,OAAQzB,IAENpgC,KAAK4gC,OAAQR,GAAMnyB,EAAIA,EAAGmyB,GAAMr7B,EAAIA,EAAGq7B,GAAMp/B,EAAIA,EAEzD,CAEA6G,GAAAA,CAAKyK,GAMJ,OAJAtS,KAAK6O,GAAKyD,EAAMzD,EAChB7O,KAAKgO,GAAKsE,EAAMtE,EAChBhO,KAAK+F,GAAKuM,EAAMvM,EAET/F,IAER,CAEAqiC,SAAAA,CAAWC,EAAQC,GAMlB,OAJAviC,KAAK6O,EAAIyzB,EAAOzzB,EAAI0zB,EAAO1zB,EAC3B7O,KAAKgO,EAAIs0B,EAAOt0B,EAAIu0B,EAAOv0B,EAC3BhO,KAAK+F,EAAIu8B,EAAOv8B,EAAIw8B,EAAOx8B,EAEpB/F,IAER,CAEA8H,SAAAA,CAAW/C,GAMV,OAJA/E,KAAK6O,GAAK9J,EACV/E,KAAKgO,GAAKjJ,EACV/E,KAAK+F,GAAKhB,EAEH/E,IAER,CAEAiI,GAAAA,CAAKqK,GAMJ,OAJAtS,KAAK6O,EAAIvN,KAAKa,IAAK,EAAGnC,KAAK6O,EAAIyD,EAAMzD,GACrC7O,KAAKgO,EAAI1M,KAAKa,IAAK,EAAGnC,KAAKgO,EAAIsE,EAAMtE,GACrChO,KAAK+F,EAAIzE,KAAKa,IAAK,EAAGnC,KAAK+F,EAAIuM,EAAMvM,GAE9B/F,IAER,CAEAoI,QAAAA,CAAUkK,GAMT,OAJAtS,KAAK6O,GAAKyD,EAAMzD,EAChB7O,KAAKgO,GAAKsE,EAAMtE,EAChBhO,KAAK+F,GAAKuM,EAAMvM,EAET/F,IAER,CAEAqI,cAAAA,CAAgBtD,GAMf,OAJA/E,KAAK6O,GAAK9J,EACV/E,KAAKgO,GAAKjJ,EACV/E,KAAK+F,GAAKhB,EAEH/E,IAER,CAEAuC,IAAAA,CAAM+P,EAAOnI,GAMZ,OAJAnK,KAAK6O,IAAOyD,EAAMzD,EAAI7O,KAAK6O,GAAM1E,EACjCnK,KAAKgO,IAAOsE,EAAMtE,EAAIhO,KAAKgO,GAAM7D,EACjCnK,KAAK+F,IAAOuM,EAAMvM,EAAI/F,KAAK+F,GAAMoE,EAE1BnK,IAER,CAEAwiC,UAAAA,CAAYF,EAAQC,EAAQp4B,GAM3B,OAJAnK,KAAK6O,EAAIyzB,EAAOzzB,GAAM0zB,EAAO1zB,EAAIyzB,EAAOzzB,GAAM1E,EAC9CnK,KAAKgO,EAAIs0B,EAAOt0B,GAAMu0B,EAAOv0B,EAAIs0B,EAAOt0B,GAAM7D,EAC9CnK,KAAK+F,EAAIu8B,EAAOv8B,GAAMw8B,EAAOx8B,EAAIu8B,EAAOv8B,GAAMoE,EAEvCnK,IAER,CAEAyiC,OAAAA,CAASnwB,EAAOnI,GAEfnK,KAAK6hC,OAAQzB,IACb9tB,EAAMuvB,OAAQxB,IAEd,MAAMpyB,EAAI1L,GAAM69B,GAAMnyB,EAAGoyB,GAAMpyB,EAAG9D,GAC5BpF,EAAIxC,GAAM69B,GAAMr7B,EAAGs7B,GAAMt7B,EAAGoF,GAC5BnJ,EAAIuB,GAAM69B,GAAMp/B,EAAGq/B,GAAMr/B,EAAGmJ,GAIlC,OAFAnK,KAAK4gC,OAAQ3yB,EAAGlJ,EAAG/D,GAEZhB,IAER,CAEAuzB,cAAAA,CAAgB3rB,GAMf,OAJA5H,KAAK6O,EAAIjH,EAAEpF,EACXxC,KAAKgO,EAAIpG,EAAEnF,EACXzC,KAAK+F,EAAI6B,EAAE2R,EAEJvZ,IAER,CAEAwI,YAAAA,CAAclG,GAEb,MAAMuM,EAAI7O,KAAK6O,EAAGb,EAAIhO,KAAKgO,EAAGjI,EAAI/F,KAAK+F,EACjC0C,EAAInG,EAAEoG,SAMZ,OAJA1I,KAAK6O,EAAIpG,EAAG,GAAMoG,EAAIpG,EAAG,GAAMuF,EAAIvF,EAAG,GAAM1C,EAC5C/F,KAAKgO,EAAIvF,EAAG,GAAMoG,EAAIpG,EAAG,GAAMuF,EAAIvF,EAAG,GAAM1C,EAC5C/F,KAAK+F,EAAI0C,EAAG,GAAMoG,EAAIpG,EAAG,GAAMuF,EAAIvF,EAAG,GAAM1C,EAErC/F,IAER,CAEAuK,MAAAA,CAAQvE,GAEP,OAASA,EAAE6I,IAAM7O,KAAK6O,GAAS7I,EAAEgI,IAAMhO,KAAKgO,GAAShI,EAAED,IAAM/F,KAAK+F,CAEnE,CAEAyE,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAM1B,OAJAnE,KAAK6O,EAAIhO,EAAO4J,GAChBzK,KAAKgO,EAAInN,EAAO4J,EAAS,GACzBzK,KAAK+F,EAAIlF,EAAO4J,EAAS,GAElBzK,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAM7B,OAJAtD,EAAO4J,GAAWzK,KAAK6O,EACvBhO,EAAO4J,EAAS,GAAMzK,KAAKgO,EAC3BnN,EAAO4J,EAAS,GAAMzK,KAAK+F,EAEpBlF,CAER,CAEA8J,mBAAAA,CAAqBC,EAAWpK,GAM/B,OAJAR,KAAK6O,EAAIjE,EAAUC,KAAMrK,GACzBR,KAAKgO,EAAIpD,EAAUE,KAAMtK,GACzBR,KAAK+F,EAAI6E,EAAUqQ,KAAMza,GAElBR,IAER,CAEAiW,MAAAA,GAEC,OAAOjW,KAAKyhC,QAEb,CAEA,EAAGx2B,OAAOC,kBAEHlL,KAAK6O,QACL7O,KAAKgO,QACLhO,KAAK+F,CAEZ,EAID,MAAM27B,GAAuB,IAAInB,GAEjCA,GAAMmC,MAAQvC,GAEd,IAAIwC,GAAc,EAElB,MAAMC,WAAiBjjC,GAEtBiD,WAAAA,GAEC4U,QAEAxX,KAAK6iC,YAAa,EAElBrvB,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAO0gC,OAE5C3iC,KAAK6V,KAAOpU,KAEZzB,KAAKqQ,KAAO,GACZrQ,KAAKH,KAAO,WAEZG,KAAK8iC,SAAW9uC,EAChBgM,KAAK+iC,KAAOnvC,EACZoM,KAAKgjC,cAAe,EAEpBhjC,KAAKijC,QAAU,EACfjjC,KAAKkjC,aAAc,EACnBljC,KAAKmjC,WAAY,EAEjBnjC,KAAKojC,SAAWtuC,EAChBkL,KAAKqjC,SAAWtuC,EAChBiL,KAAKsjC,cAAgBjvC,EACrB2L,KAAKujC,cAAgB,KACrBvjC,KAAKwjC,cAAgB,KACrBxjC,KAAKyjC,mBAAqB,KAC1BzjC,KAAK0jC,WAAa,IAAInD,GAAO,EAAG,EAAG,GACnCvgC,KAAK2jC,WAAa,EAElB3jC,KAAK4jC,UAAYhuC,EACjBoK,KAAK6jC,WAAY,EACjB7jC,KAAK8jC,YAAa,EAElB9jC,KAAK+jC,iBAAmB,IACxB/jC,KAAKgkC,YAAc9lC,GACnB8B,KAAKikC,WAAa,EAClBjkC,KAAKkkC,gBAAkB,IACvBlkC,KAAKmkC,YAAc/mC,GACnB4C,KAAKokC,aAAehnC,GACpB4C,KAAKqkC,aAAejnC,GACpB4C,KAAKskC,cAAe,EAEpBtkC,KAAKukC,eAAiB,KACtBvkC,KAAKwkC,kBAAmB,EACxBxkC,KAAKykC,aAAc,EAEnBzkC,KAAK0kC,WAAa,KAElB1kC,KAAK2kC,YAAa,EAElB3kC,KAAK4kC,UAAY,KAEjB5kC,KAAK6kC,eAAgB,EACrB7kC,KAAK8kC,oBAAsB,EAC3B9kC,KAAK+kC,mBAAqB,EAE1B/kC,KAAKglC,WAAY,EAEjBhlC,KAAKilC,iBAAkB,EACvBjlC,KAAKklC,oBAAqB,EAC1BllC,KAAKmlC,iBAAkB,EAEvBnlC,KAAKg2B,SAAU,EAEfh2B,KAAKolC,YAAa,EAElBplC,KAAKoY,SAAW,CAAC,EAEjBpY,KAAK+V,QAAU,EAEf/V,KAAKqlC,WAAa,CAEnB,CAEA,aAAIC,GAEH,OAAOtlC,KAAKqlC,UAEb,CAEA,aAAIC,CAAWrjC,GAETjC,KAAKqlC,WAAa,IAAMpjC,EAAQ,GAEpCjC,KAAK+V,UAIN/V,KAAKqlC,WAAapjC,CAEnB,CAIAu0B,cAAAA,GAA0E,CAE1E+O,eAAAA,GAAiD,CAEjDC,qBAAAA,GAEC,OAAOxlC,KAAKulC,gBAAgB3D,UAE7B,CAEA6D,SAAAA,CAAWxI,GAEV,QAAgBl9B,IAAXk9B,EAEL,IAAM,MAAMC,KAAOD,EAAS,CAE3B,MAAMyI,EAAWzI,EAAQC,GAEzB,QAAkBn9B,IAAb2lC,EAAyB,CAE7B7+B,QAAQC,KAAM,8BAA+Bo2B,8BAC7C,QAED,CAEA,MAAMyI,EAAe3lC,KAAMk9B,QAELn9B,IAAjB4lC,EAOAA,GAAgBA,EAAazJ,QAEjCyJ,EAAa/+B,IAAK8+B,GAELC,GAAgBA,EAAazjB,WAAiBwjB,GAAYA,EAASxjB,UAEhFyjB,EAAah+B,KAAM+9B,GAInB1lC,KAAMk9B,GAAQwI,EAfd7+B,QAAQC,KAAM,oBAAqBo2B,iCAAqCl9B,KAAKH,QAmB/E,CAED,CAEAoW,MAAAA,CAAQC,GAEP,MAAMC,OAA0BpW,IAATmW,GAAsC,kBAATA,EAE/CC,IAEJD,EAAO,CACN2C,SAAU,CAAC,EACXzC,OAAQ,CAAC,IAKX,MAAMZ,EAAO,CACZsD,SAAU,CACT/C,QAAS,IACTlW,KAAM,WACNkZ,UAAW,oBA4Nb,SAASgkB,EAAkBC,GAE1B,MAAMC,EAAS,GAEf,IAAM,MAAMC,KAAOF,EAAQ,CAE1B,MAAMxnB,EAAOwnB,EAAOE,UACb1nB,EAAKsD,SACZmkB,EAAO78B,KAAMoV,EAEd,CAEA,OAAOynB,CAER,CAEA,GAvOAznB,EAAKK,KAAO7V,KAAK6V,KACjBL,EAAK3V,KAAOG,KAAKH,KAEE,KAAdG,KAAKqQ,OAAcmF,EAAKnF,KAAOrQ,KAAKqQ,MAEpCrQ,KAAKsS,OAAStS,KAAKsS,MAAM4pB,UAAU1mB,EAAKlD,MAAQtS,KAAKsS,MAAMmvB,eAExC1hC,IAAnBC,KAAK4lC,YAA0BpwB,EAAKowB,UAAY5lC,KAAK4lC,gBAClC7lC,IAAnBC,KAAK6lC,YAA0BrwB,EAAKqwB,UAAY7lC,KAAK6lC,gBAEtC9lC,IAAfC,KAAK8lC,QAAsBtwB,EAAKswB,MAAQ9lC,KAAK8lC,OAC7C9lC,KAAK+lC,YAAc/lC,KAAK+lC,WAAW7J,UAAU1mB,EAAKuwB,WAAa/lC,KAAK+lC,WAAWtE,eACvD1hC,IAAxBC,KAAKgmC,iBAA+BxwB,EAAKwwB,eAAiBhmC,KAAKgmC,gBAC/DhmC,KAAKimC,UAAYjmC,KAAKimC,SAAS/J,UAAU1mB,EAAKywB,SAAWjmC,KAAKimC,SAASxE,eAC5C1hC,IAA3BC,KAAKkmC,mBAA8D,IAA3BlmC,KAAKkmC,oBAA0B1wB,EAAK0wB,kBAAoBlmC,KAAKkmC,mBAErGlmC,KAAKmmC,UAAYnmC,KAAKmmC,SAASjK,UAAU1mB,EAAK2wB,SAAWnmC,KAAKmmC,SAAS1E,eAC5C1hC,IAA3BC,KAAKomC,oBAAkC5wB,EAAK4wB,kBAAoBpmC,KAAKomC,mBACrEpmC,KAAKqmC,eAAiBrmC,KAAKqmC,cAAcnK,UAAU1mB,EAAK6wB,cAAgBrmC,KAAKqmC,cAAc5E,eACxE1hC,IAAnBC,KAAKsmC,YAA0B9wB,EAAK8wB,UAAYtmC,KAAKsmC,gBAClCvmC,IAAnBC,KAAKumC,YAA0B/wB,EAAK+wB,UAAYvmC,KAAKumC,gBACzBxmC,IAA5BC,KAAKwmC,qBAAmChxB,EAAKgxB,mBAAqBxmC,KAAKwmC,oBAEvExmC,KAAKymC,cAAgBzmC,KAAKymC,aAAahvB,YAE3CjC,EAAKixB,aAAezmC,KAAKymC,aAAaxwB,OAAQC,GAAOL,MAIjD7V,KAAK0mC,uBAAyB1mC,KAAK0mC,sBAAsBjvB,YAE7DjC,EAAKkxB,sBAAwB1mC,KAAK0mC,sBAAsBzwB,OAAQC,GAAOL,MAInE7V,KAAK2mC,oBAAsB3mC,KAAK2mC,mBAAmBlvB,YAEvDjC,EAAKmxB,mBAAqB3mC,KAAK2mC,mBAAmB1wB,OAAQC,GAAOL,KACjEL,EAAKoxB,qBAAuB5mC,KAAK4mC,qBAAqBl8B,gBAI9B3K,IAApBC,KAAK6mC,aAA2BrxB,EAAKqxB,WAAa7mC,KAAK6mC,iBAElC9mC,IAArBC,KAAK8mC,cAA4BtxB,EAAKsxB,YAAc9mC,KAAK8mC,kBACjC/mC,IAAxBC,KAAK+mC,iBAA+BvxB,EAAKuxB,eAAiB/mC,KAAK+mC,qBAC5BhnC,IAAnCC,KAAKgnC,4BAA0CxxB,EAAKwxB,0BAA4BhnC,KAAKgnC,2BAErFhnC,KAAKinC,gBAAkBjnC,KAAKinC,eAAexvB,YAE/CjC,EAAKyxB,eAAiBjnC,KAAKinC,eAAehxB,OAAQC,GAAOL,MAIrD7V,KAAKknC,yBAA2BlnC,KAAKknC,wBAAwBzvB,YAEjEjC,EAAK0xB,wBAA0BlnC,KAAKknC,wBAAwBjxB,OAAQC,GAAOL,WAInD9V,IAApBC,KAAKsX,aAA2B9B,EAAK8B,WAAatX,KAAKsX,iBAC3BvX,IAA5BC,KAAKmnC,qBAAmC3xB,EAAK2xB,mBAAqBnnC,KAAKmnC,oBAEvEnnC,KAAKonC,eAAiBpnC,KAAKonC,cAAc3vB,YAE7CjC,EAAK4xB,cAAgBpnC,KAAKonC,cAAcnxB,OAAQC,GAAOL,MAInD7V,KAAKy6B,KAAOz6B,KAAKy6B,IAAIhjB,YAAYjC,EAAKilB,IAAMz6B,KAAKy6B,IAAIxkB,OAAQC,GAAOL,MACpE7V,KAAKqnC,QAAUrnC,KAAKqnC,OAAO5vB,YAAYjC,EAAK6xB,OAASrnC,KAAKqnC,OAAOpxB,OAAQC,GAAOL,MAChF7V,KAAKsnC,UAAYtnC,KAAKsnC,SAAS7vB,YAAYjC,EAAK8xB,SAAWtnC,KAAKsnC,SAASrxB,OAAQC,GAAOL,MAExF7V,KAAKunC,UAAYvnC,KAAKunC,SAAS9vB,YAEnCjC,EAAK+xB,SAAWvnC,KAAKunC,SAAStxB,OAAQC,GAAOL,KAC7CL,EAAKgyB,kBAAoBxnC,KAAKwnC,mBAI1BxnC,KAAKynC,OAASznC,KAAKynC,MAAMhwB,YAE7BjC,EAAKiyB,MAAQznC,KAAKynC,MAAMxxB,OAAQC,GAAOL,KACvCL,EAAKkyB,eAAiB1nC,KAAK0nC,gBAIvB1nC,KAAK2nC,SAAW3nC,KAAK2nC,QAAQlwB,YAEjCjC,EAAKmyB,QAAU3nC,KAAK2nC,QAAQ1xB,OAAQC,GAAOL,KAC3CL,EAAKoyB,UAAY5nC,KAAK4nC,WAIlB5nC,KAAK6nC,WAAa7nC,KAAK6nC,UAAUpwB,YAErCjC,EAAKqyB,UAAY7nC,KAAK6nC,UAAU5xB,OAAQC,GAAOL,KAC/CL,EAAKsyB,cAAgB9nC,KAAK8nC,cAC1BtyB,EAAKuyB,YAAc/nC,KAAK+nC,YAAYr9B,WAIhC1K,KAAKgoC,iBAAmBhoC,KAAKgoC,gBAAgBvwB,YAEjDjC,EAAKwyB,gBAAkBhoC,KAAKgoC,gBAAgB/xB,OAAQC,GAAOL,KAC3DL,EAAKyyB,kBAAoBjoC,KAAKioC,kBAC9BzyB,EAAK0yB,iBAAmBloC,KAAKkoC,kBAIzBloC,KAAKmoC,cAAgBnoC,KAAKmoC,aAAa1wB,YAAYjC,EAAK2yB,aAAenoC,KAAKmoC,aAAalyB,OAAQC,GAAOL,MACxG7V,KAAKooC,cAAgBpoC,KAAKooC,aAAa3wB,YAAYjC,EAAK4yB,aAAepoC,KAAKooC,aAAanyB,OAAQC,GAAOL,MAExG7V,KAAKqoC,aAAeroC,KAAKqoC,YAAY5wB,YAAYjC,EAAK6yB,YAAcroC,KAAKqoC,YAAYpyB,OAAQC,GAAOL,MACpG7V,KAAKsoC,aAAetoC,KAAKsoC,YAAY7wB,YAAYjC,EAAK8yB,YAActoC,KAAKsoC,YAAYryB,OAAQC,GAAOL,MACpG7V,KAAKuoC,sBAAwBvoC,KAAKuoC,qBAAqB9wB,YAAYjC,EAAK+yB,qBAAuBvoC,KAAKuoC,qBAAqBtyB,OAAQC,GAAOL,MACxI7V,KAAKwoC,kBAAoBxoC,KAAKwoC,iBAAiB/wB,YAAYjC,EAAKgzB,iBAAmBxoC,KAAKwoC,iBAAiBvyB,OAAQC,GAAOL,MAExH7V,KAAKyoC,QAAUzoC,KAAKyoC,OAAOhxB,YAE/BjC,EAAKizB,OAASzoC,KAAKyoC,OAAOxyB,OAAQC,GAAOL,UAEnB9V,IAAjBC,KAAK0oC,UAAwBlzB,EAAKkzB,QAAU1oC,KAAK0oC,eAI1B3oC,IAAxBC,KAAK2oC,iBAA+BnzB,EAAKmzB,eAAiB3oC,KAAK2oC,eAAej+B,gBACrD3K,IAAzBC,KAAK4oC,kBAAgCpzB,EAAKozB,gBAAkB5oC,KAAK4oC,sBAC3C7oC,IAAtBC,KAAK6oC,eAA6BrzB,EAAKqzB,aAAe7oC,KAAK6oC,mBAClC9oC,IAAzBC,KAAK8oC,kBAAgCtzB,EAAKszB,gBAAkB9oC,KAAK8oC,iBAEjE9oC,KAAK+oC,aAAe/oC,KAAK+oC,YAAYtxB,YAEzCjC,EAAKuzB,YAAc/oC,KAAK+oC,YAAY9yB,OAAQC,GAAOL,WAIzB9V,IAAtBC,KAAKgpC,eAA6BxzB,EAAKwzB,aAAehpC,KAAKgpC,cAC3DhpC,KAAKipC,iBAAmBjpC,KAAKipC,gBAAgBxxB,YAAYjC,EAAKyzB,gBAAkBjpC,KAAKipC,gBAAgBhzB,OAAQC,GAAOL,WACjG9V,IAAnBC,KAAKkpC,YAA0B1zB,EAAK0zB,UAAYlpC,KAAKkpC,WACrDlpC,KAAKmpC,cAAgBnpC,KAAKmpC,aAAa1xB,YAAYjC,EAAK2zB,aAAenpC,KAAKmpC,aAAalzB,OAAQC,GAAOL,WAC3E9V,IAA7BC,KAAKopC,qBAAqCppC,KAAKopC,sBAAwBhkB,MAAW5P,EAAK4zB,oBAAsBppC,KAAKopC,0BACxFrpC,IAA1BC,KAAKqpC,mBAAiC7zB,EAAK6zB,iBAAmBrpC,KAAKqpC,iBAAiB5H,eAEtE1hC,IAAdC,KAAK8lB,OAAqBtQ,EAAKsQ,KAAO9lB,KAAK8lB,MACvB,OAApB9lB,KAAK0kC,aAAsBlvB,EAAKkvB,WAAa1kC,KAAK0kC,iBACzB3kC,IAAzBC,KAAKspC,kBAAgC9zB,EAAK8zB,gBAAkBtpC,KAAKspC,iBAEjEtpC,KAAK8iC,WAAa9uC,IAAiBwhB,EAAKstB,SAAW9iC,KAAK8iC,UACxD9iC,KAAK+iC,OAASnvC,IAAY4hB,EAAKutB,KAAO/iC,KAAK+iC,OACrB,IAAtB/iC,KAAKgjC,eAAwBxtB,EAAKwtB,cAAe,GAEjDhjC,KAAKijC,QAAU,IAAIztB,EAAKytB,QAAUjjC,KAAKijC,UAClB,IAArBjjC,KAAKkjC,cAAuB1tB,EAAK0tB,aAAc,GAE/CljC,KAAKojC,WAAatuC,IAAiB0gB,EAAK4tB,SAAWpjC,KAAKojC,UACxDpjC,KAAKqjC,WAAatuC,IAAyBygB,EAAK6tB,SAAWrjC,KAAKqjC,UAChErjC,KAAKsjC,gBAAkBjvC,IAAcmhB,EAAK8tB,cAAgBtjC,KAAKsjC,eACxC,OAAvBtjC,KAAKujC,gBAAyB/tB,EAAK+tB,cAAgBvjC,KAAKujC,eACjC,OAAvBvjC,KAAKwjC,gBAAyBhuB,EAAKguB,cAAgBxjC,KAAKwjC,eAC5B,OAA5BxjC,KAAKyjC,qBAA8BjuB,EAAKiuB,mBAAqBzjC,KAAKyjC,oBAClEzjC,KAAK0jC,YAAc1jC,KAAK0jC,WAAWxH,UAAU1mB,EAAKkuB,WAAa1jC,KAAK0jC,WAAWjC,UAC3D,IAApBzhC,KAAK2jC,aAAmBnuB,EAAKmuB,WAAa3jC,KAAK2jC,YAE/C3jC,KAAK4jC,YAAchuC,IAAiB4f,EAAKouB,UAAY5jC,KAAK4jC,YACvC,IAAnB5jC,KAAK6jC,YAAsBruB,EAAKquB,UAAY7jC,KAAK6jC,YAC7B,IAApB7jC,KAAK8jC,aAAuBtuB,EAAKsuB,WAAa9jC,KAAK8jC,aAC/B,IAApB9jC,KAAK2kC,aAAuBnvB,EAAKmvB,WAAa3kC,KAAK2kC,YAEzB,MAA1B3kC,KAAK+jC,mBAA4BvuB,EAAKuuB,iBAAmB/jC,KAAK+jC,kBAC9D/jC,KAAKgkC,cAAgB9lC,KAAoBsX,EAAKwuB,YAAchkC,KAAKgkC,aAC7C,IAApBhkC,KAAKikC,aAAmBzuB,EAAKyuB,WAAajkC,KAAKikC,YACtB,MAAzBjkC,KAAKkkC,kBAA2B1uB,EAAK0uB,gBAAkBlkC,KAAKkkC,iBAC5DlkC,KAAKmkC,cAAgB/mC,KAAgBoY,EAAK2uB,YAAcnkC,KAAKmkC,aAC7DnkC,KAAKokC,eAAiBhnC,KAAgBoY,EAAK4uB,aAAepkC,KAAKokC,cAC/DpkC,KAAKqkC,eAAiBjnC,KAAgBoY,EAAK6uB,aAAerkC,KAAKqkC,eACzC,IAAtBrkC,KAAKskC,eAAwB9uB,EAAK8uB,aAAetkC,KAAKskC,mBAGpCvkC,IAAlBC,KAAKmP,UAA4C,IAAlBnP,KAAKmP,WAAiBqG,EAAKrG,SAAWnP,KAAKmP,WAEnD,IAAvBnP,KAAK6kC,gBAAyBrvB,EAAKqvB,eAAgB,GACtB,IAA7B7kC,KAAK8kC,sBAA4BtvB,EAAKsvB,oBAAsB9kC,KAAK8kC,qBACrC,IAA5B9kC,KAAK+kC,qBAA2BvvB,EAAKuvB,mBAAqB/kC,KAAK+kC,yBAE5ChlC,IAAnBC,KAAKupC,WAA8C,IAAnBvpC,KAAKupC,YAAkB/zB,EAAK+zB,UAAYvpC,KAAKupC,gBAC3DxpC,IAAlBC,KAAKwpC,WAAyBh0B,EAAKg0B,SAAWxpC,KAAKwpC,eAClCzpC,IAAjBC,KAAKypC,UAAwBj0B,EAAKi0B,QAAUzpC,KAAKypC,cAClC1pC,IAAfC,KAAKsP,QAAsBkG,EAAKlG,MAAQtP,KAAKsP,QAE1B,IAAnBtP,KAAKglC,YAAqBxvB,EAAKwvB,WAAY,GAE3ChlC,KAAKslC,UAAY,IAAI9vB,EAAK8vB,UAAYtlC,KAAKslC,YACxB,IAAnBtlC,KAAKmjC,YAAqB3tB,EAAK2tB,WAAY,IAClB,IAAzBnjC,KAAKilC,kBAA2BzvB,EAAKyvB,iBAAkB,IAC3B,IAA5BjlC,KAAKklC,qBAA8B1vB,EAAK0vB,oBAAqB,IACpC,IAAzBllC,KAAKmlC,kBAA2B3vB,EAAK2vB,iBAAkB,IAEpC,IAAnBnlC,KAAK0pC,YAAqBl0B,EAAKk0B,WAAY,GAC3C1pC,KAAK2pC,mBAAqB,IAAIn0B,EAAKm0B,mBAAqB3pC,KAAK2pC,oBACnC,UAA1B3pC,KAAK4pC,mBAA+Bp0B,EAAKo0B,iBAAmB5pC,KAAK4pC,kBACtC,UAA3B5pC,KAAK6pC,oBAAgCr0B,EAAKq0B,kBAAoB7pC,KAAK6pC,oBAE9C,IAArB7pC,KAAK8pC,cAAuBt0B,EAAKs0B,aAAc,IAE9B,IAAjB9pC,KAAKg2B,UAAoBxgB,EAAKwgB,SAAU,IAEpB,IAApBh2B,KAAKolC,aAAuB5vB,EAAK4vB,YAAa,IAEjC,IAAbplC,KAAK+pC,MAAgBv0B,EAAKu0B,KAAM,GAEhCv2B,OAAOyF,KAAMjZ,KAAKoY,UAAWnX,OAAS,IAAIuU,EAAK4C,SAAWpY,KAAKoY,UAoB/DjC,EAAe,CAEnB,MAAM0C,EAAWkkB,EAAkB7mB,EAAK2C,UAClCzC,EAAS2mB,EAAkB7mB,EAAKE,QAEjCyC,EAAS5X,OAAS,IAAIuU,EAAKqD,SAAWA,GACtCzC,EAAOnV,OAAS,IAAIuU,EAAKY,OAASA,EAExC,CAEA,OAAOZ,CAER,CAEA9N,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAM+P,GAEL1X,KAAKqQ,KAAOqH,EAAOrH,KAEnBrQ,KAAK8iC,SAAWprB,EAAOorB,SACvB9iC,KAAK+iC,KAAOrrB,EAAOqrB,KACnB/iC,KAAKgjC,aAAetrB,EAAOsrB,aAE3BhjC,KAAKijC,QAAUvrB,EAAOurB,QACtBjjC,KAAKkjC,YAAcxrB,EAAOwrB,YAE1BljC,KAAKojC,SAAW1rB,EAAO0rB,SACvBpjC,KAAKqjC,SAAW3rB,EAAO2rB,SACvBrjC,KAAKsjC,cAAgB5rB,EAAO4rB,cAC5BtjC,KAAKujC,cAAgB7rB,EAAO6rB,cAC5BvjC,KAAKwjC,cAAgB9rB,EAAO8rB,cAC5BxjC,KAAKyjC,mBAAqB/rB,EAAO+rB,mBACjCzjC,KAAK0jC,WAAW/7B,KAAM+P,EAAOgsB,YAC7B1jC,KAAK2jC,WAAajsB,EAAOisB,WAEzB3jC,KAAK4jC,UAAYlsB,EAAOksB,UACxB5jC,KAAK6jC,UAAYnsB,EAAOmsB,UACxB7jC,KAAK8jC,WAAapsB,EAAOosB,WAEzB9jC,KAAK+jC,iBAAmBrsB,EAAOqsB,iBAC/B/jC,KAAKgkC,YAActsB,EAAOssB,YAC1BhkC,KAAKikC,WAAavsB,EAAOusB,WACzBjkC,KAAKkkC,gBAAkBxsB,EAAOwsB,gBAC9BlkC,KAAKmkC,YAAczsB,EAAOysB,YAC1BnkC,KAAKokC,aAAe1sB,EAAO0sB,aAC3BpkC,KAAKqkC,aAAe3sB,EAAO2sB,aAC3BrkC,KAAKskC,aAAe5sB,EAAO4sB,aAE3B,MAAM0F,EAAYtyB,EAAO6sB,eACzB,IAAI0F,EAAY,KAEhB,GAAmB,OAAdD,EAAqB,CAEzB,MAAM3nC,EAAI2nC,EAAU/oC,OACpBgpC,EAAY,IAAI1zB,MAAOlU,GAEvB,IAAM,IAAItB,EAAI,EAAGA,IAAMsB,IAAMtB,EAE5BkpC,EAAWlpC,GAAMipC,EAAWjpC,GAAI2G,OAIlC,CA8BA,OA5BA1H,KAAKukC,eAAiB0F,EACtBjqC,KAAKwkC,iBAAmB9sB,EAAO8sB,iBAC/BxkC,KAAKykC,YAAc/sB,EAAO+sB,YAE1BzkC,KAAK0kC,WAAahtB,EAAOgtB,WAEzB1kC,KAAK2kC,WAAajtB,EAAOitB,WAEzB3kC,KAAK4kC,UAAYltB,EAAOktB,UAExB5kC,KAAK6kC,cAAgBntB,EAAOmtB,cAC5B7kC,KAAK8kC,oBAAsBptB,EAAOotB,oBAClC9kC,KAAK+kC,mBAAqBrtB,EAAOqtB,mBAEjC/kC,KAAKglC,UAAYttB,EAAOstB,UAExBhlC,KAAKslC,UAAY5tB,EAAO4tB,UACxBtlC,KAAKmjC,UAAYzrB,EAAOyrB,UACxBnjC,KAAKilC,gBAAkBvtB,EAAOutB,gBAC9BjlC,KAAKklC,mBAAqBxtB,EAAOwtB,mBACjCllC,KAAKmlC,gBAAkBztB,EAAOytB,gBAE9BnlC,KAAKg2B,QAAUte,EAAOse,QAEtBh2B,KAAKolC,WAAa1tB,EAAO0tB,WAEzBplC,KAAKoY,SAAWM,KAAKC,MAAOD,KAAKE,UAAWlB,EAAOU,WAE5CpY,IAER,CAEAkZ,OAAAA,GAEClZ,KAAKU,cAAe,CAAEb,KAAM,WAE7B,CAEA,eAAImW,CAAa/T,IAED,IAAVA,GAAiBjC,KAAK+V,SAE5B,CAEAm0B,OAAAA,GAECrjC,QAAQC,KAAM,wCAEf,EAID,MAAMqjC,WAA0BvH,GAE/BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKoqC,qBAAsB,EAE3BpqC,KAAKH,KAAO,oBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKy6B,IAAM,KAEXz6B,KAAKunC,SAAW,KAChBvnC,KAAKwnC,kBAAoB,EAEzBxnC,KAAKynC,MAAQ,KACbznC,KAAK0nC,eAAiB,EAEtB1nC,KAAKsoC,YAAc,KAEnBtoC,KAAKsnC,SAAW,KAEhBtnC,KAAKyoC,OAAS,KACdzoC,KAAK2oC,eAAiB,IAAIzV,GAC1BlzB,KAAK0oC,QAAUzyC,EACf+J,KAAK6oC,aAAe,EACpB7oC,KAAK8oC,gBAAkB,IAEvB9oC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAC1B3pC,KAAK4pC,iBAAmB,QACxB5pC,KAAK6pC,kBAAoB,QAEzB7pC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GA+BL,OA7BAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKunC,SAAW7vB,EAAO6vB,SACvBvnC,KAAKwnC,kBAAoB9vB,EAAO8vB,kBAEhCxnC,KAAKynC,MAAQ/vB,EAAO+vB,MACpBznC,KAAK0nC,eAAiBhwB,EAAOgwB,eAE7B1nC,KAAKsoC,YAAc5wB,EAAO4wB,YAE1BtoC,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKyoC,OAAS/wB,EAAO+wB,OACrBzoC,KAAK2oC,eAAehhC,KAAM+P,EAAOixB,gBACjC3oC,KAAK0oC,QAAUhxB,EAAOgxB,QACtB1oC,KAAK6oC,aAAenxB,EAAOmxB,aAC3B7oC,KAAK8oC,gBAAkBpxB,EAAOoxB,gBAE9B9oC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBACjC3pC,KAAK4pC,iBAAmBlyB,EAAOkyB,iBAC/B5pC,KAAK6pC,kBAAoBnyB,EAAOmyB,kBAEhC7pC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAMD,MAAMqqC,GAAwBC,KAE9B,SAASA,KAIR,MAAMn6B,EAAS,IAAIo6B,YAAa,GAC1BC,EAAY,IAAI3nC,aAAcsN,GAC9Bs6B,EAAa,IAAI3nC,YAAaqN,GAE9Bu6B,EAAY,IAAI5nC,YAAa,KAC7B6nC,EAAa,IAAI7nC,YAAa,KAEpC,IAAM,IAAI/B,EAAI,EAAGA,EAAI,MAAQA,EAAI,CAEhC,MAAM0H,EAAI1H,EAAI,IAIT0H,GAAM,IAEViiC,EAAW3pC,GAAM,EACjB2pC,EAAe,IAAJ3pC,GAAc,MACzB4pC,EAAY5pC,GAAM,GAClB4pC,EAAgB,IAAJ5pC,GAAc,IAIf0H,GAAM,IAEjBiiC,EAAW3pC,GAAM,OAAc0H,EAAI,GACnCiiC,EAAe,IAAJ3pC,GAAgB,OAAc0H,EAAI,GAAS,MACtDkiC,EAAY5pC,IAAQ0H,EAAI,EACxBkiC,EAAgB,IAAJ5pC,IAAgB0H,EAAI,GAIrBA,GAAK,IAEhBiiC,EAAW3pC,GAAQ0H,EAAI,IAAQ,GAC/BiiC,EAAe,IAAJ3pC,GAAkB0H,EAAI,IAAQ,GAAO,MAChDkiC,EAAY5pC,GAAM,GAClB4pC,EAAgB,IAAJ5pC,GAAc,IAIf0H,EAAI,KAEfiiC,EAAW3pC,GAAM,MACjB2pC,EAAe,IAAJ3pC,GAAc,MACzB4pC,EAAY5pC,GAAM,GAClB4pC,EAAgB,IAAJ5pC,GAAc,KAM1B2pC,EAAW3pC,GAAM,MACjB2pC,EAAe,IAAJ3pC,GAAc,MACzB4pC,EAAY5pC,GAAM,GAClB4pC,EAAgB,IAAJ5pC,GAAc,GAI5B,CAIA,MAAM6pC,EAAgB,IAAI9nC,YAAa,MACjC+nC,EAAgB,IAAI/nC,YAAa,IACjCgoC,EAAc,IAAIhoC,YAAa,IAErC,IAAM,IAAI/B,EAAI,EAAGA,EAAI,OAASA,EAAI,CAEjC,IAAIuB,EAAIvB,GAAK,GACT0H,EAAI,EAGR,KAA+B,KAAjB,QAAJnG,IAETA,IAAM,EACNmG,GAAK,QAINnG,IAAK,QACLmG,GAAK,UAELmiC,EAAe7pC,GAAMuB,EAAImG,CAE1B,CAEA,IAAM,IAAI1H,EAAI,KAAMA,EAAI,OAASA,EAEhC6pC,EAAe7pC,GAAM,WAAiBA,EAAI,MAAU,IAIrD,IAAM,IAAIA,EAAI,EAAGA,EAAI,KAAOA,EAE3B8pC,EAAe9pC,GAAMA,GAAK,GAI3B8pC,EAAe,IAAO,WACtBA,EAAe,IAAO,WAEtB,IAAM,IAAI9pC,EAAI,GAAIA,EAAI,KAAOA,EAE5B8pC,EAAe9pC,GAAM,YAAiBA,EAAI,IAAQ,IAInD8pC,EAAe,IAAO,WAEtB,IAAM,IAAI9pC,EAAI,EAAGA,EAAI,KAAOA,EAEhB,KAANA,IAEJ+pC,EAAa/pC,GAAM,MAMrB,MAAO,CACNypC,UAAWA,EACXC,WAAYA,EACZC,UAAWA,EACXC,WAAYA,EACZC,cAAeA,EACfC,cAAeA,EACfC,YAAaA,EAGf,CAIA,SAASC,GAAaC,GAEhB1pC,KAAK8C,IAAK4mC,GAAQ,OAAQnkC,QAAQC,KAAM,sDAE7CkkC,EAAMhpC,GAAOgpC,GAAO,MAAO,OAE3BX,GAAQG,UAAW,GAAMQ,EACzB,MAAMj9B,EAAIs8B,GAAQI,WAAY,GACxBhiC,EAAMsF,GAAK,GAAO,IACxB,OAAOs8B,GAAQK,UAAWjiC,KAAc,QAAJsF,IAAoBs8B,GAAQM,WAAYliC,GAE7E,CAIA,SAASwiC,GAAeD,GAEvB,MAAM1oC,EAAI0oC,GAAO,GAEjB,OADAX,GAAQI,WAAY,GAAMJ,GAAQO,cAAeP,GAAQS,YAAaxoC,IAAc,KAAN0oC,IAAkBX,GAAQQ,cAAevoC,GAChH+nC,GAAQG,UAAW,EAE3B,CAEA,MAAMU,GAAY,CACjBH,YAAaA,GACbE,cAAeA,IAGVE,GAA0B,IAAIlpB,GAC9BmpB,GAA2B,IAAIrkC,GAErC,IAAIskC,GAAQ,EAEZ,MAAMC,GAEL1oC,WAAAA,CAAa/B,EAAO0qC,GAA+B,IAArBC,EAAUrnC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAEvC,GAAKoS,MAAMC,QAAS3V,GAEnB,MAAM,IAAI4qC,UAAW,yDAItBzrC,KAAK0rC,mBAAoB,EAEzBl4B,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAOopC,OAE5CrrC,KAAKqQ,KAAO,GAEZrQ,KAAKa,MAAQA,EACbb,KAAKurC,SAAWA,EAChBvrC,KAAKgc,WAAkBjc,IAAVc,EAAsBA,EAAMI,OAASsqC,EAAW,EAC7DvrC,KAAKwrC,WAAaA,EAElBxrC,KAAK2rC,MAAQhtC,GACbqB,KAAK4rC,aAAe,GACpB5rC,KAAK6rC,QAAUtzC,GAEfyH,KAAK+V,QAAU,CAEhB,CAEA+1B,gBAAAA,GAAoB,CAEpB,eAAI91B,CAAa/T,IAED,IAAVA,GAAiBjC,KAAK+V,SAE5B,CAEAg2B,QAAAA,CAAU9pC,GAIT,OAFAjC,KAAK2rC,MAAQ1pC,EAENjC,IAER,CAEAgsC,cAAAA,CAAgBC,EAAOjwB,GAEtBhc,KAAK4rC,aAAaxrC,KAAM,CAAE6rC,QAAOjwB,SAElC,CAEAkwB,iBAAAA,GAEClsC,KAAK4rC,aAAa3qC,OAAS,CAE5B,CAEA0G,IAAAA,CAAM+P,GAWL,OATA1X,KAAKqQ,KAAOqH,EAAOrH,KACnBrQ,KAAKa,MAAQ,IAAI6W,EAAO7W,MAAM+B,YAAa8U,EAAO7W,OAClDb,KAAKurC,SAAW7zB,EAAO6zB,SACvBvrC,KAAKgc,MAAQtE,EAAOsE,MACpBhc,KAAKwrC,WAAa9zB,EAAO8zB,WAEzBxrC,KAAK2rC,MAAQj0B,EAAOi0B,MACpB3rC,KAAK6rC,QAAUn0B,EAAOm0B,QAEf7rC,IAER,CAEAmsC,MAAAA,CAAQC,EAAQxhC,EAAWyhC,GAE1BD,GAAUpsC,KAAKurC,SACfc,GAAUzhC,EAAU2gC,SAEpB,IAAM,IAAIxqC,EAAI,EAAGC,EAAIhB,KAAKurC,SAAUxqC,EAAIC,EAAGD,IAE1Cf,KAAKa,MAAOurC,EAASrrC,GAAM6J,EAAU/J,MAAOwrC,EAAStrC,GAItD,OAAOf,IAER,CAEAssC,SAAAA,CAAWzrC,GAIV,OAFAb,KAAKa,MAAM+F,IAAK/F,GAETb,IAER,CAEAwI,YAAAA,CAAclG,GAEb,GAAuB,IAAlBtC,KAAKurC,SAET,IAAM,IAAIxqC,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCqqC,GAAWzgC,oBAAqB3K,KAAMe,GACtCqqC,GAAW5iC,aAAclG,GAEzBtC,KAAKusC,MAAOxrC,EAAGqqC,GAAW5oC,EAAG4oC,GAAW3oC,QAInC,GAAuB,IAAlBzC,KAAKurC,SAEhB,IAAM,IAAIxqC,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCoqC,GAAUxgC,oBAAqB3K,KAAMe,GACrCoqC,GAAU3iC,aAAclG,GAExBtC,KAAKwsC,OAAQzrC,EAAGoqC,GAAU3oC,EAAG2oC,GAAU1oC,EAAG0oC,GAAU5xB,GAMtD,OAAOvZ,IAER,CAEA4Z,YAAAA,CAActX,GAEb,IAAM,IAAIvB,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCoqC,GAAUxgC,oBAAqB3K,KAAMe,GAErCoqC,GAAUvxB,aAActX,GAExBtC,KAAKwsC,OAAQzrC,EAAGoqC,GAAU3oC,EAAG2oC,GAAU1oC,EAAG0oC,GAAU5xB,GAIrD,OAAOvZ,IAER,CAEAwiB,iBAAAA,CAAmBlgB,GAElB,IAAM,IAAIvB,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCoqC,GAAUxgC,oBAAqB3K,KAAMe,GAErCoqC,GAAU3oB,kBAAmBlgB,GAE7BtC,KAAKwsC,OAAQzrC,EAAGoqC,GAAU3oC,EAAG2oC,GAAU1oC,EAAG0oC,GAAU5xB,GAIrD,OAAOvZ,IAER,CAEAujB,kBAAAA,CAAoBjhB,GAEnB,IAAM,IAAIvB,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCoqC,GAAUxgC,oBAAqB3K,KAAMe,GAErCoqC,GAAU5nB,mBAAoBjhB,GAE9BtC,KAAKwsC,OAAQzrC,EAAGoqC,GAAU3oC,EAAG2oC,GAAU1oC,EAAG0oC,GAAU5xB,GAIrD,OAAOvZ,IAER,CAEA4G,GAAAA,CAAK3E,GAAoB,IAAbwI,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAKpB,OAFAnE,KAAKa,MAAM+F,IAAK3E,EAAOwI,GAEhBzK,IAER,CAEAyH,YAAAA,CAAcjH,EAAOisC,GAEpB,IAAIxqC,EAAQjC,KAAKa,MAAOL,EAAQR,KAAKurC,SAAWkB,GAIhD,OAFKzsC,KAAKwrC,aAAavpC,EAAQU,GAAaV,EAAOjC,KAAKa,QAEjDoB,CAER,CAEAuF,YAAAA,CAAchH,EAAOisC,EAAWxqC,GAM/B,OAJKjC,KAAKwrC,aAAavpC,EAAQoB,GAAWpB,EAAOjC,KAAKa,QAEtDb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAWkB,GAAcxqC,EAE3CjC,IAER,CAEA6K,IAAAA,CAAMrK,GAEL,IAAIgC,EAAIxC,KAAKa,MAAOL,EAAQR,KAAKurC,UAIjC,OAFKvrC,KAAKwrC,aAAahpC,EAAIG,GAAaH,EAAGxC,KAAKa,QAEzC2B,CAER,CAEA8E,IAAAA,CAAM9G,EAAOgC,GAMZ,OAJKxC,KAAKwrC,aAAahpC,EAAIa,GAAWb,EAAGxC,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,UAAa/oC,EAE/BxC,IAER,CAEA8K,IAAAA,CAAMtK,GAEL,IAAIiC,EAAIzC,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAI5C,OAFKvrC,KAAKwrC,aAAa/oC,EAAIE,GAAaF,EAAGzC,KAAKa,QAEzC4B,CAER,CAEA8E,IAAAA,CAAM/G,EAAOiC,GAMZ,OAJKzC,KAAKwrC,aAAa/oC,EAAIY,GAAWZ,EAAGzC,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAAM9oC,EAEnCzC,IAER,CAEAib,IAAAA,CAAMza,GAEL,IAAI+Y,EAAIvZ,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAI5C,OAFKvrC,KAAKwrC,aAAajyB,EAAI5W,GAAa4W,EAAGvZ,KAAKa,QAEzC0Y,CAER,CAEAG,IAAAA,CAAMlZ,EAAO+Y,GAMZ,OAJKvZ,KAAKwrC,aAAajyB,EAAIlW,GAAWkW,EAAGvZ,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAAMhyB,EAEnCvZ,IAER,CAEAkb,IAAAA,CAAM1a,GAEL,IAAIgZ,EAAIxZ,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAI5C,OAFKvrC,KAAKwrC,aAAahyB,EAAI7W,GAAa6W,EAAGxZ,KAAKa,QAEzC2Y,CAER,CAEAG,IAAAA,CAAMnZ,EAAOgZ,GAMZ,OAJKxZ,KAAKwrC,aAAahyB,EAAInW,GAAWmW,EAAGxZ,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAAM/xB,EAEnCxZ,IAER,CAEAusC,KAAAA,CAAO/rC,EAAOgC,EAAGC,GAchB,OAZAjC,GAASR,KAAKurC,SAETvrC,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,QAIxBb,KAAKa,MAAOL,EAAQ,GAAMgC,EAC1BxC,KAAKa,MAAOL,EAAQ,GAAMiC,EAEnBzC,IAER,CAEAwsC,MAAAA,CAAQhsC,EAAOgC,EAAGC,EAAG8W,GAgBpB,OAdA/Y,GAASR,KAAKurC,SAETvrC,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,OACvB0Y,EAAIlW,GAAWkW,EAAGvZ,KAAKa,QAIxBb,KAAKa,MAAOL,EAAQ,GAAMgC,EAC1BxC,KAAKa,MAAOL,EAAQ,GAAMiC,EAC1BzC,KAAKa,MAAOL,EAAQ,GAAM+Y,EAEnBvZ,IAER,CAEA0sC,OAAAA,CAASlsC,EAAOgC,EAAGC,EAAG8W,EAAGC,GAkBxB,OAhBAhZ,GAASR,KAAKurC,SAETvrC,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,OACvB0Y,EAAIlW,GAAWkW,EAAGvZ,KAAKa,OACvB2Y,EAAInW,GAAWmW,EAAGxZ,KAAKa,QAIxBb,KAAKa,MAAOL,EAAQ,GAAMgC,EAC1BxC,KAAKa,MAAOL,EAAQ,GAAMiC,EAC1BzC,KAAKa,MAAOL,EAAQ,GAAM+Y,EAC1BvZ,KAAKa,MAAOL,EAAQ,GAAMgZ,EAEnBxZ,IAER,CAEA2sC,QAAAA,CAAU3qB,GAIT,OAFAhiB,KAAK8rC,iBAAmB9pB,EAEjBhiB,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKa,MAAOb,KAAKurC,UAAW5jC,KAAM3H,KAEhE,CAEAiW,MAAAA,GAEC,MAAMT,EAAO,CACZ+1B,SAAUvrC,KAAKurC,SACf1rC,KAAMG,KAAKa,MAAM+B,YAAYyN,KAC7BxP,MAAO0V,MAAMI,KAAM3W,KAAKa,OACxB2qC,WAAYxrC,KAAKwrC,YAMlB,MAHmB,KAAdxrC,KAAKqQ,OAAcmF,EAAKnF,KAAOrQ,KAAKqQ,MACpCrQ,KAAK2rC,QAAUhtC,KAAkB6W,EAAKm2B,MAAQ3rC,KAAK2rC,OAEjDn2B,CAER,EAMD,MAAMo3B,WAA4BtB,GAEjC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAIrU,UAAWtC,GAAS0qC,EAAUC,EAE1C,EAID,MAAMqB,WAA6BvB,GAElC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAIxU,WAAYnC,GAAS0qC,EAAUC,EAE3C,EAID,MAAMsB,WAAoCxB,GAEzC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAIxH,kBAAmBnP,GAAS0qC,EAAUC,EAElD,EAID,MAAMuB,WAA6BzB,GAElC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAItU,WAAYrC,GAAS0qC,EAAUC,EAE3C,EAID,MAAMwB,WAA8B1B,GAEnC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAIzU,YAAalC,GAAS0qC,EAAUC,EAE5C,EAID,MAAMyB,WAA6B3B,GAElC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAIvU,WAAYpC,GAAS0qC,EAAUC,EAE3C,EAID,MAAM0B,WAA8B5B,GAEnC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAI1U,YAAajC,GAAS0qC,EAAUC,EAE5C,EAID,MAAM2B,WAA+B7B,GAEpC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAIzU,YAAalC,GAAS0qC,EAAUC,GAE3CxrC,KAAKotC,0BAA2B,CAEjC,CAEAviC,IAAAA,CAAMrK,GAEL,IAAIgC,EAAIyoC,GAAejrC,KAAKa,MAAOL,EAAQR,KAAKurC,WAIhD,OAFKvrC,KAAKwrC,aAAahpC,EAAIG,GAAaH,EAAGxC,KAAKa,QAEzC2B,CAER,CAEA8E,IAAAA,CAAM9G,EAAOgC,GAMZ,OAJKxC,KAAKwrC,aAAahpC,EAAIa,GAAWb,EAAGxC,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,UAAaR,GAAavoC,GAE5CxC,IAER,CAEA8K,IAAAA,CAAMtK,GAEL,IAAIiC,EAAIwoC,GAAejrC,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,IAI3D,OAFKvrC,KAAKwrC,aAAa/oC,EAAIE,GAAaF,EAAGzC,KAAKa,QAEzC4B,CAER,CAEA8E,IAAAA,CAAM/G,EAAOiC,GAMZ,OAJKzC,KAAKwrC,aAAa/oC,EAAIY,GAAWZ,EAAGzC,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAAMR,GAAatoC,GAEhDzC,IAER,CAEAib,IAAAA,CAAMza,GAEL,IAAI+Y,EAAI0xB,GAAejrC,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,IAI3D,OAFKvrC,KAAKwrC,aAAajyB,EAAI5W,GAAa4W,EAAGvZ,KAAKa,QAEzC0Y,CAER,CAEAG,IAAAA,CAAMlZ,EAAO+Y,GAMZ,OAJKvZ,KAAKwrC,aAAajyB,EAAIlW,GAAWkW,EAAGvZ,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAAMR,GAAaxxB,GAEhDvZ,IAER,CAEAkb,IAAAA,CAAM1a,GAEL,IAAIgZ,EAAIyxB,GAAejrC,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,IAI3D,OAFKvrC,KAAKwrC,aAAahyB,EAAI7W,GAAa6W,EAAGxZ,KAAKa,QAEzC2Y,CAER,CAEAG,IAAAA,CAAMnZ,EAAOgZ,GAMZ,OAJKxZ,KAAKwrC,aAAahyB,EAAInW,GAAWmW,EAAGxZ,KAAKa,QAE9Cb,KAAKa,MAAOL,EAAQR,KAAKurC,SAAW,GAAMR,GAAavxB,GAEhDxZ,IAER,CAEAusC,KAAAA,CAAO/rC,EAAOgC,EAAGC,GAchB,OAZAjC,GAASR,KAAKurC,SAETvrC,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,QAIxBb,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAavoC,GACvCxC,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAatoC,GAEhCzC,IAER,CAEAwsC,MAAAA,CAAQhsC,EAAOgC,EAAGC,EAAG8W,GAgBpB,OAdA/Y,GAASR,KAAKurC,SAETvrC,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,OACvB0Y,EAAIlW,GAAWkW,EAAGvZ,KAAKa,QAIxBb,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAavoC,GACvCxC,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAatoC,GACvCzC,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAaxxB,GAEhCvZ,IAER,CAEA0sC,OAAAA,CAASlsC,EAAOgC,EAAGC,EAAG8W,EAAGC,GAkBxB,OAhBAhZ,GAASR,KAAKurC,SAETvrC,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,OACvB0Y,EAAIlW,GAAWkW,EAAGvZ,KAAKa,OACvB2Y,EAAInW,GAAWmW,EAAGxZ,KAAKa,QAIxBb,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAavoC,GACvCxC,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAatoC,GACvCzC,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAaxxB,GACvCvZ,KAAKa,MAAOL,EAAQ,GAAMuqC,GAAavxB,GAEhCxZ,IAER,EAKD,MAAMqtC,WAA+B/B,GAEpC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAE7Bh0B,MAAO,IAAI3U,aAAchC,GAAS0qC,EAAUC,EAE7C,EAID,IAAI8B,GAAQ,EAEZ,MAAMC,GAAoB,IAAI3f,GACxB4f,GAAqB,IAAIrY,GACzBsY,GAAwB,IAAIxrB,GAC5ByrB,GAAuB,IAAIvoB,GAC3BwoB,GAAiC,IAAIxoB,GACrCyoB,GAA0B,IAAI3rB,GAEpC,MAAM4rB,WAAuBluC,GAE5BiD,WAAAA,GAEC4U,QAEAxX,KAAK8tC,kBAAmB,EAExBt6B,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAOqrC,OAE5CttC,KAAK6V,KAAOpU,KAEZzB,KAAKqQ,KAAO,GACZrQ,KAAKH,KAAO,iBAEZG,KAAKQ,MAAQ,KACbR,KAAK+tC,SAAW,KAChB/tC,KAAKguC,WAAa,CAAC,EAEnBhuC,KAAKiuC,gBAAkB,CAAC,EACxBjuC,KAAKkuC,sBAAuB,EAE5BluC,KAAKmuC,OAAS,GAEdnuC,KAAKmnB,YAAc,KACnBnnB,KAAK+7B,eAAiB,KAEtB/7B,KAAKouC,UAAY,CAAEnC,MAAO,EAAGjwB,MAAOoJ,KAEpCplB,KAAKoY,SAAW,CAAC,CAElB,CAEAi2B,QAAAA,GAEC,OAAOruC,KAAKQ,KAEb,CAEA8tC,QAAAA,CAAU9tC,GAYT,OAVK+V,MAAMC,QAAShW,GAEnBR,KAAKQ,MAAQ,IAAMsP,GAAkBtP,GAAU0sC,GAAwBF,IAAyBxsC,EAAO,GAIvGR,KAAKQ,MAAQA,EAIPR,IAER,CAEAuuC,WAAAA,CAAaR,GAIZ,OAFA/tC,KAAK+tC,SAAWA,EAET/tC,IAER,CAEAwuC,WAAAA,GAEC,OAAOxuC,KAAK+tC,QAEb,CAEAhnB,YAAAA,CAAc1W,GAEb,OAAOrQ,KAAKguC,WAAY39B,EAEzB,CAEAo+B,YAAAA,CAAcp+B,EAAMzF,GAInB,OAFA5K,KAAKguC,WAAY39B,GAASzF,EAEnB5K,IAER,CAEA0uC,eAAAA,CAAiBr+B,GAIhB,cAFOrQ,KAAKguC,WAAY39B,GAEjBrQ,IAER,CAEA2uC,YAAAA,CAAct+B,GAEb,YAAmCtQ,IAA5BC,KAAKguC,WAAY39B,EAEzB,CAEAu+B,QAAAA,CAAU3C,EAAOjwB,GAA2B,IAApB6yB,EAAa1qC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEvCnE,KAAKmuC,OAAO/tC,KAAM,CAEjB6rC,MAAOA,EACPjwB,MAAOA,EACP6yB,cAAeA,GAIjB,CAEAC,WAAAA,GAEC9uC,KAAKmuC,OAAS,EAEf,CAEAY,YAAAA,CAAc9C,EAAOjwB,GAEpBhc,KAAKouC,UAAUnC,MAAQA,EACvBjsC,KAAKouC,UAAUpyB,MAAQA,CAExB,CAEApC,YAAAA,CAAc/J,GAEb,MAAM4hB,EAAWzxB,KAAKguC,WAAWvc,cAEf1xB,IAAb0xB,IAEJA,EAAS7X,aAAc/J,GAEvB4hB,EAASzb,aAAc,GAIxB,MAAMoO,EAASpkB,KAAKguC,WAAW5pB,OAE/B,QAAgBrkB,IAAXqkB,EAAuB,CAE3B,MAAMuR,GAAe,IAAIxqB,IAAUuD,gBAAiBmB,GAEpDuU,EAAO5B,kBAAmBmT,GAE1BvR,EAAOpO,aAAc,CAEtB,CAEA,MAAMg5B,EAAUhvC,KAAKguC,WAAWgB,QAsBhC,YApBiBjvC,IAAZivC,IAEJA,EAAQzrB,mBAAoB1T,GAE5Bm/B,EAAQh5B,aAAc,GAIG,OAArBhW,KAAKmnB,aAETnnB,KAAKonB,qBAIuB,OAAxBpnB,KAAK+7B,gBAET/7B,KAAKivC,wBAICjvC,IAER,CAEAqiB,eAAAA,CAAiBxc,GAMhB,OAJA0nC,GAAI/d,2BAA4B3pB,GAEhC7F,KAAK4Z,aAAc2zB,IAEZvtC,IAER,CAEAg3B,OAAAA,CAASztB,GAQR,OAJAgkC,GAAItc,cAAe1nB,GAEnBvJ,KAAK4Z,aAAc2zB,IAEZvtC,IAER,CAEAi3B,OAAAA,CAAS1tB,GAQR,OAJAgkC,GAAIrc,cAAe3nB,GAEnBvJ,KAAK4Z,aAAc2zB,IAEZvtC,IAER,CAEAk3B,OAAAA,CAAS3tB,GAQR,OAJAgkC,GAAIpc,cAAe5nB,GAEnBvJ,KAAK4Z,aAAc2zB,IAEZvtC,IAER,CAEA2P,SAAAA,CAAWnN,EAAGC,EAAG8W,GAQhB,OAJAg0B,GAAI39B,gBAAiBpN,EAAGC,EAAG8W,GAE3BvZ,KAAK4Z,aAAc2zB,IAEZvtC,IAER,CAEAsP,KAAAA,CAAO9M,EAAGC,EAAG8W,GAQZ,OAJAg0B,GAAI/9B,UAAWhN,EAAGC,EAAG8W,GAErBvZ,KAAK4Z,aAAc2zB,IAEZvtC,IAER,CAEAkrB,MAAAA,CAAQxE,GAQP,OANA8mB,GAAKtiB,OAAQxE,GAEb8mB,GAAK/0B,eAELzY,KAAK4Z,aAAc4zB,GAAK39B,QAEjB7P,IAER,CAEAgL,MAAAA,GAQC,OANAhL,KAAKonB,qBAELpnB,KAAKmnB,YAAYb,UAAWmnB,IAAUxkC,SAEtCjJ,KAAK2P,UAAW89B,GAAQjrC,EAAGirC,GAAQhrC,EAAGgrC,GAAQl0B,GAEvCvZ,IAER,CAEA2lB,aAAAA,CAAeC,GAEd,MAAMkB,EAAoB9mB,KAAK+mB,aAAc,YAE7C,QAA2BhnB,IAAtB+mB,EAAkC,CAEtC,MAAM2K,EAAW,GAEjB,IAAM,IAAI1wB,EAAI,EAAGC,EAAI4kB,EAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMylB,EAAQZ,EAAQ7kB,GACtB0wB,EAASrxB,KAAMomB,EAAMhkB,EAAGgkB,EAAM/jB,EAAG+jB,EAAMjN,GAAK,EAE7C,CAEAvZ,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB5b,EAAU,GAEtE,KAAO,CAEN,MAAMzwB,EAAIM,KAAKY,IAAK0jB,EAAO3kB,OAAQ6lB,EAAkB9K,OAErD,IAAM,IAAIjb,EAAI,EAAGA,EAAIC,EAAGD,IAAO,CAE9B,MAAMylB,EAAQZ,EAAQ7kB,GACtB+lB,EAAkB0lB,OAAQzrC,EAAGylB,EAAMhkB,EAAGgkB,EAAM/jB,EAAG+jB,EAAMjN,GAAK,EAE3D,CAEKqM,EAAO3kB,OAAS6lB,EAAkB9K,OAEtCnV,QAAQC,KAAM,0GAIfggB,EAAkB9Q,aAAc,CAEjC,CAEA,OAAOhW,IAER,CAEAonB,kBAAAA,GAE2B,OAArBpnB,KAAKmnB,cAETnnB,KAAKmnB,YAAc,IAAIhC,IAIxB,MAAMsM,EAAWzxB,KAAKguC,WAAWvc,SAC3Byd,EAA0BlvC,KAAKiuC,gBAAgBxc,SAErD,GAAKA,GAAYA,EAAS0d,oBASzB,OAPAtoC,QAAQ+wB,MAAO,+FAAgG53B,WAE/GA,KAAKmnB,YAAYvgB,IAChB,IAAIqb,IAAWmD,KAAYA,KAAYA,KACvC,IAAInD,GAAWmD,IAAYA,IAAYA,MAOzC,QAAkBrlB,IAAb0xB,GAMJ,GAJAzxB,KAAKmnB,YAAYzB,uBAAwB+L,GAIpCyd,EAEJ,IAAM,IAAInuC,EAAI,EAAGsb,EAAK6yB,EAAwBjuC,OAAQF,EAAIsb,EAAItb,IAAO,CAEpE,MAAMquC,EAAiBF,EAAyBnuC,GAChD2sC,GAAOhoB,uBAAwB0pB,GAE1BpvC,KAAKkuC,sBAETN,GAAU7lC,WAAY/H,KAAKmnB,YAAYjlB,IAAKwrC,GAAOxrC,KACnDlC,KAAKmnB,YAAY3B,cAAeooB,IAEhCA,GAAU7lC,WAAY/H,KAAKmnB,YAAYhlB,IAAKurC,GAAOvrC,KACnDnC,KAAKmnB,YAAY3B,cAAeooB,MAIhC5tC,KAAKmnB,YAAY3B,cAAekoB,GAAOxrC,KACvClC,KAAKmnB,YAAY3B,cAAekoB,GAAOvrC,KAIzC,OAMDnC,KAAKmnB,YAAY5B,aAIb6H,MAAOptB,KAAKmnB,YAAYjlB,IAAIM,IAAO4qB,MAAOptB,KAAKmnB,YAAYjlB,IAAIO,IAAO2qB,MAAOptB,KAAKmnB,YAAYjlB,IAAIqX,KAEtG1S,QAAQ+wB,MAAO,sIAAuI53B,KAIxJ,CAEAivC,qBAAAA,GAE8B,OAAxBjvC,KAAK+7B,iBAET/7B,KAAK+7B,eAAiB,IAAIlS,IAI3B,MAAM4H,EAAWzxB,KAAKguC,WAAWvc,SAC3Byd,EAA0BlvC,KAAKiuC,gBAAgBxc,SAErD,GAAKA,GAAYA,EAAS0d,oBAMzB,OAJAtoC,QAAQ+wB,MAAO,qGAAsG53B,WAErHA,KAAK+7B,eAAen1B,IAAK,IAAIqb,GAAWmD,KAMzC,GAAKqM,EAAW,CAIf,MAAMzmB,EAAShL,KAAK+7B,eAAe/wB,OAMnC,GAJA0iC,GAAOhoB,uBAAwB+L,GAI1Byd,EAEJ,IAAM,IAAInuC,EAAI,EAAGsb,EAAK6yB,EAAwBjuC,OAAQF,EAAIsb,EAAItb,IAAO,CAEpE,MAAMquC,EAAiBF,EAAyBnuC,GAChD4sC,GAAiBjoB,uBAAwB0pB,GAEpCpvC,KAAKkuC,sBAETN,GAAU7lC,WAAY2lC,GAAOxrC,IAAKyrC,GAAiBzrC,KACnDwrC,GAAOloB,cAAeooB,IAEtBA,GAAU7lC,WAAY2lC,GAAOvrC,IAAKwrC,GAAiBxrC,KACnDurC,GAAOloB,cAAeooB,MAItBF,GAAOloB,cAAemoB,GAAiBzrC,KACvCwrC,GAAOloB,cAAemoB,GAAiBxrC,KAIzC,CAIDurC,GAAOpnB,UAAWtb,GAKlB,IAAIgf,EAAc,EAElB,IAAM,IAAIjpB,EAAI,EAAGsb,EAAKoV,EAASzV,MAAOjb,EAAIsb,EAAItb,IAE7C6sC,GAAUjjC,oBAAqB8mB,EAAU1wB,GAEzCipB,EAAc1oB,KAAKa,IAAK6nB,EAAahf,EAAOlB,kBAAmB8jC,KAMhE,GAAKsB,EAEJ,IAAM,IAAInuC,EAAI,EAAGsb,EAAK6yB,EAAwBjuC,OAAQF,EAAIsb,EAAItb,IAAO,CAEpE,MAAMquC,EAAiBF,EAAyBnuC,GAC1CmtC,EAAuBluC,KAAKkuC,qBAElC,IAAM,IAAI5kB,EAAI,EAAG+lB,EAAKD,EAAepzB,MAAOsN,EAAI+lB,EAAI/lB,IAEnDskB,GAAUjjC,oBAAqBykC,EAAgB9lB,GAE1C4kB,IAEJT,GAAQ9iC,oBAAqB8mB,EAAUnI,GACvCskB,GAAU/lC,IAAK4lC,KAIhBzjB,EAAc1oB,KAAKa,IAAK6nB,EAAahf,EAAOlB,kBAAmB8jC,IAIjE,CAID5tC,KAAK+7B,eAAevX,OAASljB,KAAK+H,KAAM2gB,GAEnCoD,MAAOptB,KAAK+7B,eAAevX,SAE/B3d,QAAQ+wB,MAAO,+HAAgI53B,KAIjJ,CAED,CAEAsvC,eAAAA,GAEC,MAAM9uC,EAAQR,KAAKQ,MACbwtC,EAAahuC,KAAKguC,WAKxB,GAAe,OAAVxtC,QACqBT,IAAxBiuC,EAAWvc,eACW1xB,IAAtBiuC,EAAW5pB,aACOrkB,IAAlBiuC,EAAW50B,GAGZ,YADAvS,QAAQ+wB,MAAO,gHAKhB,MAAM9Q,EAAoBknB,EAAWvc,SAC/B8d,EAAkBvB,EAAW5pB,OAC7BorB,EAAcxB,EAAW50B,IAES,IAAnCpZ,KAAK2uC,aAAc,YAEvB3uC,KAAKyuC,aAAc,UAAW,IAAInD,GAAiB,IAAIzoC,aAAc,EAAIikB,EAAkB9K,OAAS,IAIrG,MAAMyzB,EAAmBzvC,KAAK+mB,aAAc,WAEtC2oB,EAAO,GAAIC,EAAO,GAExB,IAAM,IAAI5uC,EAAI,EAAGA,EAAI+lB,EAAkB9K,MAAOjb,IAE7C2uC,EAAM3uC,GAAM,IAAIkhB,GAChB0tB,EAAM5uC,GAAM,IAAIkhB,GAIjB,MAAM2tB,EAAK,IAAI3tB,GACd4tB,EAAK,IAAI5tB,GACT6tB,EAAK,IAAI7tB,GAET8tB,EAAM,IAAIhpC,GACVipC,EAAM,IAAIjpC,GACVkpC,EAAM,IAAIlpC,GAEVmpC,EAAO,IAAIjuB,GACXkuB,EAAO,IAAIluB,GAEZ,SAASmuB,EAAgBtqC,EAAGC,EAAGC,GAE9B4pC,EAAGjlC,oBAAqBmc,EAAmBhhB,GAC3C+pC,EAAGllC,oBAAqBmc,EAAmB/gB,GAC3C+pC,EAAGnlC,oBAAqBmc,EAAmB9gB,GAE3C+pC,EAAIplC,oBAAqB6kC,EAAa1pC,GACtCkqC,EAAIrlC,oBAAqB6kC,EAAazpC,GACtCkqC,EAAItlC,oBAAqB6kC,EAAaxpC,GAEtC6pC,EAAG5nC,IAAK2nC,GACRE,EAAG7nC,IAAK2nC,GAERI,EAAI/nC,IAAK8nC,GACTE,EAAIhoC,IAAK8nC,GAET,MAAMlhC,EAAI,GAAQmhC,EAAIxtC,EAAIytC,EAAIxtC,EAAIwtC,EAAIztC,EAAIwtC,EAAIvtC,GAIvC4tC,SAAUxhC,KAEjBqhC,EAAKvoC,KAAMkoC,GAAKxnC,eAAgB4nC,EAAIxtC,GAAIuF,gBAAiB8nC,GAAME,EAAIvtC,GAAI4F,eAAgBwG,GACvFshC,EAAKxoC,KAAMmoC,GAAKznC,eAAgB2nC,EAAIxtC,GAAIwF,gBAAiB6nC,GAAMI,EAAIztC,GAAI6F,eAAgBwG,GAEvF6gC,EAAM5pC,GAAI+B,IAAKqoC,GACfR,EAAM3pC,GAAI8B,IAAKqoC,GACfR,EAAM1pC,GAAI6B,IAAKqoC,GAEfP,EAAM7pC,GAAI+B,IAAKsoC,GACfR,EAAM5pC,GAAI8B,IAAKsoC,GACfR,EAAM3pC,GAAI6B,IAAKsoC,GAEhB,CAEA,IAAIhC,EAASnuC,KAAKmuC,OAEK,IAAlBA,EAAOltC,SAEXktC,EAAS,CAAE,CACVlC,MAAO,EACPjwB,MAAOxb,EAAMwb,SAKf,IAAM,IAAIjb,EAAI,EAAGsb,EAAK8xB,EAAOltC,OAAQF,EAAIsb,IAAOtb,EAAI,CAEnD,MAAMuvC,EAAQnC,EAAQptC,GAEhBkrC,EAAQqE,EAAMrE,MAGpB,IAAM,IAAI3iB,EAAI2iB,EAAOoD,EAAKpD,EAFZqE,EAAMt0B,MAEqBsN,EAAI+lB,EAAI/lB,GAAK,EAErD8mB,EACC5vC,EAAMqK,KAAMye,EAAI,GAChB9oB,EAAMqK,KAAMye,EAAI,GAChB9oB,EAAMqK,KAAMye,EAAI,GAKnB,CAEA,MAAM7a,EAAM,IAAIwT,GAAWsuB,EAAO,IAAItuB,GAChC5f,EAAI,IAAI4f,GAAWuuB,EAAK,IAAIvuB,GAElC,SAASwuB,EAAc7oC,GAEtBvF,EAAEsI,oBAAqB4kC,EAAiB3nC,GACxC4oC,EAAG7oC,KAAMtF,GAET,MAAMK,EAAIgtC,EAAM9nC,GAIhB6G,EAAI9G,KAAMjF,GACV+L,EAAIxG,IAAK5F,EAAEgG,eAAgBhG,EAAE6G,IAAKxG,KAAQW,YAI1CktC,EAAK/sB,aAAcgtB,EAAI9tC,GACvB,MACM8W,EADO+2B,EAAKrnC,IAAKymC,EAAM/nC,IACV,GAAU,EAAM,EAEnC6nC,EAAiB/C,QAAS9kC,EAAG6G,EAAIjM,EAAGiM,EAAIhM,EAAGgM,EAAI8K,EAAGC,EAEnD,CAEA,IAAM,IAAIzY,EAAI,EAAGsb,EAAK8xB,EAAOltC,OAAQF,EAAIsb,IAAOtb,EAAI,CAEnD,MAAMuvC,EAAQnC,EAAQptC,GAEhBkrC,EAAQqE,EAAMrE,MAGpB,IAAM,IAAI3iB,EAAI2iB,EAAOoD,EAAKpD,EAFZqE,EAAMt0B,MAEqBsN,EAAI+lB,EAAI/lB,GAAK,EAErDmnB,EAAcjwC,EAAMqK,KAAMye,EAAI,IAC9BmnB,EAAcjwC,EAAMqK,KAAMye,EAAI,IAC9BmnB,EAAcjwC,EAAMqK,KAAMye,EAAI,GAIhC,CAED,CAEAonB,oBAAAA,GAEC,MAAMlwC,EAAQR,KAAKQ,MACbsmB,EAAoB9mB,KAAK+mB,aAAc,YAE7C,QAA2BhnB,IAAtB+mB,EAAkC,CAEtC,IAAIyoB,EAAkBvvC,KAAK+mB,aAAc,UAEzC,QAAyBhnB,IAApBwvC,EAEJA,EAAkB,IAAIjE,GAAiB,IAAIzoC,aAAwC,EAA1BikB,EAAkB9K,OAAa,GACxFhc,KAAKyuC,aAAc,SAAUc,QAM7B,IAAM,IAAIxuC,EAAI,EAAGsb,EAAKkzB,EAAgBvzB,MAAOjb,EAAIsb,EAAItb,IAEpDwuC,EAAgB/C,OAAQzrC,EAAG,EAAG,EAAG,GAMnC,MAAM4vC,EAAK,IAAI1uB,GAAW2uB,EAAK,IAAI3uB,GAAW4uB,EAAK,IAAI5uB,GACjD6uB,EAAK,IAAI7uB,GAAW8uB,EAAK,IAAI9uB,GAAW+uB,EAAK,IAAI/uB,GACjDgvB,EAAK,IAAIhvB,GAAWivB,EAAK,IAAIjvB,GAInC,GAAKzhB,EAEJ,IAAM,IAAIO,EAAI,EAAGsb,EAAK7b,EAAMwb,MAAOjb,EAAIsb,EAAItb,GAAK,EAAI,CAEnD,MAAM6uC,EAAKpvC,EAAMqK,KAAM9J,EAAI,GACrB8uC,EAAKrvC,EAAMqK,KAAM9J,EAAI,GACrB+uC,EAAKtvC,EAAMqK,KAAM9J,EAAI,GAE3B4vC,EAAGhmC,oBAAqBmc,EAAmB8oB,GAC3CgB,EAAGjmC,oBAAqBmc,EAAmB+oB,GAC3CgB,EAAGlmC,oBAAqBmc,EAAmBgpB,GAE3CmB,EAAG9oC,WAAY0oC,EAAID,GACnBM,EAAG/oC,WAAYwoC,EAAIC,GACnBK,EAAG9nC,MAAO+nC,GAEVJ,EAAGnmC,oBAAqB4kC,EAAiBK,GACzCmB,EAAGpmC,oBAAqB4kC,EAAiBM,GACzCmB,EAAGrmC,oBAAqB4kC,EAAiBO,GAEzCgB,EAAGjpC,IAAKopC,GACRF,EAAGlpC,IAAKopC,GACRD,EAAGnpC,IAAKopC,GAER1B,EAAgB/C,OAAQoD,EAAIkB,EAAGtuC,EAAGsuC,EAAGruC,EAAGquC,EAAGv3B,GAC3Cg2B,EAAgB/C,OAAQqD,EAAIkB,EAAGvuC,EAAGuuC,EAAGtuC,EAAGsuC,EAAGx3B,GAC3Cg2B,EAAgB/C,OAAQsD,EAAIkB,EAAGxuC,EAAGwuC,EAAGvuC,EAAGuuC,EAAGz3B,EAE5C,MAMA,IAAM,IAAIxY,EAAI,EAAGsb,EAAKyK,EAAkB9K,MAAOjb,EAAIsb,EAAItb,GAAK,EAE3D4vC,EAAGhmC,oBAAqBmc,EAAmB/lB,EAAI,GAC/C6vC,EAAGjmC,oBAAqBmc,EAAmB/lB,EAAI,GAC/C8vC,EAAGlmC,oBAAqBmc,EAAmB/lB,EAAI,GAE/CkwC,EAAG9oC,WAAY0oC,EAAID,GACnBM,EAAG/oC,WAAYwoC,EAAIC,GACnBK,EAAG9nC,MAAO+nC,GAEV3B,EAAgB/C,OAAQzrC,EAAI,EAAGkwC,EAAGzuC,EAAGyuC,EAAGxuC,EAAGwuC,EAAG13B,GAC9Cg2B,EAAgB/C,OAAQzrC,EAAI,EAAGkwC,EAAGzuC,EAAGyuC,EAAGxuC,EAAGwuC,EAAG13B,GAC9Cg2B,EAAgB/C,OAAQzrC,EAAI,EAAGkwC,EAAGzuC,EAAGyuC,EAAGxuC,EAAGwuC,EAAG13B,GAMhDvZ,KAAKmxC,mBAEL5B,EAAgBv5B,aAAc,CAE/B,CAED,CAEAm7B,gBAAAA,GAEC,MAAMC,EAAUpxC,KAAKguC,WAAW5pB,OAEhC,IAAM,IAAIrjB,EAAI,EAAGsb,EAAK+0B,EAAQp1B,MAAOjb,EAAIsb,EAAItb,IAE5C6sC,GAAUjjC,oBAAqBymC,EAASrwC,GAExC6sC,GAAUvqC,YAEV+tC,EAAQ5E,OAAQzrC,EAAG6sC,GAAUprC,EAAGorC,GAAUnrC,EAAGmrC,GAAUr0B,EAIzD,CAEA83B,YAAAA,GAEC,SAASC,EAAwB1mC,EAAW2mC,GAE3C,MAAM1wC,EAAQ+J,EAAU/J,MAClB0qC,EAAW3gC,EAAU2gC,SACrBC,EAAa5gC,EAAU4gC,WAEvBgG,EAAS,IAAI3wC,EAAM+B,YAAa2uC,EAAQtwC,OAASsqC,GAEvD,IAAI/qC,EAAQ,EAAG6rC,EAAS,EAExB,IAAM,IAAItrC,EAAI,EAAGC,EAAIuwC,EAAQtwC,OAAQF,EAAIC,EAAGD,IAAO,CAIjDP,EAFIoK,EAAU6mC,6BAENF,EAASxwC,GAAM6J,EAAU4K,KAAKk8B,OAAS9mC,EAAUH,OAIjD8mC,EAASxwC,GAAMwqC,EAIxB,IAAM,IAAIjiB,EAAI,EAAGA,EAAIiiB,EAAUjiB,IAE9BkoB,EAAQnF,KAAcxrC,EAAOL,IAI/B,CAEA,OAAO,IAAI8qC,GAAiBkG,EAAQjG,EAAUC,EAE/C,CAIA,GAAoB,OAAfxrC,KAAKQ,MAGT,OADAqG,QAAQC,KAAM,+EACP9G,KAIR,MAAM2xC,EAAY,IAAI9D,GAEhB0D,EAAUvxC,KAAKQ,MAAMK,MACrBmtC,EAAahuC,KAAKguC,WAIxB,IAAM,MAAM39B,KAAQ29B,EAAa,CAEhC,MAEM4D,EAAeN,EAFHtD,EAAY39B,GAE0BkhC,GAExDI,EAAUlD,aAAcp+B,EAAMuhC,EAE/B,CAIA,MAAM3D,EAAkBjuC,KAAKiuC,gBAE7B,IAAM,MAAM59B,KAAQ49B,EAAkB,CAErC,MAAM4D,EAAa,GACbzC,EAAiBnB,EAAiB59B,GAExC,IAAM,IAAItP,EAAI,EAAGsb,EAAK+yB,EAAenuC,OAAQF,EAAIsb,EAAItb,IAAO,CAE3D,MAEM6wC,EAAeN,EAFHlC,EAAgBruC,GAEsBwwC,GAExDM,EAAWzxC,KAAMwxC,EAElB,CAEAD,EAAU1D,gBAAiB59B,GAASwhC,CAErC,CAEAF,EAAUzD,qBAAuBluC,KAAKkuC,qBAItC,MAAMC,EAASnuC,KAAKmuC,OAEpB,IAAM,IAAIptC,EAAI,EAAGC,EAAImtC,EAAOltC,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMuvC,EAAQnC,EAAQptC,GACtB4wC,EAAU/C,SAAU0B,EAAMrE,MAAOqE,EAAMt0B,MAAOs0B,EAAMzB,cAErD,CAEA,OAAO8C,CAER,CAEA17B,MAAAA,GAEC,MAAMT,EAAO,CACZsD,SAAU,CACT/C,QAAS,IACTlW,KAAM,iBACNkZ,UAAW,0BAWb,GALAvD,EAAKK,KAAO7V,KAAK6V,KACjBL,EAAK3V,KAAOG,KAAKH,KACE,KAAdG,KAAKqQ,OAAcmF,EAAKnF,KAAOrQ,KAAKqQ,MACpCmD,OAAOyF,KAAMjZ,KAAKoY,UAAWnX,OAAS,IAAIuU,EAAK4C,SAAWpY,KAAKoY,eAE3CrY,IAApBC,KAAKs8B,WAA2B,CAEpC,MAAMA,EAAat8B,KAAKs8B,WAExB,IAAM,MAAMY,KAAOZ,OAESv8B,IAAtBu8B,EAAYY,KAAsB1nB,EAAM0nB,GAAQZ,EAAYY,IAIlE,OAAO1nB,CAER,CAIAA,EAAKA,KAAO,CAAEw4B,WAAY,CAAC,GAE3B,MAAMxtC,EAAQR,KAAKQ,MAEJ,OAAVA,IAEJgV,EAAKA,KAAKhV,MAAQ,CACjBX,KAAMW,EAAMK,MAAM+B,YAAYyN,KAC9BxP,MAAO0V,MAAMvP,UAAUlG,MAAMI,KAAMV,EAAMK,SAK3C,MAAMmtC,EAAahuC,KAAKguC,WAExB,IAAM,MAAM9Q,KAAO8Q,EAAa,CAE/B,MAAMpjC,EAAYojC,EAAY9Q,GAE9B1nB,EAAKA,KAAKw4B,WAAY9Q,GAAQtyB,EAAUqL,OAAQT,EAAKA,KAEtD,CAEA,MAAMy4B,EAAkB,CAAC,EACzB,IAAI6D,GAAqB,EAEzB,IAAM,MAAM5U,KAAOl9B,KAAKiuC,gBAAkB,CAEzC,MAAM8D,EAAiB/xC,KAAKiuC,gBAAiB/Q,GAEvCr8B,EAAQ,GAEd,IAAM,IAAIE,EAAI,EAAGsb,EAAK01B,EAAe9wC,OAAQF,EAAIsb,EAAItb,IAAO,CAE3D,MAAM6J,EAAYmnC,EAAgBhxC,GAElCF,EAAMT,KAAMwK,EAAUqL,OAAQT,EAAKA,MAEpC,CAEK3U,EAAMI,OAAS,IAEnBgtC,EAAiB/Q,GAAQr8B,EAEzBixC,GAAqB,EAIvB,CAEKA,IAEJt8B,EAAKA,KAAKy4B,gBAAkBA,EAC5Bz4B,EAAKA,KAAK04B,qBAAuBluC,KAAKkuC,sBAIvC,MAAMC,EAASnuC,KAAKmuC,OAEfA,EAAOltC,OAAS,IAEpBuU,EAAKA,KAAK24B,OAASz1B,KAAKC,MAAOD,KAAKE,UAAWu1B,KAIhD,MAAMpS,EAAiB/7B,KAAK+7B,eAW5B,OATwB,OAAnBA,IAEJvmB,EAAKA,KAAKumB,eAAiB,CAC1B/wB,OAAQ+wB,EAAe/wB,OAAON,UAC9B8Z,OAAQuX,EAAevX,SAKlBhP,CAER,CAEA9N,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAM+P,GAIL1X,KAAKQ,MAAQ,KACbR,KAAKguC,WAAa,CAAC,EACnBhuC,KAAKiuC,gBAAkB,CAAC,EACxBjuC,KAAKmuC,OAAS,GACdnuC,KAAKmnB,YAAc,KACnBnnB,KAAK+7B,eAAiB,KAItB,MAAMvmB,EAAO,CAAC,EAIdxV,KAAKqQ,KAAOqH,EAAOrH,KAInB,MAAM7P,EAAQkX,EAAOlX,MAEN,OAAVA,GAEJR,KAAKsuC,SAAU9tC,EAAMkH,MAAO8N,IAM7B,MAAMw4B,EAAat2B,EAAOs2B,WAE1B,IAAM,MAAM39B,KAAQ29B,EAAa,CAEhC,MAAMpjC,EAAYojC,EAAY39B,GAC9BrQ,KAAKyuC,aAAcp+B,EAAMzF,EAAUlD,MAAO8N,GAE3C,CAIA,MAAMy4B,EAAkBv2B,EAAOu2B,gBAE/B,IAAM,MAAM59B,KAAQ49B,EAAkB,CAErC,MAAMptC,EAAQ,GACRuuC,EAAiBnB,EAAiB59B,GAExC,IAAM,IAAItP,EAAI,EAAGC,EAAIouC,EAAenuC,OAAQF,EAAIC,EAAGD,IAElDF,EAAMT,KAAMgvC,EAAgBruC,GAAI2G,MAAO8N,IAIxCxV,KAAKiuC,gBAAiB59B,GAASxP,CAEhC,CAEAb,KAAKkuC,qBAAuBx2B,EAAOw2B,qBAInC,MAAMC,EAASz2B,EAAOy2B,OAEtB,IAAM,IAAIptC,EAAI,EAAGC,EAAImtC,EAAOltC,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMuvC,EAAQnC,EAAQptC,GACtBf,KAAK4uC,SAAU0B,EAAMrE,MAAOqE,EAAMt0B,MAAOs0B,EAAMzB,cAEhD,CAIA,MAAM1nB,EAAczP,EAAOyP,YAEN,OAAhBA,IAEJnnB,KAAKmnB,YAAcA,EAAYzf,SAMhC,MAAMq0B,EAAiBrkB,EAAOqkB,eAiB9B,OAfwB,OAAnBA,IAEJ/7B,KAAK+7B,eAAiBA,EAAer0B,SAMtC1H,KAAKouC,UAAUnC,MAAQv0B,EAAO02B,UAAUnC,MACxCjsC,KAAKouC,UAAUpyB,MAAQtE,EAAO02B,UAAUpyB,MAIxChc,KAAKoY,SAAWV,EAAOU,SAEhBpY,IAER,CAEAkZ,OAAAA,GAEClZ,KAAKU,cAAe,CAAEb,KAAM,WAE7B,EAID,MAAMmyC,GAAiC,IAAIpkB,GACrCqkB,GAAuB,IAAIpnB,GAC3BqnB,GAA0B,IAAIroB,GAC9BsoB,GAA6B,IAAIlwB,GAEjCmwB,GAAsB,IAAInwB,GAC1BowB,GAAsB,IAAIpwB,GAC1BqwB,GAAsB,IAAIrwB,GAE1BswB,GAAuB,IAAItwB,GAC3BuwB,GAAwB,IAAIvwB,GAE5BwwB,GAAmC,IAAIxwB,GACvCywB,GAAwC,IAAIzwB,GAElD,MAAM0wB,WAAaxd,GAElBvyB,WAAAA,GAAmF,IAAtEikB,EAAQ1iB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI0pC,GAAkBjR,EAAQz4B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAIgmC,GAE5D3yB,QAEAxX,KAAKinB,QAAS,EAEdjnB,KAAKH,KAAO,OAEZG,KAAK6mB,SAAWA,EAChB7mB,KAAK48B,SAAWA,EAEhB58B,KAAK4yC,oBAEN,CAEAjrC,IAAAA,CAAM+P,EAAQylB,GAmBb,OAjBA3lB,MAAM7P,KAAM+P,EAAQylB,QAEkBp9B,IAAjC2X,EAAOm7B,wBAEX7yC,KAAK6yC,sBAAwBn7B,EAAOm7B,sBAAsB/xC,cAIrBf,IAAjC2X,EAAOo7B,wBAEX9yC,KAAK8yC,sBAAwBt/B,OAAOC,OAAQ,CAAC,EAAGiE,EAAOo7B,wBAIxD9yC,KAAK48B,SAAWrmB,MAAMC,QAASkB,EAAOklB,UAAallB,EAAOklB,SAAS97B,QAAU4W,EAAOklB,SACpF58B,KAAK6mB,SAAWnP,EAAOmP,SAEhB7mB,IAER,CAEA4yC,kBAAAA,GAEC,MAEM3E,EAFWjuC,KAAK6mB,SAEWonB,gBAC3Bh1B,EAAOzF,OAAOyF,KAAMg1B,GAE1B,GAAKh1B,EAAKhY,OAAS,EAAI,CAEtB,MAAMmuC,EAAiBnB,EAAiBh1B,EAAM,IAE9C,QAAwBlZ,IAAnBqvC,EAA+B,CAEnCpvC,KAAK6yC,sBAAwB,GAC7B7yC,KAAK8yC,sBAAwB,CAAC,EAE9B,IAAM,IAAIxwC,EAAI,EAAGywC,EAAK3D,EAAenuC,OAAQqB,EAAIywC,EAAIzwC,IAAO,CAE3D,MAAM+N,EAAO++B,EAAgB9sC,GAAI+N,MAAQ2iC,OAAQ1wC,GAEjDtC,KAAK6yC,sBAAsBzyC,KAAM,GACjCJ,KAAK8yC,sBAAuBziC,GAAS/N,CAEtC,CAED,CAED,CAED,CAEA4kB,iBAAAA,CAAmB1mB,EAAOI,GAEzB,MAAMimB,EAAW7mB,KAAK6mB,SAChB4K,EAAW5K,EAASmnB,WAAWvc,SAC/BwhB,EAAgBpsB,EAASonB,gBAAgBxc,SACzCyc,EAAuBrnB,EAASqnB,qBAEtCttC,EAAO+J,oBAAqB8mB,EAAUjxB,GAEtC,MAAM0yC,EAAkBlzC,KAAK6yC,sBAE7B,GAAKI,GAAiBC,EAAkB,CAEvCV,GAAQ5rC,IAAK,EAAG,EAAG,GAEnB,IAAM,IAAI7F,EAAI,EAAGsb,EAAK42B,EAAchyC,OAAQF,EAAIsb,EAAItb,IAAO,CAE1D,MAAMoyC,EAAYD,EAAiBnyC,GAC7BquC,EAAiB6D,EAAelyC,GAEnB,IAAdoyC,IAELZ,GAAO5nC,oBAAqBykC,EAAgB5uC,GAEvC0tC,EAEJsE,GAAQxqC,gBAAiBuqC,GAAQY,GAIjCX,GAAQxqC,gBAAiBuqC,GAAOtqC,IAAKrH,GAAUuyC,GAIjD,CAEAvyC,EAAOiH,IAAK2qC,GAEb,CAEA,OAAO5xC,CAER,CAEA83B,OAAAA,CAAS0a,EAAWC,GAEnB,MAAMxsB,EAAW7mB,KAAK6mB,SAChB+V,EAAW58B,KAAK48B,SAChBtZ,EAActjB,KAAKsjB,YAEzB,QAAkBvjB,IAAb68B,EAAL,CAaA,GATiC,OAA5B/V,EAASkV,gBAA0BlV,EAASooB,wBAEjDiD,GAAUvqC,KAAMkf,EAASkV,gBACzBmW,GAAUt4B,aAAc0J,GAIxB2uB,GAAOtqC,KAAMyrC,EAAUpoB,KAAMG,OAAQioB,EAAU1gB,OAEG,IAA7Cwf,GAAU1qB,cAAeyqB,GAAOnnB,QAAqB,CAEzD,GAA2D,OAAtDmnB,GAAOhmB,gBAAiBimB,GAAWC,IAA0B,OAElE,GAAKF,GAAOnnB,OAAOhhB,kBAAmBqoC,KAAmBiB,EAAUzgB,IAAMygB,EAAU1gB,OAAU,EAAI,MAElG,CAIAsf,GAAiBrqC,KAAM2b,GAAcpV,SACrC+jC,GAAOtqC,KAAMyrC,EAAUpoB,KAAMpR,aAAco4B,IAIb,OAAzBnrB,EAASM,cAEyC,IAAjD8qB,GAAOtqB,cAAed,EAASM,cAMrCnnB,KAAKszC,sBAAuBF,EAAWC,EAAYpB,GApCf,CAsCrC,CAEAqB,qBAAAA,CAAuBF,EAAWC,EAAYE,GAE7C,IAAIC,EAEJ,MAAM3sB,EAAW7mB,KAAK6mB,SAChB+V,EAAW58B,KAAK48B,SAEhBp8B,EAAQqmB,EAASrmB,MACjBixB,EAAW5K,EAASmnB,WAAWvc,SAC/BrY,EAAKyN,EAASmnB,WAAW50B,GACzBq6B,EAAM5sB,EAASmnB,WAAWyF,IAC1BrvB,EAASyC,EAASmnB,WAAW5pB,OAC7B+pB,EAAStnB,EAASsnB,OAClBC,EAAYvnB,EAASunB,UAE3B,GAAe,OAAV5tC,EAIJ,GAAK+V,MAAMC,QAASomB,GAEnB,IAAM,IAAI77B,EAAI,EAAGsb,EAAK8xB,EAAOltC,OAAQF,EAAIsb,EAAItb,IAAO,CAEnD,MAAMuvC,EAAQnC,EAAQptC,GAChB2yC,EAAgB9W,EAAU0T,EAAMzB,eAKtC,IAAM,IAAIvlB,EAHIhoB,KAAKa,IAAKmuC,EAAMrE,MAAOmC,EAAUnC,OAG1BoD,EAFT/tC,KAAKY,IAAK1B,EAAMwb,MAAO1a,KAAKY,IAAOouC,EAAMrE,MAAQqE,EAAMt0B,MAAWoyB,EAAUnC,MAAQmC,EAAUpyB,QAE3EsN,EAAI+lB,EAAI/lB,GAAK,EAAI,CAM/CkqB,EAAeG,GAA2B3zC,KAAM0zC,EAAeN,EAAWG,EAAen6B,EAAIq6B,EAAKrvB,EAJxF5jB,EAAMqK,KAAMye,GACZ9oB,EAAMqK,KAAMye,EAAI,GAChB9oB,EAAMqK,KAAMye,EAAI,IAIrBkqB,IAEJA,EAAaI,UAAYtyC,KAAKoD,MAAO4kB,EAAI,GACzCkqB,EAAaK,KAAKhF,cAAgByB,EAAMzB,cACxCwE,EAAWjzC,KAAMozC,GAInB,CAED,KAEM,CAKN,IAAM,IAAIzyC,EAHIO,KAAKa,IAAK,EAAGisC,EAAUnC,OAGhB5vB,EAFT/a,KAAKY,IAAK1B,EAAMwb,MAASoyB,EAAUnC,MAAQmC,EAAUpyB,OAElCjb,EAAIsb,EAAItb,GAAK,EAAI,CAM/CyyC,EAAeG,GAA2B3zC,KAAM48B,EAAUwW,EAAWG,EAAen6B,EAAIq6B,EAAKrvB,EAJnF5jB,EAAMqK,KAAM9J,GACZP,EAAMqK,KAAM9J,EAAI,GAChBP,EAAMqK,KAAM9J,EAAI,IAIrByyC,IAEJA,EAAaI,UAAYtyC,KAAKoD,MAAO3D,EAAI,GACzCsyC,EAAWjzC,KAAMozC,GAInB,CAED,MAEM,QAAkBzzC,IAAb0xB,EAIX,GAAKlb,MAAMC,QAASomB,GAEnB,IAAM,IAAI77B,EAAI,EAAGsb,EAAK8xB,EAAOltC,OAAQF,EAAIsb,EAAItb,IAAO,CAEnD,MAAMuvC,EAAQnC,EAAQptC,GAChB2yC,EAAgB9W,EAAU0T,EAAMzB,eAKtC,IAAM,IAAIvlB,EAHIhoB,KAAKa,IAAKmuC,EAAMrE,MAAOmC,EAAUnC,OAG1BoD,EAFT/tC,KAAKY,IAAKuvB,EAASzV,MAAO1a,KAAKY,IAAOouC,EAAMrE,MAAQqE,EAAMt0B,MAAWoyB,EAAUnC,MAAQmC,EAAUpyB,QAE9EsN,EAAI+lB,EAAI/lB,GAAK,EAAI,CAM/CkqB,EAAeG,GAA2B3zC,KAAM0zC,EAAeN,EAAWG,EAAen6B,EAAIq6B,EAAKrvB,EAJxFkF,EACAA,EAAI,EACJA,EAAI,GAITkqB,IAEJA,EAAaI,UAAYtyC,KAAKoD,MAAO4kB,EAAI,GACzCkqB,EAAaK,KAAKhF,cAAgByB,EAAMzB,cACxCwE,EAAWjzC,KAAMozC,GAInB,CAED,KAEM,CAKN,IAAM,IAAIzyC,EAHIO,KAAKa,IAAK,EAAGisC,EAAUnC,OAGhB5vB,EAFT/a,KAAKY,IAAKuvB,EAASzV,MAASoyB,EAAUnC,MAAQmC,EAAUpyB,OAErCjb,EAAIsb,EAAItb,GAAK,EAAI,CAM/CyyC,EAAeG,GAA2B3zC,KAAM48B,EAAUwW,EAAWG,EAAen6B,EAAIq6B,EAAKrvB,EAJnFrjB,EACAA,EAAI,EACJA,EAAI,GAITyyC,IAEJA,EAAaI,UAAYtyC,KAAKoD,MAAO3D,EAAI,GACzCsyC,EAAWjzC,KAAMozC,GAInB,CAED,CAIF,EAmCD,SAASG,GAA2B1tB,EAAQ2W,EAAUwW,EAAWpoB,EAAK5R,EAAIq6B,EAAKrvB,EAAQte,EAAGC,EAAGC,GAE5FigB,EAAOiB,kBAAmBphB,EAAGssC,IAC7BnsB,EAAOiB,kBAAmBnhB,EAAGssC,IAC7BpsB,EAAOiB,kBAAmBlhB,EAAGssC,IAE7B,MAAMkB,EArCP,SAA8BvtB,EAAQ2W,EAAUwW,EAAWpoB,EAAK2lB,EAAIC,EAAIC,EAAIrqB,GAE3E,IAAIyC,EAYJ,GARCA,EAFI2T,EAASmG,OAASlvC,EAEVm3B,EAAIqC,kBAAmBwjB,EAAID,EAAID,GAAI,EAAMnqB,GAIzCwE,EAAIqC,kBAAmBsjB,EAAIC,EAAIC,EAAMjU,EAASmG,OAASnvC,EAAa4yB,GAI9D,OAAdyC,EAAqB,OAAO,KAEjCypB,GAAwB/qC,KAAM6e,GAC9BksB,GAAwB94B,aAAcqM,EAAO3C,aAE7C,MAAM8T,EAAWgc,EAAUpoB,IAAIF,OAAOjhB,WAAY6oC,IAElD,OAAKtb,EAAWgc,EAAU1gB,MAAQ0E,EAAWgc,EAAUzgB,IAAa,KAE7D,CACNyE,SAAUA,EACV5Q,MAAOksB,GAAwBhrC,QAC/Bue,OAAQA,EAGV,CAQsB6tB,CAAqB7tB,EAAQ2W,EAAUwW,EAAWpoB,EAAKonB,GAAOC,GAAOC,GAAOG,IAEjG,GAAKe,EAAe,CAEnB,MAAMpU,EAAY,IAAInd,GACtBgc,GAASG,aAAcqU,GAAoBL,GAAOC,GAAOC,GAAOlT,GAE3DhmB,IAEJo6B,EAAap6B,GAAK6kB,GAASc,yBAA0B3lB,EAAItT,EAAGC,EAAGC,EAAGo5B,EAAW,IAAIr4B,KAI7E0sC,IAEJD,EAAaC,IAAMxV,GAASc,yBAA0B0U,EAAK3tC,EAAGC,EAAGC,EAAGo5B,EAAW,IAAIr4B,KAI/Eqd,IAEJovB,EAAapvB,OAAS6Z,GAASc,yBAA0B3a,EAAQte,EAAGC,EAAGC,EAAGo5B,EAAW,IAAInd,IAEpFuxB,EAAapvB,OAAOlb,IAAK8hB,EAAID,WAAc,GAE/CyoB,EAAapvB,OAAO/b,gBAAkB,IAMxC,MAAMwrC,EAAO,CACZ/tC,EAAGA,EACHC,EAAGA,EACHC,EAAGA,EACHoe,OAAQ,IAAInC,GACZ4sB,cAAe,GAGhB5Q,GAASC,UAAWkU,GAAOC,GAAOC,GAAOuB,EAAKzvB,QAE9CovB,EAAaK,KAAOA,EACpBL,EAAapU,UAAYA,CAE1B,CAEA,OAAOoU,CAER,CAEA,MAAMO,WAAoBlG,GAEzBjrC,WAAAA,GAA0G,IAA7FsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG6vC,EAAa7vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG8vC,EAAc9vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+vC,EAAa/vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAErGqT,QAEAxX,KAAKH,KAAO,cAEZG,KAAKs8B,WAAa,CACjBp1B,MAAOA,EACPC,OAAQA,EACRmU,MAAOA,EACP04B,cAAeA,EACfC,eAAgBA,EAChBC,cAAeA,GAGhB,MAAMC,EAAQn0C,KAIdg0C,EAAgB1yC,KAAKoD,MAAOsvC,GAC5BC,EAAiB3yC,KAAKoD,MAAOuvC,GAC7BC,EAAgB5yC,KAAKoD,MAAOwvC,GAI5B,MAAM3C,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIZ,IAAIC,EAAmB,EACnBC,EAAa,EAkBjB,SAASC,EAAYtvB,EAAGtd,EAAG4R,EAAGi7B,EAAMC,EAAMxtC,EAAOC,EAAQmU,EAAOq5B,EAAOC,EAAO/F,GAE7E,MAAMgG,EAAe3tC,EAAQytC,EACvBG,EAAgB3tC,EAASytC,EAEzBG,EAAY7tC,EAAQ,EACpB8tC,EAAa7tC,EAAS,EACtB8tC,EAAY35B,EAAQ,EAEpB45B,EAASP,EAAQ,EACjBQ,EAASP,EAAQ,EAEvB,IAAIQ,EAAgB,EAChBC,EAAa,EAEjB,MAAM3uB,EAAS,IAAIzE,GAInB,IAAM,IAAIqzB,EAAK,EAAGA,EAAKH,EAAQG,IAAQ,CAEtC,MAAM7yC,EAAI6yC,EAAKR,EAAgBE,EAE/B,IAAM,IAAIO,EAAK,EAAGA,EAAKL,EAAQK,IAAQ,CAEtC,MAAM/yC,EAAI+yC,EAAKV,EAAeE,EAI9BruB,EAAQxB,GAAM1iB,EAAIiyC,EAClB/tB,EAAQ9e,GAAMnF,EAAIiyC,EAClBhuB,EAAQlN,GAAMy7B,EAIdb,EAASh0C,KAAMsmB,EAAOlkB,EAAGkkB,EAAOjkB,EAAGikB,EAAOnN,GAI1CmN,EAAQxB,GAAM,EACdwB,EAAQ9e,GAAM,EACd8e,EAAQlN,GAAM8B,EAAQ,EAAI,GAAM,EAIhC81B,EAAQhxC,KAAMsmB,EAAOlkB,EAAGkkB,EAAOjkB,EAAGikB,EAAOnN,GAIzC86B,EAAIj0C,KAAMm1C,EAAKZ,GACfN,EAAIj0C,KAAM,EAAMk1C,EAAKV,GAIrBQ,GAAiB,CAElB,CAED,CAQA,IAAM,IAAIE,EAAK,EAAGA,EAAKV,EAAOU,IAE7B,IAAM,IAAIC,EAAK,EAAGA,EAAKZ,EAAOY,IAAQ,CAErC,MAAMzvC,EAAIwuC,EAAmBiB,EAAKL,EAASI,EACrCvvC,EAAIuuC,EAAmBiB,EAAKL,GAAWI,EAAK,GAC5CtvC,EAAIsuC,GAAqBiB,EAAK,GAAML,GAAWI,EAAK,GACpDxnC,EAAIwmC,GAAqBiB,EAAK,GAAML,EAASI,EAInD/D,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,GAIpBunC,GAAc,CAEf,CAMDlB,EAAMvF,SAAU2F,EAAYc,EAAYxG,GAIxC0F,GAAcc,EAIdf,GAAoBc,CAErB,CAlHAZ,EAAY,IAAK,IAAK,KAAO,GAAK,EAAGl5B,EAAOnU,EAAQD,EAAOgtC,EAAeD,EAAgB,GAC1FO,EAAY,IAAK,IAAK,IAAK,GAAK,EAAGl5B,EAAOnU,GAAUD,EAAOgtC,EAAeD,EAAgB,GAC1FO,EAAY,IAAK,IAAK,IAAK,EAAG,EAAGttC,EAAOoU,EAAOnU,EAAQ6sC,EAAeE,EAAe,GACrFM,EAAY,IAAK,IAAK,IAAK,GAAK,EAAGttC,EAAOoU,GAASnU,EAAQ6sC,EAAeE,EAAe,GACzFM,EAAY,IAAK,IAAK,IAAK,GAAK,EAAGttC,EAAOC,EAAQmU,EAAO04B,EAAeC,EAAgB,GACxFO,EAAY,IAAK,IAAK,KAAO,GAAK,EAAGttC,EAAOC,GAAUmU,EAAO04B,EAAeC,EAAgB,GAI5Fj0C,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAwG3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIu+B,GAAav+B,EAAKtO,MAAOsO,EAAKrO,OAAQqO,EAAK8F,MAAO9F,EAAKw+B,cAAex+B,EAAKy+B,eAAgBz+B,EAAK0+B,cAE5G,EAQD,SAASuB,GAAe9gC,GAEvB,MAAMmJ,EAAM,CAAC,EAEb,IAAM,MAAMoH,KAAKvQ,EAAM,CAEtBmJ,EAAKoH,GAAM,CAAC,EAEZ,IAAM,MAAM4N,KAAKne,EAAKuQ,GAAM,CAE3B,MAAMwwB,EAAW/gC,EAAKuQ,GAAK4N,GAEtB4iB,IAAcA,EAASxZ,SAC3BwZ,EAAS7pC,WAAa6pC,EAAStnB,WAC/BsnB,EAASzuC,WAAayuC,EAASxzB,WAAawzB,EAASj8B,WACrDi8B,EAASj+B,WAAai+B,EAASl4B,cAE1Bk4B,EAASn9B,uBAEb1R,QAAQC,KAAM,sGACdgX,EAAKoH,GAAK4N,GAAM,MAIhBhV,EAAKoH,GAAK4N,GAAM4iB,EAAShuC,QAIf6O,MAAMC,QAASk/B,GAE1B53B,EAAKoH,GAAK4N,GAAM4iB,EAAS50C,QAIzBgd,EAAKoH,GAAK4N,GAAM4iB,CAIlB,CAED,CAEA,OAAO53B,CAER,CAEA,SAAS63B,GAAeC,GAEvB,MAAMC,EAAS,CAAC,EAEhB,IAAM,IAAI3wB,EAAI,EAAGA,EAAI0wB,EAAS30C,OAAQikB,IAAO,CAE5C,MAAMzW,EAAMgnC,GAAeG,EAAU1wB,IAErC,IAAM,MAAM4N,KAAKrkB,EAEhBonC,EAAQ/iB,GAAMrkB,EAAKqkB,EAIrB,CAEA,OAAO+iB,CAER,CAgBA,SAASC,GAA2BC,GAEnC,MAAMC,EAAsBD,EAASE,kBAErC,OAA6B,OAAxBD,EAGGD,EAASG,kBAK6B,IAAzCF,EAAoBG,iBAEjBH,EAAoB/5B,QAAQ/I,WAI7BjB,GAAgBE,iBAExB,CAIA,MAAMikC,GAAgB,CAAE1uC,MAAO+tC,GAAeY,MAAOV,IAMrD,MAAMW,WAAuB1T,GAE5BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKu2C,kBAAmB,EAExBv2C,KAAKH,KAAO,iBAEZG,KAAKw2C,QAAU,CAAC,EAChBx2C,KAAK41C,SAAW,CAAC,EACjB51C,KAAKy2C,eAAiB,GAEtBz2C,KAAK02C,aAlBc,gGAmBnB12C,KAAK22C,eAjBgB,iEAmBrB32C,KAAKupC,UAAY,EAEjBvpC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAE1B3pC,KAAK+pC,KAAM,EACX/pC,KAAK42C,QAAS,EACd52C,KAAK62C,UAAW,EAEhB72C,KAAKmlC,iBAAkB,EAEvBnlC,KAAK82C,WAAa,CACjBC,kBAAkB,EAClBC,WAAW,GAKZh3C,KAAKi3C,uBAAyB,CAC7B,MAAS,CAAE,EAAG,EAAG,GACjB,GAAM,CAAE,EAAG,GACX,IAAO,CAAE,EAAG,IAGbj3C,KAAKk3C,yBAAsBn3C,EAC3BC,KAAKm3C,oBAAqB,EAE1Bn3C,KAAKo3C,YAAc,UAECr3C,IAAfu8B,GAEJt8B,KAAKylC,UAAWnJ,EAIlB,CAEA30B,IAAAA,CAAM+P,GAuBL,OArBAF,MAAM7P,KAAM+P,GAEZ1X,KAAK22C,eAAiBj/B,EAAOi/B,eAC7B32C,KAAK02C,aAAeh/B,EAAOg/B,aAE3B12C,KAAK41C,SAAWH,GAAe/9B,EAAOk+B,UACtC51C,KAAKy2C,eA1GP,SAA8B9hC,GAE7B,MAAMmJ,EAAM,GAEZ,IAAM,IAAIoH,EAAI,EAAGA,EAAIvQ,EAAI1T,OAAQikB,IAEhCpH,EAAI1d,KAAMuU,EAAKuQ,GAAIxd,SAIpB,OAAOoW,CAER,CA8FwBu5B,CAAqB3/B,EAAO++B,gBAElDz2C,KAAKw2C,QAAUhjC,OAAOC,OAAQ,CAAC,EAAGiE,EAAO8+B,SAEzCx2C,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBAEjC3pC,KAAK+pC,IAAMryB,EAAOqyB,IAClB/pC,KAAK42C,OAASl/B,EAAOk/B,OACrB52C,KAAK62C,SAAWn/B,EAAOm/B,SAEvB72C,KAAK82C,WAAatjC,OAAOC,OAAQ,CAAC,EAAGiE,EAAOo/B,YAE5C92C,KAAKo3C,YAAc1/B,EAAO0/B,YAEnBp3C,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAE3BV,EAAK4hC,YAAcp3C,KAAKo3C,YACxB5hC,EAAKogC,SAAW,CAAC,EAEjB,IAAM,MAAMvlC,KAAQrQ,KAAK41C,SAAW,CAEnC,MACM3zC,EADUjC,KAAK41C,SAAUvlC,GACTpO,MAEjBA,GAASA,EAAMwV,UAEnBjC,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,IACNoC,MAAOA,EAAMgU,OAAQC,GAAOL,MAGlB5T,GAASA,EAAMi6B,QAE1B1mB,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,IACNoC,MAAOA,EAAMw/B,UAGHx/B,GAASA,EAAMgF,UAE1BuO,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,KACNoC,MAAOA,EAAMyI,WAGHzI,GAASA,EAAMigB,UAE1B1M,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,KACNoC,MAAOA,EAAMyI,WAGHzI,GAASA,EAAMwX,UAE1BjE,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,KACNoC,MAAOA,EAAMyI,WAGHzI,GAASA,EAAM4J,UAE1B2J,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,KACNoC,MAAOA,EAAMyI,WAGHzI,GAASA,EAAMmsB,UAE1B5Y,EAAKogC,SAAUvlC,GAAS,CACvBxQ,KAAM,KACNoC,MAAOA,EAAMyI,WAKd8K,EAAKogC,SAAUvlC,GAAS,CACvBpO,MAAOA,EAOV,CAEKuR,OAAOyF,KAAMjZ,KAAKw2C,SAAUv1C,OAAS,IAAIuU,EAAKghC,QAAUx2C,KAAKw2C,SAElEhhC,EAAKkhC,aAAe12C,KAAK02C,aACzBlhC,EAAKmhC,eAAiB32C,KAAK22C,eAE3BnhC,EAAKohC,OAAS52C,KAAK42C,OACnBphC,EAAKqhC,SAAW72C,KAAK62C,SAErB,MAAMC,EAAa,CAAC,EAEpB,IAAM,MAAM5Z,KAAOl9B,KAAK82C,YAES,IAA3B92C,KAAK82C,WAAY5Z,KAAiB4Z,EAAY5Z,IAAQ,GAM5D,OAFK1pB,OAAOyF,KAAM69B,GAAa71C,OAAS,IAAIuU,EAAKshC,WAAaA,GAEvDthC,CAER,EAID,MAAM8hC,WAAeniB,GAEpBvyB,WAAAA,GAEC4U,QAEAxX,KAAK03B,UAAW,EAEhB13B,KAAKH,KAAO,SAEZG,KAAKmjB,mBAAqB,IAAIyK,GAE9B5tB,KAAK4R,iBAAmB,IAAIgc,GAC5B5tB,KAAKqjB,wBAA0B,IAAIuK,GAEnC5tB,KAAK4yB,iBAAmBtzB,EAEzB,CAEAqI,IAAAA,CAAM+P,EAAQylB,GAWb,OATA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKmjB,mBAAmBxb,KAAM+P,EAAOyL,oBAErCnjB,KAAK4R,iBAAiBjK,KAAM+P,EAAO9F,kBACnC5R,KAAKqjB,wBAAwB1b,KAAM+P,EAAO2L,yBAE1CrjB,KAAK4yB,iBAAmBlb,EAAOkb,iBAExB5yB,IAER,CAEAy4B,iBAAAA,CAAmB73B,GAElB,OAAO4W,MAAMihB,kBAAmB73B,GAASqI,QAE1C,CAEA6vB,iBAAAA,CAAmBC,GAElBvhB,MAAMshB,kBAAmBC,GAEzB/4B,KAAKmjB,mBAAmBxb,KAAM3H,KAAKsjB,aAAcpV,QAElD,CAEA0Y,iBAAAA,CAAmBoS,EAAeC,GAEjCzhB,MAAMoP,kBAAmBoS,EAAeC,GAExCj5B,KAAKmjB,mBAAmBxb,KAAM3H,KAAKsjB,aAAcpV,QAElD,CAEAxG,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAMu3C,GAAsB,IAAIt1B,GAC1Bu1B,GAA2B,IAAIzwC,GAC/B0wC,GAA2B,IAAI1wC,GAGrC,MAAM2wC,WAA0BJ,GAE/B10C,WAAAA,GAA4D,IAA/C+0C,EAAGxzC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIyzC,EAAMzzC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGuuB,EAAIvuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAKwuB,EAAGxuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAEpDqT,QAEAxX,KAAK63C,qBAAsB,EAE3B73C,KAAKH,KAAO,oBAEZG,KAAK23C,IAAMA,EACX33C,KAAK83C,KAAO,EAEZ93C,KAAK0yB,KAAOA,EACZ1yB,KAAK2yB,IAAMA,EACX3yB,KAAK+3C,MAAQ,GAEb/3C,KAAK43C,OAASA,EACd53C,KAAKg4C,KAAO,KAEZh4C,KAAKi4C,UAAY,GACjBj4C,KAAKk4C,WAAa,EAElBl4C,KAAKm4C,wBAEN,CAEAxwC,IAAAA,CAAM+P,EAAQylB,GAiBb,OAfA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAK23C,IAAMjgC,EAAOigC,IAClB33C,KAAK83C,KAAOpgC,EAAOogC,KAEnB93C,KAAK0yB,KAAOhb,EAAOgb,KACnB1yB,KAAK2yB,IAAMjb,EAAOib,IAClB3yB,KAAK+3C,MAAQrgC,EAAOqgC,MAEpB/3C,KAAK43C,OAASlgC,EAAOkgC,OACrB53C,KAAKg4C,KAAuB,OAAhBtgC,EAAOsgC,KAAgB,KAAOxkC,OAAOC,OAAQ,CAAC,EAAGiE,EAAOsgC,MAEpEh4C,KAAKi4C,UAAYvgC,EAAOugC,UACxBj4C,KAAKk4C,WAAaxgC,EAAOwgC,WAElBl4C,IAER,CAUAo4C,cAAAA,CAAgBC,GAGf,MAAMC,EAAe,GAAMt4C,KAAKu4C,gBAAkBF,EAElDr4C,KAAK23C,IAAgB,EAAVn2C,GAAcF,KAAKk3C,KAAMF,GACpCt4C,KAAKm4C,wBAEN,CAOAM,cAAAA,GAEC,MAAMH,EAAeh3C,KAAKo3C,IAAe,GAAVr3C,GAAgBrB,KAAK23C,KAEpD,MAAO,GAAM33C,KAAKu4C,gBAAkBD,CAErC,CAEAK,eAAAA,GAEC,OAAiB,EAAVn3C,GAAcF,KAAKk3C,KACzBl3C,KAAKo3C,IAAe,GAAVr3C,GAAgBrB,KAAK23C,KAAQ33C,KAAK83C,KAE9C,CAEAc,YAAAA,GAGC,OAAO54C,KAAKi4C,UAAY32C,KAAKY,IAAKlC,KAAK43C,OAAQ,EAEhD,CAEAW,aAAAA,GAGC,OAAOv4C,KAAKi4C,UAAY32C,KAAKa,IAAKnC,KAAK43C,OAAQ,EAEhD,CAUAiB,aAAAA,CAAezhB,EAAU0hB,EAAWC,GAEnCxB,GAAM3wC,KAAO,GAAK,EAAG,IAAMgT,aAAc5Z,KAAKqjB,yBAE9Cy1B,EAAUlyC,IAAK2wC,GAAM/0C,EAAG+0C,GAAM90C,GAAI4F,gBAAkB+uB,EAAWmgB,GAAMh+B,GAErEg+B,GAAM3wC,IAAK,EAAG,EAAG,IAAMgT,aAAc5Z,KAAKqjB,yBAE1C01B,EAAUnyC,IAAK2wC,GAAM/0C,EAAG+0C,GAAM90C,GAAI4F,gBAAkB+uB,EAAWmgB,GAAMh+B,EAEtE,CASAy/B,WAAAA,CAAa5hB,EAAUx2B,GAItB,OAFAZ,KAAK64C,cAAezhB,EAAUogB,GAAYC,IAEnC72C,EAAOuH,WAAYsvC,GAAYD,GAEvC,CA4CAyB,aAAAA,CAAeC,EAAWC,EAAY32C,EAAGC,EAAGyE,EAAOC,GAElDnH,KAAK43C,OAASsB,EAAYC,EAEP,OAAdn5C,KAAKg4C,OAETh4C,KAAKg4C,KAAO,CACX9lC,SAAS,EACTgnC,UAAW,EACXC,WAAY,EACZC,QAAS,EACTC,QAAS,EACTnyC,MAAO,EACPC,OAAQ,IAKVnH,KAAKg4C,KAAK9lC,SAAU,EACpBlS,KAAKg4C,KAAKkB,UAAYA,EACtBl5C,KAAKg4C,KAAKmB,WAAaA,EACvBn5C,KAAKg4C,KAAKoB,QAAU52C,EACpBxC,KAAKg4C,KAAKqB,QAAU52C,EACpBzC,KAAKg4C,KAAK9wC,MAAQA,EAClBlH,KAAKg4C,KAAK7wC,OAASA,EAEnBnH,KAAKm4C,wBAEN,CAEAmB,eAAAA,GAEoB,OAAdt5C,KAAKg4C,OAETh4C,KAAKg4C,KAAK9lC,SAAU,GAIrBlS,KAAKm4C,wBAEN,CAEAA,sBAAAA,GAEC,MAAMzlB,EAAO1yB,KAAK0yB,KAClB,IAAIF,EAAME,EAAOpxB,KAAKo3C,IAAe,GAAVr3C,GAAgBrB,KAAK23C,KAAQ33C,KAAK83C,KACzD3wC,EAAS,EAAIqrB,EACbtrB,EAAQlH,KAAK43C,OAASzwC,EACtBmrB,GAAS,GAAMprB,EACnB,MAAM8wC,EAAOh4C,KAAKg4C,KAElB,GAAmB,OAAdh4C,KAAKg4C,MAAiBh4C,KAAKg4C,KAAK9lC,QAAU,CAE9C,MAAMgnC,EAAYlB,EAAKkB,UACtBC,EAAanB,EAAKmB,WAEnB7mB,GAAQ0lB,EAAKoB,QAAUlyC,EAAQgyC,EAC/B1mB,GAAOwlB,EAAKqB,QAAUlyC,EAASgyC,EAC/BjyC,GAAS8wC,EAAK9wC,MAAQgyC,EACtB/xC,GAAU6wC,EAAK7wC,OAASgyC,CAEzB,CAEA,MAAMI,EAAOv5C,KAAKk4C,WACJ,IAATqB,IAAajnB,GAAQI,EAAO6mB,EAAOv5C,KAAK44C,gBAE7C54C,KAAK4R,iBAAiBygB,gBAAiBC,EAAMA,EAAOprB,EAAOsrB,EAAKA,EAAMrrB,EAAQurB,EAAM1yB,KAAK2yB,IAAK3yB,KAAK4yB,kBAEnG5yB,KAAKqjB,wBAAwB1b,KAAM3H,KAAK4R,kBAAmB1D,QAE5D,CAEA+H,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAgB3B,OAdAV,EAAKyQ,OAAO0xB,IAAM33C,KAAK23C,IACvBniC,EAAKyQ,OAAO6xB,KAAO93C,KAAK83C,KAExBtiC,EAAKyQ,OAAOyM,KAAO1yB,KAAK0yB,KACxBld,EAAKyQ,OAAO0M,IAAM3yB,KAAK2yB,IACvBnd,EAAKyQ,OAAO8xB,MAAQ/3C,KAAK+3C,MAEzBviC,EAAKyQ,OAAO2xB,OAAS53C,KAAK43C,OAEP,OAAd53C,KAAKg4C,OAAgBxiC,EAAKyQ,OAAO+xB,KAAOxkC,OAAOC,OAAQ,CAAC,EAAGzT,KAAKg4C,OAErExiC,EAAKyQ,OAAOgyB,UAAYj4C,KAAKi4C,UAC7BziC,EAAKyQ,OAAOiyB,WAAal4C,KAAKk4C,WAEvB1iC,CAER,EAID,MAAMmiC,IAAQ,GAGd,MAAM6B,WAAmBrkB,GAExBvyB,WAAAA,CAAa8vB,EAAMC,EAAKra,GAEvBd,QAEAxX,KAAKH,KAAO,aAEZG,KAAKsY,aAAeA,EACpBtY,KAAK4yB,iBAAmB,KACxB5yB,KAAKy5C,kBAAoB,EAEzB,MAAMC,EAAW,IAAIhC,GAAmBC,GAd3B,EAcwCjlB,EAAMC,GAC3D+mB,EAASzlB,OAASj0B,KAAKi0B,OACvBj0B,KAAK6H,IAAK6xC,GAEV,MAAMC,EAAW,IAAIjC,GAAmBC,GAlB3B,EAkBwCjlB,EAAMC,GAC3DgnB,EAAS1lB,OAASj0B,KAAKi0B,OACvBj0B,KAAK6H,IAAK8xC,GAEV,MAAMC,EAAW,IAAIlC,GAAmBC,GAtB3B,EAsBwCjlB,EAAMC,GAC3DinB,EAAS3lB,OAASj0B,KAAKi0B,OACvBj0B,KAAK6H,IAAK+xC,GAEV,MAAMC,EAAW,IAAInC,GAAmBC,GA1B3B,EA0BwCjlB,EAAMC,GAC3DknB,EAAS5lB,OAASj0B,KAAKi0B,OACvBj0B,KAAK6H,IAAKgyC,GAEV,MAAMC,EAAW,IAAIpC,GAAmBC,GA9B3B,EA8BwCjlB,EAAMC,GAC3DmnB,EAAS7lB,OAASj0B,KAAKi0B,OACvBj0B,KAAK6H,IAAKiyC,GAEV,MAAMC,EAAW,IAAIrC,GAAmBC,GAlC3B,EAkCwCjlB,EAAMC,GAC3DonB,EAAS9lB,OAASj0B,KAAKi0B,OACvBj0B,KAAK6H,IAAKkyC,EAEX,CAEAC,sBAAAA,GAEC,MAAMpnB,EAAmB5yB,KAAK4yB,iBAExBqnB,EAAUj6C,KAAKunB,SAAS2yB,UAEtBR,EAAUC,EAAUC,EAAUC,EAAUC,EAAUC,GAAaE,EAEvE,IAAM,MAAM/2B,KAAU+2B,EAAUj6C,KAAK83B,OAAQ5U,GAE7C,GAAK0P,IAAqBtzB,GAEzBo6C,EAAS7pB,GAAGjpB,IAAK,EAAG,EAAG,GACvB8yC,EAASxuB,OAAQ,EAAG,EAAG,GAEvByuB,EAAS9pB,GAAGjpB,IAAK,EAAG,EAAG,GACvB+yC,EAASzuB,QAAU,EAAG,EAAG,GAEzB0uB,EAAS/pB,GAAGjpB,IAAK,EAAG,GAAK,GACzBgzC,EAAS1uB,OAAQ,EAAG,EAAG,GAEvB2uB,EAAShqB,GAAGjpB,IAAK,EAAG,EAAG,GACvBizC,EAAS3uB,OAAQ,GAAK,EAAG,GAEzB4uB,EAASjqB,GAAGjpB,IAAK,EAAG,EAAG,GACvBkzC,EAAS5uB,OAAQ,EAAG,EAAG,GAEvB6uB,EAASlqB,GAAGjpB,IAAK,EAAG,EAAG,GACvBmzC,EAAS7uB,OAAQ,EAAG,GAAK,OAEnB,IAAK0H,IAAqBrzB,GAsBhC,MAAM,IAAI6D,MAAO,yEAA2EwvB,GApB5F8mB,EAAS7pB,GAAGjpB,IAAK,GAAK,EAAG,GACzB8yC,EAASxuB,QAAU,EAAG,EAAG,GAEzByuB,EAAS9pB,GAAGjpB,IAAK,GAAK,EAAG,GACzB+yC,EAASzuB,OAAQ,EAAG,EAAG,GAEvB0uB,EAAS/pB,GAAGjpB,IAAK,EAAG,EAAG,GACvBgzC,EAAS1uB,OAAQ,EAAG,EAAG,GAEvB2uB,EAAShqB,GAAGjpB,IAAK,EAAG,GAAK,GACzBizC,EAAS3uB,OAAQ,GAAK,EAAG,GAEzB4uB,EAASjqB,GAAGjpB,IAAK,GAAK,EAAG,GACzBkzC,EAAS5uB,OAAQ,EAAG,EAAG,GAEvB6uB,EAASlqB,GAAGjpB,IAAK,GAAK,EAAG,GACzBmzC,EAAS7uB,OAAQ,EAAG,GAAK,EAM1B,CAEA,IAAM,MAAMhI,KAAU+2B,EAErBj6C,KAAK6H,IAAKqb,GAEVA,EAAO4V,mBAIT,CAEAvZ,MAAAA,CAAQw2B,EAAUoE,GAEI,OAAhBn6C,KAAKq1B,QAAkBr1B,KAAK84B,oBAEjC,MAAM,aAAExgB,EAAY,kBAAEmhC,GAAsBz5C,KAEvCA,KAAK4yB,mBAAqBmjB,EAASnjB,mBAEvC5yB,KAAK4yB,iBAAmBmjB,EAASnjB,iBAEjC5yB,KAAKg6C,0BAIN,MAAQN,EAAUC,EAAUC,EAAUC,EAAUC,EAAUC,GAAa/5C,KAAKunB,SAEtEyuB,EAAsBD,EAASE,kBAC/BmE,EAAwBrE,EAASsE,oBACjCC,EAA2BvE,EAASwE,uBAEpCC,EAAmBzE,EAAS0E,GAAGvoC,QAErC6jC,EAAS0E,GAAGvoC,SAAU,EAEtB,MAAM8F,EAAkBM,EAAa2D,QAAQjE,gBAE7CM,EAAa2D,QAAQjE,iBAAkB,EAEvC+9B,EAAS2E,gBAAiBpiC,EAAc,EAAGmhC,GAC3C1D,EAAS4E,OAAQR,EAAOT,GAExB3D,EAAS2E,gBAAiBpiC,EAAc,EAAGmhC,GAC3C1D,EAAS4E,OAAQR,EAAOR,GAExB5D,EAAS2E,gBAAiBpiC,EAAc,EAAGmhC,GAC3C1D,EAAS4E,OAAQR,EAAOP,GAExB7D,EAAS2E,gBAAiBpiC,EAAc,EAAGmhC,GAC3C1D,EAAS4E,OAAQR,EAAON,GAExB9D,EAAS2E,gBAAiBpiC,EAAc,EAAGmhC,GAC3C1D,EAAS4E,OAAQR,EAAOL,GAKxBxhC,EAAa2D,QAAQjE,gBAAkBA,EAEvC+9B,EAAS2E,gBAAiBpiC,EAAc,EAAGmhC,GAC3C1D,EAAS4E,OAAQR,EAAOJ,GAExBhE,EAAS2E,gBAAiB1E,EAAqBoE,EAAuBE,GAEtEvE,EAAS0E,GAAGvoC,QAAUsoC,EAEtBliC,EAAa2D,QAAQ5C,kBAAmB,CAEzC,EAID,MAAMuhC,WAAoB/jC,GAEzBjU,WAAAA,CAAawT,EAAQW,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,EAAYpE,GAK3FsE,MAHApB,OAAoBrW,IAAXqW,EAAuBA,EAAS,GACzCW,OAAsBhX,IAAZgX,EAAwBA,EAAUhgB,GAEpBkgB,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,EAAYpE,GAEtFlT,KAAK66C,eAAgB,EAErB76C,KAAKkY,OAAQ,CAEd,CAEA,UAAI9B,GAEH,OAAOpW,KAAKyU,KAEb,CAEA,UAAI2B,CAAQnU,GAEXjC,KAAKyU,MAAQxS,CAEd,EAID,MAAM64C,WAA8Bx+B,GAEnC1Z,WAAAA,GAAsC,IAAzBkjB,EAAI3hB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGiX,EAAOjX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEjCqT,MAAOsO,EAAMA,EAAM1K,GAEnBpb,KAAK+6C,yBAA0B,EAE/B,MAAMtmC,EAAQ,CAAEvN,MAAO4e,EAAM3e,OAAQ2e,EAAMxK,MAAO,GAC5ClF,EAAS,CAAE3B,EAAOA,EAAOA,EAAOA,EAAOA,EAAOA,GAEpDzU,KAAKic,QAAU,IAAI2+B,GAAaxkC,EAAQgF,EAAQrE,QAASqE,EAAQnE,MAAOmE,EAAQlE,MAAOkE,EAAQjE,UAAWiE,EAAQhE,UAAWgE,EAAQ/D,OAAQ+D,EAAQvb,KAAMub,EAAQ9D,WAAY8D,EAAQlI,YAUvLlT,KAAKic,QAAQ1D,uBAAwB,EAErCvY,KAAKic,QAAQjE,qBAA8CjY,IAA5Bqb,EAAQpD,iBAAgCoD,EAAQpD,gBAC/EhY,KAAKic,QAAQ7E,eAAkCrX,IAAtBqb,EAAQhE,UAA0BgE,EAAQhE,UAAYxf,EAEhF,CAEAojD,0BAAAA,CAA4BjF,EAAU95B,GAErCjc,KAAKic,QAAQpc,KAAOoc,EAAQpc,KAC5BG,KAAKic,QAAQ/I,WAAa+I,EAAQ/I,WAElClT,KAAKic,QAAQjE,gBAAkBiE,EAAQjE,gBACvChY,KAAKic,QAAQ7E,UAAY6E,EAAQ7E,UACjCpX,KAAKic,QAAQ9E,UAAY8E,EAAQ9E,UAEjC,MAAM8jC,EAAS,CAEdrF,SAAU,CACTsF,UAAW,CAAEj5C,MAAO,OAGrBy0C,aAAwB,qYAoBxBC,eAA0B,gVAoBrB9vB,EAAW,IAAIktB,GAAa,EAAG,EAAG,GAElCnX,EAAW,IAAI0Z,GAAgB,CAEpCjmC,KAAM,sBAENulC,SAAUH,GAAewF,EAAOrF,UAChCc,aAAcuE,EAAOvE,aACrBC,eAAgBsE,EAAOtE,eACvB5T,KAAMlvC,EACNivC,SAAU/uC,IAIX6oC,EAASgZ,SAASsF,UAAUj5C,MAAQga,EAEpC,MAAMk/B,EAAO,IAAIxI,GAAM9rB,EAAU+V,GAE3Bwe,EAAmBn/B,EAAQ7E,UAG5B6E,EAAQ7E,YAAcrf,KAA2BkkB,EAAQ7E,UAAYxf,IAU1E,OARe,IAAI4hD,GAAY,EAAG,GAAIx5C,MAC/Buf,OAAQw2B,EAAUoF,GAEzBl/B,EAAQ7E,UAAYgkC,EAEpBD,EAAKt0B,SAAS3N,UACdiiC,EAAKve,SAAS1jB,UAEPlZ,IAER,CAEAgd,KAAAA,CAAO+4B,EAAUzjC,EAAOgJ,EAAO+/B,GAE9B,MAAMrF,EAAsBD,EAASE,kBAErC,IAAM,IAAIl1C,EAAI,EAAGA,EAAI,EAAGA,IAEvBg1C,EAAS2E,gBAAiB16C,KAAMe,GAEhCg1C,EAAS/4B,MAAO1K,EAAOgJ,EAAO+/B,GAI/BtF,EAAS2E,gBAAiB1E,EAE3B,EAID,MAAMsF,WAAcnmB,GAEnBvyB,WAAAA,GAEC4U,QAEAxX,KAAKu7C,SAAU,EAEfv7C,KAAKH,KAAO,OAEb,EAID,MAAM27C,GAAa,CAAE37C,KAAM,QAE3B,MAAM47C,GAEL74C,WAAAA,GAEC5C,KAAK07C,WAAa,KAClB17C,KAAK27C,MAAQ,KACb37C,KAAK47C,MAAQ,IAEd,CAEAC,YAAAA,GAaC,OAXoB,OAAf77C,KAAK47C,QAET57C,KAAK47C,MAAQ,IAAIN,GACjBt7C,KAAK47C,MAAM7jC,kBAAmB,EAC9B/X,KAAK47C,MAAM5lB,SAAU,EAErBh2B,KAAK47C,MAAME,OAAS,CAAC,EACrB97C,KAAK47C,MAAMG,WAAa,CAAEC,UAAU,IAI9Bh8C,KAAK47C,KAEb,CAEAK,iBAAAA,GAcC,OAZyB,OAApBj8C,KAAK07C,aAET17C,KAAK07C,WAAa,IAAIJ,GACtBt7C,KAAK07C,WAAW3jC,kBAAmB,EACnC/X,KAAK07C,WAAW1lB,SAAU,EAC1Bh2B,KAAK07C,WAAWQ,mBAAoB,EACpCl8C,KAAK07C,WAAWS,eAAiB,IAAIl6B,GACrCjiB,KAAK07C,WAAWU,oBAAqB,EACrCp8C,KAAK07C,WAAWW,gBAAkB,IAAIp6B,IAIhCjiB,KAAK07C,UAEb,CAEAY,YAAAA,GAcC,OAZoB,OAAft8C,KAAK27C,QAET37C,KAAK27C,MAAQ,IAAIL,GACjBt7C,KAAK27C,MAAM5jC,kBAAmB,EAC9B/X,KAAK27C,MAAM3lB,SAAU,EACrBh2B,KAAK27C,MAAMO,mBAAoB,EAC/Bl8C,KAAK27C,MAAMQ,eAAiB,IAAIl6B,GAChCjiB,KAAK27C,MAAMS,oBAAqB,EAChCp8C,KAAK27C,MAAMU,gBAAkB,IAAIp6B,IAI3BjiB,KAAK27C,KAEb,CAEAj7C,aAAAA,CAAeC,GAoBd,OAlByB,OAApBX,KAAK07C,YAET17C,KAAK07C,WAAWh7C,cAAeC,GAIZ,OAAfX,KAAK27C,OAET37C,KAAK27C,MAAMj7C,cAAeC,GAIP,OAAfX,KAAK47C,OAET57C,KAAK47C,MAAMl7C,cAAeC,GAIpBX,IAER,CAEAu8C,OAAAA,CAASC,GAER,GAAKA,GAAeA,EAAYC,KAAO,CAEtC,MAAMA,EAAOz8C,KAAK47C,MAElB,GAAKa,EAEJ,IAAM,MAAMC,KAAcF,EAAYC,KAAKxf,SAG1Cj9B,KAAK28C,cAAeF,EAAMC,EAM7B,CAIA,OAFA18C,KAAKU,cAAe,CAAEb,KAAM,YAAa2V,KAAMgnC,IAExCx8C,IAER,CAEA48C,UAAAA,CAAYJ,GAsBX,OApBAx8C,KAAKU,cAAe,CAAEb,KAAM,eAAgB2V,KAAMgnC,IAEzB,OAApBx8C,KAAK07C,aAET17C,KAAK07C,WAAW1lB,SAAU,GAIP,OAAfh2B,KAAK27C,QAET37C,KAAK27C,MAAM3lB,SAAU,GAIF,OAAfh2B,KAAK47C,QAET57C,KAAK47C,MAAM5lB,SAAU,GAIfh2B,IAER,CAEAuf,MAAAA,CAAQi9B,EAAaK,EAAOC,GAE3B,IAAIC,EAAY,KACZC,EAAW,KACXC,EAAW,KAEf,MAAMC,EAAYl9C,KAAK07C,WACjByB,EAAOn9C,KAAK27C,MACZc,EAAOz8C,KAAK47C,MAElB,GAAKY,GAAiD,oBAAlCK,EAAMO,QAAQC,gBAAwC,CAEzE,GAAKZ,GAAQD,EAAYC,KAAO,CAE/BQ,GAAW,EAEX,IAAM,MAAMP,KAAcF,EAAYC,KAAKxf,SAAW,CAGrD,MAAMqgB,EAAYT,EAAMU,aAAcb,EAAYI,GAG5CU,EAAQx9C,KAAK28C,cAAeF,EAAMC,GAErB,OAAdY,IAEJE,EAAM3tC,OAAOrF,UAAW8yC,EAAUG,UAAU5tC,QAC5C2tC,EAAM3tC,OAAOmiB,UAAWwrB,EAAM/rB,SAAU+rB,EAAMruC,SAAUquC,EAAMluC,OAC9DkuC,EAAMznB,wBAAyB,EAC/BynB,EAAME,YAAcJ,EAAU94B,QAI/Bg5B,EAAMxnB,QAAwB,OAAdsnB,CAEjB,CAKA,MAAMK,EAAWlB,EAAKX,OAAQ,oBACxB8B,EAAWnB,EAAKX,OAAQ,aACxB1kB,EAAWumB,EAASlsB,SAAS5nB,WAAY+zC,EAASnsB,UAElDosB,EAAkB,IAClBC,EAAY,KAEbrB,EAAKV,WAAWC,UAAY5kB,EAAWymB,EAAkBC,GAE7DrB,EAAKV,WAAWC,UAAW,EAC3Bh8C,KAAKU,cAAe,CACnBb,KAAM,WACNk+C,WAAYvB,EAAYuB,WACxBn9C,OAAQZ,SAGIy8C,EAAKV,WAAWC,UAAY5kB,GAAYymB,EAAkBC,IAEvErB,EAAKV,WAAWC,UAAW,EAC3Bh8C,KAAKU,cAAe,CACnBb,KAAM,aACNk+C,WAAYvB,EAAYuB,WACxBn9C,OAAQZ,OAKX,MAEe,OAATm9C,GAAiBX,EAAYwB,YAEjChB,EAAWH,EAAMoB,QAASzB,EAAYwB,UAAWlB,GAE/B,OAAbE,IAEJG,EAAKttC,OAAOrF,UAAWwyC,EAASS,UAAU5tC,QAC1CstC,EAAKttC,OAAOmiB,UAAWmrB,EAAK1rB,SAAU0rB,EAAKhuC,SAAUguC,EAAK7tC,OAC1D6tC,EAAKpnB,wBAAyB,EAEzBinB,EAASb,gBAEbgB,EAAKjB,mBAAoB,EACzBiB,EAAKhB,eAAex0C,KAAMq1C,EAASb,iBAInCgB,EAAKjB,mBAAoB,EAIrBc,EAASX,iBAEbc,EAAKf,oBAAqB,EAC1Be,EAAKd,gBAAgB10C,KAAMq1C,EAASX,kBAIpCc,EAAKf,oBAAqB,IAUX,OAAdc,IAEJH,EAAYF,EAAMoB,QAASzB,EAAY0B,eAAgBpB,GAGpC,OAAdC,GAAmC,OAAbC,IAE1BD,EAAYC,GAIM,OAAdD,IAEJG,EAAUrtC,OAAOrF,UAAWuyC,EAAUU,UAAU5tC,QAChDqtC,EAAUrtC,OAAOmiB,UAAWkrB,EAAUzrB,SAAUyrB,EAAU/tC,SAAU+tC,EAAU5tC,OAC9E4tC,EAAUnnB,wBAAyB,EAE9BgnB,EAAUZ,gBAEde,EAAUhB,mBAAoB,EAC9BgB,EAAUf,eAAex0C,KAAMo1C,EAAUZ,iBAIzCe,EAAUhB,mBAAoB,EAI1Ba,EAAUV,iBAEda,EAAUd,oBAAqB,EAC/Bc,EAAUb,gBAAgB10C,KAAMo1C,EAAUV,kBAI1Ca,EAAUd,oBAAqB,EAIhCp8C,KAAKU,cAAe86C,KAOvB,CAoBA,OAlBmB,OAAd0B,IAEJA,EAAUlnB,QAA0B,OAAd+mB,GAIT,OAATI,IAEJA,EAAKnnB,QAAyB,OAAbgnB,GAIJ,OAATP,IAEJA,EAAKzmB,QAAyB,OAAbinB,GAIXj9C,IAER,CAIA28C,aAAAA,CAAeF,EAAMC,GAEpB,QAA6C38C,IAAxC08C,EAAKX,OAAQY,EAAWyB,WAA4B,CAExD,MAAMX,EAAQ,IAAIlC,GAClBkC,EAAMzlC,kBAAmB,EACzBylC,EAAMxnB,SAAU,EAChBymB,EAAKX,OAAQY,EAAWyB,WAAcX,EAEtCf,EAAK50C,IAAK21C,EAEX,CAEA,OAAOf,EAAKX,OAAQY,EAAWyB,UAEhC,EAID,MAAMC,GAELx7C,WAAAA,CAAa0P,GAA2B,IAApB+rC,EAAOl6C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,MAE7BnE,KAAKs+C,WAAY,EAEjBt+C,KAAKqQ,KAAO,GAEZrQ,KAAKsS,MAAQ,IAAIiuB,GAAOjuB,GACxBtS,KAAKq+C,QAAUA,CAEhB,CAEA32C,KAAAA,GAEC,OAAO,IAAI02C,GAASp+C,KAAKsS,MAAOtS,KAAKq+C,QAEtC,CAEApoC,MAAAA,GAEC,MAAO,CACNpW,KAAM,UACNwQ,KAAMrQ,KAAKqQ,KACXiC,MAAOtS,KAAKsS,MAAMmvB,SAClB4c,QAASr+C,KAAKq+C,QAGhB,EAID,MAAME,GAEL37C,WAAAA,CAAa0P,GAA8B,IAAvBogB,EAAIvuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGwuB,EAAGxuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAEnCnE,KAAKw+C,OAAQ,EAEbx+C,KAAKqQ,KAAO,GAEZrQ,KAAKsS,MAAQ,IAAIiuB,GAAOjuB,GAExBtS,KAAK0yB,KAAOA,EACZ1yB,KAAK2yB,IAAMA,CAEZ,CAEAjrB,KAAAA,GAEC,OAAO,IAAI62C,GAAKv+C,KAAKsS,MAAOtS,KAAK0yB,KAAM1yB,KAAK2yB,IAE7C,CAEA1c,MAAAA,GAEC,MAAO,CACNpW,KAAM,MACNwQ,KAAMrQ,KAAKqQ,KACXiC,MAAOtS,KAAKsS,MAAMmvB,SAClB/O,KAAM1yB,KAAK0yB,KACXC,IAAK3yB,KAAK2yB,IAGZ,EAID,MAAM8rB,WAActpB,GAEnBvyB,WAAAA,GAEC4U,QAEAxX,KAAKg8B,SAAU,EAEfh8B,KAAKH,KAAO,QAEZG,KAAKi8B,WAAa,KAClBj8B,KAAKm8B,YAAc,KACnBn8B,KAAK+pC,IAAM,KAEX/pC,KAAK0+C,qBAAuB,EAC5B1+C,KAAK2+C,oBAAsB,EAC3B3+C,KAAK4+C,mBAAqB,IAAI1rB,GAE9BlzB,KAAK6+C,qBAAuB,EAC5B7+C,KAAK8+C,oBAAsB,IAAI5rB,GAE/BlzB,KAAK++C,iBAAmB,KAEW,qBAAvBC,oBAEXA,mBAAmBt+C,cAAe,IAAIu+C,YAAa,UAAW,CAAEC,OAAQl/C,OAI1E,CAEA2H,IAAAA,CAAM+P,EAAQylB,GAmBb,OAjBA3lB,MAAM7P,KAAM+P,EAAQylB,GAEO,OAAtBzlB,EAAOukB,aAAsBj8B,KAAKi8B,WAAavkB,EAAOukB,WAAWv0B,SAC1C,OAAvBgQ,EAAOykB,cAAuBn8B,KAAKm8B,YAAczkB,EAAOykB,YAAYz0B,SACrD,OAAfgQ,EAAOqyB,MAAe/pC,KAAK+pC,IAAMryB,EAAOqyB,IAAIriC,SAEjD1H,KAAK0+C,qBAAuBhnC,EAAOgnC,qBACnC1+C,KAAK2+C,oBAAsBjnC,EAAOinC,oBAClC3+C,KAAK4+C,mBAAmBj3C,KAAM+P,EAAOknC,oBAErC5+C,KAAK6+C,qBAAuBnnC,EAAOmnC,qBACnC7+C,KAAK8+C,oBAAoBn3C,KAAM+P,EAAOonC,qBAEL,OAA5BpnC,EAAOqnC,mBAA4B/+C,KAAK++C,iBAAmBrnC,EAAOqnC,iBAAiBr3C,SAExF1H,KAAK+X,iBAAmBL,EAAOK,iBAExB/X,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAW3B,OATkB,OAAblW,KAAK+pC,MAAev0B,EAAKyQ,OAAO8jB,IAAM/pC,KAAK+pC,IAAI9zB,UAE/CjW,KAAK0+C,qBAAuB,IAAIlpC,EAAKyQ,OAAOy4B,qBAAuB1+C,KAAK0+C,sBAC3C,IAA7B1+C,KAAK2+C,sBAA4BnpC,EAAKyQ,OAAO04B,oBAAsB3+C,KAAK2+C,qBAC7EnpC,EAAKyQ,OAAO24B,mBAAqB5+C,KAAK4+C,mBAAmBl0C,UAEtB,IAA9B1K,KAAK6+C,uBAA6BrpC,EAAKyQ,OAAO44B,qBAAuB7+C,KAAK6+C,sBAC/ErpC,EAAKyQ,OAAO64B,oBAAsB9+C,KAAK8+C,oBAAoBp0C,UAEpD8K,CAER,EAID,MAAM2pC,GAELv8C,WAAAA,CAAa/B,EAAO6wC,GAEnB1xC,KAAKo/C,qBAAsB,EAE3Bp/C,KAAKa,MAAQA,EACbb,KAAK0xC,OAASA,EACd1xC,KAAKgc,WAAkBjc,IAAVc,EAAsBA,EAAMI,OAASywC,EAAS,EAE3D1xC,KAAK2rC,MAAQhtC,GACbqB,KAAK4rC,aAAe,GAEpB5rC,KAAK+V,QAAU,EAEf/V,KAAK6V,KAAOpU,IAEb,CAEAqqC,gBAAAA,GAAoB,CAEpB,eAAI91B,CAAa/T,IAED,IAAVA,GAAiBjC,KAAK+V,SAE5B,CAEAg2B,QAAAA,CAAU9pC,GAIT,OAFAjC,KAAK2rC,MAAQ1pC,EAENjC,IAER,CAEAgsC,cAAAA,CAAgBC,EAAOjwB,GAEtBhc,KAAK4rC,aAAaxrC,KAAM,CAAE6rC,QAAOjwB,SAElC,CAEAkwB,iBAAAA,GAEClsC,KAAK4rC,aAAa3qC,OAAS,CAE5B,CAEA0G,IAAAA,CAAM+P,GAOL,OALA1X,KAAKa,MAAQ,IAAI6W,EAAO7W,MAAM+B,YAAa8U,EAAO7W,OAClDb,KAAKgc,MAAQtE,EAAOsE,MACpBhc,KAAK0xC,OAASh6B,EAAOg6B,OACrB1xC,KAAK2rC,MAAQj0B,EAAOi0B,MAEb3rC,IAER,CAEAmsC,MAAAA,CAAQC,EAAQxhC,EAAWyhC,GAE1BD,GAAUpsC,KAAK0xC,OACfrF,GAAUzhC,EAAU8mC,OAEpB,IAAM,IAAI3wC,EAAI,EAAGC,EAAIhB,KAAK0xC,OAAQ3wC,EAAIC,EAAGD,IAExCf,KAAKa,MAAOurC,EAASrrC,GAAM6J,EAAU/J,MAAOwrC,EAAStrC,GAItD,OAAOf,IAER,CAEA4G,GAAAA,CAAK3E,GAAoB,IAAbwI,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAIpB,OAFAnE,KAAKa,MAAM+F,IAAK3E,EAAOwI,GAEhBzK,IAER,CAEA0H,KAAAA,CAAO8N,QAEqBzV,IAAtByV,EAAK6pC,eAET7pC,EAAK6pC,aAAe,CAAC,QAIWt/C,IAA5BC,KAAKa,MAAMsP,OAAOmvC,QAEtBt/C,KAAKa,MAAMsP,OAAOmvC,MAAQ79C,WAI2B1B,IAAjDyV,EAAK6pC,aAAcr/C,KAAKa,MAAMsP,OAAOmvC,SAEzC9pC,EAAK6pC,aAAcr/C,KAAKa,MAAMsP,OAAOmvC,OAAUt/C,KAAKa,MAAMC,MAAO,GAAIqP,QAItE,MAAMtP,EAAQ,IAAIb,KAAKa,MAAM+B,YAAa4S,EAAK6pC,aAAcr/C,KAAKa,MAAMsP,OAAOmvC,QAEzEC,EAAK,IAAIv/C,KAAK4C,YAAa/B,EAAOb,KAAK0xC,QAG7C,OAFA6N,EAAGxT,SAAU/rC,KAAK2rC,OAEX4T,CAER,CAEA5S,QAAAA,CAAU3qB,GAIT,OAFAhiB,KAAK8rC,iBAAmB9pB,EAEjBhiB,IAER,CAEAiW,MAAAA,CAAQT,GAwBP,YAtB2BzV,IAAtByV,EAAK6pC,eAET7pC,EAAK6pC,aAAe,CAAC,QAMWt/C,IAA5BC,KAAKa,MAAMsP,OAAOmvC,QAEtBt/C,KAAKa,MAAMsP,OAAOmvC,MAAQ79C,WAI2B1B,IAAjDyV,EAAK6pC,aAAcr/C,KAAKa,MAAMsP,OAAOmvC,SAEzC9pC,EAAK6pC,aAAcr/C,KAAKa,MAAMsP,OAAOmvC,OAAU/oC,MAAMI,KAAM,IAAI7T,YAAa9C,KAAKa,MAAMsP,UAMjF,CACN0F,KAAM7V,KAAK6V,KACX1F,OAAQnQ,KAAKa,MAAMsP,OAAOmvC,MAC1Bz/C,KAAMG,KAAKa,MAAM+B,YAAYyN,KAC7BqhC,OAAQ1xC,KAAK0xC,OAGf,EAID,MAAM8N,GAA0B,IAAIv9B,GAEpC,MAAMw9B,GAEL78C,WAAAA,CAAa88C,EAAmBnU,EAAU9gC,GAA6B,IAArB+gC,EAAUrnC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAE3DnE,KAAKyxC,8BAA+B,EAEpCzxC,KAAKqQ,KAAO,GAEZrQ,KAAKwV,KAAOkqC,EACZ1/C,KAAKurC,SAAWA,EAChBvrC,KAAKyK,OAASA,EAEdzK,KAAKwrC,WAAaA,CAEnB,CAEA,SAAIxvB,GAEH,OAAOhc,KAAKwV,KAAKwG,KAElB,CAEA,SAAInb,GAEH,OAAOb,KAAKwV,KAAK3U,KAElB,CAEA,eAAImV,CAAa/T,GAEhBjC,KAAKwV,KAAKQ,YAAc/T,CAEzB,CAEA2X,YAAAA,CAActX,GAEb,IAAM,IAAIvB,EAAI,EAAGC,EAAIhB,KAAKwV,KAAKwG,MAAOjb,EAAIC,EAAGD,IAE5Cy+C,GAAU70C,oBAAqB3K,KAAMe,GAErCy+C,GAAU5lC,aAActX,GAExBtC,KAAKwsC,OAAQzrC,EAAGy+C,GAAUh9C,EAAGg9C,GAAU/8C,EAAG+8C,GAAUjmC,GAIrD,OAAOvZ,IAER,CAEAwiB,iBAAAA,CAAmBlgB,GAElB,IAAM,IAAIvB,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCy+C,GAAU70C,oBAAqB3K,KAAMe,GAErCy+C,GAAUh9B,kBAAmBlgB,GAE7BtC,KAAKwsC,OAAQzrC,EAAGy+C,GAAUh9C,EAAGg9C,GAAU/8C,EAAG+8C,GAAUjmC,GAIrD,OAAOvZ,IAER,CAEAujB,kBAAAA,CAAoBjhB,GAEnB,IAAM,IAAIvB,EAAI,EAAGC,EAAIhB,KAAKgc,MAAOjb,EAAIC,EAAGD,IAEvCy+C,GAAU70C,oBAAqB3K,KAAMe,GAErCy+C,GAAUj8B,mBAAoBjhB,GAE9BtC,KAAKwsC,OAAQzrC,EAAGy+C,GAAUh9C,EAAGg9C,GAAU/8C,EAAG+8C,GAAUjmC,GAIrD,OAAOvZ,IAER,CAEAyH,YAAAA,CAAcjH,EAAOisC,GAEpB,IAAIxqC,EAAQjC,KAAKa,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAASgiC,GAIjE,OAFKzsC,KAAKwrC,aAAavpC,EAAQU,GAAaV,EAAOjC,KAAKa,QAEjDoB,CAER,CAEAuF,YAAAA,CAAchH,EAAOisC,EAAWxqC,GAM/B,OAJKjC,KAAKwrC,aAAavpC,EAAQoB,GAAWpB,EAAOjC,KAAKa,QAEtDb,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAASgiC,GAAcxqC,EAEjEjC,IAER,CAEAsH,IAAAA,CAAM9G,EAAOgC,GAMZ,OAJKxC,KAAKwrC,aAAahpC,EAAIa,GAAWb,EAAGxC,KAAKa,QAE9Cb,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,QAAWjI,EAErDxC,IAER,CAEAuH,IAAAA,CAAM/G,EAAOiC,GAMZ,OAJKzC,KAAKwrC,aAAa/oC,EAAIY,GAAWZ,EAAGzC,KAAKa,QAE9Cb,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAAS,GAAMhI,EAEzDzC,IAER,CAEA0Z,IAAAA,CAAMlZ,EAAO+Y,GAMZ,OAJKvZ,KAAKwrC,aAAajyB,EAAIlW,GAAWkW,EAAGvZ,KAAKa,QAE9Cb,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAAS,GAAM8O,EAEzDvZ,IAER,CAEA2Z,IAAAA,CAAMnZ,EAAOgZ,GAMZ,OAJKxZ,KAAKwrC,aAAahyB,EAAInW,GAAWmW,EAAGxZ,KAAKa,QAE9Cb,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAAS,GAAM+O,EAEzDxZ,IAER,CAEA6K,IAAAA,CAAMrK,GAEL,IAAIgC,EAAIxC,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,QAIzD,OAFKzK,KAAKwrC,aAAahpC,EAAIG,GAAaH,EAAGxC,KAAKa,QAEzC2B,CAER,CAEAsI,IAAAA,CAAMtK,GAEL,IAAIiC,EAAIzC,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAAS,GAIlE,OAFKzK,KAAKwrC,aAAa/oC,EAAIE,GAAaF,EAAGzC,KAAKa,QAEzC4B,CAER,CAEAwY,IAAAA,CAAMza,GAEL,IAAI+Y,EAAIvZ,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAAS,GAIlE,OAFKzK,KAAKwrC,aAAajyB,EAAI5W,GAAa4W,EAAGvZ,KAAKa,QAEzC0Y,CAER,CAEA2B,IAAAA,CAAM1a,GAEL,IAAIgZ,EAAIxZ,KAAKwV,KAAK3U,MAAOL,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAAS,GAIlE,OAFKzK,KAAKwrC,aAAahyB,EAAI7W,GAAa6W,EAAGxZ,KAAKa,QAEzC2Y,CAER,CAEA+yB,KAAAA,CAAO/rC,EAAOgC,EAAGC,GAchB,OAZAjC,EAAQA,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAEnCzK,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,QAIxBb,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMgC,EAC/BxC,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMiC,EAExBzC,IAER,CAEAwsC,MAAAA,CAAQhsC,EAAOgC,EAAGC,EAAG8W,GAgBpB,OAdA/Y,EAAQA,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAEnCzK,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,OACvB0Y,EAAIlW,GAAWkW,EAAGvZ,KAAKa,QAIxBb,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMgC,EAC/BxC,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMiC,EAC/BzC,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAM+Y,EAExBvZ,IAER,CAEA0sC,OAAAA,CAASlsC,EAAOgC,EAAGC,EAAG8W,EAAGC,GAkBxB,OAhBAhZ,EAAQA,EAAQR,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAEnCzK,KAAKwrC,aAEThpC,EAAIa,GAAWb,EAAGxC,KAAKa,OACvB4B,EAAIY,GAAWZ,EAAGzC,KAAKa,OACvB0Y,EAAIlW,GAAWkW,EAAGvZ,KAAKa,OACvB2Y,EAAInW,GAAWmW,EAAGxZ,KAAKa,QAIxBb,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMgC,EAC/BxC,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMiC,EAC/BzC,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAM+Y,EAC/BvZ,KAAKwV,KAAK3U,MAAOL,EAAQ,GAAMgZ,EAExBxZ,IAER,CAEA0H,KAAAA,CAAO8N,GAEN,QAAczV,IAATyV,EAAqB,CAEzB3O,QAAQpB,IAAK,qHAEb,MAAM5E,EAAQ,GAEd,IAAM,IAAIE,EAAI,EAAGA,EAAIf,KAAKgc,MAAOjb,IAAO,CAEvC,MAAMP,EAAQO,EAAIf,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAE1C,IAAM,IAAI6e,EAAI,EAAGA,EAAItpB,KAAKurC,SAAUjiB,IAEnCzoB,EAAMT,KAAMJ,KAAKwV,KAAK3U,MAAOL,EAAQ8oB,GAIvC,CAEA,OAAO,IAAIgiB,GAAiB,IAAItrC,KAAKa,MAAM+B,YAAa/B,GAASb,KAAKurC,SAAUvrC,KAAKwrC,WAEtF,CAcC,YAZiCzrC,IAA5ByV,EAAKmqC,qBAETnqC,EAAKmqC,mBAAqB,CAAC,QAIuB5/C,IAA9CyV,EAAKmqC,mBAAoB3/C,KAAKwV,KAAKK,QAEvCL,EAAKmqC,mBAAoB3/C,KAAKwV,KAAKK,MAAS7V,KAAKwV,KAAK9N,MAAO8N,IAIvD,IAAIiqC,GAA4BjqC,EAAKmqC,mBAAoB3/C,KAAKwV,KAAKK,MAAQ7V,KAAKurC,SAAUvrC,KAAKyK,OAAQzK,KAAKwrC,WAIrH,CAEAv1B,MAAAA,CAAQT,GAEP,QAAczV,IAATyV,EAAqB,CAEzB3O,QAAQpB,IAAK,0HAEb,MAAM5E,EAAQ,GAEd,IAAM,IAAIE,EAAI,EAAGA,EAAIf,KAAKgc,MAAOjb,IAAO,CAEvC,MAAMP,EAAQO,EAAIf,KAAKwV,KAAKk8B,OAAS1xC,KAAKyK,OAE1C,IAAM,IAAI6e,EAAI,EAAGA,EAAItpB,KAAKurC,SAAUjiB,IAEnCzoB,EAAMT,KAAMJ,KAAKwV,KAAK3U,MAAOL,EAAQ8oB,GAIvC,CAIA,MAAO,CACNiiB,SAAUvrC,KAAKurC,SACf1rC,KAAMG,KAAKa,MAAM+B,YAAYyN,KAC7BxP,MAAOA,EACP2qC,WAAYxrC,KAAKwrC,WAGnB,CAgBC,YAZiCzrC,IAA5ByV,EAAKmqC,qBAETnqC,EAAKmqC,mBAAqB,CAAC,QAIuB5/C,IAA9CyV,EAAKmqC,mBAAoB3/C,KAAKwV,KAAKK,QAEvCL,EAAKmqC,mBAAoB3/C,KAAKwV,KAAKK,MAAS7V,KAAKwV,KAAKS,OAAQT,IAIxD,CACNi8B,8BAA8B,EAC9BlG,SAAUvrC,KAAKurC,SACf/1B,KAAMxV,KAAKwV,KAAKK,KAChBpL,OAAQzK,KAAKyK,OACb+gC,WAAYxrC,KAAKwrC,WAKpB,EAID,MAAMoU,WAAuBhd,GAE5BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAK6/C,kBAAmB,EAExB7/C,KAAKH,KAAO,iBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKy6B,IAAM,KAEXz6B,KAAKsnC,SAAW,KAEhBtnC,KAAKmP,SAAW,EAEhBnP,KAAKspC,iBAAkB,EAEvBtpC,KAAKkjC,aAAc,EAEnBljC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAgBL,OAdAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKmP,SAAWuI,EAAOvI,SAEvBnP,KAAKspC,gBAAkB5xB,EAAO4xB,gBAE9BtpC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,IAAI8/C,GAEJ,MAAMC,GAAgC,IAAI99B,GACpC+9B,GAA4B,IAAI/9B,GAChCg+B,GAA4B,IAAIh+B,GAEhCi+B,GAAiC,IAAIn5C,GACrCo5C,GAAiC,IAAIp5C,GACrCq5C,GAAiC,IAAIxyB,GAErCyyB,GAAoB,IAAIp+B,GACxBq+B,GAAoB,IAAIr+B,GACxBs+B,GAAoB,IAAIt+B,GAExBu+B,GAAqB,IAAIz5C,GACzB05C,GAAqB,IAAI15C,GACzB25C,GAAqB,IAAI35C,GAE/B,MAAM45C,WAAexrB,GAEpBvyB,WAAAA,GAA+C,IAAlCg6B,EAAQz4B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAIy7C,GAQ3B,GANApoC,QAEAxX,KAAK4gD,UAAW,EAEhB5gD,KAAKH,KAAO,cAEOE,IAAd+/C,GAA0B,CAE9BA,GAAY,IAAIjS,GAEhB,MAAMgT,EAAe,IAAIh+C,aAAc,EACpC,IAAO,GAAK,EAAG,EAAG,EACpB,IAAO,GAAK,EAAG,EAAG,EAClB,GAAK,GAAK,EAAG,EAAG,GACd,GAAK,GAAK,EAAG,EAAG,IAGb68C,EAAoB,IAAIP,GAAmB0B,EAAc,GAE/Df,GAAUxR,SAAU,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,IACrCwR,GAAUrR,aAAc,WAAY,IAAIgR,GAA4BC,EAAmB,EAAG,GAAG,IAC7FI,GAAUrR,aAAc,KAAM,IAAIgR,GAA4BC,EAAmB,EAAG,GAAG,GAExF,CAEA1/C,KAAK6mB,SAAWi5B,GAChB9/C,KAAK48B,SAAWA,EAEhB58B,KAAKgL,OAAS,IAAIjE,GAAS,GAAK,GAEjC,CAEA2xB,OAAAA,CAAS0a,EAAWC,GAEO,OAArBD,EAAUlwB,QAEdrc,QAAQ+wB,MAAO,yFAIhBooB,GAAYn7B,mBAAoB7kB,KAAKsjB,aAErC88B,GAAiBz4C,KAAMyrC,EAAUlwB,OAAOI,aACxCtjB,KAAK01B,gBAAgBnpB,iBAAkB6mC,EAAUlwB,OAAOC,mBAAoBnjB,KAAKsjB,aAEjF28B,GAAYjlC,sBAAuBhb,KAAK01B,iBAEnC0d,EAAUlwB,OAAO20B,sBAAyD,IAAlC73C,KAAK48B,SAAS0M,iBAE1D0W,GAAY33C,gBAAkB43C,GAAY1mC,GAI3C,MAAMpK,EAAWnP,KAAK48B,SAASztB,SAC/B,IAAIhJ,EAAKD,EAES,IAAbiJ,IAEJjJ,EAAM5E,KAAK4E,IAAKiJ,GAChBhJ,EAAM7E,KAAK6E,IAAKgJ,IAIjB,MAAMnE,EAAShL,KAAKgL,OAEpB81C,GAAiBT,GAAIz5C,KAAO,IAAO,GAAK,GAAKq5C,GAAaj1C,EAAQg1C,GAAa75C,EAAKD,GACpF46C,GAAiBR,GAAI15C,IAAK,IAAO,GAAK,GAAKq5C,GAAaj1C,EAAQg1C,GAAa75C,EAAKD,GAClF46C,GAAiBP,GAAI35C,IAAK,GAAK,GAAK,GAAKq5C,GAAaj1C,EAAQg1C,GAAa75C,EAAKD,GAEhFs6C,GAAK55C,IAAK,EAAG,GACb65C,GAAK75C,IAAK,EAAG,GACb85C,GAAK95C,IAAK,EAAG,GAGb,IAAIqiB,EAAYmqB,EAAUpoB,IAAIqC,kBAAmBgzB,GAAKC,GAAKC,IAAK,EAAOR,IAEvE,GAAmB,OAAd92B,IAGJ63B,GAAiBR,GAAI15C,KAAO,GAAK,GAAK,GAAKq5C,GAAaj1C,EAAQg1C,GAAa75C,EAAKD,GAClFu6C,GAAK75C,IAAK,EAAG,GAEbqiB,EAAYmqB,EAAUpoB,IAAIqC,kBAAmBgzB,GAAKE,GAAKD,IAAK,EAAOP,IAChD,OAAd92B,GAEJ,OAMF,MAAMmO,EAAWgc,EAAUpoB,IAAIF,OAAOjhB,WAAYk2C,IAE7C3oB,EAAWgc,EAAU1gB,MAAQ0E,EAAWgc,EAAUzgB,KAEvD0gB,EAAWjzC,KAAM,CAEhBg3B,SAAUA,EACV5Q,MAAOu5B,GAAgBr4C,QACvB0R,GAAI6kB,GAASW,iBAAkBmhB,GAAiBM,GAAKC,GAAKC,GAAKC,GAAMC,GAAMC,GAAM,IAAI35C,IACrF8sC,KAAM,KACN5tB,OAAQjmB,MAIV,CAEA2H,IAAAA,CAAM+P,EAAQylB,GAQb,OANA3lB,MAAM7P,KAAM+P,EAAQylB,QAEGp9B,IAAlB2X,EAAO1M,QAAuBhL,KAAKgL,OAAOrD,KAAM+P,EAAO1M,QAE5DhL,KAAK48B,SAAWllB,EAAOklB,SAEhB58B,IAER,EAID,SAAS8gD,GAAiBC,EAAgBC,EAAYh2C,EAAQsE,EAAOnJ,EAAKD,GAGzEg6C,GAAiB/3C,WAAY44C,EAAgB/1C,GAASlD,UAAW,IAAMM,SAAUkH,QAGpEvP,IAARoG,GAEJg6C,GAAiB39C,EAAM0D,EAAMg6C,GAAiB19C,EAAQ2D,EAAM+5C,GAAiBz9C,EAC7E09C,GAAiB19C,EAAM0D,EAAM+5C,GAAiB19C,EAAQ0D,EAAMg6C,GAAiBz9C,GAI7E09C,GAAiBx4C,KAAMu4C,IAKxBa,EAAep5C,KAAMq5C,GACrBD,EAAev+C,GAAK29C,GAAiB39C,EACrCu+C,EAAet+C,GAAK09C,GAAiB19C,EAGrCs+C,EAAennC,aAAcwmC,GAE9B,CAEA,MAAMa,GAAsB,IAAIh/B,GAC1Bi/B,GAAsB,IAAIj/B,GAEhC,MAAMk/B,WAAYhsB,GAEjBvyB,WAAAA,GAEC4U,QAEAxX,KAAKohD,cAAgB,EAErBphD,KAAKH,KAAO,MAEZ2T,OAAO+hB,iBAAkBv1B,KAAM,CAC9BqhD,OAAQ,CACP5rB,YAAY,EACZxzB,MAAO,IAERq/C,MAAO,CACNr/C,OAAO,KAITjC,KAAKuhD,YAAa,CAEnB,CAEA55C,IAAAA,CAAM+P,GAELF,MAAM7P,KAAM+P,GAAQ,GAEpB,MAAM2pC,EAAS3pC,EAAO2pC,OAEtB,IAAM,IAAItgD,EAAI,EAAGC,EAAIqgD,EAAOpgD,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMygD,EAAQH,EAAQtgD,GAEtBf,KAAKyhD,SAAUD,EAAMv7B,OAAOve,QAAS85C,EAAMpqB,SAAUoqB,EAAME,WAE5D,CAIA,OAFA1hD,KAAKuhD,WAAa7pC,EAAO6pC,WAElBvhD,IAER,CAEAyhD,QAAAA,CAAUx7B,GAAuC,IAA/BmR,EAAQjzB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGu9C,EAAUv9C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE5CizB,EAAW91B,KAAK8C,IAAKgzB,GAErB,MAAMiqB,EAASrhD,KAAKqhD,OAEpB,IAAIrgD,EAEJ,IAAMA,EAAI,EAAGA,EAAIqgD,EAAOpgD,UAElBm2B,EAAWiqB,EAAQrgD,GAAIo2B,UAFGp2B,KAchC,OAJAqgD,EAAO5gD,OAAQO,EAAG,EAAG,CAAEo2B,SAAUA,EAAUsqB,WAAYA,EAAYz7B,OAAQA,IAE3EjmB,KAAK6H,IAAKoe,GAEHjmB,IAER,CAEA2hD,WAAAA,CAAavqB,GAEZ,MAAMiqB,EAASrhD,KAAKqhD,OAEpB,IAAM,IAAItgD,EAAI,EAAGA,EAAIsgD,EAAOpgD,OAAQF,IAEnC,GAAKsgD,EAAQtgD,GAAIq2B,WAAaA,EAAW,CAExC,MAAMwqB,EAAkBP,EAAO5gD,OAAQM,EAAG,GAG1C,OAFAf,KAAK83B,OAAQ8pB,EAAiB,GAAI37B,SAE3B,CAER,CAID,OAAO,CAER,CAEA47B,eAAAA,GAEC,OAAO7hD,KAAKohD,aAEb,CAIAU,oBAAAA,CAAsB1qB,GAErB,MAAMiqB,EAASrhD,KAAKqhD,OAEpB,GAAKA,EAAOpgD,OAAS,EAAI,CAExB,IAAIF,EAAGC,EAEP,IAAMD,EAAI,EAAGC,EAAIqgD,EAAOpgD,OAAQF,EAAIC,EAAGD,IAAO,CAE7C,IAAIghD,EAAgBV,EAAQtgD,GAAIq2B,SAQhC,GANKiqB,EAAQtgD,GAAIklB,OAAO+P,UAEvB+rB,GAAiBA,EAAgBV,EAAQtgD,GAAI2gD,YAIzCtqB,EAAW2qB,EAEf,KAIF,CAEA,OAAOV,EAAQtgD,EAAI,GAAIklB,MAExB,CAEA,OAAO,IAER,CAEAyS,OAAAA,CAAS0a,EAAWC,GAInB,GAFerzC,KAAKqhD,OAERpgD,OAAS,EAAI,CAExBggD,GAAMjmC,sBAAuBhb,KAAKsjB,aAElC,MAAM8T,EAAWgc,EAAUpoB,IAAIF,OAAOjhB,WAAYo3C,IAElDjhD,KAAK8hD,qBAAsB1qB,GAAWsB,QAAS0a,EAAWC,EAE3D,CAED,CAEA9zB,MAAAA,CAAQ2D,GAEP,MAAMm+B,EAASrhD,KAAKqhD,OAEpB,GAAKA,EAAOpgD,OAAS,EAAI,CAExBggD,GAAMjmC,sBAAuBkI,EAAOI,aACpC49B,GAAMlmC,sBAAuBhb,KAAKsjB,aAElC,MAAM8T,EAAW6pB,GAAMp3C,WAAYq3C,IAAUh+B,EAAO40B,KAIpD,IAAI/2C,EAAGC,EAEP,IAJAqgD,EAAQ,GAAIp7B,OAAO+P,SAAU,EAIvBj1B,EAAI,EAAGC,EAAIqgD,EAAOpgD,OAAQF,EAAIC,EAAGD,IAAO,CAE7C,IAAIghD,EAAgBV,EAAQtgD,GAAIq2B,SAQhC,GANKiqB,EAAQtgD,GAAIklB,OAAO+P,UAEvB+rB,GAAiBA,EAAgBV,EAAQtgD,GAAI2gD,cAIzCtqB,GAAY2qB,GAOhB,MALAV,EAAQtgD,EAAI,GAAIklB,OAAO+P,SAAU,EACjCqrB,EAAQtgD,GAAIklB,OAAO+P,SAAU,CAQ/B,CAIA,IAFAh2B,KAAKohD,cAAgBrgD,EAAI,EAEjBA,EAAIC,EAAGD,IAEdsgD,EAAQtgD,GAAIklB,OAAO+P,SAAU,CAI/B,CAED,CAEA/f,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,IAEF,IAApBlW,KAAKuhD,aAAuB/rC,EAAKyQ,OAAOs7B,YAAa,GAE1D/rC,EAAKyQ,OAAOo7B,OAAS,GAErB,MAAMA,EAASrhD,KAAKqhD,OAEpB,IAAM,IAAItgD,EAAI,EAAGC,EAAIqgD,EAAOpgD,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMygD,EAAQH,EAAQtgD,GAEtByU,EAAKyQ,OAAOo7B,OAAOjhD,KAAM,CACxB6lB,OAAQu7B,EAAMv7B,OAAOpQ,KACrBuhB,SAAUoqB,EAAMpqB,SAChBsqB,WAAYF,EAAME,YAGpB,CAEA,OAAOlsC,CAER,EAID,MAAMwsC,GAA8B,IAAI//B,GAElCggC,GAA2B,IAAI3oC,GAC/B4oC,GAA4B,IAAI5oC,GAEhC6oC,GAAyB,IAAIlgC,GAC7BmgC,GAAyB,IAAIx0B,GAC7By0B,GAAwB,IAAIpgC,GAE5BqgC,GAA0B,IAAIz4B,GAC9B04B,GAAiC,IAAI30B,GACrC40B,GAAuB,IAAI33B,GAEjC,MAAM43B,WAAoB9P,GAEzB/vC,WAAAA,CAAaikB,EAAU+V,GAEtBplB,MAAOqP,EAAU+V,GAEjB58B,KAAKw8B,eAAgB,EAErBx8B,KAAKH,KAAO,cAEZG,KAAKy8B,SAAW7lC,GAChBoJ,KAAK08B,WAAa,IAAI9O,GACtB5tB,KAAK0iD,kBAAoB,IAAI90B,GAE7B5tB,KAAKmnB,YAAc,KACnBnnB,KAAK+7B,eAAiB,IAEvB,CAEA3U,kBAAAA,GAEC,MAAMP,EAAW7mB,KAAK6mB,SAEI,OAArB7mB,KAAKmnB,cAETnnB,KAAKmnB,YAAc,IAAIhC,IAIxBnlB,KAAKmnB,YAAY5B,YAEjB,MAAMuB,EAAoBD,EAASE,aAAc,YAEjD,IAAM,IAAIhmB,EAAI,EAAGA,EAAI+lB,EAAkB9K,MAAOjb,IAE7Cf,KAAKknB,kBAAmBnmB,EAAGshD,IAC3BriD,KAAKmnB,YAAY3B,cAAe68B,GAIlC,CAEApT,qBAAAA,GAEC,MAAMpoB,EAAW7mB,KAAK6mB,SAEO,OAAxB7mB,KAAK+7B,iBAET/7B,KAAK+7B,eAAiB,IAAIlS,IAI3B7pB,KAAK+7B,eAAexW,YAEpB,MAAMuB,EAAoBD,EAASE,aAAc,YAEjD,IAAM,IAAIhmB,EAAI,EAAGA,EAAI+lB,EAAkB9K,MAAOjb,IAE7Cf,KAAKknB,kBAAmBnmB,EAAGshD,IAC3BriD,KAAK+7B,eAAevW,cAAe68B,GAIrC,CAEA16C,IAAAA,CAAM+P,EAAQylB,GAab,OAXA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKy8B,SAAW/kB,EAAO+kB,SACvBz8B,KAAK08B,WAAW/0B,KAAM+P,EAAOglB,YAC7B18B,KAAK0iD,kBAAkB/6C,KAAM+P,EAAOgrC,mBAEpC1iD,KAAK28B,SAAWjlB,EAAOilB,SAEK,OAAvBjlB,EAAOyP,cAAuBnnB,KAAKmnB,YAAczP,EAAOyP,YAAYzf,SAC1C,OAA1BgQ,EAAOqkB,iBAA0B/7B,KAAK+7B,eAAiBrkB,EAAOqkB,eAAer0B,SAE3E1H,IAER,CAEA04B,OAAAA,CAAS0a,EAAWC,GAEnB,MAAMzW,EAAW58B,KAAK48B,SAChBtZ,EAActjB,KAAKsjB,iBAEPvjB,IAAb68B,IAIwB,OAAxB58B,KAAK+7B,gBAA0B/7B,KAAKivC,wBAEzCqT,GAAU36C,KAAM3H,KAAK+7B,gBACrBumB,GAAU1oC,aAAc0J,IAE6B,IAAhD8vB,EAAUpoB,IAAIpD,iBAAkB06B,MAIrCC,GAAiB56C,KAAM2b,GAAcpV,SACrCs0C,GAAO76C,KAAMyrC,EAAUpoB,KAAMpR,aAAc2oC,IAIjB,OAArBviD,KAAKmnB,cAEyC,IAA7Cq7B,GAAO76B,cAAe3nB,KAAKmnB,cAMjCnnB,KAAKszC,sBAAuBF,EAAWC,EAAYmP,KAEpD,CAEAt7B,iBAAAA,CAAmB1mB,EAAOI,GAMzB,OAJA4W,MAAM0P,kBAAmB1mB,EAAOI,GAEhCZ,KAAK2iD,mBAAoBniD,EAAOI,GAEzBA,CAER,CAEAgiD,IAAAA,CAAMjmB,EAAUD,GAEf18B,KAAK28B,SAAWA,OAEI58B,IAAf28B,IAEJ18B,KAAK84B,mBAAmB,GAExB94B,KAAK28B,SAASkmB,oBAEdnmB,EAAa18B,KAAKsjB,aAInBtjB,KAAK08B,WAAW/0B,KAAM+0B,GACtB18B,KAAK0iD,kBAAkB/6C,KAAM+0B,GAAaxuB,QAE3C,CAEA40C,IAAAA,GAEC9iD,KAAK28B,SAASmmB,MAEf,CAEAC,oBAAAA,GAEC,MAAMr8B,EAAS,IAAIpN,GAEb0pC,EAAahjD,KAAK6mB,SAASmnB,WAAWgV,WAE5C,IAAM,IAAIjiD,EAAI,EAAGC,EAAIgiD,EAAWhnC,MAAOjb,EAAIC,EAAGD,IAAO,CAEpD2lB,EAAO/b,oBAAqBq4C,EAAYjiD,GAExC,MAAMuO,EAAQ,EAAMoX,EAAOpd,kBAEtBgG,IAAU8V,IAEdsB,EAAOre,eAAgBiH,GAIvBoX,EAAO9f,IAAK,EAAG,EAAG,EAAG,GAItBo8C,EAAWtW,QAAS3rC,EAAG2lB,EAAOlkB,EAAGkkB,EAAOjkB,EAAGikB,EAAOnN,EAAGmN,EAAOlN,EAE7D,CAED,CAEAsf,iBAAAA,CAAmBC,GAElBvhB,MAAMshB,kBAAmBC,GAEpB/4B,KAAKy8B,WAAa7lC,GAEtBoJ,KAAK0iD,kBAAkB/6C,KAAM3H,KAAKsjB,aAAcpV,SAErClO,KAAKy8B,WAAa5lC,GAE7BmJ,KAAK0iD,kBAAkB/6C,KAAM3H,KAAK08B,YAAaxuB,SAI/CrH,QAAQC,KAAM,6CAA+C9G,KAAKy8B,SAIpE,CAEAkmB,kBAAAA,CAAoBniD,EAAOkmB,GAE1B,MAAMiW,EAAW38B,KAAK28B,SAChB9V,EAAW7mB,KAAK6mB,SAEtBo7B,GAAWt3C,oBAAqBkc,EAASmnB,WAAWiV,UAAWziD,GAC/D0hD,GAAYv3C,oBAAqBkc,EAASmnB,WAAWgV,WAAYxiD,GAEjEwhD,GAAcr6C,KAAM+e,GAAS9M,aAAc5Z,KAAK08B,YAEhDhW,EAAO9f,IAAK,EAAG,EAAG,GAElB,IAAM,IAAI7F,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAMmiD,EAAShB,GAAYz6C,aAAc1G,GAEzC,GAAgB,IAAXmiD,EAAe,CAEnB,MAAMC,EAAYlB,GAAWx6C,aAAc1G,GAE3CqhD,GAAS71C,iBAAkBowB,EAASymB,MAAOD,GAAY7/B,YAAaqZ,EAAS0mB,aAAcF,IAE3Fz8B,EAAO1e,gBAAiBm6C,GAASx6C,KAAMq6C,IAAgBpoC,aAAcwoC,IAAYc,EAElF,CAED,CAEA,OAAOx8B,EAAO9M,aAAc5Z,KAAK0iD,kBAElC,EAID,MAAMY,WAAanuB,GAElBvyB,WAAAA,GAEC4U,QAEAxX,KAAKujD,QAAS,EAEdvjD,KAAKH,KAAO,MAEb,EAID,MAAM2jD,WAAoB3sC,GAEzBjU,WAAAA,GAAqK,IAAxJ4S,EAAIrR,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAAM+C,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE7CqT,MAAO,KAF8DrT,UAAAlD,OAAA,EAAAkD,UAAA,QAAApE,EAAOoE,UAAAlD,OAAA,EAAAkD,UAAA,QAAApE,EAAOoE,UAAAlD,OAAA,EAAAkD,UAAA,QAAApE,EAAWoE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG5M,GAAwB4M,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG5M,GAAtE4M,UAAAlD,OAAA,EAAAkD,UAAA,QAAApE,EAAMoE,UAAAlD,OAAA,EAAAkD,UAAA,QAAApE,EAAyFoE,UAAAlD,OAAA,GAAAkD,UAAA,SAAApE,EAAYoE,UAAAlD,OAAA,GAAAkD,UAAA,SAAApE,GAIjKC,KAAKyW,eAAgB,EAErBzW,KAAKyU,MAAQ,CAAEe,KAAMA,EAAMtO,MAAOA,EAAOC,OAAQA,GAEjDnH,KAAKgY,iBAAkB,EACvBhY,KAAKkY,OAAQ,EACblY,KAAKmY,gBAAkB,CAExB,EAID,MAAMsrC,GAA8B,IAAI71B,GAClC81B,GAAgC,IAAI91B,GAE1C,MAAM+1B,GAEL/gD,WAAAA,GAA6C,IAAhCwgD,EAAKj/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIk/C,EAAYl/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEvCnE,KAAK6V,KAAOpU,KAEZzB,KAAKojD,MAAQA,EAAMtiD,MAAO,GAC1Bd,KAAKqjD,aAAeA,EACpBrjD,KAAK4jD,aAAe,KAEpB5jD,KAAK6jD,YAAc,KAEnB7jD,KAAK8jD,MAEN,CAEAA,IAAAA,GAEC,MAAMV,EAAQpjD,KAAKojD,MACbC,EAAerjD,KAAKqjD,aAM1B,GAJArjD,KAAK4jD,aAAe,IAAI/gD,aAA6B,GAAfugD,EAAMniD,QAIf,IAAxBoiD,EAAapiD,OAEjBjB,KAAK6iD,yBAML,GAAKO,EAAMniD,SAAWoiD,EAAapiD,OAAS,CAE3C4F,QAAQC,KAAM,mFAEd9G,KAAKqjD,aAAe,GAEpB,IAAM,IAAItiD,EAAI,EAAGsb,EAAKrc,KAAKojD,MAAMniD,OAAQF,EAAIsb,EAAItb,IAEhDf,KAAKqjD,aAAajjD,KAAM,IAAIwtB,GAI9B,CAIF,CAEAi1B,iBAAAA,GAEC7iD,KAAKqjD,aAAapiD,OAAS,EAE3B,IAAM,IAAIF,EAAI,EAAGsb,EAAKrc,KAAKojD,MAAMniD,OAAQF,EAAIsb,EAAItb,IAAO,CAEvD,MAAMgjD,EAAU,IAAIn2B,GAEf5tB,KAAKojD,MAAOriD,IAEhBgjD,EAAQp8C,KAAM3H,KAAKojD,MAAOriD,GAAIuiB,aAAcpV,SAI7ClO,KAAKqjD,aAAajjD,KAAM2jD,EAEzB,CAED,CAEAjB,IAAAA,GAIC,IAAM,IAAI/hD,EAAI,EAAGsb,EAAKrc,KAAKojD,MAAMniD,OAAQF,EAAIsb,EAAItb,IAAO,CAEvD,MAAMijD,EAAOhkD,KAAKojD,MAAOriD,GAEpBijD,GAEJA,EAAK1gC,YAAY3b,KAAM3H,KAAKqjD,aAActiD,IAAMmN,QAIlD,CAIA,IAAM,IAAInN,EAAI,EAAGsb,EAAKrc,KAAKojD,MAAMniD,OAAQF,EAAIsb,EAAItb,IAAO,CAEvD,MAAMijD,EAAOhkD,KAAKojD,MAAOriD,GAEpBijD,IAECA,EAAK3uB,QAAU2uB,EAAK3uB,OAAOkuB,QAE/BS,EAAKn0C,OAAOlI,KAAMq8C,EAAK3uB,OAAO/R,aAAcpV,SAC5C81C,EAAKn0C,OAAOzH,SAAU47C,EAAK1gC,cAI3B0gC,EAAKn0C,OAAOlI,KAAMq8C,EAAK1gC,aAIxB0gC,EAAKn0C,OAAOmiB,UAAWgyB,EAAKvyB,SAAUuyB,EAAK5kC,WAAY4kC,EAAK10C,OAI9D,CAED,CAEAiQ,MAAAA,GAEC,MAAM6jC,EAAQpjD,KAAKojD,MACbC,EAAerjD,KAAKqjD,aACpBO,EAAe5jD,KAAK4jD,aACpBC,EAAc7jD,KAAK6jD,YAIzB,IAAM,IAAI9iD,EAAI,EAAGsb,EAAK+mC,EAAMniD,OAAQF,EAAIsb,EAAItb,IAAO,CAIlD,MAAM8O,EAASuzC,EAAOriD,GAAMqiD,EAAOriD,GAAIuiB,YAAcogC,GAErDD,GAAcl3C,iBAAkBsD,EAAQwzC,EAActiD,IACtD0iD,GAAc/4C,QAASk5C,EAAkB,GAAJ7iD,EAEtC,CAEqB,OAAhB8iD,IAEJA,EAAY7tC,aAAc,EAI5B,CAEAtO,KAAAA,GAEC,OAAO,IAAIi8C,GAAU3jD,KAAKojD,MAAOpjD,KAAKqjD,aAEvC,CAEAY,kBAAAA,GASC,IAAIn+B,EAAOxkB,KAAK+H,KAA0B,EAApBrJ,KAAKojD,MAAMniD,QACjC6kB,EAA+B,EAAxBxkB,KAAKkE,KAAMsgB,EAAO,GACzBA,EAAOxkB,KAAKa,IAAK2jB,EAAM,GAEvB,MAAM89B,EAAe,IAAI/gD,aAAcijB,EAAOA,EAAO,GACrD89B,EAAah9C,IAAK5G,KAAK4jD,cAEvB,MAAMC,EAAc,IAAIL,GAAaI,EAAc99B,EAAMA,EAAM/sB,GAAYR,IAM3E,OALAsrD,EAAY7tC,aAAc,EAE1BhW,KAAK4jD,aAAeA,EACpB5jD,KAAK6jD,YAAcA,EAEZ7jD,IAER,CAEAkkD,aAAAA,CAAe7zC,GAEd,IAAM,IAAItP,EAAI,EAAGsb,EAAKrc,KAAKojD,MAAMniD,OAAQF,EAAIsb,EAAItb,IAAO,CAEvD,MAAMijD,EAAOhkD,KAAKojD,MAAOriD,GAEzB,GAAKijD,EAAK3zC,OAASA,EAElB,OAAO2zC,CAIT,CAID,CAEA9qC,OAAAA,GAE2B,OAArBlZ,KAAK6jD,cAET7jD,KAAK6jD,YAAY3qC,UAEjBlZ,KAAK6jD,YAAc,KAIrB,CAEArO,QAAAA,CAAU2O,EAAMf,GAEfpjD,KAAK6V,KAAOsuC,EAAKtuC,KAEjB,IAAM,IAAI9U,EAAI,EAAGC,EAAImjD,EAAKf,MAAMniD,OAAQF,EAAIC,EAAGD,IAAO,CAErD,MAAM8U,EAAOsuC,EAAKf,MAAOriD,GACzB,IAAIijD,EAAOZ,EAAOvtC,QAEJ9V,IAATikD,IAEJn9C,QAAQC,KAAM,2CAA4C+O,GAC1DmuC,EAAO,IAAIV,IAIZtjD,KAAKojD,MAAMhjD,KAAM4jD,GACjBhkD,KAAKqjD,aAAajjD,MAAM,IAAIwtB,IAAUpjB,UAAW25C,EAAKd,aAActiD,IAErE,CAIA,OAFAf,KAAK8jD,OAEE9jD,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAO,CACZsD,SAAU,CACT/C,QAAS,IACTlW,KAAM,WACNkZ,UAAW,mBAEZqqC,MAAO,GACPC,aAAc,IAGf7tC,EAAKK,KAAO7V,KAAK6V,KAEjB,MAAMutC,EAAQpjD,KAAKojD,MACbC,EAAerjD,KAAKqjD,aAE1B,IAAM,IAAItiD,EAAI,EAAGC,EAAIoiD,EAAMniD,OAAQF,EAAIC,EAAGD,IAAO,CAEhD,MAAMijD,EAAOZ,EAAOriD,GACpByU,EAAK4tC,MAAMhjD,KAAM4jD,EAAKnuC,MAEtB,MAAMuuC,EAAcf,EAActiD,GAClCyU,EAAK6tC,aAAajjD,KAAMgkD,EAAY15C,UAErC,CAEA,OAAO8K,CAER,EAID,MAAM6uC,WAAiC/Y,GAEtC1oC,WAAAA,CAAa/B,EAAO0qC,EAAUC,GAAmC,IAAvB8Y,EAAgBngD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE5DqT,MAAO3W,EAAO0qC,EAAUC,GAExBxrC,KAAKukD,4BAA6B,EAElCvkD,KAAKskD,iBAAmBA,CAEzB,CAEA38C,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKskD,iBAAmB5sC,EAAO4sC,iBAExBtkD,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAMnB,OAJAT,EAAK8uC,iBAAmBtkD,KAAKskD,iBAE7B9uC,EAAK+uC,4BAA6B,EAE3B/uC,CAER,EAID,MAAMgvC,GAAqC,IAAI52B,GACzC62B,GAAqC,IAAI72B,GAEzC82B,GAAsB,GAEtBC,GAAsB,IAAIx/B,GAC1By/B,GAA0B,IAAIh3B,GAC9Bi3B,GAAwB,IAAIlS,GAC5BmS,GAA0B,IAAIj7B,GAEpC,MAAMk7B,WAAsBpS,GAE3B/vC,WAAAA,CAAaikB,EAAU+V,EAAU5gB,GAEhCxE,MAAOqP,EAAU+V,GAEjB58B,KAAKgnB,iBAAkB,EAEvBhnB,KAAK05B,eAAiB,IAAI2qB,GAA0B,IAAIxhD,aAAsB,GAARmZ,GAAc,IACpFhc,KAAK25B,cAAgB,KACrB35B,KAAKglD,aAAe,KAEpBhlD,KAAKgc,MAAQA,EAEbhc,KAAKmnB,YAAc,KACnBnnB,KAAK+7B,eAAiB,KAEtB,IAAM,IAAIh7B,EAAI,EAAGA,EAAIib,EAAOjb,IAE3Bf,KAAKilD,YAAalkD,EAAG6jD,GAIvB,CAEAx9B,kBAAAA,GAEC,MAAMP,EAAW7mB,KAAK6mB,SAChB7K,EAAQhc,KAAKgc,MAEO,OAArBhc,KAAKmnB,cAETnnB,KAAKmnB,YAAc,IAAIhC,IAIM,OAAzB0B,EAASM,aAEbN,EAASO,qBAIVpnB,KAAKmnB,YAAY5B,YAEjB,IAAM,IAAIxkB,EAAI,EAAGA,EAAIib,EAAOjb,IAE3Bf,KAAKklD,YAAankD,EAAGyjD,IAErBG,GAAMh9C,KAAMkf,EAASM,aAAcvN,aAAc4qC,IAEjDxkD,KAAKmnB,YAAYG,MAAOq9B,GAI1B,CAEA1V,qBAAAA,GAEC,MAAMpoB,EAAW7mB,KAAK6mB,SAChB7K,EAAQhc,KAAKgc,MAEU,OAAxBhc,KAAK+7B,iBAET/7B,KAAK+7B,eAAiB,IAAIlS,IAIM,OAA5BhD,EAASkV,gBAEblV,EAASooB,wBAIVjvC,KAAK+7B,eAAexW,YAEpB,IAAM,IAAIxkB,EAAI,EAAGA,EAAIib,EAAOjb,IAE3Bf,KAAKklD,YAAankD,EAAGyjD,IAErBM,GAAUn9C,KAAMkf,EAASkV,gBAAiBniB,aAAc4qC,IAExDxkD,KAAK+7B,eAAezU,MAAOw9B,GAI7B,CAEAn9C,IAAAA,CAAM+P,EAAQylB,GAcb,OAZA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAK05B,eAAe/xB,KAAM+P,EAAOgiB,gBAEJ,OAAxBhiB,EAAOstC,eAAwBhlD,KAAKglD,aAAettC,EAAOstC,aAAat9C,SAC9C,OAAzBgQ,EAAOiiB,gBAAyB35B,KAAK25B,cAAgBjiB,EAAOiiB,cAAcjyB,SAE/E1H,KAAKgc,MAAQtE,EAAOsE,MAEQ,OAAvBtE,EAAOyP,cAAuBnnB,KAAKmnB,YAAczP,EAAOyP,YAAYzf,SAC1C,OAA1BgQ,EAAOqkB,iBAA0B/7B,KAAK+7B,eAAiBrkB,EAAOqkB,eAAer0B,SAE3E1H,IAER,CAEAmlD,UAAAA,CAAY3kD,EAAO8R,GAElBA,EAAM9H,UAAWxK,KAAK25B,cAAc94B,MAAe,EAARL,EAE5C,CAEA0kD,WAAAA,CAAa1kD,EAAOqP,GAEnBA,EAAOrF,UAAWxK,KAAK05B,eAAe74B,MAAe,GAARL,EAE9C,CAEA4kD,UAAAA,CAAY5kD,EAAOylB,GAElB,MAAMo/B,EAAmBp/B,EAAO4sB,sBAE1BhyC,EAAQb,KAAKglD,aAAattC,OAAOlC,KAAKA,KAItC8vC,EAAY9kD,GAFN6kD,EAAiBpkD,OAAS,GAEN,EAEhC,IAAM,IAAIF,EAAI,EAAGA,EAAIskD,EAAiBpkD,OAAQF,IAE7CskD,EAAkBtkD,GAAMF,EAAOykD,EAAYvkD,EAI7C,CAEA23B,OAAAA,CAAS0a,EAAWC,GAEnB,MAAM/vB,EAActjB,KAAKsjB,YACnBiiC,EAAevlD,KAAKgc,MAK1B,GAHA6oC,GAAQh+B,SAAW7mB,KAAK6mB,SACxBg+B,GAAQjoB,SAAW58B,KAAK48B,cAEE78B,IAArB8kD,GAAQjoB,WAIgB,OAAxB58B,KAAK+7B,gBAA0B/7B,KAAKivC,wBAEzC6V,GAAUn9C,KAAM3H,KAAK+7B,gBACrB+oB,GAAUlrC,aAAc0J,IAE6B,IAAhD8vB,EAAUpoB,IAAIpD,iBAAkBk9B,KAIrC,IAAM,IAAIU,EAAa,EAAGA,EAAaD,EAAcC,IAAgB,CAIpExlD,KAAKklD,YAAaM,EAAYhB,IAE9BC,GAAqBl4C,iBAAkB+W,EAAakhC,IAIpDK,GAAQvhC,YAAcmhC,GAEtBI,GAAQnsB,QAAS0a,EAAWsR,IAI5B,IAAM,IAAI3jD,EAAI,EAAGC,EAAI0jD,GAAoBzjD,OAAQF,EAAIC,EAAGD,IAAO,CAE9D,MAAMkoB,EAAYy7B,GAAqB3jD,GACvCkoB,EAAUu8B,WAAaA,EACvBv8B,EAAUhD,OAASjmB,KACnBqzC,EAAWjzC,KAAM6oB,EAElB,CAEAy7B,GAAoBzjD,OAAS,CAE9B,CAED,CAEAwkD,UAAAA,CAAYjlD,EAAO8R,GAEU,OAAvBtS,KAAK25B,gBAET35B,KAAK25B,cAAgB,IAAI0qB,GAA0B,IAAIxhD,aAA0C,EAA5B7C,KAAK05B,eAAe1d,OAAY0pC,KAAM,GAAK,IAIjHpzC,EAAM5H,QAAS1K,KAAK25B,cAAc94B,MAAe,EAARL,EAE1C,CAEAykD,WAAAA,CAAazkD,EAAOqP,GAEnBA,EAAOnF,QAAS1K,KAAK05B,eAAe74B,MAAe,GAARL,EAE5C,CAEAmlD,UAAAA,CAAYnlD,EAAOylB,GAElB,MAAMo/B,EAAmBp/B,EAAO4sB,sBAE1B7zB,EAAMqmC,EAAiBpkD,OAAS,EAEX,OAAtBjB,KAAKglD,eAEThlD,KAAKglD,aAAe,IAAIxB,GAAa,IAAI3gD,aAAcmc,EAAMhf,KAAKgc,OAASgD,EAAKhf,KAAKgc,MAAO5iB,GAAWb,KAIxG,MAAMsI,EAAQb,KAAKglD,aAAattC,OAAOlC,KAAKA,KAE5C,IAAIowC,EAAqB,EAEzB,IAAM,IAAI7kD,EAAI,EAAGA,EAAIskD,EAAiBpkD,OAAQF,IAE7C6kD,GAAsBP,EAAkBtkD,GAIzC,MAAM8kD,EAAqB7lD,KAAK6mB,SAASqnB,qBAAuB,EAAI,EAAI0X,EAElEN,EAAYtmC,EAAMxe,EAExBK,EAAOykD,GAAcO,EAErBhlD,EAAM+F,IAAKy+C,EAAkBC,EAAY,EAE1C,CAEA1S,kBAAAA,GAEA,CAEA15B,OAAAA,GAWC,OATAlZ,KAAKU,cAAe,CAAEb,KAAM,YAED,OAAtBG,KAAKglD,eAEThlD,KAAKglD,aAAa9rC,UAClBlZ,KAAKglD,aAAe,MAIdhlD,IAER,EAID,MAAM8lD,GAAyB,IAAI7jC,GAC7B8jC,GAAyB,IAAI9jC,GAC7B+jC,GAA8B,IAAI76C,GAExC,MAAM86C,GAELrjD,WAAAA,GAA6D,IAAhDwhB,EAAMjgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAS,EAAG,EAAG,GAAKgG,EAAQ9jB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAExDnE,KAAKkmD,SAAU,EAIflmD,KAAKokB,OAASA,EACdpkB,KAAKioB,SAAWA,CAEjB,CAEArhB,GAAAA,CAAKwd,EAAQ6D,GAKZ,OAHAjoB,KAAKokB,OAAOzc,KAAMyc,GAClBpkB,KAAKioB,SAAWA,EAETjoB,IAER,CAEAmmD,aAAAA,CAAe3jD,EAAGC,EAAG8W,EAAGC,GAKvB,OAHAxZ,KAAKokB,OAAOxd,IAAKpE,EAAGC,EAAG8W,GACvBvZ,KAAKioB,SAAWzO,EAETxZ,IAER,CAEAomD,6BAAAA,CAA+BhiC,EAAQoC,GAKtC,OAHAxmB,KAAKokB,OAAOzc,KAAMyc,GAClBpkB,KAAKioB,UAAazB,EAAMtd,IAAKlJ,KAAKokB,QAE3BpkB,IAER,CAEA4/B,qBAAAA,CAAuB95B,EAAGC,EAAGC,GAE5B,MAAMoe,EAAS0hC,GAAS39C,WAAYnC,EAAGD,GAAIoD,MAAO48C,GAAS59C,WAAYrC,EAAGC,IAAM1C,YAMhF,OAFArD,KAAKomD,8BAA+BhiC,EAAQte,GAErC9F,IAER,CAEA2H,IAAAA,CAAMqgB,GAKL,OAHAhoB,KAAKokB,OAAOzc,KAAMqgB,EAAM5D,QACxBpkB,KAAKioB,SAAWD,EAAMC,SAEfjoB,IAER,CAEAqD,SAAAA,GAIC,MAAMgjD,EAAsB,EAAMrmD,KAAKokB,OAAOnjB,SAI9C,OAHAjB,KAAKokB,OAAO/b,eAAgBg+C,GAC5BrmD,KAAKioB,UAAYo+B,EAEVrmD,IAER,CAEAiJ,MAAAA,GAKC,OAHAjJ,KAAKioB,WAAc,EACnBjoB,KAAKokB,OAAOnb,SAELjJ,IAER,CAEA+oB,eAAAA,CAAiBvC,GAEhB,OAAOxmB,KAAKokB,OAAOlb,IAAKsd,GAAUxmB,KAAKioB,QAExC,CAEAq+B,gBAAAA,CAAkBz+B,GAEjB,OAAO7nB,KAAK+oB,gBAAiBlB,EAAO7c,QAAW6c,EAAOrD,MAEvD,CAEA+hC,YAAAA,CAAc//B,EAAO5lB,GAEpB,OAAOA,EAAO+G,KAAM6e,GAAQxe,gBAAiBhI,KAAKokB,QAAUpkB,KAAK+oB,gBAAiBvC,GAEnF,CAEAggC,aAAAA,CAAeC,EAAM7lD,GAEpB,MAAMmqB,EAAY07B,EAAKp8B,MAAOy7B,IAExBp8C,EAAc1J,KAAKokB,OAAOlb,IAAK6hB,GAErC,GAAqB,IAAhBrhB,EAGJ,OAA4C,IAAvC1J,KAAK+oB,gBAAiB09B,EAAKxa,OAExBrrC,EAAO+G,KAAM8+C,EAAKxa,OAKnB,KAIR,MAAMvpC,IAAQ+jD,EAAKxa,MAAM/iC,IAAKlJ,KAAKokB,QAAWpkB,KAAKioB,UAAave,EAEhE,OAAKhH,EAAI,GAAKA,EAAI,EAEV,KAID9B,EAAO+G,KAAM8+C,EAAKxa,OAAQjkC,gBAAiB+iB,EAAWroB,EAE9D,CAEAgkD,cAAAA,CAAgBD,GAIf,MAAME,EAAY3mD,KAAK+oB,gBAAiB09B,EAAKxa,OACvC2a,EAAU5mD,KAAK+oB,gBAAiB09B,EAAKI,KAE3C,OAASF,EAAY,GAAKC,EAAU,GAASA,EAAU,GAAKD,EAAY,CAEzE,CAEAh/B,aAAAA,CAAevB,GAEd,OAAOA,EAAI2B,gBAAiB/nB,KAE7B,CAEA4nB,gBAAAA,CAAkBC,GAEjB,OAAOA,EAAOE,gBAAiB/nB,KAEhC,CAEA8mD,aAAAA,CAAelmD,GAEd,OAAOA,EAAO+G,KAAM3H,KAAKokB,QAAS/b,gBAAkBrI,KAAKioB,SAE1D,CAEArO,YAAAA,CAAc/J,EAAQk3C,GAErB,MAAMpxB,EAAeoxB,GAAwBf,GAAct3C,gBAAiBmB,GAEtEm3C,EAAiBhnD,KAAK8mD,cAAehB,IAAWlsC,aAAc/J,GAE9DuU,EAASpkB,KAAKokB,OAAO5b,aAAcmtB,GAAetyB,YAIxD,OAFArD,KAAKioB,UAAa++B,EAAe99C,IAAKkb,GAE/BpkB,IAER,CAEA2P,SAAAA,CAAWlF,GAIV,OAFAzK,KAAKioB,UAAYxd,EAAOvB,IAAKlJ,KAAKokB,QAE3BpkB,IAER,CAEAuK,MAAAA,CAAQyd,GAEP,OAAOA,EAAM5D,OAAO7Z,OAAQvK,KAAKokB,SAAc4D,EAAMC,WAAajoB,KAAKioB,QAExE,CAEAvgB,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAMinD,GAA0B,IAAIp9B,GAC9Bq9B,GAA0B,IAAIjlC,GAEpC,MAAMklC,GAELvkD,WAAAA,GAA0H,IAA7G2mB,EAAEplB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8hD,GAASz8B,EAAErlB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8hD,GAASx8B,EAAEtlB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8hD,GAASpnB,EAAE16B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8hD,GAASmB,EAAEjjD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8hD,GAASoB,EAAEljD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8hD,GAE/GjmD,KAAKsnD,OAAS,CAAE/9B,EAAIC,EAAIC,EAAIoV,EAAIuoB,EAAIC,EAErC,CAEAzgD,GAAAA,CAAK2iB,EAAIC,EAAIC,EAAIoV,EAAIuoB,EAAIC,GAExB,MAAMC,EAAStnD,KAAKsnD,OASpB,OAPAA,EAAQ,GAAI3/C,KAAM4hB,GAClB+9B,EAAQ,GAAI3/C,KAAM6hB,GAClB89B,EAAQ,GAAI3/C,KAAM8hB,GAClB69B,EAAQ,GAAI3/C,KAAMk3B,GAClByoB,EAAQ,GAAI3/C,KAAMy/C,GAClBE,EAAQ,GAAI3/C,KAAM0/C,GAEXrnD,IAER,CAEA2H,IAAAA,CAAM4/C,GAEL,MAAMD,EAAStnD,KAAKsnD,OAEpB,IAAM,IAAIvmD,EAAI,EAAGA,EAAI,EAAGA,IAEvBumD,EAAQvmD,GAAI4G,KAAM4/C,EAAQD,OAAQvmD,IAInC,OAAOf,IAER,CAEAwnD,uBAAAA,CAAyBllD,GAA8C,IAA3CswB,EAAgBzuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG7E,GAE9C,MAAMgoD,EAAStnD,KAAKsnD,OACdt7C,EAAK1J,EAAEoG,SACP++C,EAAMz7C,EAAI,GAAK07C,EAAM17C,EAAI,GAAK27C,EAAM37C,EAAI,GAAK47C,EAAM57C,EAAI,GACvD67C,EAAM77C,EAAI,GAAK87C,EAAM97C,EAAI,GAAK+7C,EAAM/7C,EAAI,GAAKg8C,EAAMh8C,EAAI,GACvDi8C,EAAMj8C,EAAI,GAAKk8C,EAAMl8C,EAAI,GAAKm8C,EAAOn8C,EAAI,IAAMo8C,EAAOp8C,EAAI,IAC1Dq8C,EAAOr8C,EAAI,IAAMs8C,EAAOt8C,EAAI,IAAMu8C,EAAOv8C,EAAI,IAAMw8C,EAAOx8C,EAAI,IAQpE,GANAs7C,EAAQ,GAAInB,cAAeyB,EAAMH,EAAKO,EAAMH,EAAKO,EAAOH,EAAKO,EAAOH,GAAOhlD,YAC3EikD,EAAQ,GAAInB,cAAeyB,EAAMH,EAAKO,EAAMH,EAAKO,EAAOH,EAAKO,EAAOH,GAAOhlD,YAC3EikD,EAAQ,GAAInB,cAAeyB,EAAMF,EAAKM,EAAMF,EAAKM,EAAOF,EAAKM,EAAOF,GAAOjlD,YAC3EikD,EAAQ,GAAInB,cAAeyB,EAAMF,EAAKM,EAAMF,EAAKM,EAAOF,EAAKM,EAAOF,GAAOjlD,YAC3EikD,EAAQ,GAAInB,cAAeyB,EAAMD,EAAKK,EAAMD,EAAKK,EAAOD,EAAMK,EAAOD,GAAOllD,YAEvEuvB,IAAqBtzB,GAEzBgoD,EAAQ,GAAInB,cAAeyB,EAAMD,EAAKK,EAAMD,EAAKK,EAAOD,EAAMK,EAAOD,GAAOllD,gBAEtE,IAAKuvB,IAAqBrzB,GAMhC,MAAM,IAAI6D,MAAO,uEAAyEwvB,GAJ1F00B,EAAQ,GAAInB,cAAewB,EAAKI,EAAKI,EAAMI,GAAOllD,WAMnD,CAEA,OAAOrD,IAER,CAEAyoD,gBAAAA,CAAkBxiC,GAEjB,QAA+BlmB,IAA1BkmB,EAAO8V,eAEoB,OAA1B9V,EAAO8V,gBAA0B9V,EAAOgpB,wBAE7CgY,GAAUt/C,KAAMse,EAAO8V,gBAAiBniB,aAAcqM,EAAO3C,iBAEvD,CAEN,MAAMuD,EAAWZ,EAAOY,SAES,OAA5BA,EAASkV,gBAA0BlV,EAASooB,wBAEjDgY,GAAUt/C,KAAMkf,EAASkV,gBAAiBniB,aAAcqM,EAAO3C,YAEhE,CAEA,OAAOtjB,KAAK4nB,iBAAkBq/B,GAE/B,CAEAyB,gBAAAA,CAAkBC,GAMjB,OAJA1B,GAAUj8C,OAAOpE,IAAK,EAAG,EAAG,GAC5BqgD,GAAUziC,OAAS,kBACnByiC,GAAUrtC,aAAc+uC,EAAOrlC,aAExBtjB,KAAK4nB,iBAAkBq/B,GAE/B,CAEAr/B,gBAAAA,CAAkBC,GAEjB,MAAMy/B,EAAStnD,KAAKsnD,OACdt8C,EAAS6c,EAAO7c,OAChB49C,GAAc/gC,EAAOrD,OAE3B,IAAM,IAAIzjB,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAI9B,GAFiBumD,EAAQvmD,GAAIgoB,gBAAiB/d,GAE9B49C,EAEf,OAAO,CAIT,CAEA,OAAO,CAER,CAEAjhC,aAAAA,CAAevB,GAEd,MAAMkhC,EAAStnD,KAAKsnD,OAEpB,IAAM,IAAIvmD,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAMinB,EAAQs/B,EAAQvmD,GAQtB,GAJAmmD,GAAU1kD,EAAIwlB,EAAM5D,OAAO5hB,EAAI,EAAI4jB,EAAIjkB,IAAIK,EAAI4jB,EAAIlkB,IAAIM,EACvD0kD,GAAUzkD,EAAIulB,EAAM5D,OAAO3hB,EAAI,EAAI2jB,EAAIjkB,IAAIM,EAAI2jB,EAAIlkB,IAAIO,EACvDykD,GAAU3tC,EAAIyO,EAAM5D,OAAO7K,EAAI,EAAI6M,EAAIjkB,IAAIoX,EAAI6M,EAAIlkB,IAAIqX,EAElDyO,EAAMe,gBAAiBm+B,IAAc,EAEzC,OAAO,CAIT,CAEA,OAAO,CAER,CAEA1/B,aAAAA,CAAehB,GAEd,MAAM8gC,EAAStnD,KAAKsnD,OAEpB,IAAM,IAAIvmD,EAAI,EAAGA,EAAI,EAAGA,IAEvB,GAAKumD,EAAQvmD,GAAIgoB,gBAAiBvC,GAAU,EAE3C,OAAO,EAMT,OAAO,CAER,CAEA9e,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,SAAS6oD,GAAW/iD,EAAGC,GAEtB,OAAOD,EAAIC,CAEZ,CAEA,SAAS+iD,GAAYhjD,EAAGC,GAEvB,OAAOD,EAAEyT,EAAIxT,EAAEwT,CAEhB,CAEA,SAASwvC,GAAiBjjD,EAAGC,GAE5B,OAAOA,EAAEwT,EAAIzT,EAAEyT,CAEhB,CAEA,MAAMyvC,GAELpmD,WAAAA,GAEC5C,KAAKQ,MAAQ,EACbR,KAAKipD,KAAO,GACZjpD,KAAKkpD,KAAO,EAEb,CAEA9oD,IAAAA,CAAM6rC,EAAOjwB,EAAOzC,EAAG/Y,GAEtB,MAAMyoD,EAAOjpD,KAAKipD,KACZC,EAAOlpD,KAAKkpD,KACblpD,KAAKQ,OAASyoD,EAAKhoD,QAEvBgoD,EAAK7oD,KAAM,CAEV6rC,OAAS,EACTjwB,OAAS,EACTzC,GAAK,EACL/Y,OAAS,IAMX,MAAM2oD,EAAOF,EAAMjpD,KAAKQ,OACxB0oD,EAAK9oD,KAAM+oD,GACXnpD,KAAKQ,QAEL2oD,EAAKld,MAAQA,EACbkd,EAAKntC,MAAQA,EACbmtC,EAAK5vC,EAAIA,EACT4vC,EAAK3oD,MAAQA,CAEd,CAEA4oD,KAAAA,GAECppD,KAAKkpD,KAAKjoD,OAAS,EACnBjB,KAAKQ,MAAQ,CAEd,EAID,MAAM6oD,GAA0B,IAAIz7B,GAC9B07B,GAA4B,IAAI/oB,GAAO,EAAG,EAAG,GAC7CgpB,GAAyB,IAAIpC,GAC7BqC,GAAuB,IAAIrkC,GAC3BskC,GAA0B,IAAI5/B,GAC9B6/B,GAA0B,IAAIznC,GAC9B0nC,GAAyB,IAAI1nC,GAC7B2nC,GAAsB,IAAI3nC,GAC1B4nC,GAA4B,IAAIb,GAChCc,GAAsB,IAAInX,GAC1BoX,GAAmB,GAGzB,SAASC,GAAmBr1C,EAAK/T,GAA2B,IAAnBqpD,EAAY9lD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEvD,MAAMonC,EAAW3qC,EAAO2qC,SACxB,GAAK52B,EAAI88B,8BAAgC98B,EAAI9T,MAAM+B,cAAgBhC,EAAOC,MAAM+B,YAAc,CAI7F,MAAMsnD,EAAcv1C,EAAIqH,MACxB,IAAM,IAAIjb,EAAI,EAAGA,EAAImpD,EAAanpD,IAEjC,IAAM,IAAIiF,EAAI,EAAGA,EAAIulC,EAAUvlC,IAE9BpF,EAAO4G,aAAczG,EAAIkpD,EAAcjkD,EAAG2O,EAAIlN,aAAc1G,EAAGiF,GAMlE,MAGCpF,EAAOC,MAAM+F,IAAK+N,EAAI9T,MAAOopD,EAAe1e,GAI7C3qC,EAAOoV,aAAc,CAEtB,CAGA,SAASm0C,GAAmBx1C,EAAK/T,GAEhC,GAAK+T,EAAI/R,cAAgBhC,EAAOgC,YAAc,CAG7C,MAAMoc,EAAM1d,KAAKY,IAAKyS,EAAI1T,OAAQL,EAAOK,QACzC,IAAM,IAAIF,EAAI,EAAGA,EAAIie,EAAKje,IAEzBH,EAAQG,GAAM4T,EAAK5T,EAIrB,KAAO,CAGN,MAAMie,EAAM1d,KAAKY,IAAKyS,EAAI1T,OAAQL,EAAOK,QACzCL,EAAOgG,IAAK,IAAI+N,EAAI/R,YAAa+R,EAAIxE,OAAQ,EAAG6O,GAEjD,CAED,CAEA,MAAMorC,WAAoBzX,GAEzB,oBAAI1X,GAEH,OAAOj7B,KAAKk7B,iBAEb,CAEA,iBAAImvB,GAEH,OAAOrqD,KAAKsqD,cAAcrpD,OAASjB,KAAKuqD,sBAAsBtpD,MAE/D,CAEA,qBAAIupD,GAEH,OAAOxqD,KAAKo7B,gBAAkBp7B,KAAKyqD,gBAEpC,CAEA,oBAAIC,GAEH,OAAO1qD,KAAKs7B,eAAiBt7B,KAAK2qD,eAEnC,CAEA/nD,WAAAA,CAAaq4B,EAAkBE,GAA+D,IAA/CE,EAAal3B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAoB,EAAjBg3B,EAAoByB,EAAQz4B,UAAAlD,OAAA,EAAAkD,UAAA,QAAApE,EAE1FyX,MAAO,IAAIq2B,GAAkBjR,GAE7B58B,KAAK45B,eAAgB,EACrB55B,KAAK65B,wBAAyB,EAC9B75B,KAAK85B,aAAc,EACnB95B,KAAKmnB,YAAc,KACnBnnB,KAAK+7B,eAAiB,KACtB/7B,KAAK4qD,WAAa,KAGlB5qD,KAAKsqD,cAAgB,GACrBtqD,KAAK6qD,cAAgB,GAGrB7qD,KAAKuqD,sBAAwB,GAC7BvqD,KAAK8qD,sBAAwB,GAG7B9qD,KAAK2qD,gBAAkB,EACvB3qD,KAAKyqD,iBAAmB,EACxBzqD,KAAK07B,eAAiB,EAGtB17B,KAAK+qD,oBAAqB,EAC1B/qD,KAAKw7B,sBAAuB,EAG5Bx7B,KAAKk7B,kBAAoBD,EACzBj7B,KAAKo7B,gBAAkBD,EACvBn7B,KAAKs7B,eAAiBD,EAGtBr7B,KAAKgrD,iBAAmB,IAAI/nD,WAAYg4B,GACxCj7B,KAAKirD,iBAAmB,IAAIhoD,WAAYg4B,GACxCj7B,KAAKkrD,gBAAkB,EACvBlrD,KAAKmrD,oBAAsB,KAG3BnrD,KAAK47B,iBAAmB,KACxB57B,KAAKorD,iBAAmB,KACxBprD,KAAK67B,eAAiB,KAEtB77B,KAAKqrD,uBACLrrD,KAAKsrD,sBAEN,CAEAD,oBAAAA,GASC,IAAIvlC,EAAOxkB,KAAK+H,KAA+B,EAAzBrJ,KAAKk7B,mBAC3BpV,EAA+B,EAAxBxkB,KAAKkE,KAAMsgB,EAAO,GACzBA,EAAOxkB,KAAKa,IAAK2jB,EAAM,GAEvB,MAAMylC,EAAgB,IAAI1oD,aAAcijB,EAAOA,EAAO,GAChD6V,EAAkB,IAAI6nB,GAAa+H,EAAezlC,EAAMA,EAAM/sB,GAAYR,IAEhFyH,KAAK47B,iBAAmBD,CAEzB,CAEA2vB,oBAAAA,GAEC,IAAIxlC,EAAOxkB,KAAK+H,KAAMrJ,KAAKk7B,mBAC3BpV,EAAOxkB,KAAKkE,KAAMsgB,GAElB,MAAM0lC,EAAgB,IAAI1oD,YAAagjB,EAAOA,GACxC2lC,EAAkB,IAAIjI,GAAagI,EAAe1lC,EAAMA,EAAMzsB,GAAkBf,IAEtF0H,KAAKorD,iBAAmBK,CAEzB,CAEAC,kBAAAA,GAEC,IAAI5lC,EAAOxkB,KAAK+H,KAAMrJ,KAAKk7B,mBAC3BpV,EAAOxkB,KAAKkE,KAAMsgB,GAGlB,MAAM6lC,EAAc,IAAI9oD,aAAcijB,EAAOA,EAAO,GAAI4/B,KAAM,GACxD5pB,EAAgB,IAAI0nB,GAAamI,EAAa7lC,EAAMA,EAAM/sB,GAAYR,IAC5EujC,EAAc5oB,WAAajB,GAAgBE,kBAE3CnS,KAAK67B,eAAiBC,CAEvB,CAEA8vB,mBAAAA,CAAqBC,GAEpB,MAAMhlC,EAAW7mB,KAAK6mB,SAChBsU,EAAiBn7B,KAAKo7B,gBACtBC,EAAgBr7B,KAAKs7B,eAC3B,IAAmC,IAA9Bt7B,KAAKw7B,qBAAiC,CAE1C,IAAM,MAAMswB,KAAiBD,EAAU7d,WAAa,CAEnD,MAAM+d,EAAeF,EAAU9kC,aAAc+kC,IACvC,MAAEjrD,EAAK,SAAE0qC,EAAQ,WAAEC,GAAeugB,EAElCC,EAAW,IAAInrD,EAAM+B,YAAau4B,EAAiBoQ,GACnD0gB,EAAe,IAAI3gB,GAAiB0gB,EAAUzgB,EAAUC,GAE9D3kB,EAAS4nB,aAAcqd,EAAeG,EAEvC,CAEA,GAA8B,OAAzBJ,EAAUxd,WAAsB,CAGpC,MAAM6d,EAAa/wB,EAAiB,MACjC,IAAIr4B,YAAau4B,GACjB,IAAIt4B,YAAas4B,GAEpBxU,EAASynB,SAAU,IAAIhD,GAAiB4gB,EAAY,GAErD,CAEAlsD,KAAKw7B,sBAAuB,CAE7B,CAED,CAGA2wB,iBAAAA,CAAmBtlC,GAGlB,MAAMulC,EAAgBpsD,KAAK6mB,SAC3B,GAAKwlC,QAASxlC,EAASwnB,cAAiBge,QAASD,EAAc/d,YAE9D,MAAM,IAAIjrC,MAAO,qEAIlB,IAAM,MAAM0oD,KAAiBM,EAAcpe,WAAa,CAEvD,IAAOnnB,EAAS8nB,aAAcmd,GAE7B,MAAM,IAAI1oD,MAAO,8CAA+C0oD,uDAIjE,MAAMC,EAAellC,EAASE,aAAc+kC,GACtCG,EAAeG,EAAcrlC,aAAc+kC,GACjD,GAAKC,EAAaxgB,WAAa0gB,EAAa1gB,UAAYwgB,EAAavgB,aAAeygB,EAAazgB,WAEhG,MAAM,IAAIpoC,MAAO,0FAInB,CAED,CAEAkpD,kBAAAA,CAAoB9G,GAEnB,MAAM+G,EAAevsD,KAAKsqD,cAC1B,GAAK9E,EAAa,GAAKA,GAAc+G,EAAatrD,SAAgD,IAAtCsrD,EAAc/G,GAAanrB,OAEtF,MAAM,IAAIj3B,MAAO,yCAAyCoiD,0DAI5D,CAEAgH,kBAAAA,CAAoBC,GAEnB,MAAMC,EAAmB1sD,KAAK6qD,cAC9B,GAAK4B,EAAa,GAAKA,GAAcC,EAAiBzrD,SAAoD,IAA1CyrD,EAAkBD,GAAapyB,OAE9F,MAAM,IAAIj3B,MAAO,yCAAyCqpD,0DAI5D,CAGAE,aAAAA,CAAeC,GAGd,OADA5sD,KAAK4qD,WAAagC,EACX5sD,IAER,CAEAonB,kBAAAA,GAE2B,OAArBpnB,KAAKmnB,cAETnnB,KAAKmnB,YAAc,IAAIhC,IAIxB,MAAMgC,EAAcnnB,KAAKmnB,YACnBolC,EAAevsD,KAAKsqD,cAE1BnjC,EAAY5B,YACZ,IAAM,IAAIxkB,EAAI,EAAGC,EAAIurD,EAAatrD,OAAQF,EAAIC,EAAGD,IAAO,CAEvD,IAAkC,IAA7BwrD,EAAcxrD,GAAIs5B,OAAmB,SAE1C,MAAMoyB,EAAaF,EAAcxrD,GAAI8rD,cACrC7sD,KAAKklD,YAAankD,EAAGsoD,IACrBrpD,KAAK8sD,iBAAkBL,EAAYjD,IAAS5vC,aAAcyvC,IAC1DliC,EAAYG,MAAOkiC,GAEpB,CAED,CAEAva,qBAAAA,GAE8B,OAAxBjvC,KAAK+7B,iBAET/7B,KAAK+7B,eAAiB,IAAIlS,IAI3B,MAAMkS,EAAiB/7B,KAAK+7B,eACtBwwB,EAAevsD,KAAKsqD,cAE1BvuB,EAAexW,YACf,IAAM,IAAIxkB,EAAI,EAAGC,EAAIurD,EAAatrD,OAAQF,EAAIC,EAAGD,IAAO,CAEvD,IAAkC,IAA7BwrD,EAAcxrD,GAAIs5B,OAAmB,SAE1C,MAAMoyB,EAAaF,EAAcxrD,GAAI8rD,cACrC7sD,KAAKklD,YAAankD,EAAGsoD,IACrBrpD,KAAK+sD,oBAAqBN,EAAYhD,IAAY7vC,aAAcyvC,IAChEttB,EAAezU,MAAOmiC,GAEvB,CAED,CAEAuD,WAAAA,CAAaP,GAKZ,GAHmBzsD,KAAKsqD,cAAcrpD,QAAUjB,KAAKi7B,kBAGI,IAAtCj7B,KAAKuqD,sBAAsBtpD,OAE7C,MAAM,IAAImC,MAAO,kDAIlB,MAAMmpD,EAAe,CACpBv2B,SAAS,EACTqE,QAAQ,EACRwyB,cAAeJ,GAGhB,IAAIQ,EAAS,KAGRjtD,KAAKuqD,sBAAsBtpD,OAAS,GAExCjB,KAAKuqD,sBAAsB2C,KAAMrE,IAEjCoE,EAASjtD,KAAKuqD,sBAAsB4C,QACpCntD,KAAKsqD,cAAe2C,GAAWV,IAI/BU,EAASjtD,KAAKsqD,cAAcrpD,OAC5BjB,KAAKsqD,cAAclqD,KAAMmsD,IAI1B,MAAM5wB,EAAkB37B,KAAK47B,iBAC7BytB,GAAUt9C,WAAWrB,QAASixB,EAAgBlnB,MAAMe,KAAe,GAATy3C,GAC1DtxB,EAAgB3lB,aAAc,EAE9B,MAAM8lB,EAAgB97B,KAAK67B,eAS3B,OARKC,IAEJwtB,GAAY5+C,QAASoxB,EAAcrnB,MAAMe,KAAe,EAATy3C,GAC/CnxB,EAAc9lB,aAAc,GAI7BhW,KAAK+qD,oBAAqB,EACnBkC,CAER,CAEAG,WAAAA,CAAavmC,GAAgE,IAAtDwmC,EAAmBlpD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,IAAK,EAAGmpD,EAAkBnpD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,IAAK,EAExEnE,KAAK4rD,oBAAqB/kC,GAE1B7mB,KAAKmsD,kBAAmBtlC,GAExB,MAAM0mC,EAAe,CAEpBC,aAAe,EACftD,aAAe,EACfmD,qBAAuB,EAEvBI,YAAc,EACdC,YAAc,EACdJ,oBAAsB,EAGtBrhB,OAAS,EACTjwB,OAAS,EAGTmL,YAAa,KACb4U,eAAgB,KAChB1B,QAAQ,GAGHqyB,EAAmB1sD,KAAK6qD,cAC9B0C,EAAaC,YAAcxtD,KAAKyqD,iBAChC8C,EAAaF,qBAAgD,IAA1BA,EAA8BxmC,EAASE,aAAc,YAAa/K,MAAQqxC,EAE7G,MAAM7sD,EAAQqmB,EAASwnB,WASvB,GAR2B,OAAV7tC,IAGhB+sD,EAAaE,WAAaztD,KAAK2qD,gBAC/B4C,EAAaD,oBAA8C,IAAzBA,EAA6B9sD,EAAMwb,MAAQsxC,IAK/C,IAA9BC,EAAaE,YACbF,EAAaE,WAAaF,EAAaD,mBAAqBttD,KAAKs7B,gBACjEiyB,EAAaC,YAAcD,EAAaF,oBAAsBrtD,KAAKo7B,gBAGnE,MAAM,IAAIh4B,MAAO,8EAKlB,IAAIqpD,EAwBJ,OAvBKzsD,KAAK8qD,sBAAsB7pD,OAAS,GAExCjB,KAAK8qD,sBAAsBoC,KAAMrE,IAEjC4D,EAAazsD,KAAK8qD,sBAAsBqC,QACxCT,EAAkBD,GAAec,IAKjCd,EAAazsD,KAAK07B,eAClB17B,KAAK07B,iBACLgxB,EAAiBtsD,KAAMmtD,IAKxBvtD,KAAK2tD,cAAelB,EAAY5lC,GAGhC7mB,KAAK2qD,gBAAkB4C,EAAaE,WAAaF,EAAaD,mBAC9DttD,KAAKyqD,iBAAmB8C,EAAaC,YAAcD,EAAaF,oBAEzDZ,CAER,CAEAkB,aAAAA,CAAelB,EAAY5lC,GAE1B,GAAK4lC,GAAczsD,KAAK07B,eAEvB,MAAM,IAAIt4B,MAAO,sDAIlBpD,KAAKmsD,kBAAmBtlC,GAExB,MAAMulC,EAAgBpsD,KAAK6mB,SACrB+mC,EAAwC,OAA7BxB,EAAc/d,WACzBwf,EAAWzB,EAAc/d,WACzByf,EAAWjnC,EAASwnB,WACpBkf,EAAevtD,KAAK6qD,cAAe4B,GACzC,GACCmB,GACAE,EAAS9xC,MAAQuxC,EAAaD,oBAC9BzmC,EAASmnB,WAAWvc,SAASzV,MAAQuxC,EAAaF,oBAGlD,MAAM,IAAIjqD,MAAO,6EAKlB,MAAMoqD,EAAcD,EAAaC,YAC3BH,EAAsBE,EAAaF,oBACzCE,EAAarD,YAAcrjC,EAASE,aAAc,YAAa/K,MAE/D,IAAM,MAAM8vC,KAAiBM,EAAcpe,WAAa,CAGvD,MAAM+d,EAAellC,EAASE,aAAc+kC,GACtCG,EAAeG,EAAcrlC,aAAc+kC,GACjD9B,GAAmB+B,EAAcE,EAAcuB,GAG/C,MAAMjiB,EAAWwgB,EAAaxgB,SAC9B,IAAM,IAAIxqC,EAAIgrD,EAAa/vC,MAAOhb,EAAIqsD,EAAqBtsD,EAAIC,EAAGD,IAAO,CAExE,MAAMP,EAAQgtD,EAAczsD,EAC5B,IAAM,IAAIiF,EAAI,EAAGA,EAAIulC,EAAUvlC,IAE9BimD,EAAazkD,aAAchH,EAAOwF,EAAG,EAIvC,CAEAimD,EAAaj2C,aAAc,EAC3Bi2C,EAAajgB,eAAgBwhB,EAAcjiB,EAAU8hB,EAAsB9hB,EAE5E,CAGA,GAAKqiB,EAAW,CAEf,MAAMH,EAAaF,EAAaE,WAC1BH,EAAqBC,EAAaD,mBACxCC,EAAaG,WAAa7mC,EAASwnB,WAAWryB,MAG9C,IAAM,IAAIjb,EAAI,EAAGA,EAAI+sD,EAAS9xC,MAAOjb,IAEpC8sD,EAASvmD,KAAMmmD,EAAa1sD,EAAGysD,EAAcM,EAASjjD,KAAM9J,IAK7D,IAAM,IAAIA,EAAI+sD,EAAS9xC,MAAOhb,EAAIssD,EAAoBvsD,EAAIC,EAAGD,IAE5D8sD,EAASvmD,KAAMmmD,EAAa1sD,EAAGysD,GAIhCK,EAAS73C,aAAc,EACvB63C,EAAS7hB,eAAgByhB,EAAYF,EAAaD,mBAEnD,CAsBA,OAnBAC,EAAathB,MAAQ2hB,EAAWL,EAAaE,WAAaF,EAAaC,YACvED,EAAavxC,MAAQ4xC,EAAWL,EAAaG,WAAaH,EAAarD,YAGvEqD,EAAapmC,YAAc,KACG,OAAzBN,EAASM,cAEbomC,EAAapmC,YAAcN,EAASM,YAAYzf,SAIjD6lD,EAAaxxB,eAAiB,KACG,OAA5BlV,EAASkV,iBAEbwxB,EAAaxxB,eAAiBlV,EAASkV,eAAer0B,SAIvD1H,KAAK+qD,oBAAqB,EACnB0B,CAER,CAEAsB,cAAAA,CAAgBtB,GAEf,MAAMC,EAAmB1sD,KAAK6qD,cAC9B,GAAK4B,GAAcC,EAAiBzrD,SAAoD,IAA1CyrD,EAAkBD,GAAapyB,OAE5E,OAAOr6B,KAKR,MAAMusD,EAAevsD,KAAKsqD,cAC1B,IAAM,IAAIvpD,EAAI,EAAGC,EAAIurD,EAAatrD,OAAQF,EAAIC,EAAGD,IAE3CwrD,EAAcxrD,GAAIs5B,QAAUkyB,EAAcxrD,GAAI8rD,gBAAkBJ,GAEpEzsD,KAAKguD,eAAgBjtD,GAUvB,OAJA2rD,EAAkBD,GAAapyB,QAAS,EACxCr6B,KAAK8qD,sBAAsB1qD,KAAMqsD,GACjCzsD,KAAK+qD,oBAAqB,EAEnB/qD,IAER,CAEAguD,cAAAA,CAAgBxI,GAQf,OANAxlD,KAAKssD,mBAAoB9G,GAEzBxlD,KAAKsqD,cAAe9E,GAAanrB,QAAS,EAC1Cr6B,KAAKuqD,sBAAsBnqD,KAAMolD,GACjCxlD,KAAK+qD,oBAAqB,EAEnB/qD,IAER,CAEAiuD,QAAAA,GAGC,IAAIC,EAAkB,EAClBC,EAAiB,EAIrB,MAAMzB,EAAmB1sD,KAAK6qD,cACxBtZ,EAAUmb,EACdjyB,KAAK,CAAEhyB,EAAG1H,IAAOA,IACjBmsD,MAAM,CAAEpnD,EAAGC,IAEJ2mD,EAAkB5mD,GAAI0nD,YAAcd,EAAkB3mD,GAAIynD,cAI7D3mC,EAAW7mB,KAAK6mB,SACtB,IAAM,IAAI9lB,EAAI,EAAGC,EAAI0rD,EAAiBzrD,OAAQF,EAAIC,EAAGD,IAAO,CAG3D,MAAMP,EAAQ+wC,EAASxwC,GACjBwsD,EAAeb,EAAkBlsD,GACvC,IAA6B,IAAxB+sD,EAAalzB,OAAlB,CAOA,GAAwB,OAAnBxT,EAASrmB,MAAiB,CAE9B,GAAK+sD,EAAaE,aAAeU,EAAiB,CAEjD,MAAM,WAAEV,EAAU,YAAED,EAAW,mBAAEF,GAAuBC,EAClD/sD,EAAQqmB,EAASrmB,MACjBK,EAAQL,EAAMK,MAIdutD,EAAeF,EAAkBV,EACvC,IAAM,IAAIlkC,EAAImkC,EAAYnkC,EAAImkC,EAAaH,EAAoBhkC,IAE9DzoB,EAAOyoB,GAAMzoB,EAAOyoB,GAAM8kC,EAI3B5tD,EAAMK,MAAMwtD,WAAYF,EAAgBV,EAAYA,EAAaH,GACjE9sD,EAAMwrC,eAAgBmiB,EAAgBb,GAEtCC,EAAaE,WAAaU,CAE3B,CAEAA,GAAkBZ,EAAaD,kBAEhC,CAGA,GAAKC,EAAaC,cAAgBU,EAAkB,CAEnD,MAAM,YAAEV,EAAW,oBAAEH,GAAwBE,EACvCvf,EAAannB,EAASmnB,WAC5B,IAAM,MAAM9Q,KAAO8Q,EAAa,CAE/B,MAAMpjC,EAAYojC,EAAY9Q,IACxB,MAAEr8B,EAAK,SAAE0qC,GAAa3gC,EAC5B/J,EAAMwtD,WAAYH,EAAkB3iB,EAAUiiB,EAAcjiB,GAAYiiB,EAAcH,GAAwB9hB,GAC9G3gC,EAAUohC,eAAgBkiB,EAAkB3iB,EAAU8hB,EAAsB9hB,EAE7E,CAEAgiB,EAAaC,YAAcU,CAE5B,CAEAA,GAAmBX,EAAaF,oBAChCE,EAAathB,MAAQplB,EAASrmB,MAAQ+sD,EAAaE,WAAaF,EAAaC,YAG7ExtD,KAAK2qD,gBAAkB9jC,EAASrmB,MAAQ+sD,EAAaE,WAAaF,EAAaD,mBAAqB,EACpGttD,KAAKyqD,iBAAmB8C,EAAaC,YAAcD,EAAaF,mBAtDhE,CAwDD,CAEA,OAAOrtD,IAER,CAGA8sD,gBAAAA,CAAkBL,EAAY7rD,GAE7B,GAAK6rD,GAAczsD,KAAK07B,eAEvB,OAAO,KAKR,MAAM7U,EAAW7mB,KAAK6mB,SAChB0mC,EAAevtD,KAAK6qD,cAAe4B,GACzC,GAAkC,OAA7Bc,EAAapmC,YAAuB,CAExC,MAAMf,EAAM,IAAIjB,GACV3kB,EAAQqmB,EAASrmB,MACjBixB,EAAW5K,EAASmnB,WAAWvc,SACrC,IAAM,IAAI1wB,EAAIwsD,EAAathB,MAAOjrC,EAAIusD,EAAathB,MAAQshB,EAAavxC,MAAOjb,EAAIC,EAAGD,IAAO,CAE5F,IAAIutD,EAAKvtD,EACJP,IAEJ8tD,EAAK9tD,EAAMqK,KAAMyjD,IAIlBloC,EAAIZ,cAAekkC,GAAU/+C,oBAAqB8mB,EAAU68B,GAE7D,CAEAf,EAAapmC,YAAcf,CAE5B,CAGA,OADAxlB,EAAO+G,KAAM4lD,EAAapmC,aACnBvmB,CAER,CAGAmsD,mBAAAA,CAAqBN,EAAY7rD,GAEhC,GAAK6rD,GAAczsD,KAAK07B,eAEvB,OAAO,KAKR,MAAM7U,EAAW7mB,KAAK6mB,SAChB0mC,EAAevtD,KAAK6qD,cAAe4B,GACzC,GAAqC,OAAhCc,EAAaxxB,eAA0B,CAE3C,MAAMlU,EAAS,IAAIgC,GACnB7pB,KAAK8sD,iBAAkBL,EAAYjD,IACnCA,GAAOljC,UAAWuB,EAAO7c,QAEzB,MAAMxK,EAAQqmB,EAASrmB,MACjBixB,EAAW5K,EAASmnB,WAAWvc,SAErC,IAAIzH,EAAc,EAClB,IAAM,IAAIjpB,EAAIwsD,EAAathB,MAAOjrC,EAAIusD,EAAathB,MAAQshB,EAAavxC,MAAOjb,EAAIC,EAAGD,IAAO,CAE5F,IAAIutD,EAAKvtD,EACJP,IAEJ8tD,EAAK9tD,EAAMqK,KAAMyjD,IAIlB5E,GAAU/+C,oBAAqB8mB,EAAU68B,GACzCtkC,EAAc1oB,KAAKa,IAAK6nB,EAAanC,EAAO7c,OAAOlB,kBAAmB4/C,IAEvE,CAEA7hC,EAAOrD,OAASljB,KAAK+H,KAAM2gB,GAC3BujC,EAAaxxB,eAAiBlU,CAE/B,CAGA,OADAjnB,EAAO+G,KAAM4lD,EAAaxxB,gBACnBn7B,CAER,CAEAqkD,WAAAA,CAAaO,EAAY31C,GAExB7P,KAAKssD,mBAAoB9G,GAEzB,MAAM7pB,EAAkB37B,KAAK47B,iBACvB2vB,EAAgBvrD,KAAK47B,iBAAiBnnB,MAAMe,KAIlD,OAHA3F,EAAOnF,QAAS6gD,EAA4B,GAAb/F,GAC/B7pB,EAAgB3lB,aAAc,EAEvBhW,IAER,CAEAklD,WAAAA,CAAaM,EAAY31C,GAGxB,OADA7P,KAAKssD,mBAAoB9G,GAClB31C,EAAOrF,UAAWxK,KAAK47B,iBAAiBnnB,MAAMe,KAAmB,GAAbgwC,EAE5D,CAEAC,UAAAA,CAAYD,EAAYlzC,GAavB,OAXAtS,KAAKssD,mBAAoB9G,GAEI,OAAxBxlD,KAAK67B,gBAET77B,KAAK0rD,qBAINp5C,EAAM5H,QAAS1K,KAAK67B,eAAepnB,MAAMe,KAAmB,EAAbgwC,GAC/CxlD,KAAK67B,eAAe7lB,aAAc,EAE3BhW,IAER,CAEAmlD,UAAAA,CAAYK,EAAYlzC,GAGvB,OADAtS,KAAKssD,mBAAoB9G,GAClBlzC,EAAM9H,UAAWxK,KAAK67B,eAAepnB,MAAMe,KAAmB,EAAbgwC,EAEzD,CAEA+I,YAAAA,CAAc/I,EAAYvjD,GAIzB,OAFAjC,KAAKssD,mBAAoB9G,GAEpBxlD,KAAKsqD,cAAe9E,GAAaxvB,UAAY/zB,IAMlDjC,KAAKsqD,cAAe9E,GAAaxvB,QAAU/zB,EAC3CjC,KAAK+qD,oBAAqB,GALlB/qD,IAST,CAEAwuD,YAAAA,CAAchJ,GAIb,OAFAxlD,KAAKssD,mBAAoB9G,GAElBxlD,KAAKsqD,cAAe9E,GAAaxvB,OAEzC,CAEAy4B,eAAAA,CAAiBjJ,EAAYiH,GAO5B,OALAzsD,KAAKssD,mBAAoB9G,GACzBxlD,KAAKwsD,mBAAoBC,GAEzBzsD,KAAKsqD,cAAe9E,GAAaqH,cAAgBJ,EAE1CzsD,IAER,CAEA0uD,eAAAA,CAAiBlJ,GAIhB,OAFAxlD,KAAKssD,mBAAoB9G,GAElBxlD,KAAKsqD,cAAe9E,GAAaqH,aAEzC,CAEA8B,kBAAAA,CAAoBlC,GAA0B,IAAd7rD,EAAMuD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEzCnE,KAAKwsD,mBAAoBC,GAEzB,MAAMc,EAAevtD,KAAK6qD,cAAe4B,GAYzC,OAXA7rD,EAAO4sD,YAAcD,EAAaC,YAClC5sD,EAAOspD,YAAcqD,EAAarD,YAClCtpD,EAAOysD,oBAAsBE,EAAaF,oBAE1CzsD,EAAO6sD,WAAaF,EAAaE,WACjC7sD,EAAO8sD,WAAaH,EAAaG,WACjC9sD,EAAO0sD,mBAAqBC,EAAaD,mBAEzC1sD,EAAOqrC,MAAQshB,EAAathB,MAC5BrrC,EAAOob,MAAQuxC,EAAavxC,MAErBpb,CAER,CAEAguD,gBAAAA,CAAkB3zB,GAGjB,MAAM4zB,EAAuB7uD,KAAKuqD,sBAC5BgC,EAAevsD,KAAKsqD,cAE1B,IADAuE,EAAqB3B,KAAMrE,IACnBgG,EAAsBA,EAAqB5tD,OAAS,KAAQsrD,EAAatrD,QAEhFsrD,EAAauC,MACbD,EAAqBC,MAKtB,GAAK7zB,EAAmBsxB,EAAatrD,OAEpC,MAAM,IAAImC,MAAO,+CAAgD63B,mDAKlE,MAAM8zB,EAAkB,IAAI9rD,WAAYg4B,GAClC+zB,EAAkB,IAAI/rD,WAAYg4B,GACxCkvB,GAAmBnqD,KAAKgrD,iBAAkB+D,GAC1C5E,GAAmBnqD,KAAKirD,iBAAkB+D,GAE1ChvD,KAAKgrD,iBAAmB+D,EACxB/uD,KAAKirD,iBAAmB+D,EACxBhvD,KAAKk7B,kBAAoBD,EAGzB,MAAMwwB,EAAkBzrD,KAAKorD,iBACvBzvB,EAAkB37B,KAAK47B,iBACvBE,EAAgB97B,KAAK67B,eAE3B4vB,EAAgBvyC,UAChBlZ,KAAKsrD,uBACLnB,GAAmBsB,EAAgBh3C,MAAMe,KAAMxV,KAAKorD,iBAAiB32C,MAAMe,MAE3EmmB,EAAgBziB,UAChBlZ,KAAKqrD,uBACLlB,GAAmBxuB,EAAgBlnB,MAAMe,KAAMxV,KAAK47B,iBAAiBnnB,MAAMe,MAEtEsmB,IAEJA,EAAc5iB,UACdlZ,KAAK0rD,qBACLvB,GAAmBruB,EAAcrnB,MAAMe,KAAMxV,KAAK67B,eAAepnB,MAAMe,MAIzE,CAEAy5C,eAAAA,CAAiB9zB,EAAgBE,GAGhC,MAAM6zB,EAAc,IAAKlvD,KAAK6qD,eAAgBsE,QAAQC,GAAQA,EAAK/0B,SAEnE,GAD6B/4B,KAAKa,OAAQ+sD,EAAYz0B,KAAK51B,GAASA,EAAM2oD,YAAc3oD,EAAMwoD,uBAClElyB,EAE3B,MAAM,IAAI/3B,MAAO,wEAAyEi4B,6BAK3F,GAAKr7B,KAAK6mB,SAASrmB,MAAQ,CAG1B,GAD4Bc,KAAKa,OAAQ+sD,EAAYz0B,KAAK51B,GAASA,EAAM4oD,WAAa5oD,EAAMyoD,sBACjEjyB,EAE1B,MAAM,IAAIj4B,MAAO,uEAAwEi4B,4BAI3F,CAKA,MAAMg0B,EAAcrvD,KAAK6mB,SACzBwoC,EAAYn2C,UAGZlZ,KAAKo7B,gBAAkBD,EACvBn7B,KAAKs7B,eAAiBD,EAEjBr7B,KAAKw7B,uBAETx7B,KAAKw7B,sBAAuB,EAC5Bx7B,KAAK6mB,SAAW,IAAIgnB,GACpB7tC,KAAK4rD,oBAAqByD,IAK3B,MAAMxoC,EAAW7mB,KAAK6mB,SACjBwoC,EAAY7uD,OAEhB2pD,GAAmBkF,EAAY7uD,MAAMK,MAAOgmB,EAASrmB,MAAMK,OAI5D,IAAM,MAAMq8B,KAAOmyB,EAAYrhB,WAE9Bmc,GAAmBkF,EAAYrhB,WAAY9Q,GAAMr8B,MAAOgmB,EAASmnB,WAAY9Q,GAAMr8B,MAIrF,CAEA63B,OAAAA,CAAS0a,EAAWC,GAEnB,MAAMkZ,EAAevsD,KAAKsqD,cACpBoC,EAAmB1sD,KAAK6qD,cACxBvnC,EAActjB,KAAKsjB,YACnB8oC,EAAgBpsD,KAAK6mB,SAG3BijC,GAAMltB,SAAW58B,KAAK48B,SACtBktB,GAAMjjC,SAASrmB,MAAQ4rD,EAAc5rD,MACrCspD,GAAMjjC,SAASmnB,WAAaoe,EAAcpe,WACN,OAA/B8b,GAAMjjC,SAASM,cAEnB2iC,GAAMjjC,SAASM,YAAc,IAAIhC,IAIK,OAAlC2kC,GAAMjjC,SAASkV,iBAEnB+tB,GAAMjjC,SAASkV,eAAiB,IAAIlS,IAIrC,IAAM,IAAI9oB,EAAI,EAAGC,EAAIurD,EAAatrD,OAAQF,EAAIC,EAAGD,IAAO,CAEvD,IAAOwrD,EAAcxrD,GAAIi1B,UAAau2B,EAAcxrD,GAAIs5B,OAEvD,SAID,MAAMoyB,EAAaF,EAAcxrD,GAAI8rD,cAC/BU,EAAeb,EAAkBD,GACvC3C,GAAMjjC,SAASkoB,aAAcwe,EAAathB,MAAOshB,EAAavxC,OAG9Dhc,KAAKklD,YAAankD,EAAG+oD,GAAMxmC,aAAc9W,YAAa8W,GACtDtjB,KAAK8sD,iBAAkBL,EAAY3C,GAAMjjC,SAASM,aAClDnnB,KAAK+sD,oBAAqBN,EAAY3C,GAAMjjC,SAASkV,gBACrD+tB,GAAMpxB,QAAS0a,EAAW2W,IAG1B,IAAM,IAAIzgC,EAAI,EAAGtoB,EAAI+oD,GAAiB9oD,OAAQqoB,EAAItoB,EAAGsoB,IAAO,CAE3D,MAAML,EAAY8gC,GAAkBzgC,GACpCL,EAAUhD,OAASjmB,KACnBipB,EAAUqmC,QAAUvuD,EACpBsyC,EAAWjzC,KAAM6oB,EAElB,CAEA8gC,GAAiB9oD,OAAS,CAE3B,CAEA6oD,GAAMltB,SAAW,KACjBktB,GAAMjjC,SAASrmB,MAAQ,KACvBspD,GAAMjjC,SAASmnB,WAAa,CAAC,EAC7B8b,GAAMjjC,SAASkoB,aAAc,EAAG3pB,IAEjC,CAEAzd,IAAAA,CAAM+P,GAqCL,OAnCAF,MAAM7P,KAAM+P,GAEZ1X,KAAK6mB,SAAWnP,EAAOmP,SAASnf,QAChC1H,KAAK65B,uBAAyBniB,EAAOmiB,uBACrC75B,KAAK85B,YAAcpiB,EAAOoiB,YAC1B95B,KAAKmnB,YAAqC,OAAvBzP,EAAOyP,YAAuBzP,EAAOyP,YAAYzf,QAAU,KAC9E1H,KAAK+7B,eAA2C,OAA1BrkB,EAAOqkB,eAA0BrkB,EAAOqkB,eAAer0B,QAAU,KAEvF1H,KAAK6qD,cAAgBnzC,EAAOmzC,cAAcpwB,KAAK20B,IAAQ,IACnDA,EAEHjoC,YAAkC,OAArBioC,EAAKjoC,YAAuBioC,EAAKjoC,YAAYzf,QAAU,KACpEq0B,eAAwC,OAAxBqzB,EAAKrzB,eAA0BqzB,EAAKrzB,eAAer0B,QAAU,SAE9E1H,KAAKsqD,cAAgB5yC,EAAO4yC,cAAc7vB,KAAK20B,IAAQ,IAAOA,MAE9DpvD,KAAKk7B,kBAAoBxjB,EAAOwjB,kBAChCl7B,KAAKo7B,gBAAkB1jB,EAAO0jB,gBAC9Bp7B,KAAKs7B,eAAiB5jB,EAAO4jB,eAE7Bt7B,KAAKw7B,qBAAuB9jB,EAAO8jB,qBACnCx7B,KAAK07B,eAAiBhkB,EAAOgkB,eAC7B17B,KAAKgrD,iBAAmBtzC,EAAOszC,iBAAiBlqD,QAChDd,KAAKirD,iBAAmBvzC,EAAOuzC,iBAAiBnqD,QAEhDd,KAAK47B,iBAAmBlkB,EAAOkkB,iBAAiBl0B,QAChD1H,KAAK47B,iBAAiBnnB,MAAMe,KAAOxV,KAAK47B,iBAAiBnnB,MAAMe,KAAK1U,QAEvC,OAAxBd,KAAK67B,iBAET77B,KAAK67B,eAAiBnkB,EAAOmkB,eAAen0B,QAC5C1H,KAAK67B,eAAepnB,MAAMe,KAAOxV,KAAK67B,eAAepnB,MAAMe,KAAK1U,SAI1Dd,IAER,CAEAkZ,OAAAA,GAkBC,OAfAlZ,KAAK6mB,SAAS3N,UAEdlZ,KAAK47B,iBAAiB1iB,UACtBlZ,KAAK47B,iBAAmB,KAExB57B,KAAKorD,iBAAiBlyC,UACtBlZ,KAAKorD,iBAAmB,KAEK,OAAxBprD,KAAK67B,iBAET77B,KAAK67B,eAAe3iB,UACpBlZ,KAAK67B,eAAiB,MAIhB77B,IAER,CAEAw2B,cAAAA,CAAgBuf,EAAUoE,EAAOj3B,EAAQ2D,EAAU+V,GAIlD,IAAO58B,KAAK+qD,qBAAwB/qD,KAAK65B,yBAA4B75B,KAAK85B,YAEzE,OAMD,MAAMt5B,EAAQqmB,EAASwnB,WACjBkhB,EAA4B,OAAV/uD,EAAiB,EAAIA,EAAMK,MAAM2uD,kBAEnDjD,EAAevsD,KAAKsqD,cACpB0E,EAAkBhvD,KAAKirD,iBACvB8D,EAAkB/uD,KAAKgrD,iBACvB0B,EAAmB1sD,KAAK6qD,cACxBhxB,EAAyB75B,KAAK65B,uBAC9B4xB,EAAkBzrD,KAAKorD,iBACvBI,EAAgBC,EAAgBh3C,MAAMe,KAGvCqkB,IAEJwvB,GACE98C,iBAAkB2W,EAAOtR,iBAAkBsR,EAAOC,oBAClD/a,SAAUpI,KAAKsjB,aACjBimC,GAAS/B,wBACR6B,GACAtT,EAASnjB,mBAKX,IAAI68B,EAAiB,EACrB,GAAKzvD,KAAK85B,YAAc,CAGvBuvB,GAAU1hD,KAAM3H,KAAKsjB,aAAcpV,SACnCw7C,GAAU1uC,sBAAuBkI,EAAOI,aAAc1J,aAAcyvC,IACpEM,GAAS/iD,IAAK,EAAG,GAAK,GAAI2c,mBAAoBL,EAAOI,aAAcC,mBAAoB8lC,IAEvF,IAAM,IAAItoD,EAAI,EAAGC,EAAIurD,EAAatrD,OAAQF,EAAIC,EAAGD,IAEhD,GAAKwrD,EAAcxrD,GAAIi1B,SAAWu2B,EAAcxrD,GAAIs5B,OAAS,CAE5D,MAAMoyB,EAAaF,EAAcxrD,GAAI8rD,cAGrC7sD,KAAKklD,YAAankD,EAAGsoD,IACrBrpD,KAAK+sD,oBAAqBN,EAAYhD,IAAY7vC,aAAcyvC,IAGhE,IAAIqG,GAAS,EAOb,GANK71B,IAEJ61B,GAAWnG,GAAS3hC,iBAAkB6hC,MAIhCiG,EAAS,CAGf,MAAMnC,EAAeb,EAAkBD,GACjClzC,EAAIqwC,GAAMzhD,WAAYshD,GAAUz+C,OAAQ0+C,IAAYxgD,IAAKygD,IAC/DE,GAAYzpD,KAAMmtD,EAAathB,MAAOshB,EAAavxC,MAAOzC,EAAGxY,EAE9D,CAED,CAKD,MAAMmoD,EAAOW,GAAYX,KACnB0B,EAAa5qD,KAAK4qD,WACJ,OAAfA,EAEJ1B,EAAKgE,KAAMtwB,EAASsG,YAAc6lB,GAAkBD,IAIpD8B,EAAW1pD,KAAMlB,KAAMkpD,EAAMhmC,GAI9B,IAAM,IAAIniB,EAAI,EAAGC,EAAIkoD,EAAKjoD,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,MAAMooD,EAAOD,EAAMnoD,GACnBiuD,EAAiBS,GAAmBtG,EAAKld,MAAQsjB,EACjDR,EAAiBU,GAAmBtG,EAAKntC,MACzCwvC,EAAeiE,GAAmBtG,EAAK3oD,MACvCivD,GAED,CAEA5F,GAAYT,OAEb,MAEC,IAAM,IAAIroD,EAAI,EAAGC,EAAIurD,EAAatrD,OAAQF,EAAIC,EAAGD,IAEhD,GAAKwrD,EAAcxrD,GAAIi1B,SAAWu2B,EAAcxrD,GAAIs5B,OAAS,CAE5D,MAAMoyB,EAAaF,EAAcxrD,GAAI8rD,cAGrC,IAAI6C,GAAS,EAUb,GATK71B,IAGJ75B,KAAKklD,YAAankD,EAAGsoD,IACrBrpD,KAAK+sD,oBAAqBN,EAAYhD,IAAY7vC,aAAcyvC,IAChEqG,GAAWnG,GAAS3hC,iBAAkB6hC,MAIhCiG,EAAS,CAEf,MAAMnC,EAAeb,EAAkBD,GACvCuC,EAAiBS,GAAmBlC,EAAathB,MAAQsjB,EACzDR,EAAiBU,GAAmBlC,EAAavxC,MACjDwvC,EAAeiE,GAAmB1uD,EAClC0uD,GAED,CAED,CAMFhE,EAAgBz1C,aAAc,EAC9BhW,KAAKkrD,gBAAkBuE,EACvBzvD,KAAK+qD,oBAAqB,CAE3B,CAEAz0B,cAAAA,CAAgByf,EAAU9vB,EAAQ/C,EAAQysC,EAAc9oC,EAAU+oC,GAEjE5vD,KAAKw2B,eAAgBuf,EAAU,KAAM4Z,EAAc9oC,EAAU+oC,EAE9D,EAID,MAAMC,WAA0BjtB,GAE/BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAK8vD,qBAAsB,EAE3B9vD,KAAKH,KAAO,oBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKy6B,IAAM,KAEXz6B,KAAKupC,UAAY,EACjBvpC,KAAK+vD,QAAU,QACf/vD,KAAKgwD,SAAW,QAEhBhwD,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAGA30B,IAAAA,CAAM+P,GAcL,OAZAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKupC,UAAY7xB,EAAO6xB,UACxBvpC,KAAK+vD,QAAUr4C,EAAOq4C,QACtB/vD,KAAKgwD,SAAWt4C,EAAOs4C,SAEvBhwD,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAMiwD,GAAwB,IAAIhuC,GAC5BiuC,GAAsB,IAAIjuC,GAE1BkuC,GAAiC,IAAIviC,GACrCwiC,GAAuB,IAAIvlC,GAC3BwlC,GAA0B,IAAIxmC,GAE9BymC,GAAqC,IAAIruC,GACzCsuC,GAAyC,IAAItuC,GAEnD,MAAMuuC,WAAar7B,GAElBvyB,WAAAA,GAAmF,IAAtEikB,EAAQ1iB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI0pC,GAAkBjR,EAAQz4B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI0rD,GAE5Dr4C,QAEAxX,KAAKo8B,QAAS,EAEdp8B,KAAKH,KAAO,OAEZG,KAAK6mB,SAAWA,EAChB7mB,KAAK48B,SAAWA,EAEhB58B,KAAK4yC,oBAEN,CAEAjrC,IAAAA,CAAM+P,EAAQylB,GAOb,OALA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAK48B,SAAWrmB,MAAMC,QAASkB,EAAOklB,UAAallB,EAAOklB,SAAS97B,QAAU4W,EAAOklB,SACpF58B,KAAK6mB,SAAWnP,EAAOmP,SAEhB7mB,IAER,CAEAywD,oBAAAA,GAEC,MAAM5pC,EAAW7mB,KAAK6mB,SAItB,GAAwB,OAAnBA,EAASrmB,MAAiB,CAE9B,MAAMsmB,EAAoBD,EAASmnB,WAAWvc,SACxCi/B,EAAgB,CAAE,GAExB,IAAM,IAAI3vD,EAAI,EAAGC,EAAI8lB,EAAkB9K,MAAOjb,EAAIC,EAAGD,IAEpDkvD,GAAQtlD,oBAAqBmc,EAAmB/lB,EAAI,GACpDmvD,GAAMvlD,oBAAqBmc,EAAmB/lB,GAE9C2vD,EAAe3vD,GAAM2vD,EAAe3vD,EAAI,GACxC2vD,EAAe3vD,IAAOkvD,GAAQpmD,WAAYqmD,IAI3CrpC,EAAS4nB,aAAc,eAAgB,IAAIpB,GAAwBqjB,EAAe,GAEnF,MAEC7pD,QAAQC,KAAM,iGAIf,OAAO9G,IAER,CAEA04B,OAAAA,CAAS0a,EAAWC,GAEnB,MAAMxsB,EAAW7mB,KAAK6mB,SAChBvD,EAActjB,KAAKsjB,YACnBw6B,EAAY1K,EAAUud,OAAOH,KAAK1S,UAClC1P,EAAYvnB,EAASunB,UAU3B,GANiC,OAA5BvnB,EAASkV,gBAA0BlV,EAASooB,wBAEjDohB,GAAU1oD,KAAMkf,EAASkV,gBACzBs0B,GAAUz2C,aAAc0J,GACxB+sC,GAAU7rC,QAAUs5B,GAEiC,IAAhD1K,EAAUpoB,IAAIpD,iBAAkByoC,IAAwB,OAI7DF,GAAiBxoD,KAAM2b,GAAcpV,SACrCkiD,GAAOzoD,KAAMyrC,EAAUpoB,KAAMpR,aAAcu2C,IAE3C,MAAMS,EAAiB9S,IAAgB99C,KAAKsP,MAAM9M,EAAIxC,KAAKsP,MAAM7M,EAAIzC,KAAKsP,MAAMiK,GAAM,GAChFs3C,EAAmBD,EAAiBA,EAEpCtwC,EAAOtgB,KAAK8wD,eAAiB,EAAI,EAEjCtwD,EAAQqmB,EAASrmB,MAEjBsmB,EADaD,EAASmnB,WACSvc,SAErC,GAAe,OAAVjxB,EAAiB,CAErB,MAAMyrC,EAAQ3qC,KAAKa,IAAK,EAAGisC,EAAUnC,OAC/B4a,EAAMvlD,KAAKY,IAAK1B,EAAMwb,MAASoyB,EAAUnC,MAAQmC,EAAUpyB,OAEjE,IAAM,IAAIjb,EAAIkrC,EAAOjrC,EAAI6lD,EAAM,EAAG9lD,EAAIC,EAAGD,GAAKuf,EAAO,CAEpD,MAAMxa,EAAItF,EAAMqK,KAAM9J,GAChBgF,EAAIvF,EAAMqK,KAAM9J,EAAI,GAEpBkoB,EAAY8nC,GAAmB/wD,KAAMozC,EAAWgd,GAAQS,EAAkB/qD,EAAGC,EAAGhF,GAEjFkoB,GAEJoqB,EAAWjzC,KAAM6oB,EAInB,CAEA,GAAKjpB,KAAKgxD,WAAa,CAEtB,MAAMlrD,EAAItF,EAAMqK,KAAMg8C,EAAM,GACtB9gD,EAAIvF,EAAMqK,KAAMohC,GAEhBhjB,EAAY8nC,GAAmB/wD,KAAMozC,EAAWgd,GAAQS,EAAkB/qD,EAAGC,EAAG8gD,EAAM,GAEvF59B,GAEJoqB,EAAWjzC,KAAM6oB,EAInB,CAED,KAAO,CAEN,MAAMgjB,EAAQ3qC,KAAKa,IAAK,EAAGisC,EAAUnC,OAC/B4a,EAAMvlD,KAAKY,IAAK4kB,EAAkB9K,MAASoyB,EAAUnC,MAAQmC,EAAUpyB,OAE7E,IAAM,IAAIjb,EAAIkrC,EAAOjrC,EAAI6lD,EAAM,EAAG9lD,EAAIC,EAAGD,GAAKuf,EAAO,CAEpD,MAAM2I,EAAY8nC,GAAmB/wD,KAAMozC,EAAWgd,GAAQS,EAAkB9vD,EAAGA,EAAI,EAAGA,GAErFkoB,GAEJoqB,EAAWjzC,KAAM6oB,EAInB,CAEA,GAAKjpB,KAAKgxD,WAAa,CAEtB,MAAM/nC,EAAY8nC,GAAmB/wD,KAAMozC,EAAWgd,GAAQS,EAAkBhK,EAAM,EAAG5a,EAAO4a,EAAM,GAEjG59B,GAEJoqB,EAAWjzC,KAAM6oB,EAInB,CAED,CAED,CAEA2pB,kBAAAA,GAEC,MAEM3E,EAFWjuC,KAAK6mB,SAEWonB,gBAC3Bh1B,EAAOzF,OAAOyF,KAAMg1B,GAE1B,GAAKh1B,EAAKhY,OAAS,EAAI,CAEtB,MAAMmuC,EAAiBnB,EAAiBh1B,EAAM,IAE9C,QAAwBlZ,IAAnBqvC,EAA+B,CAEnCpvC,KAAK6yC,sBAAwB,GAC7B7yC,KAAK8yC,sBAAwB,CAAC,EAE9B,IAAM,IAAIxwC,EAAI,EAAGywC,EAAK3D,EAAenuC,OAAQqB,EAAIywC,EAAIzwC,IAAO,CAE3D,MAAM+N,EAAO++B,EAAgB9sC,GAAI+N,MAAQ2iC,OAAQ1wC,GAEjDtC,KAAK6yC,sBAAsBzyC,KAAM,GACjCJ,KAAK8yC,sBAAuBziC,GAAS/N,CAEtC,CAED,CAED,CAED,EAID,SAASyuD,GAAmB9qC,EAAQmtB,EAAWpoB,EAAKimC,EAAanrD,EAAGC,EAAGhF,GAEtE,MAAM+lB,EAAoBb,EAAOY,SAASmnB,WAAWvc,SAErDw+B,GAAQtlD,oBAAqBmc,EAAmBhhB,GAChDoqD,GAAMvlD,oBAAqBmc,EAAmB/gB,GAI9C,GAFeilB,EAAIO,oBAAqB0kC,GAASC,GAAOI,GAAsBC,IAEhEU,EAAc,OAE5BX,GAAqB12C,aAAcqM,EAAO3C,aAE1C,MAAM8T,EAAWgc,EAAUpoB,IAAIF,OAAOjhB,WAAYymD,IAElD,OAAKl5B,EAAWgc,EAAU1gB,MAAQ0E,EAAWgc,EAAUzgB,SAAvD,EAEO,CAENyE,SAAUA,EAGV5Q,MAAO+pC,GAAyB7oD,QAAQkS,aAAcqM,EAAO3C,aAC7D9iB,MAAOO,EACP8yC,KAAM,KACND,UAAW,KACXxU,UAAW,KACXnZ,OAAQA,EAIV,CAEA,MAAMirC,GAAuB,IAAIjvC,GAC3BkvC,GAAqB,IAAIlvC,GAE/B,MAAMmvC,WAAqBZ,GAE1B5tD,WAAAA,CAAaikB,EAAU+V,GAEtBplB,MAAOqP,EAAU+V,GAEjB58B,KAAK8wD,gBAAiB,EAEtB9wD,KAAKH,KAAO,cAEb,CAEA4wD,oBAAAA,GAEC,MAAM5pC,EAAW7mB,KAAK6mB,SAItB,GAAwB,OAAnBA,EAASrmB,MAAiB,CAE9B,MAAMsmB,EAAoBD,EAASmnB,WAAWvc,SACxCi/B,EAAgB,GAEtB,IAAM,IAAI3vD,EAAI,EAAGC,EAAI8lB,EAAkB9K,MAAOjb,EAAIC,EAAGD,GAAK,EAEzDmwD,GAAOvmD,oBAAqBmc,EAAmB/lB,GAC/CowD,GAAKxmD,oBAAqBmc,EAAmB/lB,EAAI,GAEjD2vD,EAAe3vD,GAAc,IAANA,EAAY,EAAI2vD,EAAe3vD,EAAI,GAC1D2vD,EAAe3vD,EAAI,GAAM2vD,EAAe3vD,GAAMmwD,GAAOrnD,WAAYsnD,IAIlEtqC,EAAS4nB,aAAc,eAAgB,IAAIpB,GAAwBqjB,EAAe,GAEnF,MAEC7pD,QAAQC,KAAM,yGAIf,OAAO9G,IAER,EAID,MAAMqxD,WAAiBb,GAEtB5tD,WAAAA,CAAaikB,EAAU+V,GAEtBplB,MAAOqP,EAAU+V,GAEjB58B,KAAKgxD,YAAa,EAElBhxD,KAAKH,KAAO,UAEb,EAID,MAAMyxD,WAAuB1uB,GAE5BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKuxD,kBAAmB,EAExBvxD,KAAKH,KAAO,iBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKy6B,IAAM,KAEXz6B,KAAKsnC,SAAW,KAEhBtnC,KAAK8lB,KAAO,EACZ9lB,KAAKspC,iBAAkB,EAEvBtpC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAeL,OAbAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAK8lB,KAAOpO,EAAOoO,KACnB9lB,KAAKspC,gBAAkB5xB,EAAO4xB,gBAE9BtpC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAMwxD,GAA+B,IAAI5jC,GACnC6jC,GAAqB,IAAI5mC,GACzB6mC,GAAwB,IAAI7nC,GAC5B8nC,GAA4B,IAAI1vC,GAEtC,MAAM2vC,WAAez8B,GAEpBvyB,WAAAA,GAAgF,IAAnEikB,EAAQ1iB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI0pC,GAAkBjR,EAAQz4B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAImtD,GAE5D95C,QAEAxX,KAAKq8B,UAAW,EAEhBr8B,KAAKH,KAAO,SAEZG,KAAK6mB,SAAWA,EAChB7mB,KAAK48B,SAAWA,EAEhB58B,KAAK4yC,oBAEN,CAEAjrC,IAAAA,CAAM+P,EAAQylB,GAOb,OALA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAK48B,SAAWrmB,MAAMC,QAASkB,EAAOklB,UAAallB,EAAOklB,SAAS97B,QAAU4W,EAAOklB,SACpF58B,KAAK6mB,SAAWnP,EAAOmP,SAEhB7mB,IAER,CAEA04B,OAAAA,CAAS0a,EAAWC,GAEnB,MAAMxsB,EAAW7mB,KAAK6mB,SAChBvD,EAActjB,KAAKsjB,YACnBw6B,EAAY1K,EAAUud,OAAOiB,OAAO9T,UACpC1P,EAAYvnB,EAASunB,UAU3B,GANiC,OAA5BvnB,EAASkV,gBAA0BlV,EAASooB,wBAEjDyiB,GAAQ/pD,KAAMkf,EAASkV,gBACvB21B,GAAQ93C,aAAc0J,GACtBouC,GAAQltC,QAAUs5B,GAEiC,IAA9C1K,EAAUpoB,IAAIpD,iBAAkB8pC,IAAsB,OAI3DF,GAAe7pD,KAAM2b,GAAcpV,SACnCujD,GAAK9pD,KAAMyrC,EAAUpoB,KAAMpR,aAAc43C,IAEzC,MAAMZ,EAAiB9S,IAAgB99C,KAAKsP,MAAM9M,EAAIxC,KAAKsP,MAAM7M,EAAIzC,KAAKsP,MAAMiK,GAAM,GAChFs3C,EAAmBD,EAAiBA,EAEpCpwD,EAAQqmB,EAASrmB,MAEjBsmB,EADaD,EAASmnB,WACSvc,SAErC,GAAe,OAAVjxB,EAAiB,CAKrB,IAAM,IAAIO,EAHIO,KAAKa,IAAK,EAAGisC,EAAUnC,OAGhB5vB,EAFT/a,KAAKY,IAAK1B,EAAMwb,MAASoyB,EAAUnC,MAAQmC,EAAUpyB,OAElCjb,EAAIsb,EAAItb,IAAO,CAE7C,MAAM+E,EAAItF,EAAMqK,KAAM9J,GAEtB4wD,GAAYhnD,oBAAqBmc,EAAmBhhB,GAEpD+rD,GAAWF,GAAa7rD,EAAG+qD,EAAkBvtC,EAAa8vB,EAAWC,EAAYrzC,KAElF,CAED,KAAO,CAKN,IAAM,IAAIe,EAHIO,KAAKa,IAAK,EAAGisC,EAAUnC,OAGhBjrC,EAFTM,KAAKY,IAAK4kB,EAAkB9K,MAASoyB,EAAUnC,MAAQmC,EAAUpyB,OAE/Cjb,EAAIC,EAAGD,IAEpC4wD,GAAYhnD,oBAAqBmc,EAAmB/lB,GAEpD8wD,GAAWF,GAAa5wD,EAAG8vD,EAAkBvtC,EAAa8vB,EAAWC,EAAYrzC,KAInF,CAED,CAEA4yC,kBAAAA,GAEC,MAEM3E,EAFWjuC,KAAK6mB,SAEWonB,gBAC3Bh1B,EAAOzF,OAAOyF,KAAMg1B,GAE1B,GAAKh1B,EAAKhY,OAAS,EAAI,CAEtB,MAAMmuC,EAAiBnB,EAAiBh1B,EAAM,IAE9C,QAAwBlZ,IAAnBqvC,EAA+B,CAEnCpvC,KAAK6yC,sBAAwB,GAC7B7yC,KAAK8yC,sBAAwB,CAAC,EAE9B,IAAM,IAAIxwC,EAAI,EAAGywC,EAAK3D,EAAenuC,OAAQqB,EAAIywC,EAAIzwC,IAAO,CAE3D,MAAM+N,EAAO++B,EAAgB9sC,GAAI+N,MAAQ2iC,OAAQ1wC,GAEjDtC,KAAK6yC,sBAAsBzyC,KAAM,GACjCJ,KAAK8yC,sBAAuBziC,GAAS/N,CAEtC,CAED,CAED,CAED,EAID,SAASuvD,GAAWrrC,EAAOhmB,EAAOqwD,EAAkBvtC,EAAa8vB,EAAWC,EAAYptB,GAEvF,MAAM6rC,EAAqBL,GAAKnmC,kBAAmB9E,GAEnD,GAAKsrC,EAAqBjB,EAAmB,CAE5C,MAAMkB,EAAiB,IAAI9vC,GAE3BwvC,GAAKrmC,oBAAqB5E,EAAOurC,GACjCA,EAAen4C,aAAc0J,GAE7B,MAAM8T,EAAWgc,EAAUpoB,IAAIF,OAAOjhB,WAAYkoD,GAElD,GAAK36B,EAAWgc,EAAU1gB,MAAQ0E,EAAWgc,EAAUzgB,IAAM,OAE7D0gB,EAAWjzC,KAAM,CAEhBg3B,SAAUA,EACV46B,cAAe1wD,KAAK+H,KAAMyoD,GAC1BtrC,MAAOurC,EACPvxD,MAAOA,EACPqzC,KAAM,KACND,UAAW,KACXxU,UAAW,KACXnZ,OAAQA,GAIV,CAED,CAEA,MAAMgsC,WAAqBp7C,GAE1BjU,WAAAA,CAAasvD,EAAOn7C,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAE9EE,MAAO06C,EAAOn7C,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAEzEtX,KAAKmyD,gBAAiB,EAEtBnyD,KAAKoX,eAA0BrX,IAAdqX,EAA0BA,EAAYxf,GACvDoI,KAAKmX,eAA0BpX,IAAdoX,EAA0BA,EAAYvf,GAEvDoI,KAAKgY,iBAAkB,EAEvB,MAAMm8B,EAAQn0C,KAST,8BAA+BkyD,GAEnCA,EAAME,2BATP,SAASC,IAERle,EAAMn+B,aAAc,EACpBk8C,EAAME,0BAA2BC,EAElC,GAQD,CAEA3qD,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKyU,OAAQ9M,KAAM3H,KAEjD,CAEAuf,MAAAA,GAEC,MAAM2yC,EAAQlyD,KAAKyU,OAGY,IAFD,8BAA+By9C,GAErBA,EAAMI,YAAcJ,EAAMK,oBAEjEvyD,KAAKgW,aAAc,EAIrB,EAID,MAAMw8C,WAA0BP,GAE/BrvD,WAAAA,CAAamU,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAEvEE,MAAO,CAAC,EAAGT,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAEtEtX,KAAKyyD,qBAAsB,CAE5B,CAEAlzC,MAAAA,GAGC,CAID7X,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA0yD,QAAAA,CAAU7V,GAET78C,KAAKyU,MAAQooC,EACb78C,KAAKgW,aAAc,CAEpB,EAID,MAAM28C,WAA2B97C,GAEhCjU,WAAAA,CAAasE,EAAOC,GAEnBqQ,MAAO,CAAEtQ,QAAOC,WAEhBnH,KAAK4yD,sBAAuB,EAE5B5yD,KAAKmX,UAAY5f,GACjByI,KAAKoX,UAAY7f,GAEjByI,KAAKgY,iBAAkB,EAEvBhY,KAAKgW,aAAc,CAEpB,EAID,MAAM68C,WAA0Bh8C,GAE/BjU,WAAAA,CAAa+U,EAASzQ,EAAOC,EAAQkQ,EAAQxX,EAAMkX,EAASE,EAAOC,EAAOC,EAAWC,EAAWE,EAAYpE,GAE3GsE,MAAO,KAAMT,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,EAAYpE,GAEpFlT,KAAK8yD,qBAAsB,EAE3B9yD,KAAKyU,MAAQ,CAAEvN,MAAOA,EAAOC,OAAQA,GACrCnH,KAAK2X,QAAUA,EAKf3X,KAAKkY,OAAQ,EAKblY,KAAKgY,iBAAkB,CAExB,EAID,MAAM+6C,WAA+BF,GAEpCjwD,WAAAA,CAAa+U,EAASzQ,EAAOC,EAAQmU,EAAOjE,EAAQxX,GAEnD2X,MAAOG,EAASzQ,EAAOC,EAAQkQ,EAAQxX,GAEvCG,KAAKgzD,0BAA2B,EAChChzD,KAAKyU,MAAM6G,MAAQA,EACnBtb,KAAK0c,MAAQrlB,GAEb2I,KAAK2c,aAAe,IAAIC,GAEzB,CAEAC,cAAAA,CAAgBC,GAEf9c,KAAK2c,aAAa9U,IAAKiV,EAExB,CAEAC,iBAAAA,GAEC/c,KAAK2c,aAAaK,OAEnB,EAID,MAAMi2C,WAA8BJ,GAEnCjwD,WAAAA,CAAawT,EAAQiB,EAAQxX,GAE5B2X,WAAOzX,EAAWqW,EAAQ,GAAIlP,MAAOkP,EAAQ,GAAIjP,OAAQkQ,EAAQxX,EAAM9I,IAEvEiJ,KAAKkzD,yBAA0B,EAC/BlzD,KAAK66C,eAAgB,EAErB76C,KAAKyU,MAAQ2B,CAEd,EAID,MAAM+8C,WAAsBt8C,GAE3BjU,WAAAA,CAAa4N,EAAQuG,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAE/EE,MAAOhH,EAAQuG,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAE1EtX,KAAKozD,iBAAkB,EAEvBpzD,KAAKgW,aAAc,CAEpB,EAID,MAAMq9C,WAAqBx8C,GAE1BjU,WAAAA,CAAasE,EAAOC,EAAQtH,EAAMkX,EAASE,EAAOC,EAAOC,EAAWC,EAAWE,GAAmC,IAAvBD,EAAMlT,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGjL,GAEnG,GAAKme,IAAWne,IAAeme,IAAWle,GAEzC,MAAM,IAAIiK,MAAO,yFAIJrD,IAATF,GAAsBwX,IAAWne,KAAc2G,EAAOvH,SAC7CyH,IAATF,GAAsBwX,IAAWle,KAAqB0G,EAAOlH,IAElE6e,MAAO,KAAMT,EAASE,EAAOC,EAAOC,EAAWC,EAAWC,EAAQxX,EAAMyX,GAExEtX,KAAKszD,gBAAiB,EAEtBtzD,KAAKyU,MAAQ,CAAEvN,MAAOA,EAAOC,OAAQA,GAErCnH,KAAKmX,eAA0BpX,IAAdoX,EAA0BA,EAAY5f,GACvDyI,KAAKoX,eAA0BrX,IAAdqX,EAA0BA,EAAY7f,GAEvDyI,KAAKkY,OAAQ,EACblY,KAAKgY,iBAAkB,EAEvBhY,KAAKuzD,gBAAkB,IAExB,CAGA5rD,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKuzD,gBAAkB77C,EAAO67C,gBAEvBvzD,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAI3B,OAF8B,OAAzBlW,KAAKuzD,kBAA2B/9C,EAAK+9C,gBAAkBvzD,KAAKuzD,iBAE1D/9C,CAER,EAkCD,MAAMg+C,GAEL5wD,WAAAA,GAEC5C,KAAKH,KAAO,QAEZG,KAAKyzD,mBAAqB,GAE3B,CAKAC,QAAAA,GAGC,OADA7sD,QAAQC,KAAM,6CACP,IAER,CAKA6sD,UAAAA,CAAYzuC,EAAG0uC,GAEd,MAAMlxD,EAAI1C,KAAK6zD,eAAgB3uC,GAC/B,OAAOllB,KAAK0zD,SAAUhxD,EAAGkxD,EAE1B,CAIAE,SAAAA,GAA2B,IAAhBC,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEtB,MAAMyhB,EAAS,GAEf,IAAM,IAAI9X,EAAI,EAAGA,GAAKimD,EAAWjmD,IAEhC8X,EAAOxlB,KAAMJ,KAAK0zD,SAAU5lD,EAAIimD,IAIjC,OAAOnuC,CAER,CAIAouC,eAAAA,GAAiC,IAAhBD,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE5B,MAAMyhB,EAAS,GAEf,IAAM,IAAI9X,EAAI,EAAGA,GAAKimD,EAAWjmD,IAEhC8X,EAAOxlB,KAAMJ,KAAK2zD,WAAY7lD,EAAIimD,IAInC,OAAOnuC,CAER,CAIAquC,SAAAA,GAEC,MAAMC,EAAUl0D,KAAKm0D,aACrB,OAAOD,EAASA,EAAQjzD,OAAS,EAElC,CAIAkzD,UAAAA,GAAkD,IAAtCJ,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGnE,KAAKyzD,mBAE5B,GAAKzzD,KAAKo0D,iBACPp0D,KAAKo0D,gBAAgBnzD,SAAW8yD,EAAY,IAC5C/zD,KAAKgW,YAEP,OAAOhW,KAAKo0D,gBAIbp0D,KAAKgW,aAAc,EAEnB,MAAMgnB,EAAQ,GACd,IAAI7gB,EAASk4C,EAAOr0D,KAAK0zD,SAAU,GAC/BY,EAAM,EAEVt3B,EAAM58B,KAAM,GAEZ,IAAM,IAAI0yB,EAAI,EAAGA,GAAKihC,EAAWjhC,IAEhC3W,EAAUnc,KAAK0zD,SAAU5gC,EAAIihC,GAC7BO,GAAOn4C,EAAQtS,WAAYwqD,GAC3Br3B,EAAM58B,KAAMk0D,GACZD,EAAOl4C,EAMR,OAFAnc,KAAKo0D,gBAAkBp3B,EAEhBA,CAER,CAEAu3B,gBAAAA,GAECv0D,KAAKgW,aAAc,EACnBhW,KAAKm0D,YAEN,CAIAN,cAAAA,CAAgB3uC,EAAGkS,GAElB,MAAMo9B,EAAax0D,KAAKm0D,aAExB,IAAIpzD,EAAI,EACR,MAAMsb,EAAKm4C,EAAWvzD,OAEtB,IAAIwzD,EAIHA,EAFIr9B,GAMclS,EAAIsvC,EAAYn4C,EAAK,GAMxC,IAA4Bq4C,EAAxBlwD,EAAM,EAAGC,EAAO4X,EAAK,EAEzB,KAAQ7X,GAAOC,GAMd,GAJA1D,EAAIO,KAAKoD,MAAOF,GAAQC,EAAOD,GAAQ,GAEvCkwD,EAAaF,EAAYzzD,GAAM0zD,EAE1BC,EAAa,EAEjBlwD,EAAMzD,EAAI,MAEJ,MAAK2zD,EAAa,GAIlB,CAENjwD,EAAO1D,EACP,KAID,CATC0D,EAAO1D,EAAI,CASZ,CAMD,GAFAA,EAAI0D,EAEC+vD,EAAYzzD,KAAQ0zD,EAExB,OAAO1zD,GAAMsb,EAAK,GAMnB,MAAMs4C,EAAeH,EAAYzzD,GAajC,OAFYA,GAJc0zD,EAAkBE,IANxBH,EAAYzzD,EAAI,GAEA4zD,KAQEt4C,EAAK,EAI5C,CAOAu4C,UAAAA,CAAYlyD,EAAGkxD,GAEd,MAAMvpC,EAAQ,KACd,IAAIiC,EAAK5pB,EAAI2nB,EACTwqC,EAAKnyD,EAAI2nB,EAIRiC,EAAK,IAAIA,EAAK,GACduoC,EAAK,IAAIA,EAAK,GAEnB,MAAMC,EAAM90D,KAAK0zD,SAAUpnC,GACrByoC,EAAM/0D,KAAK0zD,SAAUmB,GAErB7lB,EAAU4kB,IAAsBkB,EAAI7tD,UAAc,IAAIF,GAAY,IAAIkb,IAI5E,OAFA+sB,EAAQrnC,KAAMotD,GAAM9sD,IAAK6sD,GAAMzxD,YAExB2rC,CAER,CAEAgmB,YAAAA,CAAc9vC,EAAG0uC,GAEhB,MAAMlxD,EAAI1C,KAAK6zD,eAAgB3uC,GAC/B,OAAOllB,KAAK40D,WAAYlyD,EAAGkxD,EAE5B,CAEAqB,mBAAAA,CAAqBC,EAAUC,GAI9B,MAAM/wC,EAAS,IAAInC,GAEbmzC,EAAW,GACXhkB,EAAU,GACVikB,EAAY,GAEZC,EAAM,IAAIrzC,GACVszC,EAAM,IAAI3nC,GAIhB,IAAM,IAAI7sB,EAAI,EAAGA,GAAKm0D,EAAUn0D,IAAO,CAEtC,MAAMmkB,EAAInkB,EAAIm0D,EAEdE,EAAUr0D,GAAMf,KAAKg1D,aAAc9vC,EAAG,IAAIjD,GAE3C,CAKAmvB,EAAS,GAAM,IAAInvB,GACnBozC,EAAW,GAAM,IAAIpzC,GACrB,IAAI/f,EAAM4c,OAAO02C,UACjB,MAAMzmD,EAAKzN,KAAK8C,IAAKgxD,EAAU,GAAI5yD,GAC7BwM,EAAK1N,KAAK8C,IAAKgxD,EAAU,GAAI3yD,GAC7BugB,EAAK1hB,KAAK8C,IAAKgxD,EAAU,GAAI77C,GAE9BxK,GAAM7M,IAEVA,EAAM6M,EACNqV,EAAOxd,IAAK,EAAG,EAAG,IAIdoI,GAAM9M,IAEVA,EAAM8M,EACNoV,EAAOxd,IAAK,EAAG,EAAG,IAIdoc,GAAM9gB,GAEVkiB,EAAOxd,IAAK,EAAG,EAAG,GAInB0uD,EAAI9xC,aAAc4xC,EAAU,GAAKhxC,GAAS/gB,YAE1C+tC,EAAS,GAAI5tB,aAAc4xC,EAAU,GAAKE,GAC1CD,EAAW,GAAI7xC,aAAc4xC,EAAU,GAAKhkB,EAAS,IAKrD,IAAM,IAAIrwC,EAAI,EAAGA,GAAKm0D,EAAUn0D,IAAO,CAQtC,GANAqwC,EAASrwC,GAAMqwC,EAASrwC,EAAI,GAAI2G,QAEhC2tD,EAAWt0D,GAAMs0D,EAAWt0D,EAAI,GAAI2G,QAEpC4tD,EAAI9xC,aAAc4xC,EAAUr0D,EAAI,GAAKq0D,EAAUr0D,IAE1Cu0D,EAAIr0D,SAAW6d,OAAOC,QAAU,CAEpCu2C,EAAIjyD,YAEJ,MAAMsG,EAAQrI,KAAKsI,KAAM5H,GAAOozD,EAAUr0D,EAAI,GAAImI,IAAKksD,EAAUr0D,KAAS,EAAG,IAE7EqwC,EAASrwC,GAAI6Y,aAAc27C,EAAInkC,iBAAkBkkC,EAAK3rD,GAEvD,CAEA0rD,EAAWt0D,GAAIyiB,aAAc4xC,EAAUr0D,GAAKqwC,EAASrwC,GAEtD,CAIA,IAAgB,IAAXo0D,EAAkB,CAEtB,IAAIxrD,EAAQrI,KAAKsI,KAAM5H,GAAOovC,EAAS,GAAIloC,IAAKkoC,EAAS8jB,KAAgB,EAAG,IAC5EvrD,GAASurD,EAEJE,EAAU,GAAIlsD,IAAKosD,EAAI9xC,aAAc4tB,EAAS,GAAKA,EAAS8jB,KAAiB,IAEjFvrD,GAAUA,GAIX,IAAM,IAAI5I,EAAI,EAAGA,GAAKm0D,EAAUn0D,IAG/BqwC,EAASrwC,GAAI6Y,aAAc27C,EAAInkC,iBAAkBgkC,EAAUr0D,GAAK4I,EAAQ5I,IACxEs0D,EAAWt0D,GAAIyiB,aAAc4xC,EAAUr0D,GAAKqwC,EAASrwC,GAIvD,CAEA,MAAO,CACNq0D,SAAUA,EACVhkB,QAASA,EACTikB,UAAWA,EAGb,CAEA3tD,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAM+P,GAIL,OAFA1X,KAAKyzD,mBAAqB/7C,EAAO+7C,mBAE1BzzD,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAO,CACZsD,SAAU,CACT/C,QAAS,IACTlW,KAAM,QACNkZ,UAAW,iBAOb,OAHAvD,EAAKi+C,mBAAqBzzD,KAAKyzD,mBAC/Bj+C,EAAK3V,KAAOG,KAAKH,KAEV2V,CAER,CAEAggC,QAAAA,CAAU2O,GAIT,OAFAnkD,KAAKyzD,mBAAqBtP,EAAKsP,mBAExBzzD,IAER,EAID,MAAMy1D,WAAqBjC,GAE1B5wD,WAAAA,GAAqI,IAAxH8yD,EAAEvxD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGwxD,EAAExxD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGyxD,EAAOzxD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG0xD,EAAO1xD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG2xD,EAAW3xD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG4xD,EAAS5xD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAAQy0D,EAAU7xD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAAU8xD,EAAS9xD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEhIqT,QAEAxX,KAAKk2D,gBAAiB,EAEtBl2D,KAAKH,KAAO,eAEZG,KAAK01D,GAAKA,EACV11D,KAAK21D,GAAKA,EAEV31D,KAAK41D,QAAUA,EACf51D,KAAK61D,QAAUA,EAEf71D,KAAK81D,YAAcA,EACnB91D,KAAK+1D,UAAYA,EAEjB/1D,KAAKg2D,WAAaA,EAElBh2D,KAAKi2D,UAAYA,CAElB,CAEAvC,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAI3BovD,EAAkB,EAAV70D,KAAKC,GACnB,IAAI60D,EAAap2D,KAAK+1D,UAAY/1D,KAAK81D,YACvC,MAAMO,EAAa/0D,KAAK8C,IAAKgyD,GAAet3C,OAAOC,QAGnD,KAAQq3C,EAAa,GAAIA,GAAcD,EACvC,KAAQC,EAAaD,GAAQC,GAAcD,EAEtCC,EAAat3C,OAAOC,UAIvBq3C,EAFIC,EAES,EAIAF,IAMU,IAApBn2D,KAAKg2D,YAAyBK,IAE7BD,IAAeD,EAEnBC,GAAeD,EAIfC,GAA0BD,GAM5B,MAAM5sD,EAAQvJ,KAAK81D,YAAcpzD,EAAI0zD,EACrC,IAAI5zD,EAAIxC,KAAK01D,GAAK11D,KAAK41D,QAAUt0D,KAAK4E,IAAKqD,GACvC9G,EAAIzC,KAAK21D,GAAK31D,KAAK61D,QAAUv0D,KAAK6E,IAAKoD,GAE3C,GAAwB,IAAnBvJ,KAAKi2D,UAAkB,CAE3B,MAAM/vD,EAAM5E,KAAK4E,IAAKlG,KAAKi2D,WACrB9vD,EAAM7E,KAAK6E,IAAKnG,KAAKi2D,WAErBlnD,EAAKvM,EAAIxC,KAAK01D,GACd1mD,EAAKvM,EAAIzC,KAAK21D,GAGpBnzD,EAAIuM,EAAK7I,EAAM8I,EAAK7I,EAAMnG,KAAK01D,GAC/BjzD,EAAIsM,EAAK5I,EAAM6I,EAAK9I,EAAMlG,KAAK21D,EAEhC,CAEA,OAAOnvC,EAAM5f,IAAKpE,EAAGC,EAEtB,CAEAkF,IAAAA,CAAM+P,GAiBL,OAfAF,MAAM7P,KAAM+P,GAEZ1X,KAAK01D,GAAKh+C,EAAOg+C,GACjB11D,KAAK21D,GAAKj+C,EAAOi+C,GAEjB31D,KAAK41D,QAAUl+C,EAAOk+C,QACtB51D,KAAK61D,QAAUn+C,EAAOm+C,QAEtB71D,KAAK81D,YAAcp+C,EAAOo+C,YAC1B91D,KAAK+1D,UAAYr+C,EAAOq+C,UAExB/1D,KAAKg2D,WAAat+C,EAAOs+C,WAEzBh2D,KAAKi2D,UAAYv+C,EAAOu+C,UAEjBj2D,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAenB,OAbAT,EAAKkgD,GAAK11D,KAAK01D,GACflgD,EAAKmgD,GAAK31D,KAAK21D,GAEfngD,EAAKogD,QAAU51D,KAAK41D,QACpBpgD,EAAKqgD,QAAU71D,KAAK61D,QAEpBrgD,EAAKsgD,YAAc91D,KAAK81D,YACxBtgD,EAAKugD,UAAY/1D,KAAK+1D,UAEtBvgD,EAAKwgD,WAAah2D,KAAKg2D,WAEvBxgD,EAAKygD,UAAYj2D,KAAKi2D,UAEfzgD,CAER,CAEAggC,QAAAA,CAAU2O,GAiBT,OAfA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAK01D,GAAKvR,EAAKuR,GACf11D,KAAK21D,GAAKxR,EAAKwR,GAEf31D,KAAK41D,QAAUzR,EAAKyR,QACpB51D,KAAK61D,QAAU1R,EAAK0R,QAEpB71D,KAAK81D,YAAc3R,EAAK2R,YACxB91D,KAAK+1D,UAAY5R,EAAK4R,UAEtB/1D,KAAKg2D,WAAa7R,EAAK6R,WAEvBh2D,KAAKi2D,UAAY9R,EAAK8R,UAEfj2D,IAER,EAID,MAAMs2D,WAAiBb,GAEtB7yD,WAAAA,CAAa8yD,EAAIC,EAAIY,EAAST,EAAaC,EAAWC,GAErDx+C,MAAOk+C,EAAIC,EAAIY,EAASA,EAAST,EAAaC,EAAWC,GAEzDh2D,KAAKw2D,YAAa,EAElBx2D,KAAKH,KAAO,UAEb,EAwBD,SAAS42D,KAER,IAAIC,EAAK,EAAGj3C,EAAK,EAAGrZ,EAAK,EAAGsZ,EAAK,EAUjC,SAASokC,EAAM1lC,EAAII,EAAI6N,EAAIC,GAE1BoqC,EAAKt4C,EACLqB,EAAK4M,EACLjmB,GAAO,EAAIgY,EAAK,EAAII,EAAK,EAAI6N,EAAKC,EAClC5M,EAAK,EAAItB,EAAK,EAAII,EAAK6N,EAAKC,CAE7B,CAEA,MAAO,CAENqqC,eAAgB,SAAWv4C,EAAII,EAAIkT,EAAIklC,EAAIC,GAE1C/S,EAAMtlC,EAAIkT,EAAImlC,GAAYnlC,EAAKtT,GAAMy4C,GAAYD,EAAKp4C,GAEvD,EAEAs4C,yBAA0B,SAAW14C,EAAII,EAAIkT,EAAIklC,EAAIG,EAAKC,EAAKC,GAG9D,IAAI3qC,GAAO9N,EAAKJ,GAAO24C,GAAQrlC,EAAKtT,IAAS24C,EAAMC,IAAUtlC,EAAKlT,GAAOw4C,EACrEnC,GAAOnjC,EAAKlT,GAAOw4C,GAAQJ,EAAKp4C,IAASw4C,EAAMC,IAAUL,EAAKllC,GAAOulC,EAGzE3qC,GAAM0qC,EACNnC,GAAMmC,EAENlT,EAAMtlC,EAAIkT,EAAIpF,EAAIuoC,EAEnB,EAEAqC,KAAM,SAAWx0D,GAEhB,MAAMmyD,EAAKnyD,EAAIA,EAEf,OAAOg0D,EAAKj3C,EAAK/c,EAAI0D,EAAKyuD,EAAKn1C,GADpBm1C,EAAKnyD,EAGjB,EAIF,CAIA,MAAM+L,GAAoB,IAAIwT,GACxBk1C,GAAmB,IAAIV,GACvBW,GAAmB,IAAIX,GACvBY,GAAmB,IAAIZ,GAE7B,MAAMa,WAAyB9D,GAE9B5wD,WAAAA,GAAqF,IAAxEgjB,EAAMzhB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIgxD,EAAMhxD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAAUozD,EAASpzD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,cAAe0yD,EAAO1yD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAE9EqT,QAEAxX,KAAKw3D,oBAAqB,EAE1Bx3D,KAAKH,KAAO,mBAEZG,KAAK4lB,OAASA,EACd5lB,KAAKm1D,OAASA,EACdn1D,KAAKu3D,UAAYA,EACjBv3D,KAAK62D,QAAUA,CAEhB,CAEAnD,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAI3B2D,EAAS5lB,KAAK4lB,OACd5kB,EAAI4kB,EAAO3kB,OAEX6xB,GAAM9xB,GAAMhB,KAAKm1D,OAAS,EAAI,IAAQzyD,EAC5C,IAcI6mB,EAAIsV,EAdJ44B,EAAWn2D,KAAKoD,MAAOouB,GACvBowB,EAASpwB,EAAI2kC,EAEZz3D,KAAKm1D,OAETsC,GAAYA,EAAW,EAAI,GAAMn2D,KAAKoD,MAAOpD,KAAK8C,IAAKqzD,GAAaz2D,GAAM,GAAMA,EAE1D,IAAXkiD,GAAgBuU,IAAaz2D,EAAI,IAE5Cy2D,EAAWz2D,EAAI,EACfkiD,EAAS,GAMLljD,KAAKm1D,QAAUsC,EAAW,EAE9BluC,EAAK3D,GAAU6xC,EAAW,GAAMz2D,IAKhCyN,GAAItG,WAAYyd,EAAQ,GAAKA,EAAQ,IAAM/d,IAAK+d,EAAQ,IACxD2D,EAAK9a,IAIN,MAAM+a,EAAK5D,EAAQ6xC,EAAWz2D,GACxByoB,EAAK7D,GAAU6xC,EAAW,GAAMz2D,GActC,GAZKhB,KAAKm1D,QAAUsC,EAAW,EAAIz2D,EAElC69B,EAAKjZ,GAAU6xC,EAAW,GAAMz2D,IAKhCyN,GAAItG,WAAYyd,EAAQ5kB,EAAI,GAAK4kB,EAAQ5kB,EAAI,IAAM6G,IAAK+d,EAAQ5kB,EAAI,IACpE69B,EAAKpwB,IAIkB,gBAAnBzO,KAAKu3D,WAAkD,YAAnBv3D,KAAKu3D,UAA0B,CAGvE,MAAMhyD,EAAyB,YAAnBvF,KAAKu3D,UAA0B,GAAM,IACjD,IAAIR,EAAMz1D,KAAKiE,IAAKgkB,EAAGzf,kBAAmB0f,GAAMjkB,GAC5CyxD,EAAM11D,KAAKiE,IAAKikB,EAAG1f,kBAAmB2f,GAAMlkB,GAC5C0xD,EAAM31D,KAAKiE,IAAKkkB,EAAG3f,kBAAmB+0B,GAAMt5B,GAG3CyxD,EAAM,OAAOA,EAAM,GACnBD,EAAM,OAAOA,EAAMC,GACnBC,EAAM,OAAOA,EAAMD,GAExBG,GAAGL,yBAA0BvtC,EAAG/mB,EAAGgnB,EAAGhnB,EAAGinB,EAAGjnB,EAAGq8B,EAAGr8B,EAAGu0D,EAAKC,EAAKC,GAC/DG,GAAGN,yBAA0BvtC,EAAG9mB,EAAG+mB,EAAG/mB,EAAGgnB,EAAGhnB,EAAGo8B,EAAGp8B,EAAGs0D,EAAKC,EAAKC,GAC/DI,GAAGP,yBAA0BvtC,EAAGhQ,EAAGiQ,EAAGjQ,EAAGkQ,EAAGlQ,EAAGslB,EAAGtlB,EAAGw9C,EAAKC,EAAKC,EAEhE,KAA+B,eAAnBj3D,KAAKu3D,YAEhBJ,GAAGR,eAAgBptC,EAAG/mB,EAAGgnB,EAAGhnB,EAAGinB,EAAGjnB,EAAGq8B,EAAGr8B,EAAGxC,KAAK62D,SAChDO,GAAGT,eAAgBptC,EAAG9mB,EAAG+mB,EAAG/mB,EAAGgnB,EAAGhnB,EAAGo8B,EAAGp8B,EAAGzC,KAAK62D,SAChDQ,GAAGV,eAAgBptC,EAAGhQ,EAAGiQ,EAAGjQ,EAAGkQ,EAAGlQ,EAAGslB,EAAGtlB,EAAGvZ,KAAK62D,UAUjD,OANArwC,EAAM5f,IACLuwD,GAAGD,KAAMhU,GACTkU,GAAGF,KAAMhU,GACTmU,GAAGH,KAAMhU,IAGH18B,CAER,CAEA7e,IAAAA,CAAM+P,GAELF,MAAM7P,KAAM+P,GAEZ1X,KAAK4lB,OAAS,GAEd,IAAM,IAAI7kB,EAAI,EAAGC,EAAI0W,EAAOkO,OAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAExD,MAAMylB,EAAQ9O,EAAOkO,OAAQ7kB,GAE7Bf,KAAK4lB,OAAOxlB,KAAMomB,EAAM9e,QAEzB,CAMA,OAJA1H,KAAKm1D,OAASz9C,EAAOy9C,OACrBn1D,KAAKu3D,UAAY7/C,EAAO6/C,UACxBv3D,KAAK62D,QAAUn/C,EAAOm/C,QAEf72D,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAEnBT,EAAKoQ,OAAS,GAEd,IAAM,IAAI7kB,EAAI,EAAGC,EAAIhB,KAAK4lB,OAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAEtD,MAAMylB,EAAQxmB,KAAK4lB,OAAQ7kB,GAC3ByU,EAAKoQ,OAAOxlB,KAAMomB,EAAM9b,UAEzB,CAMA,OAJA8K,EAAK2/C,OAASn1D,KAAKm1D,OACnB3/C,EAAK+hD,UAAYv3D,KAAKu3D,UACtB/hD,EAAKqhD,QAAU72D,KAAK62D,QAEbrhD,CAER,CAEAggC,QAAAA,CAAU2O,GAET3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAK4lB,OAAS,GAEd,IAAM,IAAI7kB,EAAI,EAAGC,EAAImjD,EAAKv+B,OAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAEtD,MAAMylB,EAAQ29B,EAAKv+B,OAAQ7kB,GAC3Bf,KAAK4lB,OAAOxlB,MAAM,IAAI6hB,IAAUzX,UAAWgc,GAE5C,CAMA,OAJAxmB,KAAKm1D,OAAShR,EAAKgR,OACnBn1D,KAAKu3D,UAAYpT,EAAKoT,UACtBv3D,KAAK62D,QAAU1S,EAAK0S,QAEb72D,IAER,EASD,SAAS03D,GAAYh1D,EAAG6mB,EAAIC,EAAIC,EAAIoV,GAEnC,MAAMzV,EAAmB,IAAZK,EAAKF,GACZlf,EAAmB,IAAZw0B,EAAKrV,GACZqrC,EAAKnyD,EAAIA,EAEf,OAAS,EAAI8mB,EAAK,EAAIC,EAAKL,EAAK/e,IADrB3H,EAAImyD,KACiC,EAAIrrC,EAAK,EAAIC,EAAK,EAAIL,EAAK/e,GAAOwqD,EAAKzrC,EAAK1mB,EAAI8mB,CAEjG,CAuBA,SAASmuC,GAAiBj1D,EAAG6mB,EAAIC,EAAIC,GAEpC,OArBD,SAA4B/mB,EAAGowB,GAE9B,MAAM8kC,EAAI,EAAIl1D,EACd,OAAOk1D,EAAIA,EAAI9kC,CAEhB,CAgBQ+kC,CAAmBn1D,EAAG6mB,GAd9B,SAA4B7mB,EAAGowB,GAE9B,OAAO,GAAM,EAAIpwB,GAAMA,EAAIowB,CAE5B,CAUqCglC,CAAmBp1D,EAAG8mB,GAR3D,SAA4B9mB,EAAGowB,GAE9B,OAAOpwB,EAAIA,EAAIowB,CAEhB,CAKEilC,CAAmBr1D,EAAG+mB,EAExB,CA8BA,SAASuuC,GAAat1D,EAAG6mB,EAAIC,EAAIC,EAAIoV,GAEpC,OA5BD,SAAwBn8B,EAAGowB,GAE1B,MAAM8kC,EAAI,EAAIl1D,EACd,OAAOk1D,EAAIA,EAAIA,EAAI9kC,CAEpB,CAuBQmlC,CAAev1D,EAAG6mB,GArB1B,SAAwB7mB,EAAGowB,GAE1B,MAAM8kC,EAAI,EAAIl1D,EACd,OAAO,EAAIk1D,EAAIA,EAAIl1D,EAAIowB,CAExB,CAgBiColC,CAAex1D,EAAG8mB,GAdnD,SAAwB9mB,EAAGowB,GAE1B,OAAO,GAAM,EAAIpwB,GAAMA,EAAIA,EAAIowB,CAEhC,CAU0DqlC,CAAez1D,EAAG+mB,GAR5E,SAAwB/mB,EAAGowB,GAE1B,OAAOpwB,EAAIA,EAAIA,EAAIowB,CAEpB,CAKEslC,CAAe11D,EAAGm8B,EAEpB,CAEA,MAAMw5B,WAAyB7E,GAE9B5wD,WAAAA,GAA8F,IAAjFwmB,EAAEjlB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAWsD,EAAElG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAWuD,EAAEnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAW+3B,EAAE36B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAEjFyQ,QAEAxX,KAAKs4D,oBAAqB,EAE1Bt4D,KAAKH,KAAO,mBAEZG,KAAKopB,GAAKA,EACVppB,KAAKqK,GAAKA,EACVrK,KAAKsK,GAAKA,EACVtK,KAAK8+B,GAAKA,CAEX,CAEA40B,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAI3BqiB,EAAKppB,KAAKopB,GAAI/e,EAAKrK,KAAKqK,GAAIC,EAAKtK,KAAKsK,GAAIw0B,EAAK9+B,KAAK8+B,GAO1D,OALAtY,EAAM5f,IACLoxD,GAAat1D,EAAG0mB,EAAG5mB,EAAG6H,EAAG7H,EAAG8H,EAAG9H,EAAGs8B,EAAGt8B,GACrCw1D,GAAat1D,EAAG0mB,EAAG3mB,EAAG4H,EAAG5H,EAAG6H,EAAG7H,EAAGq8B,EAAGr8B,IAG/B+jB,CAER,CAEA7e,IAAAA,CAAM+P,GASL,OAPAF,MAAM7P,KAAM+P,GAEZ1X,KAAKopB,GAAGzhB,KAAM+P,EAAO0R,IACrBppB,KAAKqK,GAAG1C,KAAM+P,EAAOrN,IACrBrK,KAAKsK,GAAG3C,KAAM+P,EAAOpN,IACrBtK,KAAK8+B,GAAGn3B,KAAM+P,EAAOonB,IAEd9+B,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAOnB,OALAT,EAAK4T,GAAKppB,KAAKopB,GAAG1e,UAClB8K,EAAKnL,GAAKrK,KAAKqK,GAAGK,UAClB8K,EAAKlL,GAAKtK,KAAKsK,GAAGI,UAClB8K,EAAKspB,GAAK9+B,KAAK8+B,GAAGp0B,UAEX8K,CAER,CAEAggC,QAAAA,CAAU2O,GAST,OAPA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKopB,GAAG5e,UAAW25C,EAAK/6B,IACxBppB,KAAKqK,GAAGG,UAAW25C,EAAK95C,IACxBrK,KAAKsK,GAAGE,UAAW25C,EAAK75C,IACxBtK,KAAK8+B,GAAGt0B,UAAW25C,EAAKrlB,IAEjB9+B,IAER,EAID,MAAMu4D,WAA0B/E,GAE/B5wD,WAAAA,GAA8F,IAAjFwmB,EAAEjlB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW5X,EAAElG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW3X,EAAEnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW6c,EAAE36B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAEjFzK,QAEAxX,KAAKw4D,qBAAsB,EAE3Bx4D,KAAKH,KAAO,oBAEZG,KAAKopB,GAAKA,EACVppB,KAAKqK,GAAKA,EACVrK,KAAKsK,GAAKA,EACVtK,KAAK8+B,GAAKA,CAEX,CAEA40B,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAI3BmH,EAAKppB,KAAKopB,GAAI/e,EAAKrK,KAAKqK,GAAIC,EAAKtK,KAAKsK,GAAIw0B,EAAK9+B,KAAK8+B,GAQ1D,OANAtY,EAAM5f,IACLoxD,GAAat1D,EAAG0mB,EAAG5mB,EAAG6H,EAAG7H,EAAG8H,EAAG9H,EAAGs8B,EAAGt8B,GACrCw1D,GAAat1D,EAAG0mB,EAAG3mB,EAAG4H,EAAG5H,EAAG6H,EAAG7H,EAAGq8B,EAAGr8B,GACrCu1D,GAAat1D,EAAG0mB,EAAG7P,EAAGlP,EAAGkP,EAAGjP,EAAGiP,EAAGulB,EAAGvlB,IAG/BiN,CAER,CAEA7e,IAAAA,CAAM+P,GASL,OAPAF,MAAM7P,KAAM+P,GAEZ1X,KAAKopB,GAAGzhB,KAAM+P,EAAO0R,IACrBppB,KAAKqK,GAAG1C,KAAM+P,EAAOrN,IACrBrK,KAAKsK,GAAG3C,KAAM+P,EAAOpN,IACrBtK,KAAK8+B,GAAGn3B,KAAM+P,EAAOonB,IAEd9+B,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAOnB,OALAT,EAAK4T,GAAKppB,KAAKopB,GAAG1e,UAClB8K,EAAKnL,GAAKrK,KAAKqK,GAAGK,UAClB8K,EAAKlL,GAAKtK,KAAKsK,GAAGI,UAClB8K,EAAKspB,GAAK9+B,KAAK8+B,GAAGp0B,UAEX8K,CAER,CAEAggC,QAAAA,CAAU2O,GAST,OAPA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKopB,GAAG5e,UAAW25C,EAAK/6B,IACxBppB,KAAKqK,GAAGG,UAAW25C,EAAK95C,IACxBrK,KAAKsK,GAAGE,UAAW25C,EAAK75C,IACxBtK,KAAK8+B,GAAGt0B,UAAW25C,EAAKrlB,IAEjB9+B,IAER,EAID,MAAMy4D,WAAkBjF,GAEvB5wD,WAAAA,GAAsD,IAAzCyH,EAAElG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAWuD,EAAEnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAEzCyQ,QAEAxX,KAAK04D,aAAc,EAEnB14D,KAAKH,KAAO,YAEZG,KAAKqK,GAAKA,EACVrK,KAAKsK,GAAKA,CAEX,CAEAopD,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAejC,OAXW,IAANrE,EAEJ8jB,EAAM7e,KAAM3H,KAAKsK,KAIjBkc,EAAM7e,KAAM3H,KAAKsK,IAAKrC,IAAKjI,KAAKqK,IAChCmc,EAAMne,eAAgB3F,GAAImF,IAAK7H,KAAKqK,KAI9Bmc,CAER,CAGAmtC,UAAAA,CAAYzuC,EAAG0uC,GAEd,OAAO5zD,KAAK0zD,SAAUxuC,EAAG0uC,EAE1B,CAEAgB,UAAAA,CAAYlyD,GAEX,OAF4ByB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,IAEboB,WAAYnI,KAAKsK,GAAItK,KAAKqK,IAAKhH,WAEtD,CAEA2xD,YAAAA,CAAc9vC,EAAG0uC,GAEhB,OAAO5zD,KAAK40D,WAAY1vC,EAAG0uC,EAE5B,CAEAjsD,IAAAA,CAAM+P,GAOL,OALAF,MAAM7P,KAAM+P,GAEZ1X,KAAKqK,GAAG1C,KAAM+P,EAAOrN,IACrBrK,KAAKsK,GAAG3C,KAAM+P,EAAOpN,IAEdtK,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAKnB,OAHAT,EAAKnL,GAAKrK,KAAKqK,GAAGK,UAClB8K,EAAKlL,GAAKtK,KAAKsK,GAAGI,UAEX8K,CAER,CAEAggC,QAAAA,CAAU2O,GAOT,OALA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKqK,GAAGG,UAAW25C,EAAK95C,IACxBrK,KAAKsK,GAAGE,UAAW25C,EAAK75C,IAEjBtK,IAER,EAID,MAAM24D,WAAmBnF,GAExB5wD,WAAAA,GAAsD,IAAzCyH,EAAElG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW3X,EAAEnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAEzCzK,QAEAxX,KAAK44D,cAAe,EAEpB54D,KAAKH,KAAO,aAEZG,KAAKqK,GAAKA,EACVrK,KAAKsK,GAAKA,CAEX,CAEAopD,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAejC,OAXW,IAANvf,EAEJ8jB,EAAM7e,KAAM3H,KAAKsK,KAIjBkc,EAAM7e,KAAM3H,KAAKsK,IAAKrC,IAAKjI,KAAKqK,IAChCmc,EAAMne,eAAgB3F,GAAImF,IAAK7H,KAAKqK,KAI9Bmc,CAER,CAGAmtC,UAAAA,CAAYzuC,EAAG0uC,GAEd,OAAO5zD,KAAK0zD,SAAUxuC,EAAG0uC,EAE1B,CAEAgB,UAAAA,CAAYlyD,GAEX,OAF4ByB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,IAEb9Z,WAAYnI,KAAKsK,GAAItK,KAAKqK,IAAKhH,WAEtD,CAEA2xD,YAAAA,CAAc9vC,EAAG0uC,GAEhB,OAAO5zD,KAAK40D,WAAY1vC,EAAG0uC,EAE5B,CAEAjsD,IAAAA,CAAM+P,GAOL,OALAF,MAAM7P,KAAM+P,GAEZ1X,KAAKqK,GAAG1C,KAAM+P,EAAOrN,IACrBrK,KAAKsK,GAAG3C,KAAM+P,EAAOpN,IAEdtK,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAKnB,OAHAT,EAAKnL,GAAKrK,KAAKqK,GAAGK,UAClB8K,EAAKlL,GAAKtK,KAAKsK,GAAGI,UAEX8K,CAER,CAEAggC,QAAAA,CAAU2O,GAOT,OALA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKqK,GAAGG,UAAW25C,EAAK95C,IACxBrK,KAAKsK,GAAGE,UAAW25C,EAAK75C,IAEjBtK,IAER,EAID,MAAM64D,WAA6BrF,GAElC5wD,WAAAA,GAA0E,IAA7DwmB,EAAEjlB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAWsD,EAAElG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAWuD,EAAEnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAE7DyQ,QAEAxX,KAAK84D,wBAAyB,EAE9B94D,KAAKH,KAAO,uBAEZG,KAAKopB,GAAKA,EACVppB,KAAKqK,GAAKA,EACVrK,KAAKsK,GAAKA,CAEX,CAEAopD,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAI3BqiB,EAAKppB,KAAKopB,GAAI/e,EAAKrK,KAAKqK,GAAIC,EAAKtK,KAAKsK,GAO5C,OALAkc,EAAM5f,IACL+wD,GAAiBj1D,EAAG0mB,EAAG5mB,EAAG6H,EAAG7H,EAAG8H,EAAG9H,GACnCm1D,GAAiBj1D,EAAG0mB,EAAG3mB,EAAG4H,EAAG5H,EAAG6H,EAAG7H,IAG7B+jB,CAER,CAEA7e,IAAAA,CAAM+P,GAQL,OANAF,MAAM7P,KAAM+P,GAEZ1X,KAAKopB,GAAGzhB,KAAM+P,EAAO0R,IACrBppB,KAAKqK,GAAG1C,KAAM+P,EAAOrN,IACrBrK,KAAKsK,GAAG3C,KAAM+P,EAAOpN,IAEdtK,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAMnB,OAJAT,EAAK4T,GAAKppB,KAAKopB,GAAG1e,UAClB8K,EAAKnL,GAAKrK,KAAKqK,GAAGK,UAClB8K,EAAKlL,GAAKtK,KAAKsK,GAAGI,UAEX8K,CAER,CAEAggC,QAAAA,CAAU2O,GAQT,OANA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKopB,GAAG5e,UAAW25C,EAAK/6B,IACxBppB,KAAKqK,GAAGG,UAAW25C,EAAK95C,IACxBrK,KAAKsK,GAAGE,UAAW25C,EAAK75C,IAEjBtK,IAER,EAID,MAAM+4D,WAA8BvF,GAEnC5wD,WAAAA,GAA0E,IAA7DwmB,EAAEjlB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW5X,EAAElG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW3X,EAAEnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAE7DzK,QAEAxX,KAAKg5D,yBAA0B,EAE/Bh5D,KAAKH,KAAO,wBAEZG,KAAKopB,GAAKA,EACVppB,KAAKqK,GAAKA,EACVrK,KAAKsK,GAAKA,CAEX,CAEAopD,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAI3BmH,EAAKppB,KAAKopB,GAAI/e,EAAKrK,KAAKqK,GAAIC,EAAKtK,KAAKsK,GAQ5C,OANAkc,EAAM5f,IACL+wD,GAAiBj1D,EAAG0mB,EAAG5mB,EAAG6H,EAAG7H,EAAG8H,EAAG9H,GACnCm1D,GAAiBj1D,EAAG0mB,EAAG3mB,EAAG4H,EAAG5H,EAAG6H,EAAG7H,GACnCk1D,GAAiBj1D,EAAG0mB,EAAG7P,EAAGlP,EAAGkP,EAAGjP,EAAGiP,IAG7BiN,CAER,CAEA7e,IAAAA,CAAM+P,GAQL,OANAF,MAAM7P,KAAM+P,GAEZ1X,KAAKopB,GAAGzhB,KAAM+P,EAAO0R,IACrBppB,KAAKqK,GAAG1C,KAAM+P,EAAOrN,IACrBrK,KAAKsK,GAAG3C,KAAM+P,EAAOpN,IAEdtK,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAMnB,OAJAT,EAAK4T,GAAKppB,KAAKopB,GAAG1e,UAClB8K,EAAKnL,GAAKrK,KAAKqK,GAAGK,UAClB8K,EAAKlL,GAAKtK,KAAKsK,GAAGI,UAEX8K,CAER,CAEAggC,QAAAA,CAAU2O,GAQT,OANA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKopB,GAAG5e,UAAW25C,EAAK/6B,IACxBppB,KAAKqK,GAAGG,UAAW25C,EAAK95C,IACxBrK,KAAKsK,GAAGE,UAAW25C,EAAK75C,IAEjBtK,IAER,EAID,MAAMi5D,WAAoBzF,GAEzB5wD,WAAAA,GAA2B,IAAdgjB,EAAMzhB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAErBqT,QAEAxX,KAAKk5D,eAAgB,EAErBl5D,KAAKH,KAAO,cAEZG,KAAK4lB,OAASA,CAEf,CAEA8tC,QAAAA,CAAUhxD,GAET,MAAM8jB,EAFoBriB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAI3B6e,EAAS5lB,KAAK4lB,OACdkN,GAAMlN,EAAO3kB,OAAS,GAAMyB,EAE5B+0D,EAAWn2D,KAAKoD,MAAOouB,GACvBowB,EAASpwB,EAAI2kC,EAEbluC,EAAK3D,EAAqB,IAAb6xC,EAAiBA,EAAWA,EAAW,GACpDjuC,EAAK5D,EAAQ6xC,GACbhuC,EAAK7D,EAAQ6xC,EAAW7xC,EAAO3kB,OAAS,EAAI2kB,EAAO3kB,OAAS,EAAIw2D,EAAW,GAC3E54B,EAAKjZ,EAAQ6xC,EAAW7xC,EAAO3kB,OAAS,EAAI2kB,EAAO3kB,OAAS,EAAIw2D,EAAW,GAOjF,OALAjxC,EAAM5f,IACL8wD,GAAYxU,EAAQ35B,EAAG/mB,EAAGgnB,EAAGhnB,EAAGinB,EAAGjnB,EAAGq8B,EAAGr8B,GACzCk1D,GAAYxU,EAAQ35B,EAAG9mB,EAAG+mB,EAAG/mB,EAAGgnB,EAAGhnB,EAAGo8B,EAAGp8B,IAGnC+jB,CAER,CAEA7e,IAAAA,CAAM+P,GAELF,MAAM7P,KAAM+P,GAEZ1X,KAAK4lB,OAAS,GAEd,IAAM,IAAI7kB,EAAI,EAAGC,EAAI0W,EAAOkO,OAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAExD,MAAMylB,EAAQ9O,EAAOkO,OAAQ7kB,GAE7Bf,KAAK4lB,OAAOxlB,KAAMomB,EAAM9e,QAEzB,CAEA,OAAO1H,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAEnBT,EAAKoQ,OAAS,GAEd,IAAM,IAAI7kB,EAAI,EAAGC,EAAIhB,KAAK4lB,OAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAEtD,MAAMylB,EAAQxmB,KAAK4lB,OAAQ7kB,GAC3ByU,EAAKoQ,OAAOxlB,KAAMomB,EAAM9b,UAEzB,CAEA,OAAO8K,CAER,CAEAggC,QAAAA,CAAU2O,GAET3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAK4lB,OAAS,GAEd,IAAM,IAAI7kB,EAAI,EAAGC,EAAImjD,EAAKv+B,OAAO3kB,OAAQF,EAAIC,EAAGD,IAAO,CAEtD,MAAMylB,EAAQ29B,EAAKv+B,OAAQ7kB,GAC3Bf,KAAK4lB,OAAOxlB,MAAM,IAAI2G,IAAUyD,UAAWgc,GAE5C,CAEA,OAAOxmB,IAER,EAID,IAAIm5D,GAAsB3lD,OAAO4lD,OAAO,CACvCC,UAAW,KACX/C,SAAUA,GACVgB,iBAAkBA,GAClBe,iBAAkBA,GAClBE,kBAAmBA,GACnB9C,aAAcA,GACdgD,UAAWA,GACXE,WAAYA,GACZE,qBAAsBA,GACtBE,sBAAuBA,GACvBE,YAAaA,KAQd,MAAMK,WAAkB9F,GAEvB5wD,WAAAA,GAEC4U,QAEAxX,KAAKH,KAAO,YAEZG,KAAKu5D,OAAS,GACdv5D,KAAKw5D,WAAY,CAElB,CAEA3xD,GAAAA,CAAK4xD,GAEJz5D,KAAKu5D,OAAOn5D,KAAMq5D,EAEnB,CAEAC,SAAAA,GAGC,MAAMC,EAAa35D,KAAKu5D,OAAQ,GAAI7F,SAAU,GACxCkG,EAAW55D,KAAKu5D,OAAQv5D,KAAKu5D,OAAOt4D,OAAS,GAAIyyD,SAAU,GAEjE,IAAOiG,EAAWpvD,OAAQqvD,GAAa,CAEtC,MAAMC,GAAsC,IAAzBF,EAAW1yD,UAAuB,YAAc,aACnEjH,KAAKu5D,OAAOn5D,KAAM,IAAI+4D,GAAQU,GAAYD,EAAUD,GAErD,CAEA,OAAO35D,IAER,CAWA0zD,QAAAA,CAAUhxD,EAAGkxD,GAEZ,MAAM9lD,EAAIpL,EAAI1C,KAAKi0D,YACb6F,EAAe95D,KAAK+5D,kBAC1B,IAAIh5D,EAAI,EAIR,KAAQA,EAAI+4D,EAAa74D,QAAS,CAEjC,GAAK64D,EAAc/4D,IAAO+M,EAAI,CAE7B,MAAMksD,EAAOF,EAAc/4D,GAAM+M,EAC3B2rD,EAAQz5D,KAAKu5D,OAAQx4D,GAErBk5D,EAAgBR,EAAMxF,YACtB/uC,EAAsB,IAAlB+0C,EAAsB,EAAI,EAAID,EAAOC,EAE/C,OAAOR,EAAM9F,WAAYzuC,EAAG0uC,EAE7B,CAEA7yD,GAED,CAEA,OAAO,IAIR,CAMAkzD,SAAAA,GAEC,MAAMiG,EAAOl6D,KAAK+5D,kBAClB,OAAOG,EAAMA,EAAKj5D,OAAS,EAE5B,CAGAszD,gBAAAA,GAECv0D,KAAKgW,aAAc,EACnBhW,KAAKm6D,aAAe,KACpBn6D,KAAK+5D,iBAEN,CAKAA,eAAAA,GAIC,GAAK/5D,KAAKm6D,cAAgBn6D,KAAKm6D,aAAal5D,SAAWjB,KAAKu5D,OAAOt4D,OAElE,OAAOjB,KAAKm6D,aAOb,MAAMjG,EAAU,GAChB,IAAIkG,EAAO,EAEX,IAAM,IAAIr5D,EAAI,EAAGC,EAAIhB,KAAKu5D,OAAOt4D,OAAQF,EAAIC,EAAGD,IAE/Cq5D,GAAQp6D,KAAKu5D,OAAQx4D,GAAIkzD,YACzBC,EAAQ9zD,KAAMg6D,GAMf,OAFAp6D,KAAKm6D,aAAejG,EAEbA,CAER,CAEAF,eAAAA,GAAkC,IAAjBD,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAE5B,MAAMyhB,EAAS,GAEf,IAAM,IAAI7kB,EAAI,EAAGA,GAAKgzD,EAAWhzD,IAEhC6kB,EAAOxlB,KAAMJ,KAAK0zD,SAAU3yD,EAAIgzD,IAUjC,OANK/zD,KAAKw5D,WAET5zC,EAAOxlB,KAAMwlB,EAAQ,IAIfA,CAER,CAEAkuC,SAAAA,GAA4B,IAAjBC,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEtB,MAAMyhB,EAAS,GACf,IAAIyuC,EAEJ,IAAM,IAAItzD,EAAI,EAAGw4D,EAASv5D,KAAKu5D,OAAQx4D,EAAIw4D,EAAOt4D,OAAQF,IAAO,CAEhE,MAAM04D,EAAQF,EAAQx4D,GAChBs5D,EAAaZ,EAAMvD,eAA6B,EAAZnC,EACrC0F,EAAMf,aAAee,EAAMb,aAAiB,EAC7Ca,EAAMP,cAAgBnF,EAAY0F,EAAM7zC,OAAO3kB,OAC9C8yD,EAECuG,EAAMb,EAAM3F,UAAWuG,GAE7B,IAAM,IAAI/wC,EAAI,EAAGA,EAAIgxC,EAAIr5D,OAAQqoB,IAAO,CAEvC,MAAM9C,EAAQ8zC,EAAKhxC,GAEd+qC,GAAQA,EAAK9pD,OAAQic,KAE1BZ,EAAOxlB,KAAMomB,GACb6tC,EAAO7tC,EAER,CAED,CAQA,OANKxmB,KAAKw5D,WAAa5zC,EAAO3kB,OAAS,IAAO2kB,EAAQA,EAAO3kB,OAAS,GAAIsJ,OAAQqb,EAAQ,KAEzFA,EAAOxlB,KAAMwlB,EAAQ,IAIfA,CAER,CAEAje,IAAAA,CAAM+P,GAELF,MAAM7P,KAAM+P,GAEZ1X,KAAKu5D,OAAS,GAEd,IAAM,IAAIx4D,EAAI,EAAGC,EAAI0W,EAAO6hD,OAAOt4D,OAAQF,EAAIC,EAAGD,IAAO,CAExD,MAAM04D,EAAQ/hD,EAAO6hD,OAAQx4D,GAE7Bf,KAAKu5D,OAAOn5D,KAAMq5D,EAAM/xD,QAEzB,CAIA,OAFA1H,KAAKw5D,UAAY9hD,EAAO8hD,UAEjBx5D,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAEnBT,EAAKgkD,UAAYx5D,KAAKw5D,UACtBhkD,EAAK+jD,OAAS,GAEd,IAAM,IAAIx4D,EAAI,EAAGC,EAAIhB,KAAKu5D,OAAOt4D,OAAQF,EAAIC,EAAGD,IAAO,CAEtD,MAAM04D,EAAQz5D,KAAKu5D,OAAQx4D,GAC3ByU,EAAK+jD,OAAOn5D,KAAMq5D,EAAMxjD,SAEzB,CAEA,OAAOT,CAER,CAEAggC,QAAAA,CAAU2O,GAET3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKw5D,UAAYrV,EAAKqV,UACtBx5D,KAAKu5D,OAAS,GAEd,IAAM,IAAIx4D,EAAI,EAAGC,EAAImjD,EAAKoV,OAAOt4D,OAAQF,EAAIC,EAAGD,IAAO,CAEtD,MAAM04D,EAAQtV,EAAKoV,OAAQx4D,GAC3Bf,KAAKu5D,OAAOn5D,MAAM,IAAI+4D,GAAQM,EAAM55D,OAAS21C,SAAUikB,GAExD,CAEA,OAAOz5D,IAER,EAID,MAAMu6D,WAAajB,GAElB12D,WAAAA,CAAagjB,GAEZpO,QAEAxX,KAAKH,KAAO,OAEZG,KAAKw6D,aAAe,IAAIzzD,GAEnB6e,GAEJ5lB,KAAK2lB,cAAeC,EAItB,CAEAD,aAAAA,CAAeC,GAEd5lB,KAAKy6D,OAAQ70C,EAAQ,GAAIpjB,EAAGojB,EAAQ,GAAInjB,GAExC,IAAM,IAAI1B,EAAI,EAAGC,EAAI4kB,EAAO3kB,OAAQF,EAAIC,EAAGD,IAE1Cf,KAAK06D,OAAQ90C,EAAQ7kB,GAAIyB,EAAGojB,EAAQ7kB,GAAI0B,GAIzC,OAAOzC,IAER,CAEAy6D,MAAAA,CAAQj4D,EAAGC,GAIV,OAFAzC,KAAKw6D,aAAa5zD,IAAKpE,EAAGC,GAEnBzC,IAER,CAEA06D,MAAAA,CAAQl4D,EAAGC,GAEV,MAAMg3D,EAAQ,IAAIhB,GAAWz4D,KAAKw6D,aAAa9yD,QAAS,IAAIX,GAASvE,EAAGC,IAKxE,OAJAzC,KAAKu5D,OAAOn5D,KAAMq5D,GAElBz5D,KAAKw6D,aAAa5zD,IAAKpE,EAAGC,GAEnBzC,IAER,CAEA26D,gBAAAA,CAAkBC,EAAMC,EAAMnF,EAAIC,GAEjC,MAAM8D,EAAQ,IAAIZ,GACjB74D,KAAKw6D,aAAa9yD,QAClB,IAAIX,GAAS6zD,EAAMC,GACnB,IAAI9zD,GAAS2uD,EAAIC,IAOlB,OAJA31D,KAAKu5D,OAAOn5D,KAAMq5D,GAElBz5D,KAAKw6D,aAAa5zD,IAAK8uD,EAAIC,GAEpB31D,IAER,CAEA86D,aAAAA,CAAeC,EAAOC,EAAOC,EAAOC,EAAOxF,EAAIC,GAE9C,MAAM8D,EAAQ,IAAIpB,GACjBr4D,KAAKw6D,aAAa9yD,QAClB,IAAIX,GAASg0D,EAAOC,GACpB,IAAIj0D,GAASk0D,EAAOC,GACpB,IAAIn0D,GAAS2uD,EAAIC,IAOlB,OAJA31D,KAAKu5D,OAAOn5D,KAAMq5D,GAElBz5D,KAAKw6D,aAAa5zD,IAAK8uD,EAAIC,GAEpB31D,IAER,CAEAm7D,UAAAA,CAAYb,GAEX,MAAMc,EAAO,CAAEp7D,KAAKw6D,aAAa9yD,SAAUwyC,OAAQogB,GAE7Cb,EAAQ,IAAIR,GAAamC,GAK/B,OAJAp7D,KAAKu5D,OAAOn5D,KAAMq5D,GAElBz5D,KAAKw6D,aAAa7yD,KAAM2yD,EAAKA,EAAIr5D,OAAS,IAEnCjB,IAER,CAEAq7D,GAAAA,CAAK3F,EAAIC,EAAIY,EAAST,EAAaC,EAAWC,GAE7C,MAAM53C,EAAKpe,KAAKw6D,aAAah4D,EACvB6b,EAAKre,KAAKw6D,aAAa/3D,EAK7B,OAHAzC,KAAKs7D,OAAQ5F,EAAKt3C,EAAIu3C,EAAKt3C,EAAIk4C,EAC9BT,EAAaC,EAAWC,GAElBh2D,IAER,CAEAs7D,MAAAA,CAAQ5F,EAAIC,EAAIY,EAAST,EAAaC,EAAWC,GAIhD,OAFAh2D,KAAKu7D,WAAY7F,EAAIC,EAAIY,EAASA,EAAST,EAAaC,EAAWC,GAE5Dh2D,IAER,CAEAw7D,OAAAA,CAAS9F,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEtE,MAAM73C,EAAKpe,KAAKw6D,aAAah4D,EACvB6b,EAAKre,KAAKw6D,aAAa/3D,EAI7B,OAFAzC,KAAKu7D,WAAY7F,EAAKt3C,EAAIu3C,EAAKt3C,EAAIu3C,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAElFj2D,IAER,CAEAu7D,UAAAA,CAAY7F,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAEzE,MAAMwD,EAAQ,IAAIhE,GAAcC,EAAIC,EAAIC,EAASC,EAASC,EAAaC,EAAWC,EAAYC,GAE9F,GAAKj2D,KAAKu5D,OAAOt4D,OAAS,EAAI,CAG7B,MAAMw6D,EAAahC,EAAM/F,SAAU,GAE5B+H,EAAWlxD,OAAQvK,KAAKw6D,eAE9Bx6D,KAAK06D,OAAQe,EAAWj5D,EAAGi5D,EAAWh5D,EAIxC,CAEAzC,KAAKu5D,OAAOn5D,KAAMq5D,GAElB,MAAMiC,EAAYjC,EAAM/F,SAAU,GAGlC,OAFA1zD,KAAKw6D,aAAa7yD,KAAM+zD,GAEjB17D,IAER,CAEA2H,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKw6D,aAAa7yD,KAAM+P,EAAO8iD,cAExBx6D,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAInB,OAFAT,EAAKglD,aAAex6D,KAAKw6D,aAAa9vD,UAE/B8K,CAER,CAEAggC,QAAAA,CAAU2O,GAMT,OAJA3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAKw6D,aAAahwD,UAAW25C,EAAKqW,cAE3Bx6D,IAER,EAID,MAAM27D,WAAsB9tB,GAE3BjrC,WAAAA,GAAwJ,IAA3IgjB,EAAMzhB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAE,IAAI4C,GAAS,GAAK,IAAO,IAAIA,GAAS,GAAK,GAAK,IAAIA,GAAS,EAAG,KAASmuD,EAAQ/wD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIy3D,EAAQz3D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG03D,EAAS13D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAE9IiW,QAEAxX,KAAKH,KAAO,gBAEZG,KAAKs8B,WAAa,CACjB1W,OAAQA,EACRsvC,SAAUA,EACV0G,SAAUA,EACVC,UAAWA,GAGZ3G,EAAW5zD,KAAKoD,MAAOwwD,GAIvB2G,EAAY75D,GAAO65D,EAAW,EAAa,EAAVv6D,KAAKC,IAItC,MAAMgwC,EAAU,GACV6C,EAAW,GACXC,EAAM,GACNynB,EAAc,GACd1qB,EAAU,GAIV2qB,EAAkB,EAAM7G,EACxB8G,EAAS,IAAI/5C,GACb7I,EAAK,IAAIrS,GACTqd,EAAS,IAAInC,GACbg6C,EAAY,IAAIh6C,GAChBi6C,EAAa,IAAIj6C,GACvB,IAAIlY,EAAK,EACLC,EAAK,EAIT,IAAM,IAAIsf,EAAI,EAAGA,GAAO1D,EAAO3kB,OAAS,EAAKqoB,IAE5C,OAASA,GAER,KAAK,EAEJvf,EAAK6b,EAAQ0D,EAAI,GAAI9mB,EAAIojB,EAAQ0D,GAAI9mB,EACrCwH,EAAK4b,EAAQ0D,EAAI,GAAI7mB,EAAImjB,EAAQ0D,GAAI7mB,EAErC2hB,EAAO5hB,EAAS,EAALwH,EACXoa,EAAO3hB,GAAMsH,EACbqa,EAAO7K,EAAS,EAALvP,EAEXkyD,EAAWv0D,KAAMyc,GAEjBA,EAAO/gB,YAEPy4D,EAAY17D,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAE7C,MAED,KAAOqM,EAAO3kB,OAAS,EAEtB66D,EAAY17D,KAAM87D,EAAW15D,EAAG05D,EAAWz5D,EAAGy5D,EAAW3iD,GAEzD,MAED,QAECxP,EAAK6b,EAAQ0D,EAAI,GAAI9mB,EAAIojB,EAAQ0D,GAAI9mB,EACrCwH,EAAK4b,EAAQ0D,EAAI,GAAI7mB,EAAImjB,EAAQ0D,GAAI7mB,EAErC2hB,EAAO5hB,EAAS,EAALwH,EACXoa,EAAO3hB,GAAMsH,EACbqa,EAAO7K,EAAS,EAALvP,EAEXiyD,EAAUt0D,KAAMyc,GAEhBA,EAAO5hB,GAAK05D,EAAW15D,EACvB4hB,EAAO3hB,GAAKy5D,EAAWz5D,EACvB2hB,EAAO7K,GAAK2iD,EAAW3iD,EAEvB6K,EAAO/gB,YAEPy4D,EAAY17D,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAE7C2iD,EAAWv0D,KAAMs0D,GAQpB,IAAM,IAAIl7D,EAAI,EAAGA,GAAKm0D,EAAUn0D,IAAO,CAEtC,MAAM0jB,EAAMm3C,EAAW76D,EAAIg7D,EAAkBF,EAEvC11D,EAAM7E,KAAK6E,IAAKse,GAChBve,EAAM5E,KAAK4E,IAAKue,GAEtB,IAAM,IAAI6E,EAAI,EAAGA,GAAO1D,EAAO3kB,OAAS,EAAKqoB,IAAO,CAInD0yC,EAAOx5D,EAAIojB,EAAQ0D,GAAI9mB,EAAI2D,EAC3B61D,EAAOv5D,EAAImjB,EAAQ0D,GAAI7mB,EACvBu5D,EAAOziD,EAAIqM,EAAQ0D,GAAI9mB,EAAI0D,EAE3BkuC,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1CH,EAAG5W,EAAIzB,EAAIm0D,EACX97C,EAAG3W,EAAI6mB,GAAM1D,EAAO3kB,OAAS,GAE7BozC,EAAIj0C,KAAMgZ,EAAG5W,EAAG4W,EAAG3W,GAInB,MAAMD,EAAIs5D,EAAa,EAAIxyC,EAAI,GAAMnjB,EAC/B1D,EAAIq5D,EAAa,EAAIxyC,EAAI,GACzB/P,EAAIuiD,EAAa,EAAIxyC,EAAI,GAAMpjB,EAErCkrC,EAAQhxC,KAAMoC,EAAGC,EAAG8W,EAErB,CAED,CAIA,IAAM,IAAIxY,EAAI,EAAGA,EAAIm0D,EAAUn0D,IAE9B,IAAM,IAAIuoB,EAAI,EAAGA,EAAM1D,EAAO3kB,OAAS,EAAKqoB,IAAO,CAElD,MAAM6yC,EAAO7yC,EAAIvoB,EAAI6kB,EAAO3kB,OAEtB6E,EAAIq2D,EACJp2D,EAAIo2D,EAAOv2C,EAAO3kB,OAClB+E,EAAIm2D,EAAOv2C,EAAO3kB,OAAS,EAC3B6M,EAAIquD,EAAO,EAIjB5qB,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM4F,EAAG8H,EAAG/H,EAErB,CAMD/F,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,IAC1Dr0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,GAEnE,CAEAzpC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAImmD,GAAenmD,EAAKoQ,OAAQpQ,EAAK0/C,SAAU1/C,EAAKomD,SAAUpmD,EAAKqmD,UAE3E,EAID,MAAMO,WAAwBT,GAE7B/4D,WAAAA,GAA2E,IAA9D4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGlD,EAAMkD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGk4D,EAAWl4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGm4D,EAAcn4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEtE,MAAMo4D,EAAO,IAAIhC,GACjBgC,EAAKjB,OAAQ,GAAKr6D,EAAS,EAAGujB,EAAkB,IAAVljB,KAAKC,GAAU,GACrDg7D,EAAKjB,OAAQ,EAAGr6D,EAAS,EAAGujB,EAAQ,EAAa,GAAVljB,KAAKC,IAE5CiW,MAAO+kD,EAAKzI,UAAWuI,GAAeC,GAEtCt8D,KAAKH,KAAO,kBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACRvjB,OAAQA,EACRo7D,YAAaA,EACbC,eAAgBA,EAGlB,CAEA,eAAO9mB,CAAUhgC,GAEhB,OAAO,IAAI4mD,GAAiB5mD,EAAKgP,OAAQhP,EAAKvU,OAAQuU,EAAK6mD,YAAa7mD,EAAK8mD,eAE9E,EAID,MAAME,WAAuB3uB,GAE5BjrC,WAAAA,GAAoF,IAAvE4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+wD,EAAQ/wD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIs4D,EAAUt4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGu4D,EAAWv4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAE1EiW,QAEAxX,KAAKH,KAAO,iBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACR0wC,SAAUA,EACVuH,WAAYA,EACZC,YAAaA,GAGdxH,EAAW5zD,KAAKa,IAAK,EAAG+yD,GAIxB,MAAM3jB,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIN2nB,EAAS,IAAI/5C,GACb7I,EAAK,IAAIrS,GAIfqtC,EAASh0C,KAAM,EAAG,EAAG,GACrBgxC,EAAQhxC,KAAM,EAAG,EAAG,GACpBi0C,EAAIj0C,KAAM,GAAK,IAEf,IAAM,IAAI2E,EAAI,EAAGhE,EAAI,EAAGgE,GAAKmwD,EAAUnwD,IAAMhE,GAAK,EAAI,CAErD,MAAM47D,EAAUF,EAAa13D,EAAImwD,EAAWwH,EAI5CV,EAAOx5D,EAAIgiB,EAASljB,KAAK4E,IAAKy2D,GAC9BX,EAAOv5D,EAAI+hB,EAASljB,KAAK6E,IAAKw2D,GAE9BvoB,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1C63B,EAAQhxC,KAAM,EAAG,EAAG,GAIpBgZ,EAAG5W,GAAM4xC,EAAUrzC,GAAMyjB,EAAS,GAAM,EACxCpL,EAAG3W,GAAM2xC,EAAUrzC,EAAI,GAAMyjB,EAAS,GAAM,EAE5C6vB,EAAIj0C,KAAMgZ,EAAG5W,EAAG4W,EAAG3W,EAEpB,CAIA,IAAM,IAAI1B,EAAI,EAAGA,GAAKm0D,EAAUn0D,IAE/BwwC,EAAQnxC,KAAMW,EAAGA,EAAI,EAAG,GAMzBf,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAE3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIgnD,GAAgBhnD,EAAKgP,OAAQhP,EAAK0/C,SAAU1/C,EAAKinD,WAAYjnD,EAAKknD,YAE9E,EAID,MAAME,WAAyB/uB,GAE9BjrC,WAAAA,GAAkK,IAArJi6D,EAAS14D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG24D,EAAY34D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGm4D,EAAcn4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAI8vC,EAAc9vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG44D,EAAS54D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAAUs4D,EAAUt4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGu4D,EAAWv4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAExJiW,QAEAxX,KAAKH,KAAO,mBAEZG,KAAKs8B,WAAa,CACjBugC,UAAWA,EACXC,aAAcA,EACd31D,OAAQA,EACRm1D,eAAgBA,EAChBroB,eAAgBA,EAChB8oB,UAAWA,EACXN,WAAYA,EACZC,YAAaA,GAGd,MAAMvoB,EAAQn0C,KAEds8D,EAAiBh7D,KAAKoD,MAAO43D,GAC7BroB,EAAiB3yC,KAAKoD,MAAOuvC,GAI7B,MAAM1C,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIZ,IAAI7zC,EAAQ,EACZ,MAAM0rD,EAAa,GACb8Q,EAAa71D,EAAS,EAC5B,IAAIotC,EAAa,EA0HjB,SAAS0oB,EAAazqC,GAGrB,MAAM0qC,EAAmB18D,EAEnB4Y,EAAK,IAAIrS,GACTi1D,EAAS,IAAI/5C,GAEnB,IAAIozB,EAAa,EAEjB,MAAM7wB,GAAmB,IAARgO,EAAiBqqC,EAAYC,EACxCvvC,GAAiB,IAARiF,EAAiB,GAAM,EAMtC,IAAM,IAAIhwB,EAAI,EAAGA,GAAK85D,EAAgB95D,IAIrC4xC,EAASh0C,KAAM,EAAG48D,EAAazvC,EAAM,GAIrC6jB,EAAQhxC,KAAM,EAAGmtB,EAAM,GAIvB8mB,EAAIj0C,KAAM,GAAK,IAIfI,IAKD,MAAM28D,EAAiB38D,EAIvB,IAAM,IAAIgC,EAAI,EAAGA,GAAK85D,EAAgB95D,IAAO,CAE5C,MACMmH,EADInH,EAAI85D,EACII,EAAcD,EAE1BW,EAAW97D,KAAK4E,IAAKyD,GACrB0zD,EAAW/7D,KAAK6E,IAAKwD,GAI3BqyD,EAAOx5D,EAAIgiB,EAAS64C,EACpBrB,EAAOv5D,EAAIu6D,EAAazvC,EACxByuC,EAAOziD,EAAIiL,EAAS44C,EACpBhpB,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1C63B,EAAQhxC,KAAM,EAAGmtB,EAAM,GAIvBnU,EAAG5W,EAAiB,GAAX46D,EAAmB,GAC5BhkD,EAAG3W,EAAiB,GAAX46D,EAAiB9vC,EAAS,GACnC8mB,EAAIj0C,KAAMgZ,EAAG5W,EAAG4W,EAAG3W,GAInBjC,GAED,CAIA,IAAM,IAAIgC,EAAI,EAAGA,EAAI85D,EAAgB95D,IAAO,CAE3C,MAAMwD,EAAIk3D,EAAmB16D,EACvBzB,EAAIo8D,EAAiB36D,GAEd,IAARgwB,EAIJ+e,EAAQnxC,KAAMW,EAAGA,EAAI,EAAGiF,GAMxBurC,EAAQnxC,KAAMW,EAAI,EAAGA,EAAGiF,GAIzBqvC,GAAc,CAEf,CAIAlB,EAAMvF,SAAU2F,EAAYc,GAAoB,IAAR7iB,EAAe,EAAI,GAI3D+hB,GAAcc,CAEf,EAhNA,WAEC,MAAMjxB,EAAS,IAAInC,GACb+5C,EAAS,IAAI/5C,GAEnB,IAAIozB,EAAa,EAGjB,MAAMioB,GAAUR,EAAeD,GAAc11D,EAI7C,IAAM,IAAI1E,EAAI,EAAGA,GAAKwxC,EAAgBxxC,IAAO,CAE5C,MAAM86D,EAAW,GAEX31D,EAAInF,EAAIwxC,EAIRzvB,EAAS5c,GAAMk1D,EAAeD,GAAcA,EAElD,IAAM,IAAIr6D,EAAI,EAAGA,GAAK85D,EAAgB95D,IAAO,CAE5C,MAAM0iB,EAAI1iB,EAAI85D,EAER3yD,EAAQub,EAAIw3C,EAAcD,EAE1BY,EAAW/7D,KAAK6E,IAAKwD,GACrByzD,EAAW97D,KAAK4E,IAAKyD,GAI3BqyD,EAAOx5D,EAAIgiB,EAAS64C,EACpBrB,EAAOv5D,GAAMmF,EAAIT,EAAS61D,EAC1BhB,EAAOziD,EAAIiL,EAAS44C,EACpBhpB,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1C6K,EAAOxd,IAAKy2D,EAAUC,EAAOF,GAAW/5D,YACxC+tC,EAAQhxC,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAIzC86B,EAAIj0C,KAAM8kB,EAAG,EAAItd,GAIjB21D,EAASn9D,KAAMI,IAEhB,CAIA0rD,EAAW9rD,KAAMm9D,EAElB,CAIA,IAAM,IAAI/6D,EAAI,EAAGA,EAAI85D,EAAgB95D,IAEpC,IAAM,IAAIC,EAAI,EAAGA,EAAIwxC,EAAgBxxC,IAAO,CAI3C,MAAMqD,EAAIomD,EAAYzpD,GAAKD,GACrBuD,EAAImmD,EAAYzpD,EAAI,GAAKD,GACzBwD,EAAIkmD,EAAYzpD,EAAI,GAAKD,EAAI,GAC7BsL,EAAIo+C,EAAYzpD,GAAKD,EAAI,IAI1Bq6D,EAAY,GAAW,IAANp6D,KAErB8uC,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpBunC,GAAc,IAIVynB,EAAe,GAAKr6D,IAAMwxC,EAAiB,KAE/C1C,EAAQnxC,KAAM2F,EAAGC,EAAG8H,GACpBunC,GAAc,EAIhB,CAMDlB,EAAMvF,SAAU2F,EAAYc,EAAY,GAIxCd,GAAcc,CAEf,CApHAmoB,IAEmB,IAAdT,IAECF,EAAY,GAAII,GAAa,GAC7BH,EAAe,GAAIG,GAAa,IAMtCj9D,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAoN3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIonD,GAAkBpnD,EAAKqnD,UAAWrnD,EAAKsnD,aAActnD,EAAKrO,OAAQqO,EAAK8mD,eAAgB9mD,EAAKy+B,eAAgBz+B,EAAKunD,UAAWvnD,EAAKinD,WAAYjnD,EAAKknD,YAE9J,EAID,MAAMe,WAAqBb,GAE1Bh6D,WAAAA,GAA6I,IAAhI4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGm4D,EAAcn4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAI8vC,EAAc9vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG44D,EAAS54D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAAUs4D,EAAUt4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGu4D,EAAWv4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAEnIiW,MAAO,EAAGgN,EAAQrd,EAAQm1D,EAAgBroB,EAAgB8oB,EAAWN,EAAYC,GAEjF18D,KAAKH,KAAO,eAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACRrd,OAAQA,EACRm1D,eAAgBA,EAChBroB,eAAgBA,EAChB8oB,UAAWA,EACXN,WAAYA,EACZC,YAAaA,EAGf,CAEA,eAAOlnB,CAAUhgC,GAEhB,OAAO,IAAIioD,GAAcjoD,EAAKgP,OAAQhP,EAAKrO,OAAQqO,EAAK8mD,eAAgB9mD,EAAKy+B,eAAgBz+B,EAAKunD,UAAWvnD,EAAKinD,WAAYjnD,EAAKknD,YAEpI,EAID,MAAMgB,WAA2B7vB,GAEhCjrC,WAAAA,GAAmE,IAAtDwxC,EAAQjwC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIotC,EAAOptC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIqgB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+6C,EAAM/6C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE9DqT,QAEAxX,KAAKH,KAAO,qBAEZG,KAAKs8B,WAAa,CACjB8X,SAAUA,EACV7C,QAASA,EACT/sB,OAAQA,EACR06B,OAAQA,GAKT,MAAMye,EAAe,GACfC,EAAW,GAwDjB,SAASC,EAAe/3D,EAAGC,EAAGC,EAAGk5C,GAEhC,MAAM4e,EAAO5e,EAAS,EAIhBt3C,EAAI,GAIV,IAAM,IAAI7G,EAAI,EAAGA,GAAK+8D,EAAM/8D,IAAO,CAElC6G,EAAG7G,GAAM,GAET,MAAMg9D,EAAKj4D,EAAE4B,QAAQnF,KAAMyD,EAAGjF,EAAI+8D,GAC5BE,EAAKj4D,EAAE2B,QAAQnF,KAAMyD,EAAGjF,EAAI+8D,GAE5BG,EAAOH,EAAO/8D,EAEpB,IAAM,IAAIuoB,EAAI,EAAGA,GAAK20C,EAAM30C,IAI1B1hB,EAAG7G,GAAKuoB,GAFE,IAANA,GAAWvoB,IAAM+8D,EAEPC,EAIAA,EAAGr2D,QAAQnF,KAAMy7D,EAAI10C,EAAI20C,EAM1C,CAIA,IAAM,IAAIl9D,EAAI,EAAGA,EAAI+8D,EAAM/8D,IAE1B,IAAM,IAAIuoB,EAAI,EAAGA,EAAI,GAAMw0C,EAAO/8D,GAAM,EAAGuoB,IAAO,CAEjD,MAAMsuC,EAAIt2D,KAAKoD,MAAO4kB,EAAI,GAErBA,EAAI,IAAM,GAEd40C,EAAYt2D,EAAG7G,GAAK62D,EAAI,IACxBsG,EAAYt2D,EAAG7G,EAAI,GAAK62D,IACxBsG,EAAYt2D,EAAG7G,GAAK62D,MAIpBsG,EAAYt2D,EAAG7G,GAAK62D,EAAI,IACxBsG,EAAYt2D,EAAG7G,EAAI,GAAK62D,EAAI,IAC5BsG,EAAYt2D,EAAG7G,EAAI,GAAK62D,IAI1B,CAIF,CA2EA,SAASsG,EAAYlC,GAEpB2B,EAAav9D,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,EAE/C,CAEA,SAAS4kD,EAAkB39D,EAAOw7D,GAEjC,MAAMtqB,EAAiB,EAARlxC,EAEfw7D,EAAOx5D,EAAI4xC,EAAU1C,EAAS,GAC9BsqB,EAAOv5D,EAAI2xC,EAAU1C,EAAS,GAC9BsqB,EAAOziD,EAAI66B,EAAU1C,EAAS,EAE/B,CAoCA,SAAS0sB,EAAWhlD,EAAIs4B,EAAQhrB,EAAQ23C,GAEhCA,EAAU,GAAkB,IAATjlD,EAAG5W,IAE5Bo7D,EAAUlsB,GAAWt4B,EAAG5W,EAAI,GAIT,IAAbkkB,EAAOlkB,GAA4B,IAAbkkB,EAAOnN,IAEnCqkD,EAAUlsB,GAAW2sB,EAAU,EAAI/8D,KAAKC,GAAK,GAI/C,CAIA,SAAS88D,EAAS33C,GAEjB,OAAOplB,KAAKkI,MAAOkd,EAAOnN,GAAKmN,EAAOlkB,EAEvC,EAxOA,SAAoB08C,GAEnB,MAAMp5C,EAAI,IAAImc,GACRlc,EAAI,IAAIkc,GACRjc,EAAI,IAAIic,GAId,IAAM,IAAIlhB,EAAI,EAAGA,EAAIwwC,EAAQtwC,OAAQF,GAAK,EAIzCo9D,EAAkB5sB,EAASxwC,EAAI,GAAK+E,GACpCq4D,EAAkB5sB,EAASxwC,EAAI,GAAKgF,GACpCo4D,EAAkB5sB,EAASxwC,EAAI,GAAKiF,GAIpC63D,EAAe/3D,EAAGC,EAAGC,EAAGk5C,EAI1B,CAlDAof,CAAWpf,GAmHX,SAAsB16B,GAErB,MAAMw3C,EAAS,IAAI/5C,GAInB,IAAM,IAAIlhB,EAAI,EAAGA,EAAI48D,EAAa18D,OAAQF,GAAK,EAE9Ci7D,EAAOx5D,EAAIm7D,EAAc58D,EAAI,GAC7Bi7D,EAAOv5D,EAAIk7D,EAAc58D,EAAI,GAC7Bi7D,EAAOziD,EAAIokD,EAAc58D,EAAI,GAE7Bi7D,EAAO34D,YAAYgF,eAAgBmc,GAEnCm5C,EAAc58D,EAAI,GAAMi7D,EAAOx5D,EAC/Bm7D,EAAc58D,EAAI,GAAMi7D,EAAOv5D,EAC/Bk7D,EAAc58D,EAAI,GAAMi7D,EAAOziD,CAIjC,CAnIAglD,CAAa/5C,GAqIb,WAEC,MAAMw3C,EAAS,IAAI/5C,GAEnB,IAAM,IAAIlhB,EAAI,EAAGA,EAAI48D,EAAa18D,OAAQF,GAAK,EAAI,CAElDi7D,EAAOx5D,EAAIm7D,EAAc58D,EAAI,GAC7Bi7D,EAAOv5D,EAAIk7D,EAAc58D,EAAI,GAC7Bi7D,EAAOziD,EAAIokD,EAAc58D,EAAI,GAE7B,MAAMmkB,EAAIm5C,EAASrC,GAAW,EAAI16D,KAAKC,GAAK,GACtCqG,GAqHc8e,EArHGs1C,EAuHjB16D,KAAKkI,OAASkd,EAAOjkB,EAAGnB,KAAK+H,KAAQqd,EAAOlkB,EAAIkkB,EAAOlkB,EAAQkkB,EAAOnN,EAAImN,EAAOnN,IAvHrDjY,KAAKC,GAAK,IAC5Cq8D,EAASx9D,KAAM8kB,EAAG,EAAItd,EAEvB,CAkHD,IAAsB8e,GA7DtB,WAEC,MAAM5gB,EAAI,IAAImc,GACRlc,EAAI,IAAIkc,GACRjc,EAAI,IAAIic,GAERu8C,EAAW,IAAIv8C,GAEf8tB,EAAM,IAAIhpC,GACVipC,EAAM,IAAIjpC,GACVkpC,EAAM,IAAIlpC,GAEhB,IAAM,IAAIhG,EAAI,EAAGuoB,EAAI,EAAGvoB,EAAI48D,EAAa18D,OAAQF,GAAK,EAAGuoB,GAAK,EAAI,CAEjExjB,EAAEc,IAAK+2D,EAAc58D,EAAI,GAAK48D,EAAc58D,EAAI,GAAK48D,EAAc58D,EAAI,IACvEgF,EAAEa,IAAK+2D,EAAc58D,EAAI,GAAK48D,EAAc58D,EAAI,GAAK48D,EAAc58D,EAAI,IACvEiF,EAAEY,IAAK+2D,EAAc58D,EAAI,GAAK48D,EAAc58D,EAAI,GAAK48D,EAAc58D,EAAI,IAEvEgvC,EAAInpC,IAAKg3D,EAAUt0C,EAAI,GAAKs0C,EAAUt0C,EAAI,IAC1C0mB,EAAIppC,IAAKg3D,EAAUt0C,EAAI,GAAKs0C,EAAUt0C,EAAI,IAC1C2mB,EAAIrpC,IAAKg3D,EAAUt0C,EAAI,GAAKs0C,EAAUt0C,EAAI,IAE1Ck1C,EAAS72D,KAAM7B,GAAI+B,IAAK9B,GAAI8B,IAAK7B,GAAIuC,aAAc,GAEnD,MAAMk2D,EAAMJ,EAASG,GAErBJ,EAAWruB,EAAKzmB,EAAI,EAAGxjB,EAAG24D,GAC1BL,EAAWpuB,EAAK1mB,EAAI,EAAGvjB,EAAG04D,GAC1BL,EAAWnuB,EAAK3mB,EAAI,EAAGtjB,EAAGy4D,EAE3B,CAED,EAnFCC,GAMD,WAIC,IAAM,IAAI39D,EAAI,EAAGA,EAAI68D,EAAS38D,OAAQF,GAAK,EAAI,CAI9C,MAAMqd,EAAKw/C,EAAU78D,EAAI,GACnByd,EAAKo/C,EAAU78D,EAAI,GACnB2wB,EAAKksC,EAAU78D,EAAI,GAEnBoB,EAAMb,KAAKa,IAAKic,EAAII,EAAIkT,GACxBxvB,EAAMZ,KAAKY,IAAKkc,EAAII,EAAIkT,GAIzBvvB,EAAM,IAAOD,EAAM,KAElBkc,EAAK,KAAMw/C,EAAU78D,EAAI,IAAO,GAChCyd,EAAK,KAAMo/C,EAAU78D,EAAI,IAAO,GAChC2wB,EAAK,KAAMksC,EAAU78D,EAAI,IAAO,GAIvC,CAED,CA/BC49D,EAED,CArJAC,GAIA5+D,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwBswB,EAAc,IACzE39D,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwBswB,EAAa78D,QAAS,IAC/Ed,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBuwB,EAAU,IAE/C,IAAX1e,EAEJl/C,KAAK0wC,uBAIL1wC,KAAKmxC,kBAyPP,CAEAxpC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIkoD,GAAoBloD,EAAK4+B,SAAU5+B,EAAK+7B,QAAS/7B,EAAKgP,OAAQhP,EAAKqpD,QAE/E,EAID,MAAMC,WAA6BpB,GAElC96D,WAAAA,GAAsC,IAAzB4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+6C,EAAM/6C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEjC,MAAMzB,GAAM,EAAIpB,KAAK+H,KAAM,IAAQ,EAC7BwF,EAAI,EAAInM,EAsCd8U,MApCiB,EAGd,GAAK,GAAK,GAAK,GAAK,EAAG,GACvB,EAAG,GAAK,GAAK,EAAG,EAAG,EACrB,GAAK,GAAK,EAAG,GAAK,EAAG,EACrB,EAAG,GAAK,EAAG,EAAG,EAAG,EAGjB,GAAK3I,GAAKnM,EAAG,GAAKmM,EAAGnM,EACrB,EAAGmM,GAAKnM,EAAG,EAAGmM,EAAGnM,GAGfmM,GAAKnM,EAAG,GAAKmM,EAAGnM,EAAG,EACrBmM,GAAKnM,EAAG,EAAGmM,EAAGnM,EAAG,GAGfA,EAAG,GAAKmM,EAAGnM,EAAG,GAAKmM,GACnBnM,EAAG,EAAGmM,EAAGnM,EAAG,EAAGmM,GAGF,CACf,EAAG,GAAI,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GAC7B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAC7B,GAAI,EAAG,EAAI,GAAI,EAAG,GAAK,GAAI,GAAI,EAC/B,EAAG,EAAG,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAC5B,EAAG,GAAI,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GAC7B,EAAG,GAAI,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GAC7B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAC7B,GAAI,EAAG,EAAI,GAAI,EAAG,GAAK,GAAI,GAAI,EAC/B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,EAC7B,GAAI,EAAG,EAAI,GAAI,EAAG,GAAK,GAAI,GAAI,EAC/B,GAAI,EAAG,GAAK,GAAI,GAAI,EAAI,GAAI,EAAG,GAC/B,EAAG,GAAI,GAAK,EAAG,GAAI,EAAI,EAAG,EAAG,GAGJ2V,EAAQ06B,GAElCl/C,KAAKH,KAAO,uBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACR06B,OAAQA,EAGV,CAEA,eAAO1J,CAAUhgC,GAEhB,OAAO,IAAIspD,GAAsBtpD,EAAKgP,OAAQhP,EAAK0pC,OAEpD,EAID,MAAM6f,GAAoB,IAAI98C,GACxB+8C,GAAsB,IAAI/8C,GAC1Bg9C,GAAwB,IAAIh9C,GAC5Bi9C,GAA0B,IAAIjhC,GAEpC,MAAMkhC,WAAsBtxB,GAE3BjrC,WAAAA,GAAmD,IAAtCikB,EAAQ1iB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAAMi7D,EAAcj7D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAW9C,GATAqT,QAEAxX,KAAKH,KAAO,gBAEZG,KAAKs8B,WAAa,CACjBzV,SAAUA,EACVu4C,eAAgBA,GAGC,OAAbv4C,EAAoB,CAExB,MAAMw4C,EAAkB,EAClBz6B,EAAYtjC,KAAKiE,IAAK,GAAI85D,GAC1BC,EAAeh+D,KAAK4E,IAAK7E,GAAU+9D,GAEnCG,EAAY14C,EAASwnB,WACrBmxB,EAAe34C,EAASE,aAAc,YACtC2mC,EAAa6R,EAAYA,EAAUvjD,MAAQwjD,EAAaxjD,MAExDyjD,EAAW,CAAE,EAAG,EAAG,GACnBC,EAAW,CAAE,IAAK,IAAK,KACvBC,EAAS,IAAIppD,MAAO,GAEpBqpD,EAAW,CAAC,EACZxrB,EAAW,GACjB,IAAM,IAAIrzC,EAAI,EAAGA,EAAI2sD,EAAY3sD,GAAK,EAAI,CAEpCw+D,GAEJE,EAAU,GAAMF,EAAU10D,KAAM9J,GAChC0+D,EAAU,GAAMF,EAAU10D,KAAM9J,EAAI,GACpC0+D,EAAU,GAAMF,EAAU10D,KAAM9J,EAAI,KAIpC0+D,EAAU,GAAM1+D,EAChB0+D,EAAU,GAAM1+D,EAAI,EACpB0+D,EAAU,GAAM1+D,EAAI,GAIrB,MAAM,EAAE+E,EAAC,EAAEC,EAAC,EAAEC,GAAMk5D,GAYpB,GAXAp5D,EAAE6E,oBAAqB60D,EAAcC,EAAU,IAC/C15D,EAAE4E,oBAAqB60D,EAAcC,EAAU,IAC/Cz5D,EAAE2E,oBAAqB60D,EAAcC,EAAU,IAC/CP,GAAUhhC,UAAW+gC,IAGrBU,EAAQ,GAAM,GAAIr+D,KAAKgC,MAAOwC,EAAEtD,EAAIoiC,MAAiBtjC,KAAKgC,MAAOwC,EAAErD,EAAImiC,MAAiBtjC,KAAKgC,MAAOwC,EAAEyT,EAAIqrB,KAC1G+6B,EAAQ,GAAM,GAAIr+D,KAAKgC,MAAOyC,EAAEvD,EAAIoiC,MAAiBtjC,KAAKgC,MAAOyC,EAAEtD,EAAImiC,MAAiBtjC,KAAKgC,MAAOyC,EAAEwT,EAAIqrB,KAC1G+6B,EAAQ,GAAM,GAAIr+D,KAAKgC,MAAO0C,EAAExD,EAAIoiC,MAAiBtjC,KAAKgC,MAAO0C,EAAEvD,EAAImiC,MAAiBtjC,KAAKgC,MAAO0C,EAAEuT,EAAIqrB,KAGrG+6B,EAAQ,KAAQA,EAAQ,IAAOA,EAAQ,KAAQA,EAAQ,IAAOA,EAAQ,KAAQA,EAAQ,GAO3F,IAAM,IAAIr2C,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAG9B,MAAMu2C,GAAUv2C,EAAI,GAAM,EACpBw2C,EAAWH,EAAQr2C,GACnBy2C,EAAWJ,EAAQE,GACnBz2C,EAAK81C,GAAWQ,EAAUp2C,IAC1Bjf,EAAK60D,GAAWQ,EAAUG,IAE1BG,EAAO,GAAIF,KAAcC,IACzBE,EAAc,GAAIF,KAAcD,IAEjCG,KAAeL,GAAYA,EAAUK,IAIpChB,GAAQ/1D,IAAK02D,EAAUK,GAAc77C,SAAYk7C,IAErDlrB,EAASh0C,KAAMgpB,EAAG5mB,EAAG4mB,EAAG3mB,EAAG2mB,EAAG7P,GAC9B66B,EAASh0C,KAAMiK,EAAG7H,EAAG6H,EAAG5H,EAAG4H,EAAGkP,IAI/BqmD,EAAUK,GAAgB,MAEXD,KAAQJ,IAGvBA,EAAUI,GAAS,CAElBE,OAAQT,EAAUn2C,GAClB8iB,OAAQqzB,EAAUI,GAClBz7C,OAAQ66C,GAAQv3D,SAMnB,CAED,CAGA,IAAM,MAAMw1B,KAAO0iC,EAElB,GAAKA,EAAU1iC,GAAQ,CAEtB,MAAM,OAAEgjC,EAAM,OAAE9zB,GAAWwzB,EAAU1iC,GACrC6hC,GAAIp0D,oBAAqB60D,EAAcU,GACvClB,GAAMr0D,oBAAqB60D,EAAcpzB,GAEzCgI,EAASh0C,KAAM2+D,GAAIv8D,EAAGu8D,GAAIt8D,EAAGs8D,GAAIxlD,GACjC66B,EAASh0C,KAAM4+D,GAAMx8D,EAAGw8D,GAAMv8D,EAAGu8D,GAAMzlD,EAExC,CAIDvZ,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,GAEtE,CAED,CAEAzsC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,EAID,MAAMmgE,WAAc5F,GAEnB33D,WAAAA,CAAagjB,GAEZpO,MAAOoO,GAEP5lB,KAAK6V,KAAOpU,KAEZzB,KAAKH,KAAO,QAEZG,KAAKogE,MAAQ,EAEd,CAEAC,cAAAA,CAAgBtM,GAEf,MAAMuM,EAAW,GAEjB,IAAM,IAAIv/D,EAAI,EAAGC,EAAIhB,KAAKogE,MAAMn/D,OAAQF,EAAIC,EAAGD,IAE9Cu/D,EAAUv/D,GAAMf,KAAKogE,MAAOr/D,GAAI+yD,UAAWC,GAI5C,OAAOuM,CAER,CAIAC,aAAAA,CAAexM,GAEd,MAAO,CAENx3B,MAAOv8B,KAAK8zD,UAAWC,GACvBqM,MAAOpgE,KAAKqgE,eAAgBtM,GAI9B,CAEApsD,IAAAA,CAAM+P,GAELF,MAAM7P,KAAM+P,GAEZ1X,KAAKogE,MAAQ,GAEb,IAAM,IAAIr/D,EAAI,EAAGC,EAAI0W,EAAO0oD,MAAMn/D,OAAQF,EAAIC,EAAGD,IAAO,CAEvD,MAAMy/D,EAAO9oD,EAAO0oD,MAAOr/D,GAE3Bf,KAAKogE,MAAMhgE,KAAMogE,EAAK94D,QAEvB,CAEA,OAAO1H,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAEnBT,EAAKK,KAAO7V,KAAK6V,KACjBL,EAAK4qD,MAAQ,GAEb,IAAM,IAAIr/D,EAAI,EAAGC,EAAIhB,KAAKogE,MAAMn/D,OAAQF,EAAIC,EAAGD,IAAO,CAErD,MAAMy/D,EAAOxgE,KAAKogE,MAAOr/D,GACzByU,EAAK4qD,MAAMhgE,KAAMogE,EAAKvqD,SAEvB,CAEA,OAAOT,CAER,CAEAggC,QAAAA,CAAU2O,GAET3sC,MAAMg+B,SAAU2O,GAEhBnkD,KAAK6V,KAAOsuC,EAAKtuC,KACjB7V,KAAKogE,MAAQ,GAEb,IAAM,IAAIr/D,EAAI,EAAGC,EAAImjD,EAAKic,MAAMn/D,OAAQF,EAAIC,EAAGD,IAAO,CAErD,MAAMy/D,EAAOrc,EAAKic,MAAOr/D,GACzBf,KAAKogE,MAAMhgE,MAAM,IAAIm6D,IAAO/kB,SAAUgrB,GAEvC,CAEA,OAAOxgE,IAER,EAQD,MAAMygE,GAEQ,SAAWjrD,EAAMkrD,GAAuB,IAAVC,EAAGx8D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEhD,MAAMy8D,EAAWF,GAAeA,EAAYz/D,OACtC4/D,EAAWD,EAAWF,EAAa,GAAMC,EAAMnrD,EAAKvU,OAC1D,IAAI6/D,EAAYC,GAAYvrD,EAAM,EAAGqrD,EAAUF,GAAK,GACpD,MAAMK,EAAY,GAElB,IAAOF,GAAaA,EAAUG,OAASH,EAAUI,KAAO,OAAOF,EAE/D,IAAIG,EAAMC,EAAMC,EAAMC,EAAM9+D,EAAGC,EAAG8+D,EAKlC,GAHKX,IAAWE,EA2TlB,SAAyBtrD,EAAMkrD,EAAaI,EAAWH,GAEtD,MAAMa,EAAQ,GACd,IAAIzgE,EAAGie,EAAKitB,EAAO4a,EAAKqC,EAExB,IAAMnoD,EAAI,EAAGie,EAAM0hD,EAAYz/D,OAAQF,EAAIie,EAAKje,IAE/CkrC,EAAQy0B,EAAa3/D,GAAM4/D,EAC3B9Z,EAAM9lD,EAAIie,EAAM,EAAI0hD,EAAa3/D,EAAI,GAAM4/D,EAAMnrD,EAAKvU,OACtDioD,EAAO6X,GAAYvrD,EAAMy2B,EAAO4a,EAAK8Z,GAAK,GACrCzX,IAASA,EAAK+X,OAAO/X,EAAKuY,SAAU,GACzCD,EAAMphE,KAAMshE,GAAaxY,IAO1B,IAHAsY,EAAMtU,KAAMyU,IAGN5gE,EAAI,EAAGA,EAAIygE,EAAMvgE,OAAQF,IAE9B+/D,EAAYc,GAAeJ,EAAOzgE,GAAK+/D,GAIxC,OAAOA,CAER,CArV8Be,CAAgBrsD,EAAMkrD,EAAaI,EAAWH,IAGrEnrD,EAAKvU,OAAS,GAAK0/D,EAAM,CAE7BQ,EAAOE,EAAO7rD,EAAM,GACpB4rD,EAAOE,EAAO9rD,EAAM,GAEpB,IAAM,IAAIzU,EAAI4/D,EAAK5/D,EAAI8/D,EAAU9/D,GAAK4/D,EAErCn+D,EAAIgT,EAAMzU,GACV0B,EAAI+S,EAAMzU,EAAI,GACTyB,EAAI2+D,IAAOA,EAAO3+D,GAClBC,EAAI2+D,IAAOA,EAAO3+D,GAClBD,EAAI6+D,IAAOA,EAAO7+D,GAClBC,EAAI6+D,IAAOA,EAAO7+D,GAKxB8+D,EAAUjgE,KAAKa,IAAKk/D,EAAOF,EAAMG,EAAOF,GACxCG,EAAsB,IAAZA,EAAgB,MAAQA,EAAU,CAE7C,CAIA,OAFAO,GAAchB,EAAWE,EAAWL,EAAKQ,EAAMC,EAAMG,EAAS,GAEvDP,CAER,EAKD,SAASD,GAAYvrD,EAAMy2B,EAAO4a,EAAK8Z,EAAKoB,GAE3C,IAAIhhE,EAAGszD,EAEP,GAAK0N,IA+sBN,SAAqBvsD,EAAMy2B,EAAO4a,EAAK8Z,GAEtC,IAAIrM,EAAM,EACV,IAAM,IAAIvzD,EAAIkrC,EAAO3iB,EAAIu9B,EAAM8Z,EAAK5/D,EAAI8lD,EAAK9lD,GAAK4/D,EAEjDrM,IAAS9+C,EAAM8T,GAAM9T,EAAMzU,KAAUyU,EAAMzU,EAAI,GAAMyU,EAAM8T,EAAI,IAC/DA,EAAIvoB,EAIL,OAAOuzD,CAER,CA3tBsB0N,CAAYxsD,EAAMy2B,EAAO4a,EAAK8Z,GAAQ,EAE1D,IAAM5/D,EAAIkrC,EAAOlrC,EAAI8lD,EAAK9lD,GAAK4/D,EAAMtM,EAAO4N,GAAYlhE,EAAGyU,EAAMzU,GAAKyU,EAAMzU,EAAI,GAAKszD,QAIrF,IAAMtzD,EAAI8lD,EAAM8Z,EAAK5/D,GAAKkrC,EAAOlrC,GAAK4/D,EAAMtM,EAAO4N,GAAYlhE,EAAGyU,EAAMzU,GAAKyU,EAAMzU,EAAI,GAAKszD,GAW7F,OAPKA,GAAQ9pD,GAAQ8pD,EAAMA,EAAK4M,QAE/BiB,GAAY7N,GACZA,EAAOA,EAAK4M,MAIN5M,CAER,CAGA,SAAS8N,GAAcl2B,EAAO4a,GAE7B,IAAO5a,EAAQ,OAAOA,EACf4a,IAAMA,EAAM5a,GAEnB,IACCm2B,EADGtvC,EAAImZ,EAER,GAIC,GAFAm2B,GAAQ,EAEDtvC,EAAE2uC,UAAal3D,GAAQuoB,EAAGA,EAAEmuC,OAAwC,IAA9BoB,GAAMvvC,EAAEouC,KAAMpuC,EAAGA,EAAEmuC,MAS/DnuC,EAAIA,EAAEmuC,SAT0E,CAIhF,GAFAiB,GAAYpvC,GACZA,EAAI+zB,EAAM/zB,EAAEouC,KACPpuC,IAAMA,EAAEmuC,KAAO,MACpBmB,GAAQ,CAET,QAMSA,GAAStvC,IAAM+zB,GAEzB,OAAOA,CAER,CAGA,SAASib,GAAcQ,EAAKtB,EAAWL,EAAKQ,EAAMC,EAAMG,EAASgB,GAEhE,IAAOD,EAAM,QAGNC,GAAQhB,GA0VhB,SAAqBt1B,EAAOk1B,EAAMC,EAAMG,GAEvC,IAAIzuC,EAAImZ,EACR,GAEc,IAARnZ,EAAEvZ,IAAUuZ,EAAEvZ,EAAIipD,GAAQ1vC,EAAEtwB,EAAGswB,EAAErwB,EAAG0+D,EAAMC,EAAMG,IACrDzuC,EAAE2vC,MAAQ3vC,EAAEouC,KACZpuC,EAAE4vC,MAAQ5vC,EAAEmuC,KACZnuC,EAAIA,EAAEmuC,WAEGnuC,IAAMmZ,GAEhBnZ,EAAE2vC,MAAMC,MAAQ,KAChB5vC,EAAE2vC,MAAQ,KAQX,SAAqBvZ,GAEpB,IAAInoD,EAAG+xB,EAAGjtB,EAAG4C,EAAGk6D,EAAMC,EAAWC,EAAOC,EACvCC,EAAS,EAEV,EAAG,CAOF,IALAjwC,EAAIo2B,EACJA,EAAO,KACPyZ,EAAO,KACPC,EAAY,EAEJ9vC,GAAI,CAKX,IAHA8vC,IACA/8D,EAAIitB,EACJ+vC,EAAQ,EACF9hE,EAAI,EAAGA,EAAIgiE,IAEhBF,IACAh9D,EAAIA,EAAE68D,MACC78D,GAJiB9E,KAUzB,IAFA+hE,EAAQC,EAEAF,EAAQ,GAAOC,EAAQ,GAAKj9D,GAEpB,IAAVg9D,IAA2B,IAAVC,IAAiBj9D,GAAKitB,EAAEvZ,GAAK1T,EAAE0T,IAEpD9Q,EAAIqqB,EACJA,EAAIA,EAAE4vC,MACNG,MAIAp6D,EAAI5C,EACJA,EAAIA,EAAE68D,MACNI,KAIIH,EAAOA,EAAKD,MAAQj6D,EACpBygD,EAAOzgD,EAEZA,EAAEg6D,MAAQE,EACVA,EAAOl6D,EAIRqqB,EAAIjtB,CAEL,CAEA88D,EAAKD,MAAQ,KACbK,GAAU,CAEX,OAAUH,EAAY,EAIvB,CApECI,CAAYlwC,EAEb,CA3W0BmwC,CAAYX,EAAKnB,EAAMC,EAAMG,GAEtD,IACCL,EAAMD,EADHiC,EAAOZ,EAIX,KAAQA,EAAIpB,OAASoB,EAAIrB,MAKxB,GAHAC,EAAOoB,EAAIpB,KACXD,EAAOqB,EAAIrB,KAENM,EAAU4B,GAAab,EAAKnB,EAAMC,EAAMG,GAAY6B,GAAOd,GAG/DtB,EAAU5gE,KAAM8gE,EAAKngE,EAAI4/D,EAAM,GAC/BK,EAAU5gE,KAAMkiE,EAAIvhE,EAAI4/D,EAAM,GAC9BK,EAAU5gE,KAAM6gE,EAAKlgE,EAAI4/D,EAAM,GAE/BuB,GAAYI,GAGZA,EAAMrB,EAAKA,KACXiC,EAAOjC,EAAKA,UASb,IAHAqB,EAAMrB,KAGOiC,EAAO,CAGZX,EAMc,IAATA,EAGXT,GADAQ,EAAMe,GAAwBlB,GAAcG,GAAOtB,EAAWL,GAC3CK,EAAWL,EAAKQ,EAAMC,EAAMG,EAAS,GAIpC,IAATgB,GAEXe,GAAahB,EAAKtB,EAAWL,EAAKQ,EAAMC,EAAMG,GAb9CO,GAAcK,GAAcG,GAAOtB,EAAWL,EAAKQ,EAAMC,EAAMG,EAAS,GAiBzE,KAED,CAIF,CAGA,SAAS6B,GAAOd,GAEf,MAAMx8D,EAAIw8D,EAAIpB,KACbn7D,EAAIu8D,EACJt8D,EAAIs8D,EAAIrB,KAET,GAAKoB,GAAMv8D,EAAGC,EAAGC,IAAO,EAAI,OAAO,EAGnC,MAAMyd,EAAK3d,EAAEtD,EAAGohB,EAAK7d,EAAEvD,EAAG4M,EAAKpJ,EAAExD,EAAGkhB,EAAK5d,EAAErD,EAAGohB,EAAK9d,EAAEtD,EAAG4M,EAAKrJ,EAAEvD,EAGzD2b,EAAKqF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EAC7DiP,EAAKqF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EACxDmP,EAAKiF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EACxDqP,EAAKiF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EAEzD,IAAIyjB,EAAI9sB,EAAEi7D,KACV,KAAQnuC,IAAMhtB,GAAI,CAEjB,GAAKgtB,EAAEtwB,GAAK4b,GAAM0U,EAAEtwB,GAAKgc,GAAMsU,EAAErwB,GAAK4b,GAAMyU,EAAErwB,GAAKgc,GAClD8kD,GAAiB9/C,EAAIC,EAAIE,EAAIC,EAAIzU,EAAIC,EAAIyjB,EAAEtwB,EAAGswB,EAAErwB,IAChD4/D,GAAMvvC,EAAEouC,KAAMpuC,EAAGA,EAAEmuC,OAAU,EAAI,OAAO,EACzCnuC,EAAIA,EAAEmuC,IAEP,CAEA,OAAO,CAER,CAEA,SAASkC,GAAab,EAAKnB,EAAMC,EAAMG,GAEtC,MAAMz7D,EAAIw8D,EAAIpB,KACbn7D,EAAIu8D,EACJt8D,EAAIs8D,EAAIrB,KAET,GAAKoB,GAAMv8D,EAAGC,EAAGC,IAAO,EAAI,OAAO,EAEnC,MAAMyd,EAAK3d,EAAEtD,EAAGohB,EAAK7d,EAAEvD,EAAG4M,EAAKpJ,EAAExD,EAAGkhB,EAAK5d,EAAErD,EAAGohB,EAAK9d,EAAEtD,EAAG4M,EAAKrJ,EAAEvD,EAGzD2b,EAAKqF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EAC7DiP,EAAKqF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EACxDmP,EAAKiF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EACxDqP,EAAKiF,EAAKG,EAAOH,EAAKrU,EAAKqU,EAAKrU,EAASwU,EAAKxU,EAAKwU,EAAKxU,EAGnDm0D,EAAOhB,GAAQpkD,EAAIC,EAAI8iD,EAAMC,EAAMG,GACxCkC,EAAOjB,GAAQhkD,EAAIC,EAAI0iD,EAAMC,EAAMG,GAEpC,IAAIzuC,EAAIwvC,EAAIG,MACXpgE,EAAIigE,EAAII,MAGT,KAAQ5vC,GAAKA,EAAEvZ,GAAKiqD,GAAQnhE,GAAKA,EAAEkX,GAAKkqD,GAAO,CAE9C,GAAK3wC,EAAEtwB,GAAK4b,GAAM0U,EAAEtwB,GAAKgc,GAAMsU,EAAErwB,GAAK4b,GAAMyU,EAAErwB,GAAKgc,GAAMqU,IAAMhtB,GAAKgtB,IAAM9sB,GACzEu9D,GAAiB9/C,EAAIC,EAAIE,EAAIC,EAAIzU,EAAIC,EAAIyjB,EAAEtwB,EAAGswB,EAAErwB,IAAO4/D,GAAMvvC,EAAEouC,KAAMpuC,EAAGA,EAAEmuC,OAAU,EAAI,OAAO,EAGhG,GAFAnuC,EAAIA,EAAE2vC,MAEDpgE,EAAEG,GAAK4b,GAAM/b,EAAEG,GAAKgc,GAAMnc,EAAEI,GAAK4b,GAAMhc,EAAEI,GAAKgc,GAAMpc,IAAMyD,GAAKzD,IAAM2D,GACzEu9D,GAAiB9/C,EAAIC,EAAIE,EAAIC,EAAIzU,EAAIC,EAAIhN,EAAEG,EAAGH,EAAEI,IAAO4/D,GAAMhgE,EAAE6+D,KAAM7+D,EAAGA,EAAE4+D,OAAU,EAAI,OAAO,EAChG5+D,EAAIA,EAAEqgE,KAEP,CAGA,KAAQ5vC,GAAKA,EAAEvZ,GAAKiqD,GAAO,CAE1B,GAAK1wC,EAAEtwB,GAAK4b,GAAM0U,EAAEtwB,GAAKgc,GAAMsU,EAAErwB,GAAK4b,GAAMyU,EAAErwB,GAAKgc,GAAMqU,IAAMhtB,GAAKgtB,IAAM9sB,GACzEu9D,GAAiB9/C,EAAIC,EAAIE,EAAIC,EAAIzU,EAAIC,EAAIyjB,EAAEtwB,EAAGswB,EAAErwB,IAAO4/D,GAAMvvC,EAAEouC,KAAMpuC,EAAGA,EAAEmuC,OAAU,EAAI,OAAO,EAChGnuC,EAAIA,EAAE2vC,KAEP,CAGA,KAAQpgE,GAAKA,EAAEkX,GAAKkqD,GAAO,CAE1B,GAAKphE,EAAEG,GAAK4b,GAAM/b,EAAEG,GAAKgc,GAAMnc,EAAEI,GAAK4b,GAAMhc,EAAEI,GAAKgc,GAAMpc,IAAMyD,GAAKzD,IAAM2D,GACzEu9D,GAAiB9/C,EAAIC,EAAIE,EAAIC,EAAIzU,EAAIC,EAAIhN,EAAEG,EAAGH,EAAEI,IAAO4/D,GAAMhgE,EAAE6+D,KAAM7+D,EAAGA,EAAE4+D,OAAU,EAAI,OAAO,EAChG5+D,EAAIA,EAAEqgE,KAEP,CAEA,OAAO,CAER,CAGA,SAASW,GAAwBp3B,EAAO+0B,EAAWL,GAElD,IAAI7tC,EAAImZ,EACR,EAAG,CAEF,MAAMnmC,EAAIgtB,EAAEouC,KACXn7D,EAAI+sB,EAAEmuC,KAAKA,MAEL12D,GAAQzE,EAAGC,IAAOstC,GAAYvtC,EAAGgtB,EAAGA,EAAEmuC,KAAMl7D,IAAO29D,GAAe59D,EAAGC,IAAO29D,GAAe39D,EAAGD,KAEpGk7D,EAAU5gE,KAAM0F,EAAE/E,EAAI4/D,EAAM,GAC5BK,EAAU5gE,KAAM0yB,EAAE/xB,EAAI4/D,EAAM,GAC5BK,EAAU5gE,KAAM2F,EAAEhF,EAAI4/D,EAAM,GAG5BuB,GAAYpvC,GACZovC,GAAYpvC,EAAEmuC,MAEdnuC,EAAImZ,EAAQlmC,GAIb+sB,EAAIA,EAAEmuC,IAEP,OAAUnuC,IAAMmZ,GAEhB,OAAOk2B,GAAcrvC,EAEtB,CAGA,SAASwwC,GAAar3B,EAAO+0B,EAAWL,EAAKQ,EAAMC,EAAMG,GAGxD,IAAIz7D,EAAImmC,EACR,EAAG,CAEF,IAAIlmC,EAAID,EAAEm7D,KAAKA,KACf,KAAQl7D,IAAMD,EAAEo7D,MAAO,CAEtB,GAAKp7D,EAAE/E,IAAMgF,EAAEhF,GAAK4iE,GAAiB79D,EAAGC,GAAM,CAG7C,IAAIC,EAAI49D,GAAc99D,EAAGC,GASzB,OANAD,EAAIq8D,GAAcr8D,EAAGA,EAAEm7D,MACvBj7D,EAAIm8D,GAAcn8D,EAAGA,EAAEi7D,MAGvBa,GAAch8D,EAAGk7D,EAAWL,EAAKQ,EAAMC,EAAMG,EAAS,QACtDO,GAAc97D,EAAGg7D,EAAWL,EAAKQ,EAAMC,EAAMG,EAAS,EAGvD,CAEAx7D,EAAIA,EAAEk7D,IAEP,CAEAn7D,EAAIA,EAAEm7D,IAEP,OAAUn7D,IAAMmmC,EAEjB,CA+BA,SAAS01B,GAAU77D,EAAGC,GAErB,OAAOD,EAAEtD,EAAIuD,EAAEvD,CAEhB,CAGA,SAASo/D,GAAepB,EAAMM,GAE7B,MAAM+C,EAgBP,SAAyBrD,EAAMM,GAE9B,IAECx+D,EAFGwwB,EAAIguC,EACPl+C,GAAOwC,IAGR,MAAM0+C,EAAKtD,EAAKh+D,EAAGuhE,EAAKvD,EAAK/9D,EAI7B,EAAG,CAEF,GAAKshE,GAAMjxC,EAAErwB,GAAKshE,GAAMjxC,EAAEmuC,KAAKx+D,GAAKqwB,EAAEmuC,KAAKx+D,IAAMqwB,EAAErwB,EAAI,CAEtD,MAAMD,EAAIswB,EAAEtwB,GAAMuhE,EAAKjxC,EAAErwB,IAAQqwB,EAAEmuC,KAAKz+D,EAAIswB,EAAEtwB,IAAQswB,EAAEmuC,KAAKx+D,EAAIqwB,EAAErwB,GACnE,GAAKD,GAAKshE,GAAMthE,EAAIogB,IAEnBA,EAAKpgB,EACLF,EAAIwwB,EAAEtwB,EAAIswB,EAAEmuC,KAAKz+D,EAAIswB,EAAIA,EAAEmuC,KACtBz+D,IAAMshE,GAAK,OAAOxhE,CAIzB,CAEAwwB,EAAIA,EAAEmuC,IAEP,OAAUnuC,IAAMguC,GAEhB,IAAOx+D,EAAI,OAAO,KAMlB,MAAM4gE,EAAO5gE,EACZ0hE,EAAK1hE,EAAEE,EACPyhE,EAAK3hE,EAAEG,EACR,IAAuBi2C,EAAnBwrB,EAAS9+C,IAEb0N,EAAIxwB,EAEJ,GAEMwhE,GAAMhxC,EAAEtwB,GAAKswB,EAAEtwB,GAAKwhE,GAAMF,IAAOhxC,EAAEtwB,GACtC+gE,GAAiBQ,EAAKE,EAAKH,EAAKlhD,EAAImhD,EAAIC,EAAIC,EAAIF,EAAKE,EAAKrhD,EAAKkhD,EAAIC,EAAIjxC,EAAEtwB,EAAGswB,EAAErwB,KAE/Ei2C,EAAMp3C,KAAK8C,IAAK2/D,EAAKjxC,EAAErwB,IAAQqhE,EAAKhxC,EAAEtwB,GAEjCkhE,GAAe5wC,EAAG0tC,KAAY9nB,EAAMwrB,GAAYxrB,IAAQwrB,IAAYpxC,EAAEtwB,EAAIF,EAAEE,GAAOswB,EAAEtwB,IAAMF,EAAEE,GAAK2hE,GAAsB7hE,EAAGwwB,OAE/HxwB,EAAIwwB,EACJoxC,EAASxrB,IAMX5lB,EAAIA,EAAEmuC,WAEGnuC,IAAMowC,GAEhB,OAAO5gE,CAER,CAhFgB8hE,CAAgB5D,EAAMM,GACrC,IAAO+C,EAEN,OAAO/C,EAIR,MAAMuD,EAAgBT,GAAcC,EAAQrD,GAI5C,OADA2B,GAAckC,EAAeA,EAAcpD,MACpCkB,GAAc0B,EAAQA,EAAO5C,KAErC,CAsEA,SAASkD,GAAsB7hE,EAAGwwB,GAEjC,OAAOuvC,GAAM//D,EAAE4+D,KAAM5+D,EAAGwwB,EAAEouC,MAAS,GAAKmB,GAAMvvC,EAAEmuC,KAAM3+D,EAAGA,EAAE2+D,MAAS,CAErE,CAyFA,SAASuB,GAAQhgE,EAAGC,EAAG0+D,EAAMC,EAAMG,GAgBlC,OAPA/+D,EAAyB,aADzBA,EAAyB,YADzBA,EAAyB,YADzBA,EAAyB,WAHzBA,GAAMA,EAAI2+D,GAASI,EAAU,GAGjB/+D,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAKjBC,EAAyB,aADzBA,EAAyB,YADzBA,EAAyB,YADzBA,EAAyB,WAPzBA,GAAMA,EAAI2+D,GAASG,EAAU,GAOjB9+D,GAAK,IACLA,GAAK,IACLA,GAAK,IACLA,GAAK,KAEC,CAEnB,CAGA,SAASi/D,GAAaz1B,GAErB,IAAInZ,EAAImZ,EACPq4B,EAAWr4B,EACZ,IAEMnZ,EAAEtwB,EAAI8hE,EAAS9hE,GAAOswB,EAAEtwB,IAAM8hE,EAAS9hE,GAAKswB,EAAErwB,EAAI6hE,EAAS7hE,KAAM6hE,EAAWxxC,GACjFA,EAAIA,EAAEmuC,WAEGnuC,IAAMmZ,GAEhB,OAAOq4B,CAER,CAGA,SAASf,GAAiB9/C,EAAIC,EAAIE,EAAIC,EAAIzU,EAAIC,EAAI8nD,EAAIC,GAErD,OAAShoD,EAAK+nD,IAASzzC,EAAK0zC,KAAU3zC,EAAK0zC,IAAS9nD,EAAK+nD,KAC7C3zC,EAAK0zC,IAAStzC,EAAKuzC,KAAUxzC,EAAKuzC,IAASzzC,EAAK0zC,KAChDxzC,EAAKuzC,IAAS9nD,EAAK+nD,KAAUhoD,EAAK+nD,IAAStzC,EAAKuzC,EAE7D,CAGA,SAASuM,GAAiB79D,EAAGC,GAE5B,OAAOD,EAAEm7D,KAAKlgE,IAAMgF,EAAEhF,GAAK+E,EAAEo7D,KAAKngE,IAAMgF,EAAEhF,IAsD3C,SAA4B+E,EAAGC,GAE9B,IAAI+sB,EAAIhtB,EACR,EAAG,CAEF,GAAKgtB,EAAE/xB,IAAM+E,EAAE/E,GAAK+xB,EAAEmuC,KAAKlgE,IAAM+E,EAAE/E,GAAK+xB,EAAE/xB,IAAMgF,EAAEhF,GAAK+xB,EAAEmuC,KAAKlgE,IAAMgF,EAAEhF,GACrEsyC,GAAYvgB,EAAGA,EAAEmuC,KAAMn7D,EAAGC,GAAM,OAAO,EACxC+sB,EAAIA,EAAEmuC,IAEP,OAAUnuC,IAAMhtB,GAEhB,OAAO,CAER,CAnEkDy+D,CAAmBz+D,EAAGC,KAC3D29D,GAAe59D,EAAGC,IAAO29D,GAAe39D,EAAGD,IA8ExD,SAAuBA,EAAGC,GAEzB,IAAI+sB,EAAIhtB,EACP0+D,GAAS,EACV,MAAMrN,GAAOrxD,EAAEtD,EAAIuD,EAAEvD,GAAM,EAC1B40D,GAAOtxD,EAAErD,EAAIsD,EAAEtD,GAAM,EACtB,GAEUqwB,EAAErwB,EAAI20D,IAAWtkC,EAAEmuC,KAAKx+D,EAAI20D,GAAUtkC,EAAEmuC,KAAKx+D,IAAMqwB,EAAErwB,GAC3D00D,GAAOrkC,EAAEmuC,KAAKz+D,EAAIswB,EAAEtwB,IAAQ40D,EAAKtkC,EAAErwB,IAAQqwB,EAAEmuC,KAAKx+D,EAAIqwB,EAAErwB,GAAMqwB,EAAEtwB,IAClEgiE,GAAWA,GACZ1xC,EAAIA,EAAEmuC,WAEGnuC,IAAMhtB,GAEhB,OAAO0+D,CAER,CA/F+DC,CAAc3+D,EAAGC,KAClEs8D,GAAMv8D,EAAEo7D,KAAMp7D,EAAGC,EAAEm7D,OAAUmB,GAAMv8D,EAAGC,EAAEm7D,KAAMn7D,KAChDwE,GAAQzE,EAAGC,IAAOs8D,GAAMv8D,EAAEo7D,KAAMp7D,EAAGA,EAAEm7D,MAAS,GAAKoB,GAAMt8D,EAAEm7D,KAAMn7D,EAAGA,EAAEk7D,MAAS,EAE3F,CAGA,SAASoB,GAAMvvC,EAAGjtB,EAAGgJ,GAEpB,OAAShJ,EAAEpD,EAAIqwB,EAAErwB,IAAQoM,EAAErM,EAAIqD,EAAErD,IAAQqD,EAAErD,EAAIswB,EAAEtwB,IAAQqM,EAAEpM,EAAIoD,EAAEpD,EAElE,CAGA,SAAS8H,GAAQif,EAAIC,GAEpB,OAAOD,EAAGhnB,IAAMinB,EAAGjnB,GAAKgnB,EAAG/mB,IAAMgnB,EAAGhnB,CAErC,CAGA,SAAS4wC,GAAY7pB,EAAIk7C,EAAIj7C,EAAIk7C,GAEhC,MAAMC,EAAKr3C,GAAM80C,GAAM74C,EAAIk7C,EAAIj7C,IACzBo7C,EAAKt3C,GAAM80C,GAAM74C,EAAIk7C,EAAIC,IACzBG,EAAKv3C,GAAM80C,GAAM54C,EAAIk7C,EAAIn7C,IACzBu7C,EAAKx3C,GAAM80C,GAAM54C,EAAIk7C,EAAID,IAE/B,OAAKE,IAAOC,GAAMC,IAAOC,MAEb,IAAPH,IAAYI,GAAWx7C,EAAIC,EAAIi7C,QACxB,IAAPG,IAAYG,GAAWx7C,EAAIm7C,EAAID,QACxB,IAAPI,IAAYE,GAAWv7C,EAAID,EAAIm7C,OACxB,IAAPI,IAAYC,GAAWv7C,EAAIi7C,EAAIC,MAIrC,CAGA,SAASK,GAAWlyC,EAAGjtB,EAAGgJ,GAEzB,OAAOhJ,EAAErD,GAAKlB,KAAKa,IAAK2wB,EAAEtwB,EAAGqM,EAAErM,IAAOqD,EAAErD,GAAKlB,KAAKY,IAAK4wB,EAAEtwB,EAAGqM,EAAErM,IAAOqD,EAAEpD,GAAKnB,KAAKa,IAAK2wB,EAAErwB,EAAGoM,EAAEpM,IAAOoD,EAAEpD,GAAKnB,KAAKY,IAAK4wB,EAAErwB,EAAGoM,EAAEpM,EAE7H,CAEA,SAAS8qB,GAAM03C,GAEd,OAAOA,EAAM,EAAI,EAAIA,EAAM,GAAM,EAAI,CAEtC,CAmBA,SAASvB,GAAe59D,EAAGC,GAE1B,OAAOs8D,GAAMv8D,EAAEo7D,KAAMp7D,EAAGA,EAAEm7D,MAAS,EAClCoB,GAAMv8D,EAAGC,EAAGD,EAAEm7D,OAAU,GAAKoB,GAAMv8D,EAAGA,EAAEo7D,KAAMn7D,IAAO,EACrDs8D,GAAMv8D,EAAGC,EAAGD,EAAEo7D,MAAS,GAAKmB,GAAMv8D,EAAGA,EAAEm7D,KAAMl7D,GAAM,CAErD,CAwBA,SAAS69D,GAAc99D,EAAGC,GAEzB,MAAMrC,EAAK,IAAIwhE,GAAMp/D,EAAE/E,EAAG+E,EAAEtD,EAAGsD,EAAErD,GAChCmB,EAAK,IAAIshE,GAAMn/D,EAAEhF,EAAGgF,EAAEvD,EAAGuD,EAAEtD,GAC3B0iE,EAAKr/D,EAAEm7D,KACPmE,EAAKr/D,EAAEm7D,KAcR,OAZAp7D,EAAEm7D,KAAOl7D,EACTA,EAAEm7D,KAAOp7D,EAETpC,EAAGu9D,KAAOkE,EACVA,EAAGjE,KAAOx9D,EAEVE,EAAGq9D,KAAOv9D,EACVA,EAAGw9D,KAAOt9D,EAEVwhE,EAAGnE,KAAOr9D,EACVA,EAAGs9D,KAAOkE,EAEHxhE,CAER,CAGA,SAASq+D,GAAYlhE,EAAGyB,EAAGC,EAAG4xD,GAE7B,MAAMvhC,EAAI,IAAIoyC,GAAMnkE,EAAGyB,EAAGC,GAgB1B,OAdO4xD,GAONvhC,EAAEmuC,KAAO5M,EAAK4M,KACdnuC,EAAEouC,KAAO7M,EACTA,EAAK4M,KAAKC,KAAOpuC,EACjBuhC,EAAK4M,KAAOnuC,IARZA,EAAEouC,KAAOpuC,EACTA,EAAEmuC,KAAOnuC,GAWHA,CAER,CAEA,SAASovC,GAAYpvC,GAEpBA,EAAEmuC,KAAKC,KAAOpuC,EAAEouC,KAChBpuC,EAAEouC,KAAKD,KAAOnuC,EAAEmuC,KAEXnuC,EAAE2vC,QAAQ3vC,EAAE2vC,MAAMC,MAAQ5vC,EAAE4vC,OAC5B5vC,EAAE4vC,QAAQ5vC,EAAE4vC,MAAMD,MAAQ3vC,EAAE2vC,MAElC,CAEA,SAASyC,GAAMnkE,EAAGyB,EAAGC,GAGpBzC,KAAKe,EAAIA,EAGTf,KAAKwC,EAAIA,EACTxC,KAAKyC,EAAIA,EAGTzC,KAAKkhE,KAAO,KACZlhE,KAAKihE,KAAO,KAGZjhE,KAAKuZ,EAAI,EAGTvZ,KAAKyiE,MAAQ,KACbziE,KAAK0iE,MAAQ,KAGb1iE,KAAKyhE,SAAU,CAEhB,CAgBA,MAAM4D,GAIL,WAAOhD,CAAMiD,GAEZ,MAAMjjE,EAAIijE,EAAQrkE,OAClB,IAAI6E,EAAI,EAER,IAAM,IAAIgtB,EAAIzwB,EAAI,EAAGwD,EAAI,EAAGA,EAAIxD,EAAGywB,EAAIjtB,IAEtCC,GAAKw/D,EAASxyC,GAAItwB,EAAI8iE,EAASz/D,GAAIpD,EAAI6iE,EAASz/D,GAAIrD,EAAI8iE,EAASxyC,GAAIrwB,EAItE,MAAW,GAAJqD,CAER,CAEA,kBAAOy/D,CAAajL,GAEnB,OAAO+K,GAAWhD,KAAM/H,GAAQ,CAEjC,CAEA,uBAAOkL,CAAkBF,EAASlF,GAEjC,MAAMhsB,EAAW,GACXssB,EAAc,GACd+E,EAAQ,GAEdC,GAAiBJ,GACjBK,GAAYvxB,EAAUkxB,GAItB,IAAIM,EAAYN,EAAQrkE,OAExBm/D,EAAMyF,QAASH,IAEf,IAAM,IAAI3kE,EAAI,EAAGA,EAAIq/D,EAAMn/D,OAAQF,IAElC2/D,EAAYtgE,KAAMwlE,GAClBA,GAAaxF,EAAOr/D,GAAIE,OACxB0kE,GAAYvxB,EAAUgsB,EAAOr/D,IAM9B,MAAMigE,EAAYP,GAAoBrsB,EAAUssB,GAIhD,IAAM,IAAI3/D,EAAI,EAAGA,EAAIigE,EAAU//D,OAAQF,GAAK,EAE3C0kE,EAAMrlE,KAAM4gE,EAAUlgE,MAAOC,EAAGA,EAAI,IAIrC,OAAO0kE,CAER,EAID,SAASC,GAAiB9/C,GAEzB,MAAM5kB,EAAI4kB,EAAO3kB,OAEZD,EAAI,GAAK4kB,EAAQ5kB,EAAI,GAAIuJ,OAAQqb,EAAQ,KAE7CA,EAAOkpC,KAIT,CAEA,SAAS6W,GAAYvxB,EAAUkxB,GAE9B,IAAM,IAAIvkE,EAAI,EAAGA,EAAIukE,EAAQrkE,OAAQF,IAEpCqzC,EAASh0C,KAAMklE,EAASvkE,GAAIyB,GAC5B4xC,EAASh0C,KAAMklE,EAASvkE,GAAI0B,EAI9B,CAyBA,MAAMqjE,WAAwBj4B,GAE7BjrC,WAAAA,GAAkK,IAArJw2B,EAAMj1B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAIg8D,GAAO,CAAE,IAAIp5D,GAAS,GAAK,IAAO,IAAIA,IAAW,GAAK,IAAO,IAAIA,IAAW,IAAO,IAAO,IAAIA,GAAS,IAAO,MAAWqU,EAAOjX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE7JqT,QAEAxX,KAAKH,KAAO,kBAEZG,KAAKs8B,WAAa,CACjBlD,OAAQA,EACRhe,QAASA,GAGVge,EAAS7iB,MAAMC,QAAS4iB,GAAWA,EAAS,CAAEA,GAE9C,MAAM+a,EAAQn0C,KAER+lE,EAAgB,GAChBC,EAAU,GAEhB,IAAM,IAAIjlE,EAAI,EAAGC,EAAIo4B,EAAOn4B,OAAQF,EAAIC,EAAGD,IAAO,CAGjDklE,EADc7sC,EAAQr4B,GAGvB,CAWA,SAASklE,EAAU1pC,GAElB,MAAM2pC,EAAc,GAIdC,OAA0CpmE,IAA1Bqb,EAAQ+qD,cAA8B/qD,EAAQ+qD,cAAgB,GAC9EC,OAA0BrmE,IAAlBqb,EAAQgrD,MAAsBhrD,EAAQgrD,MAAQ,EACtD9qD,OAA0Bvb,IAAlBqb,EAAQE,MAAsBF,EAAQE,MAAQ,EAE5D,IAAI+qD,OAAwCtmE,IAAzBqb,EAAQirD,cAA6BjrD,EAAQirD,aAC5DC,OAA4CvmE,IAA3Bqb,EAAQkrD,eAA+BlrD,EAAQkrD,eAAiB,GACjFC,OAAkCxmE,IAAtBqb,EAAQmrD,UAA0BnrD,EAAQmrD,UAAYD,EAAiB,GACnFE,OAAsCzmE,IAAxBqb,EAAQorD,YAA4BprD,EAAQorD,YAAc,EACxEC,OAA0C1mE,IAA1Bqb,EAAQqrD,cAA8BrrD,EAAQqrD,cAAgB,EAElF,MAAMC,EAActrD,EAAQsrD,YAEtBC,OAAgC5mE,IAAxBqb,EAAQwrD,YAA4BxrD,EAAQwrD,YAAcC,GAIxE,IAAIC,EACAC,EAAYC,EAAU5iD,EAAQ6iD,EADlBC,GAAgB,EAG3BR,IAEJI,EAAaJ,EAAY1S,gBAAiBoS,GAE1Cc,GAAgB,EAChBb,GAAe,EAMfU,EAAaL,EAAYzR,oBAAqBmR,GAAO,GAIrDY,EAAW,IAAI/kD,GACfmC,EAAS,IAAInC,GACbglD,EAAY,IAAIhlD,IAMVokD,IAENI,EAAgB,EAChBH,EAAiB,EACjBC,EAAY,EACZC,EAAc,GAMf,MAAMW,EAAc5qC,EAAMgkC,cAAe4F,GAEzC,IAAI/xB,EAAW+yB,EAAY5qC,MAC3B,MAAM6jC,EAAQ+G,EAAY/G,MAI1B,IAFkBiF,GAAWE,YAAanxB,GAE3B,CAEdA,EAAWA,EAASgzB,UAIpB,IAAM,IAAIn5D,EAAI,EAAGo5D,EAAKjH,EAAMn/D,OAAQgN,EAAIo5D,EAAIp5D,IAAO,CAElD,MAAMq5D,EAAQlH,EAAOnyD,GAEhBo3D,GAAWE,YAAa+B,KAE5BlH,EAAOnyD,GAAMq5D,EAAMF,UAIrB,CAED,CAGA,MAAM3B,EAAQJ,GAAWG,iBAAkBpxB,EAAUgsB,GAI/CkF,EAAUlxB,EAEhB,IAAM,IAAInmC,EAAI,EAAGo5D,EAAKjH,EAAMn/D,OAAQgN,EAAIo5D,EAAIp5D,IAAO,CAElD,MAAMq5D,EAAQlH,EAAOnyD,GAErBmmC,EAAWA,EAAS8F,OAAQotB,EAE7B,CAGA,SAASC,EAAUC,EAAIlS,EAAKxvC,GAI3B,OAFOwvC,GAAMzuD,QAAQ+wB,MAAO,6CAErB4vC,EAAG9/D,QAAQM,gBAAiBstD,EAAKxvC,EAEzC,CAEA,MAAM2hD,EAAOrzB,EAASnzC,OAAQymE,EAAOjC,EAAMxkE,OAM3C,SAAS0mE,EAAaC,EAAMC,EAAQC,GASnC,IAAIC,EAAWC,EAAWC,EAK1B,MAAMC,EAAWN,EAAKplE,EAAIqlE,EAAOrlE,EAChC2lE,EAAWP,EAAKnlE,EAAIolE,EAAOplE,EACtB2lE,EAAWN,EAAOtlE,EAAIolE,EAAKplE,EAChC6lE,EAAWP,EAAOrlE,EAAImlE,EAAKnlE,EAEtB6lE,EAAiBJ,EAAWA,EAAWC,EAAWA,EAGlDI,EAAeL,EAAWG,EAAWF,EAAWC,EAEtD,GAAK9mE,KAAK8C,IAAKmkE,GAAezpD,OAAOC,QAAU,CAM9C,MAAMypD,EAAalnE,KAAK+H,KAAMi/D,GACxBG,EAAannE,KAAK+H,KAAM++D,EAAWA,EAAWC,EAAWA,GAIzDK,EAAkBb,EAAOrlE,EAAI2lE,EAAWK,EACxCG,EAAkBd,EAAOplE,EAAIylE,EAAWM,EAOxCI,IALkBd,EAAOtlE,EAAI6lE,EAAWI,EAKfC,GAAkBL,GAJzBP,EAAOrlE,EAAI2lE,EAAWK,EAK1BE,GAAkBP,IACnCF,EAAWG,EAAWF,EAAWC,GAIpCL,EAAcW,EAAgBR,EAAWU,EAAKhB,EAAKplE,EACnDwlE,EAAcW,EAAgBR,EAAWS,EAAKhB,EAAKnlE,EAInD,MAAMomE,EAAkBd,EAAYA,EAAYC,EAAYA,EAC5D,GAAKa,GAAiB,EAErB,OAAO,IAAI9hE,GAASghE,EAAWC,GAI/BC,EAAY3mE,KAAK+H,KAAMw/D,EAAgB,EAIzC,KAAO,CAIN,IAAIC,GAAe,EAEdZ,EAAWppD,OAAOC,QAEjBqpD,EAAWtpD,OAAOC,UAEtB+pD,GAAe,GAMXZ,GAAappD,OAAOC,QAEnBqpD,GAAatpD,OAAOC,UAExB+pD,GAAe,GAMXxnE,KAAKisB,KAAM46C,KAAe7mE,KAAKisB,KAAM86C,KAEzCS,GAAe,GAQbA,GAGJf,GAAcI,EACdH,EAAYE,EACZD,EAAY3mE,KAAK+H,KAAMi/D,KAKvBP,EAAYG,EACZF,EAAYG,EACZF,EAAY3mE,KAAK+H,KAAMi/D,EAAe,GAIxC,CAEA,OAAO,IAAIvhE,GAASghE,EAAYE,EAAWD,EAAYC,EAExD,CAGA,MAAMc,EAAmB,GAEzB,IAAM,IAAIhoE,EAAI,EAAGsb,EAAKipD,EAAQrkE,OAAQqoB,EAAIjN,EAAK,EAAGu7C,EAAI72D,EAAI,EAAGA,EAAIsb,EAAItb,IAAMuoB,IAAMsuC,IAE3EtuC,IAAMjN,IAAKiN,EAAI,GACfsuC,IAAMv7C,IAAKu7C,EAAI,GAKpBmR,EAAkBhoE,GAAM4mE,EAAarC,EAASvkE,GAAKukE,EAASh8C,GAAKg8C,EAAS1N,IAI3E,MAAMoR,EAAiB,GACvB,IAAIC,EAAkBC,EAAoBH,EAAiB7uB,SAE3D,IAAM,IAAIjsC,EAAI,EAAGo5D,EAAKjH,EAAMn/D,OAAQgN,EAAIo5D,EAAIp5D,IAAO,CAElD,MAAMq5D,EAAQlH,EAAOnyD,GAErBg7D,EAAmB,GAEnB,IAAM,IAAIloE,EAAI,EAAGsb,EAAKirD,EAAMrmE,OAAQqoB,EAAIjN,EAAK,EAAGu7C,EAAI72D,EAAI,EAAGA,EAAIsb,EAAItb,IAAMuoB,IAAMsuC,IAEzEtuC,IAAMjN,IAAKiN,EAAI,GACfsuC,IAAMv7C,IAAKu7C,EAAI,GAGpBqR,EAAkBloE,GAAM4mE,EAAaL,EAAOvmE,GAAKumE,EAAOh+C,GAAKg+C,EAAO1P,IAIrEoR,EAAe5oE,KAAM6oE,GACrBC,EAAoBA,EAAkBhvB,OAAQ+uB,EAE/C,CAKA,IAAM,IAAIljE,EAAI,EAAGA,EAAI0gE,EAAe1gE,IAAO,CAI1C,MAAMrD,EAAIqD,EAAI0gE,EACRltD,EAAI+sD,EAAiBhlE,KAAK4E,IAAKxD,EAAIpB,KAAKC,GAAK,GAC7C4nE,EAAK5C,EAAYjlE,KAAK6E,IAAKzD,EAAIpB,KAAKC,GAAK,GAAMilE,EAIrD,IAAM,IAAIzlE,EAAI,EAAGsb,EAAKipD,EAAQrkE,OAAQF,EAAIsb,EAAItb,IAAO,CAEpD,MAAMqoE,EAAO7B,EAAUjC,EAASvkE,GAAKgoE,EAAkBhoE,GAAKooE,GAE5DvhE,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,GAAK8W,EAEtB,CAIA,IAAM,IAAItL,EAAI,EAAGo5D,EAAKjH,EAAMn/D,OAAQgN,EAAIo5D,EAAIp5D,IAAO,CAElD,MAAMq5D,EAAQlH,EAAOnyD,GACrBg7D,EAAmBD,EAAgB/6D,GAEnC,IAAM,IAAIlN,EAAI,EAAGsb,EAAKirD,EAAMrmE,OAAQF,EAAIsb,EAAItb,IAAO,CAElD,MAAMqoE,EAAO7B,EAAUD,EAAOvmE,GAAKkoE,EAAkBloE,GAAKooE,GAE1DvhE,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,GAAK8W,EAEtB,CAED,CAED,CAEA,MAAM4vD,EAAK5C,EAAYC,EAIvB,IAAM,IAAIzlE,EAAI,EAAGA,EAAI0mE,EAAM1mE,IAAO,CAEjC,MAAMqoE,EAAO/C,EAAekB,EAAUnzB,EAAUrzC,GAAKmoE,EAAmBnoE,GAAKooE,GAAO/0B,EAAUrzC,GAEvFmmE,GAQN9iD,EAAOzc,KAAMo/D,EAAW31B,QAAS,IAAM/oC,eAAgB+gE,EAAK5mE,GAC5DwkE,EAASr/D,KAAMo/D,EAAW1R,UAAW,IAAMhtD,eAAgB+gE,EAAK3mE,GAEhEwkE,EAAUt/D,KAAMm/D,EAAY,IAAMj/D,IAAKuc,GAASvc,IAAKm/D,GAErDp/D,EAAGq/D,EAAUzkE,EAAGykE,EAAUxkE,EAAGwkE,EAAU1tD,IAXvC3R,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,EAAG,EAerB,CAKA,IAAM,IAAIsC,EAAI,EAAGA,GAAKqhE,EAAOrhE,IAE5B,IAAM,IAAIhE,EAAI,EAAGA,EAAI0mE,EAAM1mE,IAAO,CAEjC,MAAMqoE,EAAO/C,EAAekB,EAAUnzB,EAAUrzC,GAAKmoE,EAAmBnoE,GAAKooE,GAAO/0B,EAAUrzC,GAEvFmmE,GAQN9iD,EAAOzc,KAAMo/D,EAAW31B,QAASrsC,IAAMsD,eAAgB+gE,EAAK5mE,GAC5DwkE,EAASr/D,KAAMo/D,EAAW1R,UAAWtwD,IAAMsD,eAAgB+gE,EAAK3mE,GAEhEwkE,EAAUt/D,KAAMm/D,EAAY/hE,IAAM8C,IAAKuc,GAASvc,IAAKm/D,GAErDp/D,EAAGq/D,EAAUzkE,EAAGykE,EAAUxkE,EAAGwkE,EAAU1tD,IAXvC3R,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,EAAG6Y,EAAQ8qD,EAAQrhE,EAerC,CAQD,IAAM,IAAIgB,EAAI0gE,EAAgB,EAAG1gE,GAAK,EAAGA,IAAO,CAE/C,MAAMrD,EAAIqD,EAAI0gE,EACRltD,EAAI+sD,EAAiBhlE,KAAK4E,IAAKxD,EAAIpB,KAAKC,GAAK,GAC7C4nE,EAAK5C,EAAYjlE,KAAK6E,IAAKzD,EAAIpB,KAAKC,GAAK,GAAMilE,EAIrD,IAAM,IAAIzlE,EAAI,EAAGsb,EAAKipD,EAAQrkE,OAAQF,EAAIsb,EAAItb,IAAO,CAEpD,MAAMqoE,EAAO7B,EAAUjC,EAASvkE,GAAKgoE,EAAkBhoE,GAAKooE,GAC5DvhE,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,EAAG6Y,EAAQ/B,EAE5B,CAIA,IAAM,IAAItL,EAAI,EAAGo5D,EAAKjH,EAAMn/D,OAAQgN,EAAIo5D,EAAIp5D,IAAO,CAElD,MAAMq5D,EAAQlH,EAAOnyD,GACrBg7D,EAAmBD,EAAgB/6D,GAEnC,IAAM,IAAIlN,EAAI,EAAGsb,EAAKirD,EAAMrmE,OAAQF,EAAIsb,EAAItb,IAAO,CAElD,MAAMqoE,EAAO7B,EAAUD,EAAOvmE,GAAKkoE,EAAkBloE,GAAKooE,GAEnDjC,EAMNt/D,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,EAAIqkE,EAAYV,EAAQ,GAAI3jE,EAAGqkE,EAAYV,EAAQ,GAAI5jE,EAAI+W,GAJ3E3R,EAAGwhE,EAAK5mE,EAAG4mE,EAAK3mE,EAAG6Y,EAAQ/B,EAQ7B,CAED,CAED,CAgGA,SAAS8vD,EAAW/D,EAASgE,GAE5B,IAAIvoE,EAAIukE,EAAQrkE,OAEhB,OAAWF,GAAK,GAAI,CAEnB,MAAMuoB,EAAIvoB,EACV,IAAI62D,EAAI72D,EAAI,EACP62D,EAAI,IAAIA,EAAI0N,EAAQrkE,OAAS,GAIlC,IAAM,IAAI8D,EAAI,EAAGwkE,EAAOnD,EAAwB,EAAhBK,EAAqB1hE,EAAIwkE,EAAIxkE,IAAO,CAEnE,MAAMykE,EAAQ/B,EAAO1iE,EACf0kE,EAAQhC,GAAS1iE,EAAI,GAO3B2kE,EALUJ,EAAchgD,EAAIkgD,EACvBF,EAAc1R,EAAI4R,EAClBF,EAAc1R,EAAI6R,EAClBH,EAAchgD,EAAImgD,EAIxB,CAED,CAED,CAEA,SAAS7hE,EAAGpF,EAAGC,EAAG8W,GAEjB2sD,EAAY9lE,KAAMoC,GAClB0jE,EAAY9lE,KAAMqC,GAClByjE,EAAY9lE,KAAMmZ,EAEnB,CAGA,SAASowD,EAAI7jE,EAAGC,EAAGC,GAElB4jE,EAAW9jE,GACX8jE,EAAW7jE,GACX6jE,EAAW5jE,GAEX,MAAM6jE,EAAY9D,EAAc9kE,OAAS,EACnCozC,EAAMsyB,EAAMmD,cAAe31B,EAAO4xB,EAAe8D,EAAY,EAAGA,EAAY,EAAGA,EAAY,GAEjGE,EAAO11B,EAAK,IACZ01B,EAAO11B,EAAK,IACZ01B,EAAO11B,EAAK,GAEb,CAEA,SAASq1B,EAAI5jE,EAAGC,EAAGC,EAAG8H,GAErB87D,EAAW9jE,GACX8jE,EAAW7jE,GACX6jE,EAAW97D,GAEX87D,EAAW7jE,GACX6jE,EAAW5jE,GACX4jE,EAAW97D,GAGX,MAAM+7D,EAAY9D,EAAc9kE,OAAS,EACnCozC,EAAMsyB,EAAMqD,mBAAoB71B,EAAO4xB,EAAe8D,EAAY,EAAGA,EAAY,EAAGA,EAAY,EAAGA,EAAY,GAErHE,EAAO11B,EAAK,IACZ01B,EAAO11B,EAAK,IACZ01B,EAAO11B,EAAK,IAEZ01B,EAAO11B,EAAK,IACZ01B,EAAO11B,EAAK,IACZ01B,EAAO11B,EAAK,GAEb,CAEA,SAASu1B,EAAWppE,GAEnBulE,EAAc3lE,KAAM8lE,EAAqB,EAAR1lE,EAAY,IAC7CulE,EAAc3lE,KAAM8lE,EAAqB,EAAR1lE,EAAY,IAC7CulE,EAAc3lE,KAAM8lE,EAAqB,EAAR1lE,EAAY,GAE9C,CAGA,SAASupE,EAAOE,GAEfjE,EAAQ5lE,KAAM6pE,EAAQznE,GACtBwjE,EAAQ5lE,KAAM6pE,EAAQxnE,EAEvB,EA7KA,WAEC,MAAMwpC,EAAQ85B,EAAc9kE,OAAS,EAErC,GAAKolE,EAAe,CAEnB,IAAI6D,EAAQ,EACRz/D,EAASg9D,EAAOyC,EAIpB,IAAM,IAAInpE,EAAI,EAAGA,EAAI2mE,EAAM3mE,IAAO,CAEjC,MAAM8yC,EAAO4xB,EAAO1kE,GACpB4oE,EAAI91B,EAAM,GAAMppC,EAAQopC,EAAM,GAAMppC,EAAQopC,EAAM,GAAMppC,EAEzD,CAEAy/D,EAAQ9D,EAAwB,EAAhBK,EAChBh8D,EAASg9D,EAAOyC,EAIhB,IAAM,IAAInpE,EAAI,EAAGA,EAAI2mE,EAAM3mE,IAAO,CAEjC,MAAM8yC,EAAO4xB,EAAO1kE,GACpB4oE,EAAI91B,EAAM,GAAMppC,EAAQopC,EAAM,GAAMppC,EAAQopC,EAAM,GAAMppC,EAEzD,CAED,KAAO,CAIN,IAAM,IAAI1J,EAAI,EAAGA,EAAI2mE,EAAM3mE,IAAO,CAEjC,MAAM8yC,EAAO4xB,EAAO1kE,GACpB4oE,EAAI91B,EAAM,GAAKA,EAAM,GAAKA,EAAM,GAEjC,CAIA,IAAM,IAAI9yC,EAAI,EAAGA,EAAI2mE,EAAM3mE,IAAO,CAEjC,MAAM8yC,EAAO4xB,EAAO1kE,GACpB4oE,EAAI91B,EAAM,GAAM4zB,EAAOrB,EAAOvyB,EAAM,GAAM4zB,EAAOrB,EAAOvyB,EAAM,GAAM4zB,EAAOrB,EAE5E,CAED,CAEAjyB,EAAMvF,SAAU3C,EAAO85B,EAAc9kE,OAAS,EAAIgrC,EAAO,EAE1D,CA/DAk+B,GAmEA,WAEC,MAAMl+B,EAAQ85B,EAAc9kE,OAAS,EACrC,IAAIqoE,EAAc,EAClBD,EAAW/D,EAASgE,GACpBA,GAAehE,EAAQrkE,OAEvB,IAAM,IAAIgN,EAAI,EAAGo5D,EAAKjH,EAAMn/D,OAAQgN,EAAIo5D,EAAIp5D,IAAO,CAElD,MAAMq5D,EAAQlH,EAAOnyD,GACrBo7D,EAAW/B,EAAOgC,GAGlBA,GAAehC,EAAMrmE,MAEtB,CAGAkzC,EAAMvF,SAAU3C,EAAO85B,EAAc9kE,OAAS,EAAIgrC,EAAO,EAG1D,CApFAm+B,EAoLD,CAxmBApqE,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB04B,EAAe,IAC1E/lE,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwB24B,EAAS,IAE9DhmE,KAAK0wC,sBAumBN,CAEA/oC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAKnB,OAwFF,SAAmBmjB,EAAQhe,EAAS5F,GAInC,GAFAA,EAAK4jB,OAAS,GAET7iB,MAAMC,QAAS4iB,GAEnB,IAAM,IAAIr4B,EAAI,EAAGC,EAAIo4B,EAAOn4B,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMw7B,EAAQnD,EAAQr4B,GAEtByU,EAAK4jB,OAAOh5B,KAAMm8B,EAAM1mB,KAEzB,MAIAL,EAAK4jB,OAAOh5B,KAAMg5B,EAAOvjB,MAI1BL,EAAK4F,QAAU5H,OAAOC,OAAQ,CAAC,EAAG2H,QAELrb,IAAxBqb,EAAQsrD,cAA4BlxD,EAAK4F,QAAQsrD,YAActrD,EAAQsrD,YAAYzwD,UAExF,OAAOT,CAER,CAlHS60D,CAHQrqE,KAAKs8B,WAAWlD,OACfp5B,KAAKs8B,WAAWlhB,QAEE5F,EAEnC,CAEA,eAAOggC,CAAUhgC,EAAM4jB,GAEtB,MAAMkxC,EAAiB,GAEvB,IAAM,IAAIhhD,EAAI,EAAG+lB,EAAK75B,EAAK4jB,OAAOn4B,OAAQqoB,EAAI+lB,EAAI/lB,IAAO,CAExD,MAAMiT,EAAQnD,EAAQ5jB,EAAK4jB,OAAQ9P,IAEnCghD,EAAelqE,KAAMm8B,EAEtB,CAEA,MAAMmqC,EAAclxD,EAAK4F,QAAQsrD,YAQjC,YANqB3mE,IAAhB2mE,IAEJlxD,EAAK4F,QAAQsrD,aAAc,IAAIvN,GAAQuN,EAAY7mE,OAAS21C,SAAUkxB,IAIhE,IAAIZ,GAAiBwE,EAAgB90D,EAAK4F,QAElD,EAID,MAAMyrD,GAAmB,CAExBiD,cAAe,SAAWjjD,EAAUutB,EAAUm2B,EAAQC,EAAQC,GAE7D,MAAMC,EAAMt2B,EAAmB,EAATm2B,GAChBI,EAAMv2B,EAAmB,EAATm2B,EAAa,GAC7BK,EAAMx2B,EAAmB,EAATo2B,GAChBK,EAAMz2B,EAAmB,EAATo2B,EAAa,GAC7BM,EAAM12B,EAAmB,EAATq2B,GAChBM,EAAM32B,EAAmB,EAATq2B,EAAa,GAEnC,MAAO,CACN,IAAI1jE,GAAS2jE,EAAKC,GAClB,IAAI5jE,GAAS6jE,EAAKC,GAClB,IAAI9jE,GAAS+jE,EAAKC,GAGpB,EAEAf,mBAAoB,SAAWnjD,EAAUutB,EAAUm2B,EAAQC,EAAQC,EAAQO,GAE1E,MAAMN,EAAMt2B,EAAmB,EAATm2B,GAChBI,EAAMv2B,EAAmB,EAATm2B,EAAa,GAC7BU,EAAM72B,EAAmB,EAATm2B,EAAa,GAC7BK,EAAMx2B,EAAmB,EAATo2B,GAChBK,EAAMz2B,EAAmB,EAATo2B,EAAa,GAC7BU,EAAM92B,EAAmB,EAATo2B,EAAa,GAC7BM,EAAM12B,EAAmB,EAATq2B,GAChBM,EAAM32B,EAAmB,EAATq2B,EAAa,GAC7BU,EAAM/2B,EAAmB,EAATq2B,EAAa,GAC7BW,EAAMh3B,EAAmB,EAAT42B,GAChBK,EAAMj3B,EAAmB,EAAT42B,EAAa,GAC7BM,EAAMl3B,EAAmB,EAAT42B,EAAa,GAEnC,OAAK1pE,KAAK8C,IAAKumE,EAAME,GAAQvpE,KAAK8C,IAAKsmE,EAAME,GAErC,CACN,IAAI7jE,GAAS2jE,EAAK,EAAIO,GACtB,IAAIlkE,GAAS6jE,EAAK,EAAIM,GACtB,IAAInkE,GAAS+jE,EAAK,EAAIK,GACtB,IAAIpkE,GAASqkE,EAAK,EAAIE,IAKhB,CACN,IAAIvkE,GAAS4jE,EAAK,EAAIM,GACtB,IAAIlkE,GAAS8jE,EAAK,EAAIK,GACtB,IAAInkE,GAASgkE,EAAK,EAAII,GACtB,IAAIpkE,GAASskE,EAAK,EAAIC,GAKzB,GAgCD,MAAMC,WAA4B7N,GAEjC96D,WAAAA,GAAsC,IAAzB4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+6C,EAAM/6C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEjC,MAAMzB,GAAM,EAAIpB,KAAK+H,KAAM,IAAQ,EAenCmO,MAbiB,EACd,EAAG9U,EAAG,EAAI,EAAGA,EAAG,GAAM,GAAKA,EAAG,EAAI,GAAKA,EAAG,EAC5C,GAAK,EAAGA,EAAI,EAAG,EAAGA,EAAG,GAAK,GAAKA,EAAI,EAAG,GAAKA,EAC3CA,EAAG,GAAK,EAAIA,EAAG,EAAG,GAAMA,EAAG,GAAK,GAAMA,EAAG,EAAG,GAG7B,CACf,EAAG,GAAI,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,EAAI,EAAG,EAAG,GAAK,EAAG,GAAI,GACjD,EAAG,EAAG,EAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAC/C,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3C,EAAG,EAAG,EAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAGpB8hB,EAAQ06B,GAElCl/C,KAAKH,KAAO,sBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACR06B,OAAQA,EAGV,CAEA,eAAO1J,CAAUhgC,GAEhB,OAAO,IAAI+1D,GAAqB/1D,EAAKgP,OAAQhP,EAAK0pC,OAEnD,EAID,MAAMssB,WAA2B9N,GAEhC96D,WAAAA,GAAsC,IAAzB4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+6C,EAAM/6C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAajCqT,MAXiB,CAChB,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,GAAK,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,GAAK,GAGd,CACf,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACxB,EAAG,EAAG,EAAG,EAAG,EAAG,GAGUgN,EAAQ06B,GAElCl/C,KAAKH,KAAO,qBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACR06B,OAAQA,EAGV,CAEA,eAAO1J,CAAUhgC,GAEhB,OAAO,IAAIg2D,GAAoBh2D,EAAKgP,OAAQhP,EAAK0pC,OAElD,EAID,MAAMusB,WAAsB59B,GAE3BjrC,WAAAA,GAA4E,IAA/DsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG6vC,EAAa7vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG8vC,EAAc9vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEvEqT,QAEAxX,KAAKH,KAAO,gBAEZG,KAAKs8B,WAAa,CACjBp1B,MAAOA,EACPC,OAAQA,EACR6sC,cAAeA,EACfC,eAAgBA,GAGjB,MAAMy3B,EAAaxkE,EAAQ,EACrBykE,EAAcxkE,EAAS,EAEvBwtC,EAAQrzC,KAAKoD,MAAOsvC,GACpBY,EAAQtzC,KAAKoD,MAAOuvC,GAEpBiB,EAASP,EAAQ,EACjBQ,EAASP,EAAQ,EAEjBg3B,EAAgB1kE,EAAQytC,EACxBk3B,EAAiB1kE,EAASytC,EAI1BrD,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAEZ,IAAM,IAAIiB,EAAK,EAAGA,EAAKH,EAAQG,IAAQ,CAEtC,MAAM7yC,EAAI6yC,EAAKu2B,EAAiBF,EAEhC,IAAM,IAAIp2B,EAAK,EAAGA,EAAKL,EAAQK,IAAQ,CAEtC,MAAM/yC,EAAI+yC,EAAKq2B,EAAgBF,EAE/Bt3B,EAASh0C,KAAMoC,GAAKC,EAAG,GAEvB2uC,EAAQhxC,KAAM,EAAG,EAAG,GAEpBi0C,EAAIj0C,KAAMm1C,EAAKZ,GACfN,EAAIj0C,KAAM,EAAMk1C,EAAKV,EAEtB,CAED,CAEA,IAAM,IAAIU,EAAK,EAAGA,EAAKV,EAAOU,IAE7B,IAAM,IAAIC,EAAK,EAAGA,EAAKZ,EAAOY,IAAQ,CAErC,MAAMzvC,EAAIyvC,EAAKL,EAASI,EAClBvvC,EAAIwvC,EAAKL,GAAWI,EAAK,GACzBtvC,EAAMuvC,EAAK,EAAML,GAAWI,EAAK,GACjCxnC,EAAMynC,EAAK,EAAML,EAASI,EAEhC/D,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,EAErB,CAID9N,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAE3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIi2D,GAAej2D,EAAKtO,MAAOsO,EAAKrO,OAAQqO,EAAKw+B,cAAex+B,EAAKy+B,eAE7E,EAID,MAAM63B,WAAqBj+B,GAE1BjrC,WAAAA,GAAkI,IAArHmpE,EAAW5nE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAK6nE,EAAW7nE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG8nE,EAAa9nE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAI+nE,EAAW/nE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGs4D,EAAUt4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGu4D,EAAWv4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAExHiW,QAEAxX,KAAKH,KAAO,eAEZG,KAAKs8B,WAAa,CACjByvC,YAAaA,EACbC,YAAaA,EACbC,cAAeA,EACfC,YAAaA,EACbzP,WAAYA,EACZC,YAAaA,GAGduP,EAAgB3qE,KAAKa,IAAK,EAAG8pE,GAC7BC,EAAc5qE,KAAKa,IAAK,EAAG+pE,GAI3B,MAAM36B,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIZ,IAAI7vB,EAASunD,EACb,MAAMI,GAAiBH,EAAcD,GAAgBG,EAC/ClQ,EAAS,IAAI/5C,GACb7I,EAAK,IAAIrS,GAIf,IAAM,IAAIuiB,EAAI,EAAGA,GAAK4iD,EAAa5iD,IAAO,CAEzC,IAAM,IAAIvoB,EAAI,EAAGA,GAAKkrE,EAAelrE,IAAO,CAI3C,MAAM47D,EAAUF,EAAa17D,EAAIkrE,EAAgBvP,EAIjDV,EAAOx5D,EAAIgiB,EAASljB,KAAK4E,IAAKy2D,GAC9BX,EAAOv5D,EAAI+hB,EAASljB,KAAK6E,IAAKw2D,GAE9BvoB,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1C63B,EAAQhxC,KAAM,EAAG,EAAG,GAIpBgZ,EAAG5W,GAAMw5D,EAAOx5D,EAAIwpE,EAAc,GAAM,EACxC5yD,EAAG3W,GAAMu5D,EAAOv5D,EAAIupE,EAAc,GAAM,EAExC33B,EAAIj0C,KAAMgZ,EAAG5W,EAAG4W,EAAG3W,EAEpB,CAIA+hB,GAAU2nD,CAEX,CAIA,IAAM,IAAI7iD,EAAI,EAAGA,EAAI4iD,EAAa5iD,IAAO,CAExC,MAAM8iD,EAAoB9iD,GAAM2iD,EAAgB,GAEhD,IAAM,IAAIlrE,EAAI,EAAGA,EAAIkrE,EAAelrE,IAAO,CAE1C,MAAM47D,EAAU57D,EAAIqrE,EAEdtmE,EAAI62D,EACJ52D,EAAI42D,EAAUsP,EAAgB,EAC9BjmE,EAAI22D,EAAUsP,EAAgB,EAC9Bn+D,EAAI6uD,EAAU,EAIpBprB,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,EAErB,CAED,CAIA9N,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAE3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIs2D,GAAct2D,EAAKu2D,YAAav2D,EAAKw2D,YAAax2D,EAAKy2D,cAAez2D,EAAK02D,YAAa12D,EAAKinD,WAAYjnD,EAAKknD,YAE1H,EAID,MAAM2P,WAAsBx+B,GAE3BjrC,WAAAA,GAA2I,IAA9Hw2B,EAAMj1B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAIg8D,GAAO,CAAE,IAAIp5D,GAAS,EAAG,IAAO,IAAIA,IAAW,IAAO,IAAO,IAAIA,GAAS,IAAO,MAAWo/D,EAAahiE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAErIqT,QAEAxX,KAAKH,KAAO,gBAEZG,KAAKs8B,WAAa,CACjBlD,OAAQA,EACR+sC,cAAeA,GAKhB,MAAM50B,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIZ,IAAIE,EAAa,EACbc,EAAa,EAIjB,IAAiC,IAA5B9+B,MAAMC,QAAS4iB,GAEnB6sC,EAAU7sC,QAIV,IAAM,IAAIr4B,EAAI,EAAGA,EAAIq4B,EAAOn4B,OAAQF,IAEnCklE,EAAU7sC,EAAQr4B,IAElBf,KAAK4uC,SAAU2F,EAAYc,EAAYt0C,GAEvCwzC,GAAcc,EACdA,EAAa,EAgBf,SAAS4wB,EAAU1pC,GAElB,MAAM+vC,EAAcl4B,EAASnzC,OAAS,EAChC2kB,EAAS2W,EAAMgkC,cAAe4F,GAEpC,IAAIoG,EAAgB3mD,EAAO2W,MAC3B,MAAMiwC,EAAa5mD,EAAOw6C,OAIuB,IAA5CiF,GAAWE,YAAagH,KAE5BA,EAAgBA,EAAcnF,WAI/B,IAAM,IAAIrmE,EAAI,EAAGC,EAAIwrE,EAAWvrE,OAAQF,EAAIC,EAAGD,IAAO,CAErD,MAAM0rE,EAAYD,EAAYzrE,IAEe,IAAxCskE,GAAWE,YAAakH,KAE5BD,EAAYzrE,GAAM0rE,EAAUrF,UAI9B,CAEA,MAAM3B,EAAQJ,GAAWG,iBAAkB+G,EAAeC,GAI1D,IAAM,IAAIzrE,EAAI,EAAGC,EAAIwrE,EAAWvrE,OAAQF,EAAIC,EAAGD,IAAO,CAErD,MAAM0rE,EAAYD,EAAYzrE,GAC9BwrE,EAAgBA,EAAcryB,OAAQuyB,EAEvC,CAIA,IAAM,IAAI1rE,EAAI,EAAGC,EAAIurE,EAActrE,OAAQF,EAAIC,EAAGD,IAAO,CAExD,MAAMi7D,EAASuQ,EAAexrE,GAE9BqzC,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAG,GACnC2uC,EAAQhxC,KAAM,EAAG,EAAG,GACpBi0C,EAAIj0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAE5B,CAIA,IAAM,IAAI1B,EAAI,EAAGC,EAAIykE,EAAMxkE,OAAQF,EAAIC,EAAGD,IAAO,CAEhD,MAAM8yC,EAAO4xB,EAAO1kE,GAEd+E,EAAI+tC,EAAM,GAAMy4B,EAChBvmE,EAAI8tC,EAAM,GAAMy4B,EAChBtmE,EAAI6tC,EAAM,GAAMy4B,EAEtB/6B,EAAQnxC,KAAM0F,EAAGC,EAAGC,GACpBqvC,GAAc,CAEf,CAED,CA1EAr1C,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAyE3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAInB,OAsBF,SAAiBmjB,EAAQ5jB,GAIxB,GAFAA,EAAK4jB,OAAS,GAET7iB,MAAMC,QAAS4iB,GAEnB,IAAM,IAAIr4B,EAAI,EAAGC,EAAIo4B,EAAOn4B,OAAQF,EAAIC,EAAGD,IAAO,CAEjD,MAAMw7B,EAAQnD,EAAQr4B,GAEtByU,EAAK4jB,OAAOh5B,KAAMm8B,EAAM1mB,KAEzB,MAIAL,EAAK4jB,OAAOh5B,KAAMg5B,EAAOvjB,MAI1B,OAAOL,CAER,CA5CSS,CAFQjW,KAAKs8B,WAAWlD,OAER5jB,EAExB,CAEA,eAAOggC,CAAUhgC,EAAM4jB,GAEtB,MAAMkxC,EAAiB,GAEvB,IAAM,IAAIhhD,EAAI,EAAG+lB,EAAK75B,EAAK4jB,OAAOn4B,OAAQqoB,EAAI+lB,EAAI/lB,IAAO,CAExD,MAAMiT,EAAQnD,EAAQ5jB,EAAK4jB,OAAQ9P,IAEnCghD,EAAelqE,KAAMm8B,EAEtB,CAEA,OAAO,IAAI8vC,GAAe/B,EAAgB90D,EAAK2wD,cAEhD,EA4BD,MAAMuG,WAAuB7+B,GAE5BjrC,WAAAA,GAAiJ,IAApI4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG6vC,EAAa7vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAI8vC,EAAc9vC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIy3D,EAAQz3D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG03D,EAAS13D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAAQk7D,EAAUt4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGu4D,EAAWv4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG7C,KAAKC,GAE3IiW,QAEAxX,KAAKH,KAAO,iBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACRwvB,cAAeA,EACfC,eAAgBA,EAChB2nB,SAAUA,EACVC,UAAWA,EACXY,WAAYA,EACZC,YAAaA,GAGd1oB,EAAgB1yC,KAAKa,IAAK,EAAGb,KAAKoD,MAAOsvC,IACzCC,EAAiB3yC,KAAKa,IAAK,EAAGb,KAAKoD,MAAOuvC,IAE1C,MAAM04B,EAAWrrE,KAAKY,IAAKu6D,EAAaC,EAAap7D,KAAKC,IAE1D,IAAIf,EAAQ,EACZ,MAAMosE,EAAO,GAEP5Q,EAAS,IAAI/5C,GACbmC,EAAS,IAAInC,GAIbsvB,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIZ,IAAM,IAAIiB,EAAK,EAAGA,GAAMrB,EAAgBqB,IAAQ,CAE/C,MAAMu3B,EAAc,GAEdjlE,EAAI0tC,EAAKrB,EAIf,IAAI64B,EAAU,EAEF,IAAPx3B,GAA2B,IAAfmnB,EAEhBqQ,EAAU,GAAM94B,EAELsB,IAAOrB,GAAkB04B,IAAarrE,KAAKC,KAEtDurE,GAAY,GAAM94B,GAInB,IAAM,IAAIuB,EAAK,EAAGA,GAAMvB,EAAeuB,IAAQ,CAE9C,MAAMrwB,EAAIqwB,EAAKvB,EAIfgoB,EAAOx5D,GAAMgiB,EAASljB,KAAK4E,IAAK01D,EAAW12C,EAAI22C,GAAcv6D,KAAK6E,IAAKs2D,EAAa70D,EAAI80D,GACxFV,EAAOv5D,EAAI+hB,EAASljB,KAAK4E,IAAKu2D,EAAa70D,EAAI80D,GAC/CV,EAAOziD,EAAIiL,EAASljB,KAAK6E,IAAKy1D,EAAW12C,EAAI22C,GAAcv6D,KAAK6E,IAAKs2D,EAAa70D,EAAI80D,GAEtFtoB,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1C6K,EAAOzc,KAAMq0D,GAAS34D,YACtB+tC,EAAQhxC,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAIzC86B,EAAIj0C,KAAM8kB,EAAI4nD,EAAS,EAAIllE,GAE3BilE,EAAYzsE,KAAMI,IAEnB,CAEAosE,EAAKxsE,KAAMysE,EAEZ,CAIA,IAAM,IAAIv3B,EAAK,EAAGA,EAAKrB,EAAgBqB,IAEtC,IAAM,IAAIC,EAAK,EAAGA,EAAKvB,EAAeuB,IAAQ,CAE7C,MAAMzvC,EAAI8mE,EAAMt3B,GAAMC,EAAK,GACrBxvC,EAAI6mE,EAAMt3B,GAAMC,GAChBvvC,EAAI4mE,EAAMt3B,EAAK,GAAKC,GACpBznC,EAAI8+D,EAAMt3B,EAAK,GAAKC,EAAK,IAEnB,IAAPD,GAAYmnB,EAAa,IAAIlrB,EAAQnxC,KAAM0F,EAAGC,EAAG+H,IACjDwnC,IAAOrB,EAAiB,GAAK04B,EAAWrrE,KAAKC,KAAKgwC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,EAE5E,CAMD9N,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAE3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIk3D,GAAgBl3D,EAAKgP,OAAQhP,EAAKw+B,cAAex+B,EAAKy+B,eAAgBz+B,EAAKomD,SAAUpmD,EAAKqmD,UAAWrmD,EAAKinD,WAAYjnD,EAAKknD,YAEvI,EAID,MAAMqQ,WAA4BrP,GAEjC96D,WAAAA,GAAsC,IAAzB4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG+6C,EAAM/6C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAUjCqT,MARiB,CAChB,EAAG,EAAG,GAAM,GAAK,EAAG,GAAM,EAAG,GAAK,EAAI,GAAK,GAAK,GAGjC,CACf,EAAG,EAAG,EAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAGTgN,EAAQ06B,GAElCl/C,KAAKH,KAAO,sBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACR06B,OAAQA,EAGV,CAEA,eAAO1J,CAAUhgC,GAEhB,OAAO,IAAIu3D,GAAqBv3D,EAAKgP,OAAQhP,EAAK0pC,OAEnD,EAID,MAAM8tB,WAAsBn/B,GAE3BjrC,WAAAA,GAAoG,IAAvF4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG8oE,EAAI9oE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAKm4D,EAAcn4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAI+oE,EAAe/oE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIk3D,EAAGl3D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAa,EAAV7C,KAAKC,GAE1FiW,QAEAxX,KAAKH,KAAO,gBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACRyoD,KAAMA,EACN3Q,eAAgBA,EAChB4Q,gBAAiBA,EACjB7R,IAAKA,GAGNiB,EAAiBh7D,KAAKoD,MAAO43D,GAC7B4Q,EAAkB5rE,KAAKoD,MAAOwoE,GAI9B,MAAM37B,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAINrpC,EAAS,IAAIiX,GACb+5C,EAAS,IAAI/5C,GACbmC,EAAS,IAAInC,GAInB,IAAM,IAAIqH,EAAI,EAAGA,GAAKgzC,EAAgBhzC,IAErC,IAAM,IAAIvoB,EAAI,EAAGA,GAAKmsE,EAAiBnsE,IAAO,CAE7C,MAAMmkB,EAAInkB,EAAImsE,EAAkB7R,EAC1BzzD,EAAI0hB,EAAIgzC,EAAiBh7D,KAAKC,GAAK,EAIzCy6D,EAAOx5D,GAAMgiB,EAASyoD,EAAO3rE,KAAK4E,IAAK0B,IAAQtG,KAAK4E,IAAKgf,GACzD82C,EAAOv5D,GAAM+hB,EAASyoD,EAAO3rE,KAAK4E,IAAK0B,IAAQtG,KAAK6E,IAAK+e,GACzD82C,EAAOziD,EAAI0zD,EAAO3rE,KAAK6E,IAAKyB,GAE5BwsC,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1CvO,EAAOxI,EAAIgiB,EAASljB,KAAK4E,IAAKgf,GAC9Bla,EAAOvI,EAAI+hB,EAASljB,KAAK6E,IAAK+e,GAC9Bd,EAAOjc,WAAY6zD,EAAQhxD,GAAS3H,YAEpC+tC,EAAQhxC,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAIzC86B,EAAIj0C,KAAMW,EAAImsE,GACd74B,EAAIj0C,KAAMkpB,EAAIgzC,EAEf,CAMD,IAAM,IAAIhzC,EAAI,EAAGA,GAAKgzC,EAAgBhzC,IAErC,IAAM,IAAIvoB,EAAI,EAAGA,GAAKmsE,EAAiBnsE,IAAO,CAI7C,MAAM+E,GAAMonE,EAAkB,GAAM5jD,EAAIvoB,EAAI,EACtCgF,GAAMmnE,EAAkB,IAAQ5jD,EAAI,GAAMvoB,EAAI,EAC9CiF,GAAMknE,EAAkB,IAAQ5jD,EAAI,GAAMvoB,EAC1C+M,GAAMo/D,EAAkB,GAAM5jD,EAAIvoB,EAIxCwwC,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,EAErB,CAMD9N,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAE3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAIw3D,GAAex3D,EAAKgP,OAAQhP,EAAKy3D,KAAMz3D,EAAK8mD,eAAgB9mD,EAAK03D,gBAAiB13D,EAAK6lD,IAEnG,EAID,MAAM8R,WAA0Bt/B,GAE/BjrC,WAAAA,GAA8F,IAAjF4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG8oE,EAAI9oE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAK+oE,EAAe/oE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIm4D,EAAcn4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG2uB,EAAC3uB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG0B,EAAC1B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEzFqT,QAEAxX,KAAKH,KAAO,oBAEZG,KAAKs8B,WAAa,CACjB9X,OAAQA,EACRyoD,KAAMA,EACNC,gBAAiBA,EACjB5Q,eAAgBA,EAChBxpC,EAAGA,EACHjtB,EAAGA,GAGJqnE,EAAkB5rE,KAAKoD,MAAOwoE,GAC9B5Q,EAAiBh7D,KAAKoD,MAAO43D,GAI7B,MAAM/qB,EAAU,GACV6C,EAAW,GACXhD,EAAU,GACViD,EAAM,GAIN2nB,EAAS,IAAI/5C,GACbmC,EAAS,IAAInC,GAEbmrD,EAAK,IAAInrD,GACTorD,EAAK,IAAIprD,GAETqrD,EAAI,IAAIrrD,GACRsrD,EAAI,IAAItrD,GACRurD,EAAI,IAAIvrD,GAId,IAAM,IAAIlhB,EAAI,EAAGA,GAAKmsE,IAAoBnsE,EAAI,CAI7C,MAAMmkB,EAAInkB,EAAImsE,EAAkBp6C,EAAIxxB,KAAKC,GAAK,EAK9CksE,EAA0BvoD,EAAG4N,EAAGjtB,EAAG2e,EAAQ4oD,GAC3CK,EAA0BvoD,EAAI,IAAM4N,EAAGjtB,EAAG2e,EAAQ6oD,GAIlDE,EAAEplE,WAAYklE,EAAID,GAClBI,EAAEzlE,WAAYslE,EAAID,GAClBE,EAAE9pD,aAAc+pD,EAAGC,GACnBA,EAAEhqD,aAAc8pD,EAAGC,GAInBD,EAAEjqE,YACFmqE,EAAEnqE,YAEF,IAAM,IAAIimB,EAAI,EAAGA,GAAKgzC,IAAmBhzC,EAAI,CAK5C,MAAM1hB,EAAI0hB,EAAIgzC,EAAiBh7D,KAAKC,GAAK,EACnC6N,GAAO69D,EAAO3rE,KAAK4E,IAAK0B,GACxByH,EAAK49D,EAAO3rE,KAAK6E,IAAKyB,GAK5Bo0D,EAAOx5D,EAAI4qE,EAAG5qE,GAAM4M,EAAKo+D,EAAEhrE,EAAI6M,EAAKi+D,EAAE9qE,GACtCw5D,EAAOv5D,EAAI2qE,EAAG3qE,GAAM2M,EAAKo+D,EAAE/qE,EAAI4M,EAAKi+D,EAAE7qE,GACtCu5D,EAAOziD,EAAI6zD,EAAG7zD,GAAMnK,EAAKo+D,EAAEj0D,EAAIlK,EAAKi+D,EAAE/zD,GAEtC66B,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,GAI1C6K,EAAOjc,WAAY6zD,EAAQoR,GAAK/pE,YAEhC+tC,EAAQhxC,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAIzC86B,EAAIj0C,KAAMW,EAAImsE,GACd74B,EAAIj0C,KAAMkpB,EAAIgzC,EAEf,CAED,CAIA,IAAM,IAAIhzC,EAAI,EAAGA,GAAK4jD,EAAiB5jD,IAEtC,IAAM,IAAIvoB,EAAI,EAAGA,GAAKu7D,EAAgBv7D,IAAO,CAI5C,MAAM+E,GAAMw2D,EAAiB,IAAQhzC,EAAI,IAAQvoB,EAAI,GAC/CgF,GAAMu2D,EAAiB,GAAMhzC,GAAMvoB,EAAI,GACvCiF,GAAMs2D,EAAiB,GAAMhzC,EAAIvoB,EACjC+M,GAAMwuD,EAAiB,IAAQhzC,EAAI,GAAMvoB,EAI/CwwC,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,EAErB,CAaD,SAAS2/D,EAA0BvoD,EAAG4N,EAAGjtB,EAAG2e,EAAQiN,GAEnD,MAAMi8C,EAAKpsE,KAAK4E,IAAKgf,GACfyoD,EAAKrsE,KAAK6E,IAAK+e,GACf0oD,EAAU/nE,EAAIitB,EAAI5N,EAClB2oD,EAAKvsE,KAAK4E,IAAK0nE,GAErBn8C,EAASjvB,EAAIgiB,GAAW,EAAIqpD,GAAO,GAAMH,EACzCj8C,EAAShvB,EAAI+hB,GAAW,EAAIqpD,GAAOF,EAAK,GACxCl8C,EAASlY,EAAIiL,EAASljB,KAAK6E,IAAKynE,GAAY,EAE7C,CAlBA5tE,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GAiB3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEA,eAAOw1C,CAAUhgC,GAEhB,OAAO,IAAI23D,GAAmB33D,EAAKgP,OAAQhP,EAAKy3D,KAAMz3D,EAAK03D,gBAAiB13D,EAAK8mD,eAAgB9mD,EAAKsd,EAAGtd,EAAK3P,EAE/G,EAID,MAAMioE,WAAqBjgC,GAE1BjrC,WAAAA,GAAsM,IAAzL25D,EAAIp4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI40D,GAAuB,IAAI92C,IAAW,GAAK,EAAG,GAAK,IAAIA,IAAW,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,IAAOirD,EAAe/oE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIqgB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGm4D,EAAcn4D,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgxD,EAAMhxD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,IAAAA,UAAA,GAE1LqT,QAEAxX,KAAKH,KAAO,eAEZG,KAAKs8B,WAAa,CACjBigC,KAAMA,EACN2Q,gBAAiBA,EACjB1oD,OAAQA,EACR83C,eAAgBA,EAChBnH,OAAQA,GAGT,MAAM4Y,EAASxR,EAAKtH,oBAAqBiY,EAAiB/X,GAI1Dn1D,KAAKo1D,SAAW2Y,EAAO3Y,SACvBp1D,KAAKoxC,QAAU28B,EAAO38B,QACtBpxC,KAAKq1D,UAAY0Y,EAAO1Y,UAIxB,MAAM2G,EAAS,IAAI/5C,GACbmC,EAAS,IAAInC,GACb7I,EAAK,IAAIrS,GACf,IAAIinE,EAAI,IAAI/rD,GAIZ,MAAMmyB,EAAW,GACXhD,EAAU,GACViD,EAAM,GACN9C,EAAU,GAyChB,SAAS08B,EAAiBltE,GAIzBitE,EAAIzR,EAAK5I,WAAY5yD,EAAImsE,EAAiBc,GAI1C,MAAMR,EAAIO,EAAO38B,QAASrwC,GACpBusE,EAAIS,EAAO1Y,UAAWt0D,GAI5B,IAAM,IAAIuoB,EAAI,EAAGA,GAAKgzC,EAAgBhzC,IAAO,CAE5C,MAAM1hB,EAAI0hB,EAAIgzC,EAAiBh7D,KAAKC,GAAK,EAEnC4E,EAAM7E,KAAK6E,IAAKyB,GAChB1B,GAAQ5E,KAAK4E,IAAK0B,GAIxBwc,EAAO5hB,EAAM0D,EAAMsnE,EAAEhrE,EAAI2D,EAAMmnE,EAAE9qE,EACjC4hB,EAAO3hB,EAAMyD,EAAMsnE,EAAE/qE,EAAI0D,EAAMmnE,EAAE7qE,EACjC2hB,EAAO7K,EAAMrT,EAAMsnE,EAAEj0D,EAAIpT,EAAMmnE,EAAE/zD,EACjC6K,EAAO/gB,YAEP+tC,EAAQhxC,KAAMgkB,EAAO5hB,EAAG4hB,EAAO3hB,EAAG2hB,EAAO7K,GAIzCyiD,EAAOx5D,EAAIwrE,EAAExrE,EAAIgiB,EAASJ,EAAO5hB,EACjCw5D,EAAOv5D,EAAIurE,EAAEvrE,EAAI+hB,EAASJ,EAAO3hB,EACjCu5D,EAAOziD,EAAIy0D,EAAEz0D,EAAIiL,EAASJ,EAAO7K,EAEjC66B,EAASh0C,KAAM47D,EAAOx5D,EAAGw5D,EAAOv5D,EAAGu5D,EAAOziD,EAE3C,CAED,EAjEA,WAEC,IAAM,IAAIxY,EAAI,EAAGA,EAAImsE,EAAiBnsE,IAErCktE,EAAiBltE,GASlBktE,GAA8B,IAAX9Y,EAAqB+X,EAAkB,GA4E3D,WAEC,IAAM,IAAInsE,EAAI,EAAGA,GAAKmsE,EAAiBnsE,IAEtC,IAAM,IAAIuoB,EAAI,EAAGA,GAAKgzC,EAAgBhzC,IAErClQ,EAAG5W,EAAIzB,EAAImsE,EACX9zD,EAAG3W,EAAI6mB,EAAIgzC,EAEXjoB,EAAIj0C,KAAMgZ,EAAG5W,EAAG4W,EAAG3W,EAMtB,CAtFCm8D,GAiDD,WAEC,IAAM,IAAIt1C,EAAI,EAAGA,GAAK4jD,EAAiB5jD,IAEtC,IAAM,IAAIvoB,EAAI,EAAGA,GAAKu7D,EAAgBv7D,IAAO,CAE5C,MAAM+E,GAAMw2D,EAAiB,IAAQhzC,EAAI,IAAQvoB,EAAI,GAC/CgF,GAAMu2D,EAAiB,GAAMhzC,GAAMvoB,EAAI,GACvCiF,GAAMs2D,EAAiB,GAAMhzC,EAAIvoB,EACjC+M,GAAMwuD,EAAiB,IAAQhzC,EAAI,GAAMvoB,EAI/CwwC,EAAQnxC,KAAM0F,EAAGC,EAAG+H,GACpByjC,EAAQnxC,KAAM2F,EAAGC,EAAG8H,EAErB,CAIF,CAjECogE,EAED,CAnCAC,GAIAnuE,KAAKsuC,SAAUiD,GACfvxC,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACrEp0C,KAAKyuC,aAAc,SAAU,IAAIpB,GAAwB+D,EAAS,IAClEpxC,KAAKyuC,aAAc,KAAM,IAAIpB,GAAwBgH,EAAK,GA8G3D,CAEA1sC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAInB,OAFAT,EAAK+mD,KAAOv8D,KAAKs8B,WAAWigC,KAAKtmD,SAE1BT,CAER,CAEA,eAAOggC,CAAUhgC,GAIhB,OAAO,IAAIs4D,IACV,IAAI3U,GAAQ3jD,EAAK+mD,KAAK18D,OAAS21C,SAAUhgC,EAAK+mD,MAC9C/mD,EAAK03D,gBACL13D,EAAKgP,OACLhP,EAAK8mD,eACL9mD,EAAK2/C,OAGP,EAID,MAAMiZ,WAA0BvgC,GAE/BjrC,WAAAA,GAA+B,IAAlBikB,EAAQ1iB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAUvB,GARAqT,QAEAxX,KAAKH,KAAO,oBAEZG,KAAKs8B,WAAa,CACjBzV,SAAUA,GAGO,OAAbA,EAAoB,CAIxB,MAAMutB,EAAW,GACXi6B,EAAQ,IAAIzxD,IAIZqvB,EAAQ,IAAIhqB,GACZ4kC,EAAM,IAAI5kC,GAEhB,GAAwB,OAAnB4E,EAASrmB,MAAiB,CAI9B,MAAMixB,EAAW5K,EAASmnB,WAAWvc,SAC/B8f,EAAU1qB,EAASrmB,MACzB,IAAI2tC,EAAStnB,EAASsnB,OAEC,IAAlBA,EAAOltC,SAEXktC,EAAS,CAAE,CAAElC,MAAO,EAAGjwB,MAAOu1B,EAAQv1B,MAAO6yB,cAAe,KAM7D,IAAM,IAAIy/B,EAAI,EAAGC,EAAKpgC,EAAOltC,OAAQqtE,EAAIC,IAAOD,EAAI,CAEnD,MAAMh+B,EAAQnC,EAAQmgC,GAEhB/5B,EAAajE,EAAMrE,MAGzB,IAAM,IAAIlrC,EAAIwzC,EAAYvzC,EAAMuzC,EAFbjE,EAAMt0B,MAEkCjb,EAAIC,EAAGD,GAAK,EAEtE,IAAM,IAAIuoB,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAE9B,MAAM8iB,EAASmF,EAAQ1mC,KAAM9J,EAAIuoB,GAC3B+iB,EAASkF,EAAQ1mC,KAAM9J,GAAMuoB,EAAI,GAAM,GAE7C2iB,EAAMthC,oBAAqB8mB,EAAU2a,GACrCya,EAAIl8C,oBAAqB8mB,EAAU4a,IAEQ,IAAtCmiC,GAAcviC,EAAO4a,EAAKwnB,KAE9Bj6B,EAASh0C,KAAM6rC,EAAMzpC,EAAGypC,EAAMxpC,EAAGwpC,EAAM1yB,GACvC66B,EAASh0C,KAAMymD,EAAIrkD,EAAGqkD,EAAIpkD,EAAGokD,EAAIttC,GAInC,CAIF,CAED,KAAO,CAIN,MAAMkY,EAAW5K,EAASmnB,WAAWvc,SAErC,IAAM,IAAI1wB,EAAI,EAAGC,EAAMywB,EAASzV,MAAQ,EAAKjb,EAAIC,EAAGD,IAEnD,IAAM,IAAIuoB,EAAI,EAAGA,EAAI,EAAGA,IAAO,CAK9B,MAAM8iB,EAAS,EAAIrrC,EAAIuoB,EACjB+iB,EAAS,EAAItrC,GAAQuoB,EAAI,GAAM,EAErC2iB,EAAMthC,oBAAqB8mB,EAAU2a,GACrCya,EAAIl8C,oBAAqB8mB,EAAU4a,IAEQ,IAAtCmiC,GAAcviC,EAAO4a,EAAKwnB,KAE9Bj6B,EAASh0C,KAAM6rC,EAAMzpC,EAAGypC,EAAMxpC,EAAGwpC,EAAM1yB,GACvC66B,EAASh0C,KAAMymD,EAAIrkD,EAAGqkD,EAAIpkD,EAAGokD,EAAIttC,GAInC,CAIF,CAIAvZ,KAAKyuC,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,GAEtE,CAED,CAEAzsC,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKs8B,WAAa9oB,OAAOC,OAAQ,CAAC,EAAGiE,EAAO4kB,YAErCt8B,IAER,EAID,SAASwuE,GAAcviC,EAAO4a,EAAKwnB,GAElC,MAAMI,EAAQ,GAAGxiC,EAAMzpC,KAAKypC,EAAMxpC,KAAKwpC,EAAM1yB,KAAKstC,EAAIrkD,KAAKqkD,EAAIpkD,KAAKokD,EAAIttC,IAClEm1D,EAAQ,GAAG7nB,EAAIrkD,KAAKqkD,EAAIpkD,KAAKokD,EAAIttC,KAAK0yB,EAAMzpC,KAAKypC,EAAMxpC,KAAKwpC,EAAM1yB,IAExE,OAA4B,IAAvB80D,EAAMM,IAAKF,KAA2C,IAAvBJ,EAAMM,IAAKD,KAM9CL,EAAMxmE,IAAK4mE,GACXJ,EAAMxmE,IAAK6mE,IACJ,EAIT,CAEA,IAAIE,GAA0Bp7D,OAAO4lD,OAAO,CAC3CC,UAAW,KACXtlB,YAAaA,GACbqoB,gBAAiBA,GACjBI,eAAgBA,GAChBiB,aAAcA,GACdb,iBAAkBA,GAClBkC,qBAAsBA,GACtBK,cAAeA,GACf2G,gBAAiBA,GACjByF,oBAAqBA,GACrB5P,cAAeA,GACf6P,mBAAoBA,GACpBC,cAAeA,GACf/N,mBAAoBA,GACpBoO,aAAcA,GACdO,cAAeA,GACfK,eAAgBA,GAChBK,oBAAqBA,GACrBC,cAAeA,GACfG,kBAAmBA,GACnBW,aAAcA,GACdM,kBAAmBA,KAGpB,MAAMS,WAAuBjsC,GAE5BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAK8uE,kBAAmB,EAExB9uE,KAAKH,KAAO,iBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,GACxBvgC,KAAKkjC,aAAc,EAEnBljC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAQL,OANAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAM+uE,WAA0Bz4B,GAE/B1zC,WAAAA,CAAa05B,GAEZ9kB,MAAO8kB,GAEPt8B,KAAKgvE,qBAAsB,EAE3BhvE,KAAKH,KAAO,mBAEb,EAID,MAAMovE,WAA6BrsC,GAElChgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKkvE,wBAAyB,EAE9BlvE,KAAKH,KAAO,uBAEZG,KAAKw2C,QAAU,CAAE,SAAY,IAE7Bx2C,KAAKsS,MAAQ,IAAIiuB,GAAO,UACxBvgC,KAAK4lC,UAAY,EACjB5lC,KAAK6lC,UAAY,EAEjB7lC,KAAKy6B,IAAM,KAEXz6B,KAAKunC,SAAW,KAChBvnC,KAAKwnC,kBAAoB,EAEzBxnC,KAAKynC,MAAQ,KACbznC,KAAK0nC,eAAiB,EAEtB1nC,KAAKimC,SAAW,IAAI1F,GAAO,GAC3BvgC,KAAKkmC,kBAAoB,EACzBlmC,KAAKqoC,YAAc,KAEnBroC,KAAK2nC,QAAU,KACf3nC,KAAK4nC,UAAY,EAEjB5nC,KAAK6nC,UAAY,KACjB7nC,KAAK8nC,cAAgBlrC,GACrBoD,KAAK+nC,YAAc,IAAIhhC,GAAS,EAAG,GAEnC/G,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAKmoC,aAAe,KAEpBnoC,KAAKooC,aAAe,KAEpBpoC,KAAKsnC,SAAW,KAEhBtnC,KAAKyoC,OAAS,KACdzoC,KAAK2oC,eAAiB,IAAIzV,GAC1BlzB,KAAK4oC,gBAAkB,EAEvB5oC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAC1B3pC,KAAK4pC,iBAAmB,QACxB5pC,KAAK6pC,kBAAoB,QAEzB7pC,KAAK8pC,aAAc,EAEnB9pC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAoDL,OAlDAF,MAAM7P,KAAM+P,GAEZ1X,KAAKw2C,QAAU,CAAE,SAAY,IAE7Bx2C,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OACxBtS,KAAK4lC,UAAYluB,EAAOkuB,UACxB5lC,KAAK6lC,UAAYnuB,EAAOmuB,UAExB7lC,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKunC,SAAW7vB,EAAO6vB,SACvBvnC,KAAKwnC,kBAAoB9vB,EAAO8vB,kBAEhCxnC,KAAKynC,MAAQ/vB,EAAO+vB,MACpBznC,KAAK0nC,eAAiBhwB,EAAOgwB,eAE7B1nC,KAAKimC,SAASt+B,KAAM+P,EAAOuuB,UAC3BjmC,KAAKqoC,YAAc3wB,EAAO2wB,YAC1BroC,KAAKkmC,kBAAoBxuB,EAAOwuB,kBAEhClmC,KAAK2nC,QAAUjwB,EAAOiwB,QACtB3nC,KAAK4nC,UAAYlwB,EAAOkwB,UAExB5nC,KAAK6nC,UAAYnwB,EAAOmwB,UACxB7nC,KAAK8nC,cAAgBpwB,EAAOowB,cAC5B9nC,KAAK+nC,YAAYpgC,KAAM+P,EAAOqwB,aAE9B/nC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAKmoC,aAAezwB,EAAOywB,aAE3BnoC,KAAKooC,aAAe1wB,EAAO0wB,aAE3BpoC,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKyoC,OAAS/wB,EAAO+wB,OACrBzoC,KAAK2oC,eAAehhC,KAAM+P,EAAOixB,gBACjC3oC,KAAK4oC,gBAAkBlxB,EAAOkxB,gBAE9B5oC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBACjC3pC,KAAK4pC,iBAAmBlyB,EAAOkyB,iBAC/B5pC,KAAK6pC,kBAAoBnyB,EAAOmyB,kBAEhC7pC,KAAK8pC,YAAcpyB,EAAOoyB,YAE1B9pC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAMmvE,WAA6BF,GAElCrsE,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKovE,wBAAyB,EAE9BpvE,KAAKw2C,QAAU,CAEd,SAAY,GACZ,SAAY,IAIbx2C,KAAKH,KAAO,uBAEZG,KAAKmnC,mBAAqB,EAC1BnnC,KAAKonC,cAAgB,KAErBpnC,KAAKymC,aAAe,KACpBzmC,KAAKwmC,mBAAqB,EAC1BxmC,KAAK0mC,sBAAwB,KAC7B1mC,KAAK4mC,qBAAuB,IAAI7/B,GAAS,EAAG,GAC5C/G,KAAK2mC,mBAAqB,KAE1B3mC,KAAKqvE,IAAM,IAEX77D,OAAOoC,eAAgB5V,KAAM,eAAgB,CAC5CsvE,IAAK,WAEJ,OAASttE,GAAO,KAAQhC,KAAKqvE,IAAM,IAAQrvE,KAAKqvE,IAAM,GAAK,EAAG,EAE/D,EACAzoE,IAAK,SAAWiiC,GAEf7oC,KAAKqvE,KAAQ,EAAI,GAAMxmC,IAAmB,EAAI,GAAMA,EAErD,IAGD7oC,KAAKinC,eAAiB,KACtBjnC,KAAK+mC,eAAiB,IACtB/mC,KAAKgnC,0BAA4B,CAAE,IAAK,KACxChnC,KAAKknC,wBAA0B,KAE/BlnC,KAAK+lC,WAAa,IAAIxF,GAAO,GAC7BvgC,KAAKuvE,cAAgB,KACrBvvE,KAAKgmC,eAAiB,EACtBhmC,KAAKwvE,kBAAoB,KAEzBxvE,KAAKipC,gBAAkB,KAEvBjpC,KAAKkpC,UAAY,EACjBlpC,KAAKmpC,aAAe,KACpBnpC,KAAKopC,oBAAsBhkB,IAC3BplB,KAAKqpC,iBAAmB,IAAI9I,GAAO,EAAG,EAAG,GAEzCvgC,KAAKomC,kBAAoB,EACzBpmC,KAAKuoC,qBAAuB,KAC5BvoC,KAAKqmC,cAAgB,IAAI9F,GAAO,EAAG,EAAG,GACtCvgC,KAAKwoC,iBAAmB,KAExBxoC,KAAKyvE,YAAc,EACnBzvE,KAAK0vE,WAAa,EAClB1vE,KAAK2vE,YAAc,EACnB3vE,KAAK4vE,aAAe,EACpB5vE,KAAK6vE,OAAS,EACd7vE,KAAK8vE,cAAgB,EAErB9vE,KAAKylC,UAAWnJ,EAEjB,CAEA,cAAIhlB,GAEH,OAAOtX,KAAKyvE,WAEb,CAEA,cAAIn4D,CAAYrV,GAEVjC,KAAKyvE,YAAc,IAAMxtE,EAAQ,GAErCjC,KAAK+V,UAIN/V,KAAKyvE,YAAcxtE,CAEpB,CAEA,aAAIskC,GAEH,OAAOvmC,KAAK0vE,UAEb,CAEA,aAAInpC,CAAWtkC,GAETjC,KAAK0vE,WAAa,IAAMztE,EAAQ,GAEpCjC,KAAK+V,UAIN/V,KAAK0vE,WAAaztE,CAEnB,CAEA,eAAI6kC,GAEH,OAAO9mC,KAAK4vE,YAEb,CAEA,eAAI9oC,CAAa7kC,GAEXjC,KAAK4vE,aAAe,IAAM3tE,EAAQ,GAEtCjC,KAAK+V,UAIN/V,KAAK4vE,aAAe3tE,CAErB,CAEA,cAAI4kC,GAEH,OAAO7mC,KAAK2vE,WAEb,CAEA,cAAI9oC,CAAY5kC,GAEVjC,KAAK2vE,YAAc,IAAM1tE,EAAQ,GAErCjC,KAAK+V,UAIN/V,KAAK2vE,YAAc1tE,CAEpB,CAEA,SAAI6jC,GAEH,OAAO9lC,KAAK6vE,MAEb,CAEA,SAAI/pC,CAAO7jC,GAELjC,KAAK6vE,OAAS,IAAM5tE,EAAQ,GAEhCjC,KAAK+V,UAIN/V,KAAK6vE,OAAS5tE,CAEf,CAEA,gBAAI+mC,GAEH,OAAOhpC,KAAK8vE,aAEb,CAEA,gBAAI9mC,CAAc/mC,GAEZjC,KAAK8vE,cAAgB,IAAM7tE,EAAQ,GAEvCjC,KAAK+V,UAIN/V,KAAK8vE,cAAgB7tE,CAEtB,CAEA0F,IAAAA,CAAM+P,GAkDL,OAhDAF,MAAM7P,KAAM+P,GAEZ1X,KAAKw2C,QAAU,CAEd,SAAY,GACZ,SAAY,IAIbx2C,KAAKsX,WAAaI,EAAOJ,WACzBtX,KAAKmnC,mBAAqBzvB,EAAOyvB,mBACjCnnC,KAAKonC,cAAgB1vB,EAAO0vB,cAE5BpnC,KAAKumC,UAAY7uB,EAAO6uB,UACxBvmC,KAAKymC,aAAe/uB,EAAO+uB,aAC3BzmC,KAAKwmC,mBAAqB9uB,EAAO8uB,mBACjCxmC,KAAK0mC,sBAAwBhvB,EAAOgvB,sBACpC1mC,KAAK2mC,mBAAqBjvB,EAAOivB,mBACjC3mC,KAAK4mC,qBAAqBj/B,KAAM+P,EAAOkvB,sBAEvC5mC,KAAK6mC,WAAanvB,EAAOmvB,WACzB7mC,KAAKqvE,IAAM33D,EAAO23D,IAElBrvE,KAAK8mC,YAAcpvB,EAAOovB,YAC1B9mC,KAAKinC,eAAiBvvB,EAAOuvB,eAC7BjnC,KAAK+mC,eAAiBrvB,EAAOqvB,eAC7B/mC,KAAKgnC,0BAA4B,IAAKtvB,EAAOsvB,2BAC7ChnC,KAAKknC,wBAA0BxvB,EAAOwvB,wBAEtClnC,KAAK8lC,MAAQpuB,EAAOouB,MACpB9lC,KAAK+lC,WAAWp+B,KAAM+P,EAAOquB,YAC7B/lC,KAAKuvE,cAAgB73D,EAAO63D,cAC5BvvE,KAAKgmC,eAAiBtuB,EAAOsuB,eAC7BhmC,KAAKwvE,kBAAoB93D,EAAO83D,kBAEhCxvE,KAAKgpC,aAAetxB,EAAOsxB,aAC3BhpC,KAAKipC,gBAAkBvxB,EAAOuxB,gBAE9BjpC,KAAKkpC,UAAYxxB,EAAOwxB,UACxBlpC,KAAKmpC,aAAezxB,EAAOyxB,aAC3BnpC,KAAKopC,oBAAsB1xB,EAAO0xB,oBAClCppC,KAAKqpC,iBAAiB1hC,KAAM+P,EAAO2xB,kBAEnCrpC,KAAKomC,kBAAoB1uB,EAAO0uB,kBAChCpmC,KAAKuoC,qBAAuB7wB,EAAO6wB,qBACnCvoC,KAAKqmC,cAAc1+B,KAAM+P,EAAO2uB,eAChCrmC,KAAKwoC,iBAAmB9wB,EAAO8wB,iBAExBxoC,IAER,EAID,MAAM+vE,WAA0BntC,GAE/BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKgwE,qBAAsB,EAE3BhwE,KAAKH,KAAO,oBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UACxBvgC,KAAKmmC,SAAW,IAAI5F,GAAO,SAC3BvgC,KAAKsmC,UAAY,GAEjBtmC,KAAKy6B,IAAM,KAEXz6B,KAAKunC,SAAW,KAChBvnC,KAAKwnC,kBAAoB,EAEzBxnC,KAAKynC,MAAQ,KACbznC,KAAK0nC,eAAiB,EAEtB1nC,KAAKimC,SAAW,IAAI1F,GAAO,GAC3BvgC,KAAKkmC,kBAAoB,EACzBlmC,KAAKqoC,YAAc,KAEnBroC,KAAK2nC,QAAU,KACf3nC,KAAK4nC,UAAY,EAEjB5nC,KAAK6nC,UAAY,KACjB7nC,KAAK8nC,cAAgBlrC,GACrBoD,KAAK+nC,YAAc,IAAIhhC,GAAS,EAAG,GAEnC/G,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAKsoC,YAAc,KAEnBtoC,KAAKsnC,SAAW,KAEhBtnC,KAAKyoC,OAAS,KACdzoC,KAAK2oC,eAAiB,IAAIzV,GAE1BlzB,KAAK0oC,QAAUzyC,EACf+J,KAAK6oC,aAAe,EACpB7oC,KAAK8oC,gBAAkB,IAEvB9oC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAC1B3pC,KAAK4pC,iBAAmB,QACxB5pC,KAAK6pC,kBAAoB,QAEzB7pC,KAAK8pC,aAAc,EAEnB9pC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAkDL,OAhDAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OACxBtS,KAAKmmC,SAASx+B,KAAM+P,EAAOyuB,UAC3BnmC,KAAKsmC,UAAY5uB,EAAO4uB,UAExBtmC,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKunC,SAAW7vB,EAAO6vB,SACvBvnC,KAAKwnC,kBAAoB9vB,EAAO8vB,kBAEhCxnC,KAAKynC,MAAQ/vB,EAAO+vB,MACpBznC,KAAK0nC,eAAiBhwB,EAAOgwB,eAE7B1nC,KAAKimC,SAASt+B,KAAM+P,EAAOuuB,UAC3BjmC,KAAKqoC,YAAc3wB,EAAO2wB,YAC1BroC,KAAKkmC,kBAAoBxuB,EAAOwuB,kBAEhClmC,KAAK2nC,QAAUjwB,EAAOiwB,QACtB3nC,KAAK4nC,UAAYlwB,EAAOkwB,UAExB5nC,KAAK6nC,UAAYnwB,EAAOmwB,UACxB7nC,KAAK8nC,cAAgBpwB,EAAOowB,cAC5B9nC,KAAK+nC,YAAYpgC,KAAM+P,EAAOqwB,aAE9B/nC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAKsoC,YAAc5wB,EAAO4wB,YAE1BtoC,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKyoC,OAAS/wB,EAAO+wB,OACrBzoC,KAAK2oC,eAAehhC,KAAM+P,EAAOixB,gBACjC3oC,KAAK0oC,QAAUhxB,EAAOgxB,QACtB1oC,KAAK6oC,aAAenxB,EAAOmxB,aAC3B7oC,KAAK8oC,gBAAkBpxB,EAAOoxB,gBAE9B9oC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBACjC3pC,KAAK4pC,iBAAmBlyB,EAAOkyB,iBAC/B5pC,KAAK6pC,kBAAoBnyB,EAAOmyB,kBAEhC7pC,KAAK8pC,YAAcpyB,EAAOoyB,YAE1B9pC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAMiwE,WAAyBrtC,GAE9BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKkwE,oBAAqB,EAE1BlwE,KAAKw2C,QAAU,CAAE,KAAQ,IAEzBx2C,KAAKH,KAAO,mBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKy6B,IAAM,KACXz6B,KAAK+oC,YAAc,KAEnB/oC,KAAKunC,SAAW,KAChBvnC,KAAKwnC,kBAAoB,EAEzBxnC,KAAKynC,MAAQ,KACbznC,KAAK0nC,eAAiB,EAEtB1nC,KAAKimC,SAAW,IAAI1F,GAAO,GAC3BvgC,KAAKkmC,kBAAoB,EACzBlmC,KAAKqoC,YAAc,KAEnBroC,KAAK2nC,QAAU,KACf3nC,KAAK4nC,UAAY,EAEjB5nC,KAAK6nC,UAAY,KACjB7nC,KAAK8nC,cAAgBlrC,GACrBoD,KAAK+nC,YAAc,IAAIhhC,GAAS,EAAG,GAEnC/G,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAKsnC,SAAW,KAEhBtnC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAC1B3pC,KAAK4pC,iBAAmB,QACxB5pC,KAAK6pC,kBAAoB,QAEzB7pC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAuCL,OArCAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKy6B,IAAM/iB,EAAO+iB,IAClBz6B,KAAK+oC,YAAcrxB,EAAOqxB,YAE1B/oC,KAAKunC,SAAW7vB,EAAO6vB,SACvBvnC,KAAKwnC,kBAAoB9vB,EAAO8vB,kBAEhCxnC,KAAKynC,MAAQ/vB,EAAO+vB,MACpBznC,KAAK0nC,eAAiBhwB,EAAOgwB,eAE7B1nC,KAAKimC,SAASt+B,KAAM+P,EAAOuuB,UAC3BjmC,KAAKqoC,YAAc3wB,EAAO2wB,YAC1BroC,KAAKkmC,kBAAoBxuB,EAAOwuB,kBAEhClmC,KAAK2nC,QAAUjwB,EAAOiwB,QACtB3nC,KAAK4nC,UAAYlwB,EAAOkwB,UAExB5nC,KAAK6nC,UAAYnwB,EAAOmwB,UACxB7nC,KAAK8nC,cAAgBpwB,EAAOowB,cAC5B9nC,KAAK+nC,YAAYpgC,KAAM+P,EAAOqwB,aAE9B/nC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBACjC3pC,KAAK4pC,iBAAmBlyB,EAAOkyB,iBAC/B5pC,KAAK6pC,kBAAoBnyB,EAAOmyB,kBAEhC7pC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAMmwE,WAA2BvtC,GAEhChgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKowE,sBAAuB,EAE5BpwE,KAAKH,KAAO,qBAEZG,KAAK2nC,QAAU,KACf3nC,KAAK4nC,UAAY,EAEjB5nC,KAAK6nC,UAAY,KACjB7nC,KAAK8nC,cAAgBlrC,GACrBoD,KAAK+nC,YAAc,IAAIhhC,GAAS,EAAG,GAEnC/G,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAE1B3pC,KAAK8pC,aAAc,EAEnB9pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAoBL,OAlBAF,MAAM7P,KAAM+P,GAEZ1X,KAAK2nC,QAAUjwB,EAAOiwB,QACtB3nC,KAAK4nC,UAAYlwB,EAAOkwB,UAExB5nC,KAAK6nC,UAAYnwB,EAAOmwB,UACxB7nC,KAAK8nC,cAAgBpwB,EAAOowB,cAC5B9nC,KAAK+nC,YAAYpgC,KAAM+P,EAAOqwB,aAE9B/nC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBAEjC3pC,KAAK8pC,YAAcpyB,EAAOoyB,YAEnB9pC,IAER,EAID,MAAMqwE,WAA4BztC,GAEjChgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKswE,uBAAwB,EAE7BtwE,KAAKH,KAAO,sBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKy6B,IAAM,KAEXz6B,KAAKunC,SAAW,KAChBvnC,KAAKwnC,kBAAoB,EAEzBxnC,KAAKynC,MAAQ,KACbznC,KAAK0nC,eAAiB,EAEtB1nC,KAAKimC,SAAW,IAAI1F,GAAO,GAC3BvgC,KAAKkmC,kBAAoB,EACzBlmC,KAAKqoC,YAAc,KAEnBroC,KAAK2nC,QAAU,KACf3nC,KAAK4nC,UAAY,EAEjB5nC,KAAK6nC,UAAY,KACjB7nC,KAAK8nC,cAAgBlrC,GACrBoD,KAAK+nC,YAAc,IAAIhhC,GAAS,EAAG,GAEnC/G,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAKsoC,YAAc,KAEnBtoC,KAAKsnC,SAAW,KAEhBtnC,KAAKyoC,OAAS,KACdzoC,KAAK2oC,eAAiB,IAAIzV,GAC1BlzB,KAAK0oC,QAAUzyC,EACf+J,KAAK6oC,aAAe,EACpB7oC,KAAK8oC,gBAAkB,IAEvB9oC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAC1B3pC,KAAK4pC,iBAAmB,QACxB5pC,KAAK6pC,kBAAoB,QAEzB7pC,KAAK8pC,aAAc,EAEnB9pC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAgDL,OA9CAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKunC,SAAW7vB,EAAO6vB,SACvBvnC,KAAKwnC,kBAAoB9vB,EAAO8vB,kBAEhCxnC,KAAKynC,MAAQ/vB,EAAO+vB,MACpBznC,KAAK0nC,eAAiBhwB,EAAOgwB,eAE7B1nC,KAAKimC,SAASt+B,KAAM+P,EAAOuuB,UAC3BjmC,KAAKqoC,YAAc3wB,EAAO2wB,YAC1BroC,KAAKkmC,kBAAoBxuB,EAAOwuB,kBAEhClmC,KAAK2nC,QAAUjwB,EAAOiwB,QACtB3nC,KAAK4nC,UAAYlwB,EAAOkwB,UAExB5nC,KAAK6nC,UAAYnwB,EAAOmwB,UACxB7nC,KAAK8nC,cAAgBpwB,EAAOowB,cAC5B9nC,KAAK+nC,YAAYpgC,KAAM+P,EAAOqwB,aAE9B/nC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAKsoC,YAAc5wB,EAAO4wB,YAE1BtoC,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKyoC,OAAS/wB,EAAO+wB,OACrBzoC,KAAK2oC,eAAehhC,KAAM+P,EAAOixB,gBACjC3oC,KAAK0oC,QAAUhxB,EAAOgxB,QACtB1oC,KAAK6oC,aAAenxB,EAAOmxB,aAC3B7oC,KAAK8oC,gBAAkBpxB,EAAOoxB,gBAE9B9oC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBACjC3pC,KAAK4pC,iBAAmBlyB,EAAOkyB,iBAC/B5pC,KAAK6pC,kBAAoBnyB,EAAOmyB,kBAEhC7pC,KAAK8pC,YAAcpyB,EAAOoyB,YAE1B9pC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAMuwE,WAA0B3tC,GAE/BhgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAKwwE,qBAAsB,EAE3BxwE,KAAKH,KAAO,oBAEZG,KAAKywE,aAAej0E,GAEpBwD,KAAKy6B,IAAM,KAEXz6B,KAAKsnC,SAAW,KAEhBtnC,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAK0pC,WAAY,EACjB1pC,KAAK2pC,mBAAqB,EAE1B3pC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAiBL,OAfAF,MAAM7P,KAAM+P,GAEZ1X,KAAKywE,aAAe/4D,EAAO+4D,aAE3BzwE,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAK0pC,UAAYhyB,EAAOgyB,UACxB1pC,KAAK2pC,mBAAqBjyB,EAAOiyB,mBAE1B3pC,IAER,EAID,MAAM0wE,WAA6B9tC,GAElChgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAK2wE,wBAAyB,EAE9B3wE,KAAKH,KAAO,uBAEZG,KAAKy6B,IAAM,KAEXz6B,KAAKsnC,SAAW,KAEhBtnC,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAYL,OAVAF,MAAM7P,KAAM+P,GAEZ1X,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAExBloC,IAER,EAID,MAAM4wE,WAA2BhuC,GAEhChgC,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAK6wE,sBAAuB,EAE5B7wE,KAAKw2C,QAAU,CAAE,OAAU,IAE3Bx2C,KAAKH,KAAO,qBAEZG,KAAKsS,MAAQ,IAAIiuB,GAAO,UAExBvgC,KAAKqnC,OAAS,KAEdrnC,KAAKy6B,IAAM,KAEXz6B,KAAK2nC,QAAU,KACf3nC,KAAK4nC,UAAY,EAEjB5nC,KAAK6nC,UAAY,KACjB7nC,KAAK8nC,cAAgBlrC,GACrBoD,KAAK+nC,YAAc,IAAIhhC,GAAS,EAAG,GAEnC/G,KAAKgoC,gBAAkB,KACvBhoC,KAAKioC,kBAAoB,EACzBjoC,KAAKkoC,iBAAmB,EAExBloC,KAAKsnC,SAAW,KAEhBtnC,KAAK8pC,aAAc,EAEnB9pC,KAAK+pC,KAAM,EAEX/pC,KAAKylC,UAAWnJ,EAEjB,CAGA30B,IAAAA,CAAM+P,GA6BL,OA3BAF,MAAM7P,KAAM+P,GAEZ1X,KAAKw2C,QAAU,CAAE,OAAU,IAE3Bx2C,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OAExBtS,KAAKqnC,OAAS3vB,EAAO2vB,OAErBrnC,KAAKy6B,IAAM/iB,EAAO+iB,IAElBz6B,KAAK2nC,QAAUjwB,EAAOiwB,QACtB3nC,KAAK4nC,UAAYlwB,EAAOkwB,UAExB5nC,KAAK6nC,UAAYnwB,EAAOmwB,UACxB7nC,KAAK8nC,cAAgBpwB,EAAOowB,cAC5B9nC,KAAK+nC,YAAYpgC,KAAM+P,EAAOqwB,aAE9B/nC,KAAKgoC,gBAAkBtwB,EAAOswB,gBAC9BhoC,KAAKioC,kBAAoBvwB,EAAOuwB,kBAChCjoC,KAAKkoC,iBAAmBxwB,EAAOwwB,iBAE/BloC,KAAKsnC,SAAW5vB,EAAO4vB,SAEvBtnC,KAAK8pC,YAAcpyB,EAAOoyB,YAE1B9pC,KAAK+pC,IAAMryB,EAAOqyB,IAEX/pC,IAER,EAID,MAAM8wE,WAA2BjhB,GAEhCjtD,WAAAA,CAAa05B,GAEZ9kB,QAEAxX,KAAK+wE,sBAAuB,EAC5B/wE,KAAKH,KAAO,qBAEZG,KAAKsP,MAAQ,EACbtP,KAAKwpC,SAAW,EAChBxpC,KAAKypC,QAAU,EAEfzpC,KAAKylC,UAAWnJ,EAEjB,CAEA30B,IAAAA,CAAM+P,GAQL,OANAF,MAAM7P,KAAM+P,GAEZ1X,KAAKsP,MAAQoI,EAAOpI,MACpBtP,KAAKwpC,SAAW9xB,EAAO8xB,SACvBxpC,KAAKypC,QAAU/xB,EAAO+xB,QAEfzpC,IAER,EAKD,SAASgxE,GAAcnwE,EAAOhB,EAAMoxE,GAEnC,OAAOpwE,IACJowE,GAAcpwE,EAAM+B,cAAgB/C,EAAcgB,EAEd,kBAA3BhB,EAAK2vD,kBAET,IAAI3vD,EAAMgB,GAIX0V,MAAMvP,UAAUlG,MAAMI,KAAML,EAEpC,CAEA,SAASqwE,GAAcjrD,GAEtB,OAAOskB,YAAY4mC,OAAQlrD,MACtBA,aAAkBmrD,SAExB,CAGA,SAASC,GAAkBC,GAQ1B,MAAMjvE,EAAIivE,EAAMrwE,OACVo3B,EAAS,IAAI9hB,MAAOlU,GAC1B,IAAM,IAAItB,EAAI,EAAGA,IAAMsB,IAAMtB,EAAIs3B,EAAQt3B,GAAMA,EAI/C,OAFAs3B,EAAO60B,MAVP,SAAsBnsD,EAAGuoB,GAExB,OAAOgoD,EAAOvwE,GAAMuwE,EAAOhoD,EAE5B,IAQO+O,CAER,CAGA,SAASk5C,GAAat0C,EAAQyU,EAAQzrC,GAErC,MAAMurE,EAAUv0C,EAAOh8B,OACjBo3B,EAAS,IAAI4E,EAAOr6B,YAAa4uE,GAEvC,IAAM,IAAIzwE,EAAI,EAAGgd,EAAY,EAAGA,IAAcyzD,IAAYzwE,EAAI,CAE7D,MAAM0wE,EAAYxrE,EAAOlF,GAAM2wC,EAE/B,IAAM,IAAIpoB,EAAI,EAAGA,IAAMooB,IAAWpoB,EAEjC+O,EAAQta,KAAiBkf,EAAQw0C,EAAYnoD,EAI/C,CAEA,OAAO+O,CAER,CAGA,SAASq5C,GAAaC,EAAUL,EAAOr0C,EAAQ20C,GAE9C,IAAI7wE,EAAI,EAAGm8B,EAAMy0C,EAAU,GAE3B,UAAgB5xE,IAARm9B,QAAkDn9B,IAA7Bm9B,EAAK00C,IAEjC10C,EAAMy0C,EAAU5wE,KAIjB,QAAahB,IAARm9B,EAAoB,OAEzB,IAAIj7B,EAAQi7B,EAAK00C,GACjB,QAAe7xE,IAAVkC,EAEL,GAAKsU,MAAMC,QAASvU,GAEnB,GAECA,EAAQi7B,EAAK00C,QAEE7xE,IAAVkC,IAEJqvE,EAAMlxE,KAAM88B,EAAI20C,MAChB50C,EAAO78B,KAAK0xE,MAAO70C,EAAQh7B,IAI5Bi7B,EAAMy0C,EAAU5wE,gBAEChB,IAARm9B,QAEJ,QAAuBn9B,IAAlBkC,EAAMyI,QAIjB,GAECzI,EAAQi7B,EAAK00C,QAEE7xE,IAAVkC,IAEJqvE,EAAMlxE,KAAM88B,EAAI20C,MAChB5vE,EAAMyI,QAASuyB,EAAQA,EAAOh8B,SAI/Bi8B,EAAMy0C,EAAU5wE,gBAEChB,IAARm9B,QAMV,GAECj7B,EAAQi7B,EAAK00C,QAEE7xE,IAAVkC,IAEJqvE,EAAMlxE,KAAM88B,EAAI20C,MAChB50C,EAAO78B,KAAM6B,IAIdi7B,EAAMy0C,EAAU5wE,gBAEChB,IAARm9B,EAIZ,CAoMA,MAAM60C,GAAiB,CACtBf,aAAcA,GACdE,aAAcA,GACdG,iBAAkBA,GAClBE,YAAaA,GACbG,YAAaA,GACbM,QAxMD,SAAkBC,EAAY5hE,EAAM6hE,EAAYC,GAAqB,IAAXC,EAAGjuE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAE/D,MAAMkuE,EAAOJ,EAAWvqE,QAExB2qE,EAAKhiE,KAAOA,EAEZ,MAAMiiE,EAAS,GAEf,IAAM,IAAIvxE,EAAI,EAAGA,EAAIsxE,EAAKC,OAAOrxE,SAAWF,EAAI,CAE/C,MAAMwxE,EAAQF,EAAKC,OAAQvxE,GACrByxE,EAAYD,EAAME,eAElBnB,EAAQ,GACRr0C,EAAS,GAEf,IAAM,IAAI3T,EAAI,EAAGA,EAAIipD,EAAMjB,MAAMrwE,SAAWqoB,EAAI,CAE/C,MAAMuzB,EAAQ01B,EAAMjB,MAAOhoD,GAAM8oD,EAEjC,KAAKv1B,EAAQq1B,GAAcr1B,GAASs1B,GAApC,CAEAb,EAAMlxE,KAAMmyE,EAAMjB,MAAOhoD,IAEzB,IAAM,IAAIsuC,EAAI,EAAGA,EAAI4a,IAAc5a,EAElC36B,EAAO78B,KAAMmyE,EAAMt1C,OAAQ3T,EAAIkpD,EAAY5a,GANW,CAUxD,CAEsB,IAAjB0Z,EAAMrwE,SAEXsxE,EAAMjB,MAAQN,GAAcM,EAAOiB,EAAMjB,MAAM1uE,aAC/C2vE,EAAMt1C,OAAS+zC,GAAc/zC,EAAQs1C,EAAMt1C,OAAOr6B,aAElD0vE,EAAOlyE,KAAMmyE,GAEd,CAEAF,EAAKC,OAASA,EAId,IAAII,EAAettD,IAEnB,IAAM,IAAIrkB,EAAI,EAAGA,EAAIsxE,EAAKC,OAAOrxE,SAAWF,EAEtC2xE,EAAeL,EAAKC,OAAQvxE,GAAIuwE,MAAO,KAE3CoB,EAAeL,EAAKC,OAAQvxE,GAAIuwE,MAAO,IAQzC,IAAM,IAAIvwE,EAAI,EAAGA,EAAIsxE,EAAKC,OAAOrxE,SAAWF,EAE3CsxE,EAAKC,OAAQvxE,GAAIosD,OAAS,EAAIulB,GAM/B,OAFAL,EAAKM,gBAEEN,CAER,EAoICO,iBAlID,SAA2BC,GAAuE,IAA3DC,EAAc3uE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG4uE,EAAa5uE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG0uE,EAAYT,EAAGjuE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEvFiuE,GAAO,IAAIA,EAAM,IAEtB,MAAMY,EAAYD,EAAcT,OAAOrxE,OACjCgyE,EAAgBH,EAAiBV,EAGvC,IAAM,IAAIrxE,EAAI,EAAGA,EAAIiyE,IAAcjyE,EAAI,CAEtC,MAAMmyE,EAAiBH,EAAcT,OAAQvxE,GACvCoyE,EAAqBD,EAAeE,cAG1C,GAA4B,SAAvBD,GAAwD,WAAvBA,EAAkC,SAGxE,MAAME,EAAcR,EAAWP,OAAOgB,MAAM,SAAWf,GAEtD,OAAOA,EAAMliE,OAAS6iE,EAAe7iE,MACjCkiE,EAAMa,gBAAkBD,CAE7B,IAEA,QAAqBpzE,IAAhBszE,EAA4B,SAEjC,IAAIE,EAAkB,EACtB,MAAMC,EAAqBN,EAAeT,eAErCS,EAAeO,kBAAkBC,4CAErCH,EAAkBC,EAAqB,GAIxC,IAAIvpB,EAAe,EACnB,MAAM0pB,EAAkBN,EAAYZ,eAE/BY,EAAYI,kBAAkBC,4CAElCzpB,EAAe0pB,EAAkB,GAIlC,MAAMC,EAAYV,EAAe5B,MAAMrwE,OAAS,EAChD,IAAI4yE,EAGJ,GAAKZ,GAAiBC,EAAe5B,MAAO,GAAM,CAGjD,MAAMwC,EAAaP,EACbQ,EAAWP,EAAqBD,EACtCM,EAAiBX,EAAej2C,OAAOn8B,MAAOgzE,EAAYC,EAE3D,MAAO,GAAKd,GAAiBC,EAAe5B,MAAOsC,GAAc,CAGhE,MAAME,EAAaF,EAAYJ,EAAqBD,EAC9CQ,EAAWD,EAAaN,EAAqBD,EACnDM,EAAiBX,EAAej2C,OAAOn8B,MAAOgzE,EAAYC,EAE3D,KAAO,CAGN,MAAMC,EAAcd,EAAeO,oBAC7BK,EAAaP,EACbQ,EAAWP,EAAqBD,EACtCS,EAAYC,SAAUhB,GACtBY,EAAiBG,EAAYE,aAAapzE,MAAOgzE,EAAYC,EAE9D,CAGA,GAA4B,eAAvBZ,EAAsC,EAEpB,IAAI51D,IAAa/S,UAAWqpE,GAAiBxwE,YAAYmd,YACjE9V,QAASmpE,EAExB,CAIA,MAAMM,EAAWd,EAAY/B,MAAMrwE,OACnC,IAAM,IAAIqoB,EAAI,EAAGA,EAAI6qD,IAAa7qD,EAAI,CAErC,MAAM8qD,EAAa9qD,EAAIqqD,EAAkB1pB,EAEzC,GAA4B,eAAvBkpB,EAGJ51D,GAAW2B,wBACVm0D,EAAYp2C,OACZm3C,EACAP,EACA,EACAR,EAAYp2C,OACZm3C,OAGK,CAEN,MAAMC,EAAWV,EAAiC,EAAf1pB,EAGnC,IAAM,IAAI2N,EAAI,EAAGA,EAAIyc,IAAazc,EAEjCyb,EAAYp2C,OAAQm3C,EAAaxc,IAAOic,EAAgBjc,EAI1D,CAED,CAED,CAIA,OAFAib,EAAWyB,UAAYl4E,GAEhBy2E,CAER,GAiCA,MAAM0B,GAEL3xE,WAAAA,CAAa4xE,EAAoBC,EAAcC,EAAYR,GAE1Dl0E,KAAKw0E,mBAAqBA,EAC1Bx0E,KAAK20E,aAAe,EAEpB30E,KAAKk0E,kBAAgCn0E,IAAjBm0E,EACnBA,EAAe,IAAIO,EAAa7xE,YAAa8xE,GAC9C10E,KAAKy0E,aAAeA,EACpBz0E,KAAKwyE,UAAYkC,EAEjB10E,KAAK40E,SAAW,KAChB50E,KAAK60E,iBAAmB,CAAC,CAE1B,CAEAZ,QAAAA,CAAUvxE,GAET,MAAMoyE,EAAK90E,KAAKw0E,mBAChB,IAAIv1C,EAAKj/B,KAAK20E,aACbroD,EAAKwoD,EAAI71C,GACT5S,EAAKyoD,EAAI71C,EAAK,GAEf81C,EAAmB,CAElBC,EAAM,CAEL,IAAIziD,EAEJ0iD,EAAa,CAMZC,EAAc,KAASxyE,EAAI4pB,GAAO,CAEjC,IAAM,IAAI6oD,EAAWl2C,EAAK,IAAO,CAEhC,QAAYl/B,IAAPusB,EAAmB,CAEvB,GAAK5pB,EAAI2pB,EAAK,MAAM6oD,EAMpB,OAFAj2C,EAAK61C,EAAG7zE,OACRjB,KAAK20E,aAAe11C,EACbj/B,KAAKo1E,iBAAkBn2C,EAAK,EAEpC,CAEA,GAAKA,IAAOk2C,EAAW,MAKvB,GAHA9oD,EAAKC,EACLA,EAAKwoD,IAAO71C,GAEPv8B,EAAI4pB,EAGR,MAAM0oD,CAIR,CAGAziD,EAAQuiD,EAAG7zE,OACX,MAAMg0E,CAEP,CAIA,GAASvyE,GAAK2pB,EAiDd,MAAM0oD,EAjDN,CAIC,MAAMM,EAAWP,EAAI,GAEhBpyE,EAAI2yE,IAERp2C,EAAK,EACL5S,EAAKgpD,GAMN,IAAM,IAAIF,EAAWl2C,EAAK,IAAO,CAEhC,QAAYl/B,IAAPssB,EAKJ,OADArsB,KAAK20E,aAAe,EACb30E,KAAKo1E,iBAAkB,GAI/B,GAAKn2C,IAAOk2C,EAAW,MAKvB,GAHA7oD,EAAKD,EACLA,EAAKyoD,IAAO71C,EAAK,GAEZv8B,GAAK2pB,EAGT,MAAM2oD,CAIR,CAGAziD,EAAQ0M,EACRA,EAAK,CAGN,CAMD,CAIA,KAAQA,EAAK1M,GAAQ,CAEpB,MAAM+iD,EAAQr2C,EAAK1M,IAAY,EAE1B7vB,EAAIoyE,EAAIQ,GAEZ/iD,EAAQ+iD,EAIRr2C,EAAKq2C,EAAM,CAIb,CAOA,GALAhpD,EAAKwoD,EAAI71C,GACT5S,EAAKyoD,EAAI71C,EAAK,QAIFl/B,IAAPssB,EAGJ,OADArsB,KAAK20E,aAAe,EACb30E,KAAKo1E,iBAAkB,GAI/B,QAAYr1E,IAAPusB,EAIJ,OAFA2S,EAAK61C,EAAG7zE,OACRjB,KAAK20E,aAAe11C,EACbj/B,KAAKo1E,iBAAkBn2C,EAAK,EAIrC,CAEAj/B,KAAK20E,aAAe11C,EAEpBj/B,KAAKu1E,iBAAkBt2C,EAAI5S,EAAIC,EAEhC,CAEA,OAAOtsB,KAAKw1E,aAAcv2C,EAAI5S,EAAI3pB,EAAG4pB,EAEtC,CAEAmpD,YAAAA,GAEC,OAAOz1E,KAAK40E,UAAY50E,KAAK60E,gBAE9B,CAEAO,gBAAAA,CAAkB50E,GAIjB,MAAM63B,EAASr4B,KAAKk0E,aACnBj3C,EAASj9B,KAAKy0E,aACd/iC,EAAS1xC,KAAKwyE,UACd/nE,EAASjK,EAAQkxC,EAElB,IAAM,IAAI3wC,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAEjCs3B,EAAQt3B,GAAMk8B,EAAQxyB,EAAS1J,GAIhC,OAAOs3B,CAER,CAIAm9C,YAAAA,GAEC,MAAM,IAAIpyE,MAAO,0BAGlB,CAEAmyE,gBAAAA,GAEC,EAcF,MAAMG,WAAyBnB,GAE9B3xE,WAAAA,CAAa4xE,EAAoBC,EAAcC,EAAYR,GAE1D18D,MAAOg9D,EAAoBC,EAAcC,EAAYR,GAErDl0E,KAAK21E,aAAgB,EACrB31E,KAAK41E,aAAgB,EACrB51E,KAAK61E,aAAgB,EACrB71E,KAAK81E,aAAgB,EAErB91E,KAAK60E,iBAAmB,CAEvBkB,YAAa/5E,GACbg6E,UAAWh6E,GAIb,CAEAu5E,gBAAAA,CAAkBt2C,EAAI5S,EAAIC,GAEzB,MAAMwoD,EAAK90E,KAAKw0E,mBAChB,IAAIyB,EAAQh3C,EAAK,EAChBi3C,EAAQj3C,EAAK,EAEbk3C,EAAQrB,EAAImB,GACZG,EAAQtB,EAAIoB,GAEb,QAAen2E,IAAVo2E,EAEJ,OAASn2E,KAAKy1E,eAAeM,aAE5B,KAAK95E,GAGJg6E,EAAQh3C,EACRk3C,EAAQ,EAAI9pD,EAAKC,EAEjB,MAED,KAAKpwB,GAGJ+5E,EAAQnB,EAAG7zE,OAAS,EACpBk1E,EAAQ9pD,EAAKyoD,EAAImB,GAAUnB,EAAImB,EAAQ,GAEvC,MAED,QAGCA,EAAQh3C,EACRk3C,EAAQ7pD,EAMX,QAAevsB,IAAVq2E,EAEJ,OAASp2E,KAAKy1E,eAAeO,WAE5B,KAAK/5E,GAGJi6E,EAAQj3C,EACRm3C,EAAQ,EAAI9pD,EAAKD,EAEjB,MAED,KAAKnwB,GAGJg6E,EAAQ,EACRE,EAAQ9pD,EAAKwoD,EAAI,GAAMA,EAAI,GAE3B,MAED,QAGCoB,EAAQj3C,EAAK,EACbm3C,EAAQ/pD,EAMX,MAAMgqD,EAAuB,IAAZ/pD,EAAKD,GACrBqlB,EAAS1xC,KAAKwyE,UAEfxyE,KAAK21E,YAAcU,GAAWhqD,EAAK8pD,GACnCn2E,KAAK61E,YAAcQ,GAAWD,EAAQ9pD,GACtCtsB,KAAK41E,YAAcK,EAAQvkC,EAC3B1xC,KAAK81E,YAAcI,EAAQxkC,CAE5B,CAEA8jC,YAAAA,CAAcv2C,EAAI5S,EAAI3pB,EAAG4pB,GAExB,MAAM+L,EAASr4B,KAAKk0E,aACnBj3C,EAASj9B,KAAKy0E,aACd/iC,EAAS1xC,KAAKwyE,UAEd5N,EAAK3lC,EAAKyS,EAAS4kC,EAAK1R,EAAKlzB,EAC7B6kC,EAAKv2E,KAAK41E,YAAcY,EAAKx2E,KAAK81E,YAClCW,EAAKz2E,KAAK21E,YAAae,EAAK12E,KAAK61E,YAEjC/iD,GAAMpwB,EAAI2pB,IAASC,EAAKD,GACxByoD,EAAKhiD,EAAIA,EACT6jD,EAAM7B,EAAKhiD,EAIN8jD,GAAOH,EAAKE,EAAM,EAAIF,EAAK3B,EAAK2B,EAAK3jD,EACrCjH,GAAO,EAAI4qD,GAAOE,IAAU,IAAM,EAAIF,GAAO3B,IAAS,GAAM2B,GAAO3jD,EAAI,EACvEnT,IAAS,EAAI+2D,GAAOC,GAAQ,IAAMD,GAAO5B,EAAK,GAAMhiD,EACpD+jD,EAAKH,EAAKC,EAAMD,EAAK5B,EAI3B,IAAM,IAAI/zE,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAEjCs3B,EAAQt3B,GACN61E,EAAK35C,EAAQs5C,EAAKx1E,GAClB8qB,EAAKoR,EAAQq5C,EAAKv1E,GAClB4e,EAAKsd,EAAQ2nC,EAAK7jE,GAClB81E,EAAK55C,EAAQu5C,EAAKz1E,GAIrB,OAAOs3B,CAER,EAID,MAAMy+C,WAA0BvC,GAE/B3xE,WAAAA,CAAa4xE,EAAoBC,EAAcC,EAAYR,GAE1D18D,MAAOg9D,EAAoBC,EAAcC,EAAYR,EAEtD,CAEAsB,YAAAA,CAAcv2C,EAAI5S,EAAI3pB,EAAG4pB,GAExB,MAAM+L,EAASr4B,KAAKk0E,aACnBj3C,EAASj9B,KAAKy0E,aACd/iC,EAAS1xC,KAAKwyE,UAEduE,EAAU93C,EAAKyS,EACfslC,EAAUD,EAAUrlC,EAEpBulC,GAAYv0E,EAAI2pB,IAASC,EAAKD,GAC9B6qD,EAAU,EAAID,EAEf,IAAM,IAAIl2E,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAEjCs3B,EAAQt3B,GACNk8B,EAAQ+5C,EAAUj2E,GAAMm2E,EACxBj6C,EAAQ85C,EAAUh2E,GAAMk2E,EAI3B,OAAO5+C,CAER,EAUD,MAAM8+C,WAA4B5C,GAEjC3xE,WAAAA,CAAa4xE,EAAoBC,EAAcC,EAAYR,GAE1D18D,MAAOg9D,EAAoBC,EAAcC,EAAYR,EAEtD,CAEAsB,YAAAA,CAAcv2C,GAEb,OAAOj/B,KAAKo1E,iBAAkBn2C,EAAK,EAEpC,EAID,MAAMm4C,GAELx0E,WAAAA,CAAayN,EAAMihE,EAAOr0C,EAAQo6C,GAEjC,QAAct3E,IAATsQ,EAAqB,MAAM,IAAIjN,MAAO,gDAC3C,QAAerD,IAAVuxE,GAAwC,IAAjBA,EAAMrwE,OAAe,MAAM,IAAImC,MAAO,oDAAsDiN,GAExHrQ,KAAKqQ,KAAOA,EAEZrQ,KAAKsxE,MAAQN,GAAcM,EAAOtxE,KAAKs3E,gBACvCt3E,KAAKi9B,OAAS+zC,GAAc/zC,EAAQj9B,KAAKu3E,iBAEzCv3E,KAAKw3E,iBAAkBH,GAAiBr3E,KAAKy3E,qBAE9C,CAKA,aAAOxhE,CAAQs8D,GAEd,MAAMmF,EAAYnF,EAAM3vE,YAExB,IAAIuhD,EAGJ,GAAKuzB,EAAUzhE,SAAWjW,KAAKiW,OAE9BkuC,EAAOuzB,EAAUzhE,OAAQs8D,OAEnB,CAGNpuB,EAAO,CAEN,KAAQouB,EAAMliE,KACd,MAAS2gE,GAAcuB,EAAMjB,MAAO/6D,OACpC,OAAUy6D,GAAcuB,EAAMt1C,OAAQ1mB,QAIvC,MAAM8gE,EAAgB9E,EAAM3zC,mBAEvBy4C,IAAkB9E,EAAMkF,uBAE5BtzB,EAAKkzB,cAAgBA,EAIvB,CAIA,OAFAlzB,EAAKtkD,KAAO0yE,EAAMa,cAEXjvB,CAER,CAEAwzB,gCAAAA,CAAkCt/C,GAEjC,OAAO,IAAI8+C,GAAqBn3E,KAAKsxE,MAAOtxE,KAAKi9B,OAAQj9B,KAAKyyE,eAAgBp6C,EAE/E,CAEAu/C,8BAAAA,CAAgCv/C,GAE/B,OAAO,IAAIy+C,GAAmB92E,KAAKsxE,MAAOtxE,KAAKi9B,OAAQj9B,KAAKyyE,eAAgBp6C,EAE7E,CAEAw/C,8BAAAA,CAAgCx/C,GAE/B,OAAO,IAAIq9C,GAAkB11E,KAAKsxE,MAAOtxE,KAAKi9B,OAAQj9B,KAAKyyE,eAAgBp6C,EAE5E,CAEAm/C,gBAAAA,CAAkBH,GAEjB,IAAIS,EAEJ,OAAST,GAER,KAAKx7E,GAEJi8E,EAAgB93E,KAAK23E,iCAErB,MAED,KAAK77E,GAEJg8E,EAAgB93E,KAAK43E,+BAErB,MAED,KAAK77E,GAEJ+7E,EAAgB93E,KAAK63E,+BAMvB,QAAuB93E,IAAlB+3E,EAA8B,CAElC,MAAMjnE,EAAU,iCACf7Q,KAAKozE,cAAgB,yBAA2BpzE,KAAKqQ,KAEtD,QAAgCtQ,IAA3BC,KAAKyzE,kBAAkC,CAG3C,GAAK4D,IAAkBr3E,KAAKy3E,qBAM3B,MAAM,IAAIr0E,MAAOyN,GAJjB7Q,KAAKw3E,iBAAkBx3E,KAAKy3E,qBAQ9B,CAGA,OADA5wE,QAAQC,KAAM,uBAAwB+J,GAC/B7Q,IAER,CAIA,OAFAA,KAAKyzE,kBAAoBqE,EAElB93E,IAER,CAEA4+B,gBAAAA,GAEC,OAAS5+B,KAAKyzE,mBAEb,KAAKzzE,KAAK23E,iCAET,OAAO97E,GAER,KAAKmE,KAAK43E,+BAET,OAAO97E,GAER,KAAKkE,KAAK63E,+BAET,OAAO97E,GAIV,CAEA02E,YAAAA,GAEC,OAAOzyE,KAAKi9B,OAAOh8B,OAASjB,KAAKsxE,MAAMrwE,MAExC,CAGAksD,KAAAA,CAAO4qB,GAEN,GAAoB,IAAfA,EAAqB,CAEzB,MAAMzG,EAAQtxE,KAAKsxE,MAEnB,IAAM,IAAIvwE,EAAI,EAAGsB,EAAIivE,EAAMrwE,OAAQF,IAAMsB,IAAMtB,EAE9CuwE,EAAOvwE,IAAOg3E,CAIhB,CAEA,OAAO/3E,IAER,CAGAsP,KAAAA,CAAO0oE,GAEN,GAAmB,IAAdA,EAAoB,CAExB,MAAM1G,EAAQtxE,KAAKsxE,MAEnB,IAAM,IAAIvwE,EAAI,EAAGsB,EAAIivE,EAAMrwE,OAAQF,IAAMsB,IAAMtB,EAE9CuwE,EAAOvwE,IAAOi3E,CAIhB,CAEA,OAAOh4E,IAER,CAIAi4E,IAAAA,CAAMC,EAAWC,GAEhB,MAAM7G,EAAQtxE,KAAKsxE,MAClB8G,EAAQ9G,EAAMrwE,OAEf,IAAI0V,EAAO,EACV0hE,EAAKD,EAAQ,EAEd,KAAQzhE,IAASyhE,GAAS9G,EAAO36D,GAASuhE,KAEtCvhE,EAIJ,MAAiB,IAAT0hE,GAAc/G,EAAO+G,GAAOF,KAEhCE,EAMJ,KAFGA,EAEW,IAAT1hE,GAAc0hE,IAAOD,EAAQ,CAG5BzhE,GAAQ0hE,IAEZA,EAAK/2E,KAAKa,IAAKk2E,EAAI,GACnB1hE,EAAO0hE,EAAK,GAIb,MAAM3mC,EAAS1xC,KAAKyyE,eACpBzyE,KAAKsxE,MAAQA,EAAMxwE,MAAO6V,EAAM0hE,GAChCr4E,KAAKi9B,OAASj9B,KAAKi9B,OAAOn8B,MAAO6V,EAAO+6B,EAAQ2mC,EAAK3mC,EAEtD,CAEA,OAAO1xC,IAER,CAGAs4E,QAAAA,GAEC,IAAIC,GAAQ,EAEZ,MAAM/F,EAAYxyE,KAAKyyE,eAClBD,EAAYlxE,KAAKoD,MAAO8tE,KAAgB,IAE5C3rE,QAAQ+wB,MAAO,oDAAqD53B,MACpEu4E,GAAQ,GAIT,MAAMjH,EAAQtxE,KAAKsxE,MAClBr0C,EAASj9B,KAAKi9B,OAEdm7C,EAAQ9G,EAAMrwE,OAEA,IAAVm3E,IAEJvxE,QAAQ+wB,MAAO,uCAAwC53B,MACvDu4E,GAAQ,GAIT,IAAIC,EAAW,KAEf,IAAM,IAAIz3E,EAAI,EAAGA,IAAMq3E,EAAOr3E,IAAO,CAEpC,MAAM03E,EAAWnH,EAAOvwE,GAExB,GAAyB,kBAAb03E,GAAyBrrD,MAAOqrD,GAAa,CAExD5xE,QAAQ+wB,MAAO,mDAAoD53B,KAAMe,EAAG03E,GAC5EF,GAAQ,EACR,KAED,CAEA,GAAkB,OAAbC,GAAqBA,EAAWC,EAAW,CAE/C5xE,QAAQ+wB,MAAO,0CAA2C53B,KAAMe,EAAG03E,EAAUD,GAC7ED,GAAQ,EACR,KAED,CAEAC,EAAWC,CAEZ,CAEA,QAAgB14E,IAAXk9B,GAECi0C,GAAcj0C,GAElB,IAAM,IAAIl8B,EAAI,EAAGsB,EAAI46B,EAAOh8B,OAAQF,IAAMsB,IAAMtB,EAAI,CAEnD,MAAMkB,EAAQg7B,EAAQl8B,GAEtB,GAAKqsB,MAAOnrB,GAAU,CAErB4E,QAAQ+wB,MAAO,oDAAqD53B,KAAMe,EAAGkB,GAC7Es2E,GAAQ,EACR,KAED,CAED,CAMF,OAAOA,CAER,CAIAtqB,QAAAA,GAGC,MAAMqjB,EAAQtxE,KAAKsxE,MAAMxwE,QACxBm8B,EAASj9B,KAAKi9B,OAAOn8B,QACrB4wC,EAAS1xC,KAAKyyE,eAEdiG,EAAsB14E,KAAK4+B,qBAAuB7iC,GAElD63E,EAAYtC,EAAMrwE,OAAS,EAE5B,IAAI03E,EAAa,EAEjB,IAAM,IAAI53E,EAAI,EAAGA,EAAI6yE,IAAc7yE,EAAI,CAEtC,IAAI63E,GAAO,EAEX,MAAM/G,EAAOP,EAAOvwE,GAKpB,GAAK8wE,IAJYP,EAAOvwE,EAAI,KAIM,IAANA,GAAW8wE,IAASP,EAAO,IAEtD,GAAOoH,EAwBNE,GAAO,MAxBqB,CAI5B,MAAMnuE,EAAS1J,EAAI2wC,EAClBmnC,EAAUpuE,EAASinC,EACnBonC,EAAUruE,EAASinC,EAEpB,IAAM,IAAIpoB,EAAI,EAAGA,IAAMooB,IAAWpoB,EAAI,CAErC,MAAMrnB,EAAQg7B,EAAQxyB,EAAS6e,GAE/B,GAAKrnB,IAAUg7B,EAAQ47C,EAAUvvD,IAChCrnB,IAAUg7B,EAAQ67C,EAAUxvD,GAAM,CAElCsvD,GAAO,EACP,KAED,CAED,CAED,CAUD,GAAKA,EAAO,CAEX,GAAK73E,IAAM43E,EAAa,CAEvBrH,EAAOqH,GAAerH,EAAOvwE,GAE7B,MAAMg4E,EAAah4E,EAAI2wC,EACtBsnC,EAAcL,EAAajnC,EAE5B,IAAM,IAAIpoB,EAAI,EAAGA,IAAMooB,IAAWpoB,EAEjC2T,EAAQ+7C,EAAc1vD,GAAM2T,EAAQ87C,EAAazvD,EAInD,GAEGqvD,CAEJ,CAED,CAIA,GAAK/E,EAAY,EAAI,CAEpBtC,EAAOqH,GAAerH,EAAOsC,GAE7B,IAAM,IAAImF,EAAanF,EAAYliC,EAAQsnC,EAAcL,EAAajnC,EAAQpoB,EAAI,EAAGA,IAAMooB,IAAWpoB,EAErG2T,EAAQ+7C,EAAc1vD,GAAM2T,EAAQ87C,EAAazvD,KAI/CqvD,CAEJ,CAcA,OAZKA,IAAerH,EAAMrwE,QAEzBjB,KAAKsxE,MAAQA,EAAMxwE,MAAO,EAAG63E,GAC7B34E,KAAKi9B,OAASA,EAAOn8B,MAAO,EAAG63E,EAAajnC,KAI5C1xC,KAAKsxE,MAAQA,EACbtxE,KAAKi9B,OAASA,GAIRj9B,IAER,CAEA0H,KAAAA,GAEC,MAAM4pE,EAAQtxE,KAAKsxE,MAAMxwE,QACnBm8B,EAASj9B,KAAKi9B,OAAOn8B,QAGrByxE,EAAQ,IAAI0G,EADSj5E,KAAK4C,aACM5C,KAAKqQ,KAAMihE,EAAOr0C,GAKxD,OAFAs1C,EAAMkB,kBAAoBzzE,KAAKyzE,kBAExBlB,CAER,EAID6E,GAAcpwE,UAAUswE,eAAiBz0E,aACzCu0E,GAAcpwE,UAAUuwE,gBAAkB10E,aAC1Cu0E,GAAcpwE,UAAUywE,qBAAuB37E,GAK/C,MAAMo9E,WAA6B9B,GAGlCx0E,WAAAA,CAAayN,EAAMihE,EAAOr0C,GAEzBzlB,MAAOnH,EAAMihE,EAAOr0C,EAErB,EAIDi8C,GAAqBlyE,UAAUosE,cAAgB,OAC/C8F,GAAqBlyE,UAAUuwE,gBAAkBhhE,MACjD2iE,GAAqBlyE,UAAUywE,qBAAuB57E,GACtDq9E,GAAqBlyE,UAAU4wE,oCAAiC73E,EAChEm5E,GAAqBlyE,UAAU6wE,oCAAiC93E,EAKhE,MAAMo5E,WAA2B/B,IAEjC+B,GAAmBnyE,UAAUosE,cAAgB,QAK7C,MAAMgG,WAA4BhC,IAElCgC,GAAoBpyE,UAAUosE,cAAgB,SAM9C,MAAMiG,WAAoC9E,GAEzC3xE,WAAAA,CAAa4xE,EAAoBC,EAAcC,EAAYR,GAE1D18D,MAAOg9D,EAAoBC,EAAcC,EAAYR,EAEtD,CAEAsB,YAAAA,CAAcv2C,EAAI5S,EAAI3pB,EAAG4pB,GAExB,MAAM+L,EAASr4B,KAAKk0E,aACnBj3C,EAASj9B,KAAKy0E,aACd/iC,EAAS1xC,KAAKwyE,UAEdroE,GAAUzH,EAAI2pB,IAASC,EAAKD,GAE7B,IAAI5hB,EAASw0B,EAAKyS,EAElB,IAAM,IAAImV,EAAMp8C,EAASinC,EAAQjnC,IAAWo8C,EAAKp8C,GAAU,EAE1D8S,GAAWM,UAAWwa,EAAQ,EAAG4E,EAAQxyB,EAASinC,EAAQzU,EAAQxyB,EAAQN,GAI3E,OAAOkuB,CAER,EAOD,MAAMihD,WAAgClC,GAErCQ,8BAAAA,CAAgCv/C,GAE/B,OAAO,IAAIghD,GAA6Br5E,KAAKsxE,MAAOtxE,KAAKi9B,OAAQj9B,KAAKyyE,eAAgBp6C,EAEvF,EAIDihD,GAAwBtyE,UAAUosE,cAAgB,aAGlDkG,GAAwBtyE,UAAU6wE,oCAAiC93E,EAKnE,MAAMw5E,WAA4BnC,GAGjCx0E,WAAAA,CAAayN,EAAMihE,EAAOr0C,GAEzBzlB,MAAOnH,EAAMihE,EAAOr0C,EAErB,EAIDs8C,GAAoBvyE,UAAUosE,cAAgB,SAC9CmG,GAAoBvyE,UAAUuwE,gBAAkBhhE,MAChDgjE,GAAoBvyE,UAAUywE,qBAAuB57E,GACrD09E,GAAoBvyE,UAAU4wE,oCAAiC73E,EAC/Dw5E,GAAoBvyE,UAAU6wE,oCAAiC93E,EAK/D,MAAMy5E,WAA4BpC,IAElCoC,GAAoBxyE,UAAUosE,cAAgB,SAE9C,MAAMqG,GAEL72E,WAAAA,GAA4F,IAA/EyN,EAAIlM,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIu1E,EAAQv1E,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,IAAK,EAAGmuE,EAAMnuE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAImwE,EAASnwE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGhI,GAEhE6D,KAAKqQ,KAAOA,EACZrQ,KAAKsyE,OAASA,EACdtyE,KAAK05E,SAAWA,EAChB15E,KAAKs0E,UAAYA,EAEjBt0E,KAAK6V,KAAOpU,KAGPzB,KAAK05E,SAAW,GAEpB15E,KAAK2yE,eAIP,CAGA,YAAOh6D,CAAOwrC,GAEb,MAAMmuB,EAAS,GACdqH,EAAax1B,EAAKmuB,OAClBsH,EAAY,GAAQz1B,EAAKiuB,KAAO,GAEjC,IAAM,IAAIrxE,EAAI,EAAGsB,EAAIs3E,EAAW14E,OAAQF,IAAMsB,IAAMtB,EAEnDuxE,EAAOlyE,KAAMy5E,GAAoBF,EAAY54E,IAAMuO,MAAOsqE,IAI3D,MAAMvH,EAAO,IAAIryE,KAAMmkD,EAAK9zC,KAAM8zC,EAAKu1B,SAAUpH,EAAQnuB,EAAKmwB,WAG9D,OAFAjC,EAAKx8D,KAAOsuC,EAAKtuC,KAEVw8D,CAER,CAEA,aAAOp8D,CAAQo8D,GAEd,MAAMC,EAAS,GACdwH,EAAazH,EAAKC,OAEbnuB,EAAO,CAEZ,KAAQkuB,EAAKhiE,KACb,SAAYgiE,EAAKqH,SACjB,OAAUpH,EACV,KAAQD,EAAKx8D,KACb,UAAaw8D,EAAKiC,WAInB,IAAM,IAAIvzE,EAAI,EAAGsB,EAAIy3E,EAAW74E,OAAQF,IAAMsB,IAAMtB,EAEnDuxE,EAAOlyE,KAAMg3E,GAAcnhE,OAAQ6jE,EAAY/4E,KAIhD,OAAOojD,CAER,CAEA,oCAAO41B,CAA+B1pE,EAAM2pE,EAAqB5H,EAAK6H,GAErE,MAAMC,EAAkBF,EAAoB/4E,OACtCqxE,EAAS,GAEf,IAAM,IAAIvxE,EAAI,EAAGA,EAAIm5E,EAAiBn5E,IAAO,CAE5C,IAAIuwE,EAAQ,GACRr0C,EAAS,GAEbq0C,EAAMlxE,MACHW,EAAIm5E,EAAkB,GAAMA,EAC9Bn5E,GACEA,EAAI,GAAMm5E,GAEbj9C,EAAO78B,KAAM,EAAG,EAAG,GAEnB,MAAM6F,EAAQorE,GAAkBC,GAChCA,EAAQC,GAAaD,EAAO,EAAGrrE,GAC/Bg3B,EAASs0C,GAAat0C,EAAQ,EAAGh3B,GAI1Bg0E,GAAyB,IAAf3I,EAAO,KAEvBA,EAAMlxE,KAAM85E,GACZj9C,EAAO78B,KAAM68B,EAAQ,KAItBq1C,EAAOlyE,KACN,IAAIg5E,GACH,0BAA4BY,EAAqBj5E,GAAIsP,KAAO,IAC5DihE,EAAOr0C,GACN3tB,MAAO,EAAM8iE,GAEjB,CAEA,OAAO,IAAIpyE,KAAMqQ,GAAQ,EAAGiiE,EAE7B,CAEA,iBAAO6H,CAAYC,EAAmB/pE,GAErC,IAAIgqE,EAAYD,EAEhB,IAAO7jE,MAAMC,QAAS4jE,GAAsB,CAE3C,MAAM9L,EAAI8L,EACVC,EAAY/L,EAAEznD,UAAYynD,EAAEznD,SAASwP,YAAci4C,EAAEj4C,UAEtD,CAEA,IAAM,IAAIt1B,EAAI,EAAGA,EAAIs5E,EAAUp5E,OAAQF,IAEtC,GAAKs5E,EAAWt5E,GAAIsP,OAASA,EAE5B,OAAOgqE,EAAWt5E,GAMpB,OAAO,IAER,CAEA,0CAAOu5E,CAAqCC,EAAcnI,EAAK6H,GAE9D,MAAMO,EAA0B,CAAC,EAI3BC,EAAU,qBAIhB,IAAM,IAAI15E,EAAI,EAAGsb,EAAKk+D,EAAat5E,OAAQF,EAAIsb,EAAItb,IAAO,CAEzD,MAAM25E,EAAcH,EAAcx5E,GAC5B45E,EAAQD,EAAYrqE,KAAKuqE,MAAOH,GAEtC,GAAKE,GAASA,EAAM15E,OAAS,EAAI,CAEhC,MAAMoP,EAAOsqE,EAAO,GAEpB,IAAIE,EAAwBL,EAAyBnqE,GAE9CwqE,IAENL,EAAyBnqE,GAASwqE,EAAwB,IAI3DA,EAAsBz6E,KAAMs6E,EAE7B,CAED,CAEA,MAAMI,EAAQ,GAEd,IAAM,MAAMzqE,KAAQmqE,EAEnBM,EAAM16E,KAAMJ,KAAK+5E,8BAA+B1pE,EAAMmqE,EAAyBnqE,GAAQ+hE,EAAK6H,IAI7F,OAAOa,CAER,CAGA,qBAAOC,CAAgBj+C,EAAWsmB,GAEjC,IAAOtmB,EAGN,OADAj2B,QAAQ+wB,MAAO,yDACR,KAIR,MAAMojD,EAAmB,SAAWtD,EAAWuD,EAAWC,EAAeC,EAAcC,GAGtF,GAA8B,IAAzBF,EAAcj6E,OAAe,CAEjC,MAAMqwE,EAAQ,GACRr0C,EAAS,GAEfy0C,GAAawJ,EAAe5J,EAAOr0C,EAAQk+C,GAGrB,IAAjB7J,EAAMrwE,QAEVm6E,EAAWh7E,KAAM,IAAIs3E,EAAWuD,EAAW3J,EAAOr0C,GAIpD,CAED,EAEMq1C,EAAS,GAET+I,EAAWv+C,EAAUzsB,MAAQ,UAC7B+hE,EAAMt1C,EAAUs1C,KAAO,GACvBkC,EAAYx3C,EAAUw3C,UAG5B,IAAIoF,EAAW58C,EAAU77B,SAAY,EAErC,MAAMq6E,EAAkBx+C,EAAUy+C,WAAa,GAE/C,IAAM,IAAIttE,EAAI,EAAGA,EAAIqtE,EAAgBr6E,OAAQgN,IAAO,CAEnD,MAAMitE,EAAgBI,EAAiBrtE,GAAIgL,KAG3C,GAAOiiE,GAA0C,IAAzBA,EAAcj6E,OAGtC,GAAKi6E,EAAe,GAAIX,aAAe,CAGtC,MAAMiB,EAAmB,CAAC,EAE1B,IAAI5jB,EAEJ,IAAMA,EAAI,EAAGA,EAAIsjB,EAAcj6E,OAAQ22D,IAEtC,GAAKsjB,EAAetjB,GAAI2iB,aAEvB,IAAM,IAAIj4E,EAAI,EAAGA,EAAI44E,EAAetjB,GAAI2iB,aAAat5E,OAAQqB,IAE5Dk5E,EAAkBN,EAAetjB,GAAI2iB,aAAcj4E,KAAU,EAWhE,IAAM,MAAMm5E,KAAmBD,EAAmB,CAEjD,MAAMlK,EAAQ,GACRr0C,EAAS,GAEf,IAAM,IAAI36B,EAAI,EAAGA,IAAM44E,EAAetjB,GAAI2iB,aAAat5E,SAAWqB,EAAI,CAErE,MAAMo5E,EAAeR,EAAetjB,GAEpC0Z,EAAMlxE,KAAMs7E,EAAa7J,MACzB50C,EAAO78B,KAAQs7E,EAAahB,cAAgBe,EAAoB,EAAI,EAErE,CAEAnJ,EAAOlyE,KAAM,IAAIg5E,GAAqB,yBAA2BqC,EAAkB,IAAKnK,EAAOr0C,GAEhG,CAEAy8C,EAAW8B,EAAiBv6E,OAASmxE,CAEtC,KAAO,CAIN,MAAMuJ,EAAW,UAAYv4B,EAAOn1C,GAAIoC,KAAO,IAE/C2qE,EACCxB,GAAqBmC,EAAW,YAChCT,EAAe,MAAO5I,GAEvB0I,EACC1B,GAAyBqC,EAAW,cACpCT,EAAe,MAAO5I,GAEvB0I,EACCxB,GAAqBmC,EAAW,SAChCT,EAAe,MAAO5I,EAExB,CAED,CAEA,GAAuB,IAAlBA,EAAOrxE,OAEX,OAAO,KAMR,OAFa,IAAIjB,KAAMq7E,EAAU3B,EAAUpH,EAAQgC,EAIpD,CAEA3B,aAAAA,GAGC,IAAI+G,EAAW,EAEf,IAAM,IAAI34E,EAAI,EAAGsB,EAHFrC,KAAKsyE,OAGQrxE,OAAQF,IAAMsB,IAAMtB,EAAI,CAEnD,MAAMwxE,EAAQvyE,KAAKsyE,OAAQvxE,GAE3B24E,EAAWp4E,KAAKa,IAAKu3E,EAAUnH,EAAMjB,MAAOiB,EAAMjB,MAAMrwE,OAAS,GAElE,CAIA,OAFAjB,KAAK05E,SAAWA,EAET15E,IAER,CAEAi4E,IAAAA,GAEC,IAAM,IAAIl3E,EAAI,EAAGA,EAAIf,KAAKsyE,OAAOrxE,OAAQF,IAExCf,KAAKsyE,OAAQvxE,GAAIk3E,KAAM,EAAGj4E,KAAK05E,UAIhC,OAAO15E,IAER,CAEAs4E,QAAAA,GAEC,IAAIC,GAAQ,EAEZ,IAAM,IAAIx3E,EAAI,EAAGA,EAAIf,KAAKsyE,OAAOrxE,OAAQF,IAExCw3E,EAAQA,GAASv4E,KAAKsyE,OAAQvxE,GAAIu3E,WAInC,OAAOC,CAER,CAEAtqB,QAAAA,GAEC,IAAM,IAAIltD,EAAI,EAAGA,EAAIf,KAAKsyE,OAAOrxE,OAAQF,IAExCf,KAAKsyE,OAAQvxE,GAAIktD,WAIlB,OAAOjuD,IAER,CAEA0H,KAAAA,GAEC,MAAM4qE,EAAS,GAEf,IAAM,IAAIvxE,EAAI,EAAGA,EAAIf,KAAKsyE,OAAOrxE,OAAQF,IAExCuxE,EAAOlyE,KAAMJ,KAAKsyE,OAAQvxE,GAAI2G,SAI/B,OAAO,IAAI1H,KAAK4C,YAAa5C,KAAKqQ,KAAMrQ,KAAK05E,SAAUpH,EAAQtyE,KAAKs0E,UAErE,CAEAr+D,MAAAA,GAEC,OAAOjW,KAAK4C,YAAYqT,OAAQjW,KAEjC,EA8CD,SAAS65E,GAAoB11B,GAE5B,QAAmBpkD,IAAdokD,EAAKtkD,KAET,MAAM,IAAIuD,MAAO,4DAIlB,MAAMs0E,EAlDP,SAAuCkE,GAEtC,OAASA,EAAS75E,eAEjB,IAAK,SACL,IAAK,SACL,IAAK,QACL,IAAK,SACL,IAAK,UAEJ,OAAOq3E,GAER,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,UAEJ,OAAOI,GAER,IAAK,QAEJ,OAAOL,GAER,IAAK,aAEJ,OAAOG,GAER,IAAK,OACL,IAAK,UAEJ,OAAOJ,GAER,IAAK,SAEJ,OAAOK,GAIT,MAAM,IAAIn2E,MAAO,8CAAgDw4E,EAElE,CAUmBC,CAA8B13B,EAAKtkD,MAErD,QAAoBE,IAAfokD,EAAKmtB,MAAsB,CAE/B,MAAMA,EAAQ,GAAIr0C,EAAS,GAE3By0C,GAAavtB,EAAKlrC,KAAMq4D,EAAOr0C,EAAQ,SAEvCknB,EAAKmtB,MAAQA,EACbntB,EAAKlnB,OAASA,CAEf,CAGA,YAAyBl9B,IAApB23E,EAAU/+D,MAEP++D,EAAU/+D,MAAOwrC,GAKjB,IAAIuzB,EAAWvzB,EAAK9zC,KAAM8zC,EAAKmtB,MAAOntB,EAAKlnB,OAAQknB,EAAKkzB,cAIjE,CAEA,MAAMyE,GAAQ,CAEb5pE,SAAS,EAET6pE,MAAO,CAAC,EAERl0E,IAAK,SAAWq1B,EAAK8+C,IAEE,IAAjBh8E,KAAKkS,UAIVlS,KAAK+7E,MAAO7+C,GAAQ8+C,EAErB,EAEA1M,IAAK,SAAWpyC,GAEf,IAAsB,IAAjBl9B,KAAKkS,QAIV,OAAOlS,KAAK+7E,MAAO7+C,EAEpB,EAEApF,OAAQ,SAAWoF,UAEXl9B,KAAK+7E,MAAO7+C,EAEpB,EAEAlgB,MAAO,WAENhd,KAAK+7E,MAAQ,CAAC,CAEf,GAID,MAAME,GAELr5E,WAAAA,CAAas5E,EAAQC,EAAYC,GAEhC,MAAMjoC,EAAQn0C,KAEd,IAGIq8E,EAHAC,GAAY,EACZC,EAAc,EACdC,EAAa,EAEjB,MAAMC,EAAW,GAKjBz8E,KAAK08E,aAAU38E,EACfC,KAAKk8E,OAASA,EACdl8E,KAAKm8E,WAAaA,EAClBn8E,KAAKo8E,QAAUA,EAEfp8E,KAAK28E,UAAY,SAAWrmE,GAE3BkmE,KAEmB,IAAdF,QAEmBv8E,IAAlBo0C,EAAMuoC,SAEVvoC,EAAMuoC,QAASpmE,EAAKimE,EAAaC,GAMnCF,GAAY,CAEb,EAEAt8E,KAAK48E,QAAU,SAAWtmE,GAEzBimE,SAE0Bx8E,IAArBo0C,EAAMgoC,YAEVhoC,EAAMgoC,WAAY7lE,EAAKimE,EAAaC,GAIhCD,IAAgBC,IAEpBF,GAAY,OAEUv8E,IAAjBo0C,EAAM+nC,QAEV/nC,EAAM+nC,SAMT,EAEAl8E,KAAK68E,UAAY,SAAWvmE,QAEJvW,IAAlBo0C,EAAMioC,SAEVjoC,EAAMioC,QAAS9lE,EAIjB,EAEAtW,KAAK88E,WAAa,SAAWxmE,GAE5B,OAAK+lE,EAEGA,EAAa/lE,GAIdA,CAER,EAEAtW,KAAK+8E,eAAiB,SAAWt/B,GAIhC,OAFA4+B,EAAc5+B,EAEPz9C,IAER,EAEAA,KAAKg9E,WAAa,SAAWC,EAAOC,GAInC,OAFAT,EAASr8E,KAAM68E,EAAOC,GAEfl9E,IAER,EAEAA,KAAKm9E,cAAgB,SAAWF,GAE/B,MAAMz8E,EAAQi8E,EAASt8E,QAAS88E,GAQhC,OANiB,IAAZz8E,GAEJi8E,EAASh8E,OAAQD,EAAO,GAIlBR,IAER,EAEAA,KAAKo9E,WAAa,SAAWpB,GAE5B,IAAM,IAAIj7E,EAAI,EAAGC,EAAIy7E,EAASx7E,OAAQF,EAAIC,EAAGD,GAAK,EAAI,CAErD,MAAMk8E,EAAQR,EAAU17E,GAClBm8E,EAAST,EAAU17E,EAAI,GAI7B,GAFKk8E,EAAMI,SAASJ,EAAMrJ,UAAY,GAEjCqJ,EAAMvoE,KAAMsnE,GAEhB,OAAOkB,CAIT,CAEA,OAAO,IAER,CAED,EAID,MAAMI,GAAsC,IAAIrB,GAEhD,MAAMsB,GAEL36E,WAAAA,CAAa46E,GAEZx9E,KAAKw9E,aAAwBz9E,IAAZy9E,EAA0BA,EAAUF,GAErDt9E,KAAKy9E,YAAc,YACnBz9E,KAAK09E,iBAAkB,EACvB19E,KAAKu8D,KAAO,GACZv8D,KAAK29E,aAAe,GACpB39E,KAAK49E,cAAgB,CAAC,CAEvB,CAEAC,IAAAA,GAAgD,CAEhDC,SAAAA,CAAWxnE,EAAK6lE,GAEf,MAAMhoC,EAAQn0C,KAEd,OAAO,IAAIkR,SAAS,SAAWC,EAASC,GAEvC+iC,EAAM0pC,KAAMvnE,EAAKnF,EAASgrE,EAAY/qE,EAEvC,GAED,CAEAuH,KAAAA,GAAqB,CAErBolE,cAAAA,CAAgBN,GAGf,OADAz9E,KAAKy9E,YAAcA,EACZz9E,IAER,CAEAg+E,kBAAAA,CAAoB/7E,GAGnB,OADAjC,KAAK09E,gBAAkBz7E,EAChBjC,IAER,CAEAi+E,OAAAA,CAAS1hB,GAGR,OADAv8D,KAAKu8D,KAAOA,EACLv8D,IAER,CAEAk+E,eAAAA,CAAiBP,GAGhB,OADA39E,KAAK29E,aAAeA,EACb39E,IAER,CAEAm+E,gBAAAA,CAAkBP,GAGjB,OADA59E,KAAK49E,cAAgBA,EACd59E,IAER,EAIDu9E,GAAOa,sBAAwB,YAE/B,MAAMC,GAAU,CAAC,EAEjB,MAAMC,WAAkBl7E,MAEvBR,WAAAA,CAAaiO,EAAS0tE,GAErB/mE,MAAO3G,GACP7Q,KAAKu+E,SAAWA,CAEjB,EAID,MAAMC,WAAmBjB,GAExB36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,QAEjBr8E,IAARuW,IAAoBA,EAAM,SAEZvW,IAAdC,KAAKu8D,OAAqBjmD,EAAMtW,KAAKu8D,KAAOjmD,GAEjDA,EAAMtW,KAAKw9E,QAAQV,WAAYxmE,GAE/B,MAAMmoE,EAAS3C,GAAMxM,IAAKh5D,GAE1B,QAAgBvW,IAAX0+E,EAYJ,OAVAz+E,KAAKw9E,QAAQb,UAAWrmE,GAExBjF,YAAY,KAEN6qE,GAASA,EAAQuC,GAEtBz+E,KAAKw9E,QAAQZ,QAAStmE,EAAK,GAEzB,GAEImoE,EAMR,QAAwB1+E,IAAnBs+E,GAAS/nE,GAUb,YARA+nE,GAAS/nE,GAAMlW,KAAM,CAEpB87E,OAAQA,EACRC,WAAYA,EACZC,QAASA,IASXiC,GAAS/nE,GAAQ,GAEjB+nE,GAAS/nE,GAAMlW,KAAM,CACpB87E,OAAQA,EACRC,WAAYA,EACZC,QAASA,IAIV,MAAMsC,EAAM,IAAIC,QAASroE,EAAK,CAC7BsoE,QAAS,IAAIC,QAAS7+E,KAAK49E,eAC3BkB,YAAa9+E,KAAK09E,gBAAkB,UAAY,gBAK3CqB,EAAW/+E,KAAK++E,SAChBC,EAAeh/E,KAAKg/E,aAG1BC,MAAOP,GACLQ,MAAMX,IAEN,GAAyB,MAApBA,EAASY,QAAsC,IAApBZ,EAASY,OAAe,CAavD,GARyB,IAApBZ,EAASY,QAEbt4E,QAAQC,KAAM,6CAMgB,qBAAnBs4E,qBAAoDr/E,IAAlBw+E,EAASc,WAAkDt/E,IAA5Bw+E,EAASc,KAAKC,UAE1F,OAAOf,EAIR,MAAMgB,EAAYlB,GAAS/nE,GACrBkpE,EAASjB,EAASc,KAAKC,YAIvBG,EAAgBlB,EAASK,QAAQtP,IAAK,gBAAmBiP,EAASK,QAAQtP,IAAK,kBAC/EoQ,EAAQD,EAAgBv+C,SAAUu+C,GAAkB,EACpDE,EAA6B,IAAVD,EACzB,IAAIE,EAAS,EAGb,MAAMC,EAAS,IAAIT,eAAgB,CAClCnzC,KAAAA,CAAO6zC,IAIN,SAASC,IAERP,EAAOQ,OAAOd,MAAMe,IAAuB,IAArB,KAAEC,EAAI,MAAEj+E,GAAOg+E,EAEpC,GAAKC,EAEJJ,EAAWK,YAEL,CAENP,GAAU39E,EAAMm+E,WAEhB,MAAMz/E,EAAQ,IAAI0/E,cAAe,WAAY,CAAEV,mBAAkBC,SAAQF,UACzE,IAAM,IAAI3+E,EAAI,EAAGsb,EAAKkjE,EAAUt+E,OAAQF,EAAIsb,EAAItb,IAAO,CAEtD,MAAMihB,EAAWu9D,EAAWx+E,GACvBihB,EAASm6D,YAAan6D,EAASm6D,WAAYx7E,EAEjD,CAEAm/E,EAAWQ,QAASr+E,GACpB89E,GAED,KAEIt3E,IAEJq3E,EAAWloD,MAAOnvB,EAAG,GAIvB,CAjCAs3E,EAmCD,IAID,OAAO,IAAIQ,SAAUV,EAEtB,CAEC,MAAM,IAAIvB,GAAW,cAAcC,EAASjoE,uBAAuBioE,EAASY,WAAWZ,EAASiC,aAAcjC,EAE/G,IAGAW,MAAMX,IAEN,OAASS,GAER,IAAK,cAEJ,OAAOT,EAASkC,cAEjB,IAAK,OAEJ,OAAOlC,EAASmC,OAEjB,IAAK,WAEJ,OAAOnC,EAASoC,OACdzB,MAAMyB,IAES,IAAIC,WACLC,gBAAiBF,EAAM5B,KAIxC,IAAK,OAEJ,OAAOR,EAASp6B,OAEjB,QAEC,QAAkBpkD,IAAbg/E,EAEJ,OAAOR,EAASoC,OAEV,CAGN,MACM3/C,EADK,0BACKA,KAAM+9C,GAChB+B,EAAQ9/C,GAAQA,EAAM,GAAMA,EAAM,GAAIj/B,mBAAgBhC,EACtDghF,EAAU,IAAIC,YAAaF,GACjC,OAAOvC,EAASkC,cAAcvB,MAAMhuC,GAAM6vC,EAAQE,OAAQ/vC,IAE3D,EAEF,IAGAguC,MAAM1pE,IAINsmE,GAAMj0E,IAAKyO,EAAKd,GAEhB,MAAM+pE,EAAYlB,GAAS/nE,UACpB+nE,GAAS/nE,GAEhB,IAAM,IAAIvV,EAAI,EAAGsb,EAAKkjE,EAAUt+E,OAAQF,EAAIsb,EAAItb,IAAO,CAEtD,MAAMihB,EAAWu9D,EAAWx+E,GACvBihB,EAASk6D,QAASl6D,EAASk6D,OAAQ1mE,EAEzC,KAGA0rE,OAAOC,IAIP,MAAM5B,EAAYlB,GAAS/nE,GAE3B,QAAmBvW,IAAdw/E,EAIJ,MADAv/E,KAAKw9E,QAAQX,UAAWvmE,GAClB6qE,SAIA9C,GAAS/nE,GAEhB,IAAM,IAAIvV,EAAI,EAAGsb,EAAKkjE,EAAUt+E,OAAQF,EAAIsb,EAAItb,IAAO,CAEtD,MAAMihB,EAAWu9D,EAAWx+E,GACvBihB,EAASo6D,SAAUp6D,EAASo6D,QAAS+E,EAE3C,CAEAnhF,KAAKw9E,QAAQX,UAAWvmE,EAAK,IAG7B8qE,SAAS,KAETphF,KAAKw9E,QAAQZ,QAAStmE,EAAK,IAI7BtW,KAAKw9E,QAAQb,UAAWrmE,EAEzB,CAEA+qE,eAAAA,CAAiBp/E,GAGhB,OADAjC,KAAKg/E,aAAe/8E,EACbjC,IAER,CAEAshF,WAAAA,CAAar/E,GAGZ,OADAjC,KAAK++E,SAAW98E,EACTjC,IAER,EAID,MAAMuhF,WAAwBhE,GAE7B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERk9E,EAAS,IAAIsB,GAAYx+E,KAAKw9E,SACpCN,EAAOe,QAASj+E,KAAKu8D,MACrB2gB,EAAOiB,iBAAkBn+E,KAAK49E,eAC9BV,EAAOc,mBAAoBh+E,KAAK09E,iBAChCR,EAAOW,KAAMvnE,GAAK,SAAWqqE,GAE5B,IAECzE,EAAQ/nC,EAAMx7B,MAAOD,KAAKC,MAAOgoE,IAElC,CAAE,MAAQl4E,GAEJ2zE,EAEJA,EAAS3zE,GAIT5B,QAAQ+wB,MAAOnvB,GAIhB0rC,EAAMqpC,QAAQX,UAAWvmE,EAE1B,CAED,GAAG6lE,EAAYC,EAEhB,CAEAzjE,KAAAA,CAAOwrC,GAEN,MAAM9tB,EAAa,GAEnB,IAAM,IAAIt1B,EAAI,EAAGA,EAAIojD,EAAKljD,OAAQF,IAAO,CAExC,MAAMsxE,EAAOoH,GAAc9gE,MAAOwrC,EAAMpjD,IAExCs1B,EAAWj2B,KAAMiyE,EAElB,CAEA,OAAOh8C,CAER,EAUD,MAAMmrD,WAAgCjE,GAErC36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERoW,EAAS,GAET6F,EAAU,IAAI42C,GAEdqqB,EAAS,IAAIsB,GAAYx+E,KAAKw9E,SACpCN,EAAOe,QAASj+E,KAAKu8D,MACrB2gB,EAAOmE,gBAAiB,eACxBnE,EAAOiB,iBAAkBn+E,KAAK49E,eAC9BV,EAAOc,mBAAoB7pC,EAAMupC,iBAEjC,IAAIkC,EAAS,EAEb,SAAS6B,EAAa1gF,GAErBm8E,EAAOW,KAAMvnE,EAAKvV,IAAK,SAAWoP,GAEjC,MAAMuxE,EAAWvtC,EAAMx7B,MAAOxI,GAAQ,GAEtCiG,EAAQrV,GAAM,CACbmG,MAAOw6E,EAASx6E,MAChBC,OAAQu6E,EAASv6E,OACjBkQ,OAAQqqE,EAASrqE,OACjBM,QAAS+pE,EAAS/pE,SAGnBioE,GAAU,EAEM,IAAXA,IAE0B,IAAzB8B,EAASC,cAAoB1lE,EAAQ7E,UAAYxf,IAEtDqkB,EAAQxH,MAAQ2B,EAChB6F,EAAQ5E,OAASqqE,EAASrqE,OAC1B4E,EAAQjG,aAAc,EAEjBkmE,GAASA,EAAQjgE,GAIxB,GAAGkgE,EAAYC,EAEhB,CAEA,GAAK7lE,MAAMC,QAASF,GAEnB,IAAM,IAAIvV,EAAI,EAAGsb,EAAK/F,EAAIrV,OAAQF,EAAIsb,IAAOtb,EAE5C0gF,EAAa1gF,QAQdm8E,EAAOW,KAAMvnE,GAAK,SAAWnG,GAE5B,MAAMuxE,EAAWvtC,EAAMx7B,MAAOxI,GAAQ,GAEtC,GAAKuxE,EAASE,UAAY,CAEzB,MAAMnc,EAAQic,EAAS/pE,QAAQ1W,OAASygF,EAASC,YAEjD,IAAM,IAAI5zE,EAAI,EAAGA,EAAI03D,EAAO13D,IAAO,CAElCqI,EAAQrI,GAAM,CAAE4J,QAAS,IAEzB,IAAM,IAAI5W,EAAI,EAAGA,EAAI2gF,EAASC,YAAa5gF,IAE1CqV,EAAQrI,GAAI4J,QAAQvX,KAAMshF,EAAS/pE,QAAS5J,EAAI2zE,EAASC,YAAc5gF,IACvEqV,EAAQrI,GAAIsJ,OAASqqE,EAASrqE,OAC9BjB,EAAQrI,GAAI7G,MAAQw6E,EAASx6E,MAC7BkP,EAAQrI,GAAI5G,OAASu6E,EAASv6E,MAIhC,CAEA8U,EAAQxH,MAAQ2B,CAEjB,MAEC6F,EAAQxH,MAAMvN,MAAQw6E,EAASx6E,MAC/B+U,EAAQxH,MAAMtN,OAASu6E,EAASv6E,OAChC8U,EAAQtE,QAAU+pE,EAAS/pE,QAIE,IAAzB+pE,EAASC,cAEb1lE,EAAQ7E,UAAYxf,IAIrBqkB,EAAQ5E,OAASqqE,EAASrqE,OAC1B4E,EAAQjG,aAAc,EAEjBkmE,GAASA,EAAQjgE,EAEvB,GAAGkgE,EAAYC,GAIhB,OAAOngE,CAER,EAID,MAAM4lE,WAAoBtE,GAEzB36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,QAEXr8E,IAAdC,KAAKu8D,OAAqBjmD,EAAMtW,KAAKu8D,KAAOjmD,GAEjDA,EAAMtW,KAAKw9E,QAAQV,WAAYxmE,GAE/B,MAAM69B,EAAQn0C,KAERy+E,EAAS3C,GAAMxM,IAAKh5D,GAE1B,QAAgBvW,IAAX0+E,EAYJ,OAVAtqC,EAAMqpC,QAAQb,UAAWrmE,GAEzBjF,YAAY,WAEN6qE,GAASA,EAAQuC,GAEtBtqC,EAAMqpC,QAAQZ,QAAStmE,EAExB,GAAG,GAEImoE,EAIR,MAAMhqE,EAAQrE,GAAiB,OAE/B,SAAS0xE,IAERC,IAEAjG,GAAMj0E,IAAKyO,EAAKtW,MAEXk8E,GAASA,EAAQl8E,MAEtBm0C,EAAMqpC,QAAQZ,QAAStmE,EAExB,CAEA,SAAS0rE,EAAcrhF,GAEtBohF,IAEK3F,GAAUA,EAASz7E,GAExBwzC,EAAMqpC,QAAQX,UAAWvmE,GACzB69B,EAAMqpC,QAAQZ,QAAStmE,EAExB,CAEA,SAASyrE,IAERttE,EAAMnU,oBAAqB,OAAQwhF,GAAa,GAChDrtE,EAAMnU,oBAAqB,QAAS0hF,GAAc,EAEnD,CAeA,OAbAvtE,EAAM7U,iBAAkB,OAAQkiF,GAAa,GAC7CrtE,EAAM7U,iBAAkB,QAASoiF,GAAc,GAEpB,UAAtB1rE,EAAIxV,MAAO,EAAG,SAEQf,IAArBC,KAAKy9E,cAA4BhpE,EAAMgpE,YAAcz9E,KAAKy9E,aAIhEtpC,EAAMqpC,QAAQb,UAAWrmE,GAEzB7B,EAAME,IAAM2B,EAEL7B,CAER,EAID,MAAMwtE,WAA0B1E,GAE/B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMqE,EAAMhG,EAAQC,EAAYC,GAE/B,MAAMngE,EAAU,IAAI2+B,GACpB3+B,EAAQ/I,WAAanW,GAErB,MAAMmgF,EAAS,IAAI2E,GAAa7hF,KAAKw9E,SACrCN,EAAOa,eAAgB/9E,KAAKy9E,aAC5BP,EAAOe,QAASj+E,KAAKu8D,MAErB,IAAIqjB,EAAS,EAEb,SAAS6B,EAAa1gF,GAErBm8E,EAAOW,KAAMqE,EAAMnhF,IAAK,SAAW0T,GAElCwH,EAAQ7F,OAAQrV,GAAM0T,EAEtBmrE,IAEgB,IAAXA,IAEJ3jE,EAAQjG,aAAc,EAEjBkmE,GAASA,EAAQjgE,GAIxB,QAAGlc,EAAWq8E,EAEf,CAEA,IAAM,IAAIr7E,EAAI,EAAGA,EAAImhF,EAAKjhF,SAAWF,EAEpC0gF,EAAa1gF,GAId,OAAOkb,CAER,EAUD,MAAMkmE,WAA0B5E,GAE/B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERic,EAAU,IAAIunC,GAEd05B,EAAS,IAAIsB,GAAYx+E,KAAKw9E,SAkGpC,OAjGAN,EAAOmE,gBAAiB,eACxBnE,EAAOiB,iBAAkBn+E,KAAK49E,eAC9BV,EAAOe,QAASj+E,KAAKu8D,MACrB2gB,EAAOc,mBAAoB7pC,EAAMupC,iBACjCR,EAAOW,KAAMvnE,GAAK,SAAWnG,GAE5B,IAAIiyE,EAEJ,IAECA,EAAUjuC,EAAMx7B,MAAOxI,EAExB,CAAE,MAAQynB,GAET,QAAiB73B,IAAZq8E,EAOJ,YADAv1E,QAAQ+wB,MAAOA,GAJfwkD,EAASxkD,EASX,MAEuB73B,IAAlBqiF,EAAQ3tE,MAEZwH,EAAQxH,MAAQ2tE,EAAQ3tE,WAEI1U,IAAjBqiF,EAAQ5sE,OAEnByG,EAAQxH,MAAMvN,MAAQk7E,EAAQl7E,MAC9B+U,EAAQxH,MAAMtN,OAASi7E,EAAQj7E,OAC/B8U,EAAQxH,MAAMe,KAAO4sE,EAAQ5sE,MAI9ByG,EAAQhF,WAA0BlX,IAAlBqiF,EAAQnrE,MAAsBmrE,EAAQnrE,MAAQ5f,GAC9D4kB,EAAQ/E,WAA0BnX,IAAlBqiF,EAAQlrE,MAAsBkrE,EAAQlrE,MAAQ7f,GAE9D4kB,EAAQ9E,eAAkCpX,IAAtBqiF,EAAQjrE,UAA0BirE,EAAQjrE,UAAYvf,GAC1EqkB,EAAQ7E,eAAkCrX,IAAtBqiF,EAAQhrE,UAA0BgrE,EAAQhrE,UAAYxf,GAE1EqkB,EAAQ3E,gBAAoCvX,IAAvBqiF,EAAQ9qE,WAA2B8qE,EAAQ9qE,WAAa,OAEjDvX,IAAvBqiF,EAAQlvE,aAEZ+I,EAAQ/I,WAAakvE,EAAQlvE,iBAIPnT,IAAlBqiF,EAAQlqE,QAEZ+D,EAAQ/D,MAAQkqE,EAAQlqE,YAIDnY,IAAnBqiF,EAAQ/qE,SAEZ4E,EAAQ5E,OAAS+qE,EAAQ/qE,aAIJtX,IAAjBqiF,EAAQviF,OAEZoc,EAAQpc,KAAOuiF,EAAQviF,WAICE,IAApBqiF,EAAQzqE,UAEZsE,EAAQtE,QAAUyqE,EAAQzqE,QAC1BsE,EAAQ7E,UAAYrf,IAIQ,IAAxBqqF,EAAQT,cAEZ1lE,EAAQ7E,UAAYxf,SAIYmI,IAA5BqiF,EAAQpqE,kBAEZiE,EAAQjE,gBAAkBoqE,EAAQpqE,iBAInCiE,EAAQjG,aAAc,EAEjBkmE,GAASA,EAAQjgE,EAASmmE,EAEhC,GAAGjG,EAAYC,GAGRngE,CAER,EAID,MAAMomE,WAAsB9E,GAE3B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMngE,EAAU,IAAIpF,GAEdqmE,EAAS,IAAI2E,GAAa7hF,KAAKw9E,SAiBrC,OAhBAN,EAAOa,eAAgB/9E,KAAKy9E,aAC5BP,EAAOe,QAASj+E,KAAKu8D,MAErB2gB,EAAOW,KAAMvnE,GAAK,SAAW7B,GAE5BwH,EAAQxH,MAAQA,EAChBwH,EAAQjG,aAAc,OAENjW,IAAXm8E,GAEJA,EAAQjgE,EAIV,GAAGkgE,EAAYC,GAERngE,CAER,EAID,MAAMqmE,WAAcntD,GAEnBvyB,WAAAA,CAAa0P,GAAuB,IAAhBiwE,EAASp+E,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE/BqT,QAEAxX,KAAK23B,SAAU,EAEf33B,KAAKH,KAAO,QAEZG,KAAKsS,MAAQ,IAAIiuB,GAAOjuB,GACxBtS,KAAKuiF,UAAYA,CAElB,CAEArpE,OAAAA,GAEC,CAIDvR,IAAAA,CAAM+P,EAAQylB,GAOb,OALA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKsS,MAAM3K,KAAM+P,EAAOpF,OACxBtS,KAAKuiF,UAAY7qE,EAAO6qE,UAEjBviF,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAe3B,OAbAV,EAAKyQ,OAAO3T,MAAQtS,KAAKsS,MAAMmvB,SAC/BjsB,EAAKyQ,OAAOs8D,UAAYviF,KAAKuiF,eAEHxiF,IAArBC,KAAKwiF,cAA4BhtE,EAAKyQ,OAAOu8D,YAAcxiF,KAAKwiF,YAAY/gD,eAE1D1hC,IAAlBC,KAAKo3B,WAAyB5hB,EAAKyQ,OAAOmR,SAAWp3B,KAAKo3B,eAC3Cr3B,IAAfC,KAAKuJ,QAAsBiM,EAAKyQ,OAAO1c,MAAQvJ,KAAKuJ,YACrCxJ,IAAfC,KAAKyiF,QAAsBjtE,EAAKyQ,OAAOw8D,MAAQziF,KAAKyiF,YAClC1iF,IAAlBC,KAAK0iF,WAAyBltE,EAAKyQ,OAAOy8D,SAAW1iF,KAAK0iF,eAE1C3iF,IAAhBC,KAAK2iF,SAAuBntE,EAAKyQ,OAAO08D,OAAS3iF,KAAK2iF,OAAO1sE,eAC7ClW,IAAhBC,KAAKY,SAAuB4U,EAAKyQ,OAAOrlB,OAASZ,KAAKY,OAAOiV,MAE3DL,CAER,EAID,MAAMotE,WAAwBN,GAE7B1/E,WAAAA,CAAaigF,EAAUL,EAAaD,GAEnC/qE,MAAOqrE,EAAUN,GAEjBviF,KAAK8iF,mBAAoB,EAEzB9iF,KAAKH,KAAO,kBAEZG,KAAKyxB,SAAS9pB,KAAMwtB,GAASG,YAC7Bt1B,KAAKyY,eAELzY,KAAKwiF,YAAc,IAAIjiD,GAAOiiD,EAE/B,CAEA76E,IAAAA,CAAM+P,EAAQylB,GAMb,OAJA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKwiF,YAAY76E,KAAM+P,EAAO8qE,aAEvBxiF,IAER,EAID,MAAM+iF,GAAoC,IAAIn1D,GACxCo1D,GAAsC,IAAI/gE,GAC1CghE,GAA8B,IAAIhhE,GAExC,MAAMihE,GAELtgF,WAAAA,CAAasgB,GAEZljB,KAAKkjB,OAASA,EAEdljB,KAAKuiF,UAAY,EAEjBviF,KAAKmjF,KAAO,EACZnjF,KAAKojF,WAAa,EAClBpjF,KAAKwkB,OAAS,EACdxkB,KAAKqjF,YAAc,EAEnBrjF,KAAKsjF,QAAU,IAAIv8E,GAAS,IAAK,KAEjC/G,KAAKy6B,IAAM,KACXz6B,KAAKujF,QAAU,KACfvjF,KAAK6P,OAAS,IAAI+d,GAElB5tB,KAAKuhD,YAAa,EAClBvhD,KAAKgW,aAAc,EAEnBhW,KAAKupD,SAAW,IAAIpC,GACpBnnD,KAAKwjF,cAAgB,IAAIz8E,GAAS,EAAG,GAErC/G,KAAKyjF,eAAiB,EAEtBzjF,KAAK0jF,WAAa,CAEjB,IAAIpqE,GAAS,EAAG,EAAG,EAAG,GAIxB,CAEAqqE,gBAAAA,GAEC,OAAO3jF,KAAKyjF,cAEb,CAEAG,UAAAA,GAEC,OAAO5jF,KAAKupD,QAEb,CAEAs6B,cAAAA,CAAgBC,GAEf,MAAMn0B,EAAe3vD,KAAKkjB,OACpB6gE,EAAe/jF,KAAK6P,OAE1BmzE,GAAsBhoE,sBAAuB8oE,EAAMxgE,aACnDqsC,EAAal+B,SAAS9pB,KAAMq7E,IAE5BC,GAAcjoE,sBAAuB8oE,EAAMljF,OAAO0iB,aAClDqsC,EAAazkC,OAAQ+3D,IACrBtzB,EAAa72B,oBAEbiqD,GAAoBx2E,iBAAkBojD,EAAa/9C,iBAAkB+9C,EAAaxsC,oBAClFnjB,KAAKupD,SAAS/B,wBAAyBu7B,IAEvCgB,EAAan9E,IACZ,GAAK,EAAK,EAAK,GACf,EAAK,GAAK,EAAK,GACf,EAAK,EAAK,GAAK,GACf,EAAK,EAAK,EAAK,GAGhBm9E,EAAa37E,SAAU26E,GAExB,CAEAiB,WAAAA,CAAaC,GAEZ,OAAOjkF,KAAK0jF,WAAYO,EAEzB,CAEAC,eAAAA,GAEC,OAAOlkF,KAAKwjF,aAEb,CAEAtqE,OAAAA,GAEMlZ,KAAKy6B,KAETz6B,KAAKy6B,IAAIvhB,UAILlZ,KAAKujF,SAETvjF,KAAKujF,QAAQrqE,SAIf,CAEAvR,IAAAA,CAAM+P,GAWL,OATA1X,KAAKkjB,OAASxL,EAAOwL,OAAOxb,QAE5B1H,KAAKuiF,UAAY7qE,EAAO6qE,UAExBviF,KAAKmjF,KAAOzrE,EAAOyrE,KACnBnjF,KAAKwkB,OAAS9M,EAAO8M,OAErBxkB,KAAKsjF,QAAQ37E,KAAM+P,EAAO4rE,SAEnBtjF,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEAiW,MAAAA,GAEC,MAAMgQ,EAAS,CAAC,EAWhB,OATwB,IAAnBjmB,KAAKuiF,YAAkBt8D,EAAOs8D,UAAYviF,KAAKuiF,WACjC,IAAdviF,KAAKmjF,OAAal9D,EAAOk9D,KAAOnjF,KAAKmjF,MACjB,IAApBnjF,KAAKojF,aAAmBn9D,EAAOm9D,WAAapjF,KAAKojF,YACjC,IAAhBpjF,KAAKwkB,SAAeyB,EAAOzB,OAASxkB,KAAKwkB,QACtB,MAAnBxkB,KAAKsjF,QAAQ9gF,GAAgC,MAAnBxC,KAAKsjF,QAAQ7gF,IAAYwjB,EAAOq9D,QAAUtjF,KAAKsjF,QAAQ54E,WAEtFub,EAAO/C,OAASljB,KAAKkjB,OAAOjN,QAAQ,GAAQgQ,cACrCA,EAAO/C,OAAOrT,OAEdoW,CAER,EAID,MAAMk+D,WAAwBjB,GAE7BtgF,WAAAA,GAEC4U,MAAO,IAAIkgC,GAAmB,GAAI,EAAG,GAAK,MAE1C13C,KAAKokF,mBAAoB,EAEzBpkF,KAAK+3C,MAAQ,CAEd,CAEA8rC,cAAAA,CAAgBC,GAEf,MAAM5gE,EAASljB,KAAKkjB,OAEdy0B,EAAgB,EAAVn2C,GAAcsiF,EAAMv6E,MAAQvJ,KAAK+3C,MACvCH,EAAS53C,KAAKsjF,QAAQp8E,MAAQlH,KAAKsjF,QAAQn8E,OAC3CwrB,EAAMmxD,EAAM1sD,UAAYlU,EAAOyP,IAEhCglB,IAAQz0B,EAAOy0B,KAAOC,IAAW10B,EAAO00B,QAAUjlB,IAAQzP,EAAOyP,MAErEzP,EAAOy0B,IAAMA,EACbz0B,EAAO00B,OAASA,EAChB10B,EAAOyP,IAAMA,EACbzP,EAAOi1B,0BAIR3gC,MAAMqsE,eAAgBC,EAEvB,CAEAn8E,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAK+3C,MAAQrgC,EAAOqgC,MAEb/3C,IAER,EAID,MAAMqkF,WAAkB/B,GAEvB1/E,WAAAA,CAAa0P,EAAOiwE,GAAwE,IAA7DnrD,EAAQjzB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGoF,EAAKpF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG7C,KAAKC,GAAK,EAAGmhF,EAAQv+E,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGs+E,EAAKt+E,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEvFqT,MAAOlF,EAAOiwE,GAEdviF,KAAKskF,aAAc,EAEnBtkF,KAAKH,KAAO,YAEZG,KAAKyxB,SAAS9pB,KAAMwtB,GAASG,YAC7Bt1B,KAAKyY,eAELzY,KAAKY,OAAS,IAAIu0B,GAElBn1B,KAAKo3B,SAAWA,EAChBp3B,KAAKuJ,MAAQA,EACbvJ,KAAK0iF,SAAWA,EAChB1iF,KAAKyiF,MAAQA,EAEbziF,KAAKy6B,IAAM,KAEXz6B,KAAK2iF,OAAS,IAAIwB,EAEnB,CAEA,SAAII,GAIH,OAAOvkF,KAAKuiF,UAAYjhF,KAAKC,EAE9B,CAEA,SAAIgjF,CAAOA,GAGVvkF,KAAKuiF,UAAYgC,EAAQjjF,KAAKC,EAE/B,CAEA2X,OAAAA,GAEClZ,KAAK2iF,OAAOzpE,SAEb,CAEAvR,IAAAA,CAAM+P,EAAQylB,GAab,OAXA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKo3B,SAAW1f,EAAO0f,SACvBp3B,KAAKuJ,MAAQmO,EAAOnO,MACpBvJ,KAAK0iF,SAAWhrE,EAAOgrE,SACvB1iF,KAAKyiF,MAAQ/qE,EAAO+qE,MAEpBziF,KAAKY,OAAS8W,EAAO9W,OAAO8G,QAE5B1H,KAAK2iF,OAASjrE,EAAOirE,OAAOj7E,QAErB1H,IAER,EAID,MAAMwkF,GAAkC,IAAI52D,GACtC62D,GAAoC,IAAIxiE,GACxCyiE,GAA4B,IAAIziE,GAEtC,MAAM0iE,WAAyBzB,GAE9BtgF,WAAAA,GAEC4U,MAAO,IAAIkgC,GAAmB,GAAI,EAAG,GAAK,MAE1C13C,KAAK4kF,oBAAqB,EAE1B5kF,KAAKwjF,cAAgB,IAAIz8E,GAAS,EAAG,GAErC/G,KAAKyjF,eAAiB,EAEtBzjF,KAAK0jF,WAAa,CAejB,IAAIpqE,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,GAEtB,IAAIA,GAAS,EAAG,EAAG,EAAG,IAGvBtZ,KAAK6kF,gBAAkB,CACtB,IAAI5iE,GAAS,EAAG,EAAG,GAAK,IAAIA,IAAW,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GACrE,IAAIA,GAAS,EAAG,GAAK,GAAK,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,GAAK,EAAG,IAGxEjiB,KAAK8kF,SAAW,CACf,IAAI7iE,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GACnE,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,EAAG,GAAK,IAAIA,GAAS,EAAG,GAAK,GAGvE,CAEA4hE,cAAAA,CAAgBC,GAA2B,IAApBG,EAAa9/E,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEtC,MAAM+e,EAASljB,KAAKkjB,OACd6gE,EAAe/jF,KAAK6P,OAEpB8iB,EAAMmxD,EAAM1sD,UAAYlU,EAAOyP,IAEhCA,IAAQzP,EAAOyP,MAEnBzP,EAAOyP,IAAMA,EACbzP,EAAOi1B,0BAIRssC,GAAoBzpE,sBAAuB8oE,EAAMxgE,aACjDJ,EAAOuO,SAAS9pB,KAAM88E,IAEtBC,GAAY/8E,KAAMub,EAAOuO,UACzBizD,GAAY78E,IAAK7H,KAAK6kF,gBAAiBZ,IACvC/gE,EAAO2M,GAAGloB,KAAM3H,KAAK8kF,SAAUb,IAC/B/gE,EAAOgI,OAAQw5D,IACfxhE,EAAO4V,oBAEPirD,EAAan0E,iBAAmB60E,GAAoBjiF,GAAKiiF,GAAoBhiF,GAAKgiF,GAAoBlrE,GAEtGirE,GAAkBj4E,iBAAkB2W,EAAOtR,iBAAkBsR,EAAOC,oBACpEnjB,KAAKupD,SAAS/B,wBAAyBg9B,GAExC,EAID,MAAMO,WAAmBzC,GAExB1/E,WAAAA,CAAa0P,EAAOiwE,GAAqC,IAA1BnrD,EAAQjzB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGs+E,EAAKt+E,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEpDqT,MAAOlF,EAAOiwE,GAEdviF,KAAKglF,cAAe,EAEpBhlF,KAAKH,KAAO,aAEZG,KAAKo3B,SAAWA,EAChBp3B,KAAKyiF,MAAQA,EAEbziF,KAAK2iF,OAAS,IAAIgC,EAEnB,CAEA,SAAIJ,GAIH,OAAwB,EAAjBvkF,KAAKuiF,UAAgBjhF,KAAKC,EAElC,CAEA,SAAIgjF,CAAOA,GAGVvkF,KAAKuiF,UAAYgC,GAAU,EAAIjjF,KAAKC,GAErC,CAEA2X,OAAAA,GAEClZ,KAAK2iF,OAAOzpE,SAEb,CAEAvR,IAAAA,CAAM+P,EAAQylB,GASb,OAPA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKo3B,SAAW1f,EAAO0f,SACvBp3B,KAAKyiF,MAAQ/qE,EAAO+qE,MAEpBziF,KAAK2iF,OAASjrE,EAAOirE,OAAOj7E,QAErB1H,IAER,EAID,MAAMilF,WAA2B3tC,GAEhC10C,WAAAA,GAAoF,IAAvE0vB,EAAInuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,IAAK,EAAGouB,EAAKpuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGquB,EAAGruB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGsuB,EAAMtuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,IAAK,EAAGuuB,EAAIvuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAKwuB,EAAGxuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAE5EqT,QAEAxX,KAAKklF,sBAAuB,EAE5BllF,KAAKH,KAAO,qBAEZG,KAAK83C,KAAO,EACZ93C,KAAKg4C,KAAO,KAEZh4C,KAAKsyB,KAAOA,EACZtyB,KAAKuyB,MAAQA,EACbvyB,KAAKwyB,IAAMA,EACXxyB,KAAKyyB,OAASA,EAEdzyB,KAAK0yB,KAAOA,EACZ1yB,KAAK2yB,IAAMA,EAEX3yB,KAAKm4C,wBAEN,CAEAxwC,IAAAA,CAAM+P,EAAQylB,GAcb,OAZA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKsyB,KAAO5a,EAAO4a,KACnBtyB,KAAKuyB,MAAQ7a,EAAO6a,MACpBvyB,KAAKwyB,IAAM9a,EAAO8a,IAClBxyB,KAAKyyB,OAAS/a,EAAO+a,OACrBzyB,KAAK0yB,KAAOhb,EAAOgb,KACnB1yB,KAAK2yB,IAAMjb,EAAOib,IAElB3yB,KAAK83C,KAAOpgC,EAAOogC,KACnB93C,KAAKg4C,KAAuB,OAAhBtgC,EAAOsgC,KAAgB,KAAOxkC,OAAOC,OAAQ,CAAC,EAAGiE,EAAOsgC,MAE7Dh4C,IAER,CAEAi5C,aAAAA,CAAeC,EAAWC,EAAY32C,EAAGC,EAAGyE,EAAOC,GAE/B,OAAdnH,KAAKg4C,OAETh4C,KAAKg4C,KAAO,CACX9lC,SAAS,EACTgnC,UAAW,EACXC,WAAY,EACZC,QAAS,EACTC,QAAS,EACTnyC,MAAO,EACPC,OAAQ,IAKVnH,KAAKg4C,KAAK9lC,SAAU,EACpBlS,KAAKg4C,KAAKkB,UAAYA,EACtBl5C,KAAKg4C,KAAKmB,WAAaA,EACvBn5C,KAAKg4C,KAAKoB,QAAU52C,EACpBxC,KAAKg4C,KAAKqB,QAAU52C,EACpBzC,KAAKg4C,KAAK9wC,MAAQA,EAClBlH,KAAKg4C,KAAK7wC,OAASA,EAEnBnH,KAAKm4C,wBAEN,CAEAmB,eAAAA,GAEoB,OAAdt5C,KAAKg4C,OAETh4C,KAAKg4C,KAAK9lC,SAAU,GAIrBlS,KAAKm4C,wBAEN,CAEAA,sBAAAA,GAEC,MAAMpuC,GAAO/J,KAAKuyB,MAAQvyB,KAAKsyB,OAAW,EAAItyB,KAAK83C,MAC7C9tC,GAAOhK,KAAKwyB,IAAMxyB,KAAKyyB,SAAa,EAAIzyB,KAAK83C,MAC7C1oC,GAAOpP,KAAKuyB,MAAQvyB,KAAKsyB,MAAS,EAClCjjB,GAAOrP,KAAKwyB,IAAMxyB,KAAKyyB,QAAW,EAExC,IAAIH,EAAOljB,EAAKrF,EACZwoB,EAAQnjB,EAAKrF,EACbyoB,EAAMnjB,EAAKrF,EACXyoB,EAASpjB,EAAKrF,EAElB,GAAmB,OAAdhK,KAAKg4C,MAAiBh4C,KAAKg4C,KAAK9lC,QAAU,CAE9C,MAAMizE,GAAWnlF,KAAKuyB,MAAQvyB,KAAKsyB,MAAStyB,KAAKg4C,KAAKkB,UAAYl5C,KAAK83C,KACjEstC,GAAWplF,KAAKwyB,IAAMxyB,KAAKyyB,QAAWzyB,KAAKg4C,KAAKmB,WAAan5C,KAAK83C,KAExExlB,GAAQ6yD,EAASnlF,KAAKg4C,KAAKoB,QAC3B7mB,EAAQD,EAAO6yD,EAASnlF,KAAKg4C,KAAK9wC,MAClCsrB,GAAO4yD,EAASplF,KAAKg4C,KAAKqB,QAC1B5mB,EAASD,EAAM4yD,EAASplF,KAAKg4C,KAAK7wC,MAEnC,CAEAnH,KAAK4R,iBAAiBihB,iBAAkBP,EAAMC,EAAOC,EAAKC,EAAQzyB,KAAK0yB,KAAM1yB,KAAK2yB,IAAK3yB,KAAK4yB,kBAE5F5yB,KAAKqjB,wBAAwB1b,KAAM3H,KAAK4R,kBAAmB1D,QAE5D,CAEA+H,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAY3B,OAVAV,EAAKyQ,OAAO6xB,KAAO93C,KAAK83C,KACxBtiC,EAAKyQ,OAAOqM,KAAOtyB,KAAKsyB,KACxB9c,EAAKyQ,OAAOsM,MAAQvyB,KAAKuyB,MACzB/c,EAAKyQ,OAAOuM,IAAMxyB,KAAKwyB,IACvBhd,EAAKyQ,OAAOwM,OAASzyB,KAAKyyB,OAC1Bjd,EAAKyQ,OAAOyM,KAAO1yB,KAAK0yB,KACxBld,EAAKyQ,OAAO0M,IAAM3yB,KAAK2yB,IAEJ,OAAd3yB,KAAKg4C,OAAgBxiC,EAAKyQ,OAAO+xB,KAAOxkC,OAAOC,OAAQ,CAAC,EAAGzT,KAAKg4C,OAE9DxiC,CAER,EAID,MAAM6vE,WAA+BnC,GAEpCtgF,WAAAA,GAEC4U,MAAO,IAAIytE,IAAsB,EAAG,EAAG,GAAK,EAAG,GAAK,MAEpDjlF,KAAKslF,0BAA2B,CAEjC,EAID,MAAMC,WAAyBjD,GAE9B1/E,WAAAA,CAAa0P,EAAOiwE,GAEnB/qE,MAAOlF,EAAOiwE,GAEdviF,KAAKwlF,oBAAqB,EAE1BxlF,KAAKH,KAAO,mBAEZG,KAAKyxB,SAAS9pB,KAAMwtB,GAASG,YAC7Bt1B,KAAKyY,eAELzY,KAAKY,OAAS,IAAIu0B,GAElBn1B,KAAK2iF,OAAS,IAAI0C,EAEnB,CAEAnsE,OAAAA,GAEClZ,KAAK2iF,OAAOzpE,SAEb,CAEAvR,IAAAA,CAAM+P,GAOL,OALAF,MAAM7P,KAAM+P,GAEZ1X,KAAKY,OAAS8W,EAAO9W,OAAO8G,QAC5B1H,KAAK2iF,OAASjrE,EAAOirE,OAAOj7E,QAErB1H,IAER,EAID,MAAMylF,WAAqBnD,GAE1B1/E,WAAAA,CAAa0P,EAAOiwE,GAEnB/qE,MAAOlF,EAAOiwE,GAEdviF,KAAK0lF,gBAAiB,EAEtB1lF,KAAKH,KAAO,cAEb,EAID,MAAM8lF,WAAsBrD,GAE3B1/E,WAAAA,CAAa0P,EAAOiwE,GAAqC,IAA1Br7E,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEnDqT,MAAOlF,EAAOiwE,GAEdviF,KAAK4lF,iBAAkB,EAEvB5lF,KAAKH,KAAO,gBAEZG,KAAKkH,MAAQA,EACblH,KAAKmH,OAASA,CAEf,CAEA,SAAIo9E,GAGH,OAAOvkF,KAAKuiF,UAAYviF,KAAKkH,MAAQlH,KAAKmH,OAAS7F,KAAKC,EAEzD,CAEA,SAAIgjF,CAAOA,GAGVvkF,KAAKuiF,UAAYgC,GAAUvkF,KAAKkH,MAAQlH,KAAKmH,OAAS7F,KAAKC,GAE5D,CAEAoG,IAAAA,CAAM+P,GAOL,OALAF,MAAM7P,KAAM+P,GAEZ1X,KAAKkH,MAAQwQ,EAAOxQ,MACpBlH,KAAKmH,OAASuQ,EAAOvQ,OAEdnH,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAK3B,OAHAV,EAAKyQ,OAAO/e,MAAQlH,KAAKkH,MACzBsO,EAAKyQ,OAAO9e,OAASnH,KAAKmH,OAEnBqO,CAER,EAcD,MAAMqwE,GAELjjF,WAAAA,GAEC5C,KAAK8lF,uBAAwB,EAE7B9lF,KAAK+lF,aAAe,GAEpB,IAAM,IAAIhlF,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAa3lF,KAAM,IAAI6hB,GAI9B,CAEArb,GAAAA,CAAKm/E,GAEJ,IAAM,IAAIhlF,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAchlF,GAAI4G,KAAMo+E,EAAchlF,IAI5C,OAAOf,IAER,CAEAgmF,IAAAA,GAEC,IAAM,IAAIjlF,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAchlF,GAAI6F,IAAK,EAAG,EAAG,GAInC,OAAO5G,IAER,CAIAimF,KAAAA,CAAO7hE,EAAQxjB,GAId,MAAM4B,EAAI4hB,EAAO5hB,EAAGC,EAAI2hB,EAAO3hB,EAAG8W,EAAI6K,EAAO7K,EAEvC2sE,EAAQlmF,KAAK+lF,aAiBnB,OAdAnlF,EAAO+G,KAAMu+E,EAAO,IAAM79E,eAAgB,SAG1CzH,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAWzjF,GAC/C7B,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAW3sE,GAC/C3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAW1jF,GAG/C5B,EAAOoH,gBAAiBk+E,EAAO,GAAkB1jF,EAAIC,EAAjB,UACpC7B,EAAOoH,gBAAiBk+E,EAAO,GAAkBzjF,EAAI8W,EAAjB,UACpC3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,SAAa,EAAM3sE,EAAIA,EAAI,IAC/D3Y,EAAOoH,gBAAiBk+E,EAAO,GAAkB1jF,EAAI+W,EAAjB,UACpC3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,SAAa1jF,EAAIA,EAAIC,EAAIA,IAEtD7B,CAER,CAKAulF,eAAAA,CAAiB/hE,EAAQxjB,GAIxB,MAAM4B,EAAI4hB,EAAO5hB,EAAGC,EAAI2hB,EAAO3hB,EAAG8W,EAAI6K,EAAO7K,EAEvC2sE,EAAQlmF,KAAK+lF,aAiBnB,OAdAnlF,EAAO+G,KAAMu+E,EAAO,IAAM79E,eAAgB,SAG1CzH,EAAOoH,gBAAiBk+E,EAAO,GAAK,SAAiBzjF,GACrD7B,EAAOoH,gBAAiBk+E,EAAO,GAAK,SAAiB3sE,GACrD3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,SAAiB1jF,GAGrD5B,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAiB1jF,EAAIC,GACzD7B,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAiBzjF,EAAI8W,GACzD3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAW3sE,EAAIA,EAAI,SACvD3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,QAAiB1jF,EAAI+W,GACzD3Y,EAAOoH,gBAAiBk+E,EAAO,GAAK,SAAa1jF,EAAIA,EAAIC,EAAIA,IAEtD7B,CAER,CAEAiH,GAAAA,CAAKu+E,GAEJ,IAAM,IAAIrlF,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAchlF,GAAI8G,IAAKu+E,EAAGL,aAAchlF,IAI9C,OAAOf,IAER,CAEAqmF,WAAAA,CAAaD,EAAIrhF,GAEhB,IAAM,IAAIhE,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAchlF,GAAIiH,gBAAiBo+E,EAAGL,aAAchlF,GAAKgE,GAI/D,OAAO/E,IAER,CAEAsP,KAAAA,CAAOvK,GAEN,IAAM,IAAIhE,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAchlF,GAAIsH,eAAgBtD,GAIxC,OAAO/E,IAER,CAEAuC,IAAAA,CAAM6jF,EAAIj8E,GAET,IAAM,IAAIpJ,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK+lF,aAAchlF,GAAIwB,KAAM6jF,EAAGL,aAAchlF,GAAKoJ,GAIpD,OAAOnK,IAER,CAEAuK,MAAAA,CAAQ67E,GAEP,IAAM,IAAIrlF,EAAI,EAAGA,EAAI,EAAGA,IAEvB,IAAOf,KAAK+lF,aAAchlF,GAAIwJ,OAAQ67E,EAAGL,aAAchlF,IAEtD,OAAO,EAMT,OAAO,CAER,CAEA4G,IAAAA,CAAMy+E,GAEL,OAAOpmF,KAAK4G,IAAKw/E,EAAGL,aAErB,CAEAr+E,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEAwK,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE1B,MAAM4hF,EAAe/lF,KAAK+lF,aAE1B,IAAM,IAAIhlF,EAAI,EAAGA,EAAI,EAAGA,IAEvBglF,EAAchlF,GAAIyJ,UAAW3J,EAAO4J,EAAe,EAAJ1J,GAIhD,OAAOf,IAER,CAEA0K,OAAAA,GAAkC,IAAzB7J,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIsG,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE7B,MAAM4hF,EAAe/lF,KAAK+lF,aAE1B,IAAM,IAAIhlF,EAAI,EAAGA,EAAI,EAAGA,IAEvBglF,EAAchlF,GAAI2J,QAAS7J,EAAO4J,EAAe,EAAJ1J,GAI9C,OAAOF,CAER,CAIA,iBAAOylF,CAAYliE,EAAQmiE,GAI1B,MAAM/jF,EAAI4hB,EAAO5hB,EAAGC,EAAI2hB,EAAO3hB,EAAG8W,EAAI6K,EAAO7K,EAG7CgtE,EAAS,GAAM,QAGfA,EAAS,GAAM,QAAW9jF,EAC1B8jF,EAAS,GAAM,QAAWhtE,EAC1BgtE,EAAS,GAAM,QAAW/jF,EAG1B+jF,EAAS,GAAM,SAAW/jF,EAAIC,EAC9B8jF,EAAS,GAAM,SAAW9jF,EAAI8W,EAC9BgtE,EAAS,GAAM,SAAa,EAAIhtE,EAAIA,EAAI,GACxCgtE,EAAS,GAAM,SAAW/jF,EAAI+W,EAC9BgtE,EAAS,GAAM,SAAa/jF,EAAIA,EAAIC,EAAIA,EAEzC,EAID,MAAM+jF,WAAmBlE,GAExB1/E,WAAAA,GAA6D,IAAhDwjF,EAAEjiF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI0hF,GAErBruE,WAAOzX,EAF8CoE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAIxDnE,KAAKymF,cAAe,EAEpBzmF,KAAKomF,GAAKA,CAEX,CAEAz+E,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKomF,GAAGz+E,KAAM+P,EAAO0uE,IAEdpmF,IAER,CAEAw1C,QAAAA,CAAU2O,GAKT,OAHAnkD,KAAKuiF,UAAYp+B,EAAKo+B,UACtBviF,KAAKomF,GAAG57E,UAAW25C,EAAKiiC,IAEjBpmF,IAER,CAEAiW,MAAAA,CAAQC,GAEP,MAAMV,EAAOgC,MAAMvB,OAAQC,GAI3B,OAFAV,EAAKyQ,OAAOmgE,GAAKpmF,KAAKomF,GAAG17E,UAElB8K,CAER,EAID,MAAMkxE,WAAuBnJ,GAE5B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,GACPx9E,KAAK6Y,SAAW,CAAC,CAElB,CAEAglE,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERk9E,EAAS,IAAIsB,GAAYrqC,EAAMqpC,SACrCN,EAAOe,QAAS9pC,EAAMooB,MACtB2gB,EAAOiB,iBAAkBhqC,EAAMypC,eAC/BV,EAAOc,mBAAoB7pC,EAAMupC,iBACjCR,EAAOW,KAAMvnE,GAAK,SAAWqqE,GAE5B,IAECzE,EAAQ/nC,EAAMx7B,MAAOD,KAAKC,MAAOgoE,IAElC,CAAE,MAAQl4E,GAEJ2zE,EAEJA,EAAS3zE,GAIT5B,QAAQ+wB,MAAOnvB,GAIhB0rC,EAAMqpC,QAAQX,UAAWvmE,EAE1B,CAED,GAAG6lE,EAAYC,EAEhB,CAEAzjE,KAAAA,CAAOwrC,GAEN,MAAMtrC,EAAW7Y,KAAK6Y,SAEtB,SAAS8tE,EAAYt2E,GAQpB,YAN0BtQ,IAArB8Y,EAAUxI,IAEdxJ,QAAQC,KAAM,0CAA2CuJ,GAInDwI,EAAUxI,EAElB,CAEA,MAAMusB,EAAW58B,KAAK4mF,uBAAwBziC,EAAKtkD,MAsGnD,QApGmBE,IAAdokD,EAAKtuC,OAAqB+mB,EAAS/mB,KAAOsuC,EAAKtuC,WACjC9V,IAAdokD,EAAK9zC,OAAqBusB,EAASvsB,KAAO8zC,EAAK9zC,WAChCtQ,IAAfokD,EAAK7xC,YAA0CvS,IAAnB68B,EAAStqB,OAAsBsqB,EAAStqB,MAAMkuB,OAAQ2jB,EAAK7xC,YACpEvS,IAAnBokD,EAAKve,YAA0BhJ,EAASgJ,UAAYue,EAAKve,gBACtC7lC,IAAnBokD,EAAKte,YAA0BjJ,EAASiJ,UAAYse,EAAKte,gBAC1C9lC,IAAfokD,EAAKre,QAAsBlJ,EAASkJ,MAAQqe,EAAKre,YAC7B/lC,IAApBokD,EAAKpe,aAA2BnJ,EAASmJ,YAAa,IAAIxF,IAAQC,OAAQ2jB,EAAKpe,kBACvDhmC,IAAxBokD,EAAKne,iBAA+BpJ,EAASoJ,eAAiBme,EAAKne,qBACjDjmC,IAAlBokD,EAAKle,eAAgDlmC,IAAtB68B,EAASqJ,UAAyBrJ,EAASqJ,SAASzF,OAAQ2jB,EAAKle,eAC9ElmC,IAAlBokD,EAAKhe,eAAgDpmC,IAAtB68B,EAASuJ,UAAyBvJ,EAASuJ,SAAS3F,OAAQ2jB,EAAKhe,eACrEpmC,IAA3BokD,EAAK/d,oBAAkCxJ,EAASwJ,kBAAoB+d,EAAK/d,wBAClDrmC,IAAvBokD,EAAK9d,oBAA0DtmC,IAA3B68B,EAASyJ,eAA8BzJ,EAASyJ,cAAc7F,OAAQ2jB,EAAK9d,oBAC5FtmC,IAAnBokD,EAAK7d,YAA0B1J,EAAS0J,UAAY6d,EAAK7d,gBACtCvmC,IAAnBokD,EAAK5d,YAA0B3J,EAAS2J,UAAY4d,EAAK5d,gBAC7BxmC,IAA5BokD,EAAK3d,qBAAmC5J,EAAS4J,mBAAqB2d,EAAK3d,yBACvDzmC,IAApBokD,EAAKtd,aAA2BjK,EAASiK,WAAasd,EAAKtd,iBACtC9mC,IAArBokD,EAAKrd,cAA4BlK,EAASkK,YAAcqd,EAAKrd,kBACrC/mC,IAAxBokD,EAAKpd,iBAA+BnK,EAASmK,eAAiBod,EAAKpd,qBAChChnC,IAAnCokD,EAAKnd,4BAA0CpK,EAASoK,0BAA4Bmd,EAAKnd,gCACnEjnC,IAAtBokD,EAAKnb,eAA6BpM,EAASoM,aAAemb,EAAKnb,mBAC5CjpC,IAAnBokD,EAAKjb,YAA0BtM,EAASsM,UAAYib,EAAKjb,gBAC5BnpC,IAA7BokD,EAAK/a,sBAAoCxM,EAASwM,oBAAsB+a,EAAK/a,0BACnDrpC,IAA1BokD,EAAK9a,uBAAgEtpC,IAA9B68B,EAASyM,kBAAiCzM,EAASyM,iBAAiB7I,OAAQ2jB,EAAK9a,uBACpGtpC,IAApBokD,EAAK7sC,aAA2BslB,EAAStlB,WAAa6sC,EAAK7sC,iBAC/BvX,IAA5BokD,EAAKhd,qBAAmCvK,EAASuK,mBAAqBgd,EAAKhd,yBAC9DpnC,IAAbokD,EAAKpa,MAAoBnN,EAASmN,IAAMoa,EAAKpa,UACxBhqC,IAArBokD,EAAKra,cAA4BlN,EAASkN,YAAcqa,EAAKra,kBAC3C/pC,IAAlBokD,EAAKrhB,WAAyBlG,EAASkG,SAAWqhB,EAAKrhB,eACtC/iC,IAAjBokD,EAAKzb,UAAwB9L,EAAS8L,QAAUyb,EAAKzb,cACvC3oC,IAAdokD,EAAKphB,OAAqBnG,EAASmG,KAAOohB,EAAKphB,WAC3BhjC,IAApBokD,EAAKzf,aAA2B9H,EAAS8H,WAAayf,EAAKzf,iBAC1C3kC,IAAjBokD,EAAKlhB,UAAwBrG,EAASqG,QAAUkhB,EAAKlhB,cAChCljC,IAArBokD,EAAKjhB,cAA4BtG,EAASsG,YAAcihB,EAAKjhB,kBAC1CnjC,IAAnBokD,EAAK7e,YAA0B1I,EAAS0I,UAAY6e,EAAK7e,gBACtCvlC,IAAnBokD,EAAKhhB,YAA0BvG,EAASuG,UAAYghB,EAAKhhB,gBACtCpjC,IAAnBokD,EAAKvgB,YAA0BhH,EAASgH,UAAYugB,EAAKvgB,gBACtC7jC,IAAnBokD,EAAKtgB,YAA0BjH,EAASiH,UAAYsgB,EAAKtgB,gBACrC9jC,IAApBokD,EAAKrgB,aAA2BlH,EAASkH,WAAaqgB,EAAKrgB,iBACvC/jC,IAApBokD,EAAKxf,aAA2B/H,EAAS+H,WAAawf,EAAKxf,iBACzC5kC,IAAlBokD,EAAK/gB,WAAyBxG,EAASwG,SAAW+gB,EAAK/gB,eACrCrjC,IAAlBokD,EAAK9gB,WAAyBzG,EAASyG,SAAW8gB,EAAK9gB,eAChCtjC,IAAvBokD,EAAK7gB,gBAA8B1G,EAAS0G,cAAgB6gB,EAAK7gB,oBAC1CvjC,IAAvBokD,EAAK5gB,gBAA8B3G,EAAS2G,cAAgB4gB,EAAK5gB,oBAC1CxjC,IAAvBokD,EAAK3gB,gBAA8B5G,EAAS4G,cAAgB2gB,EAAK3gB,oBACrCzjC,IAA5BokD,EAAK1gB,qBAAmC7G,EAAS6G,mBAAqB0gB,EAAK1gB,yBACvD1jC,IAApBokD,EAAKzgB,iBAAoD3jC,IAAxB68B,EAAS8G,YAA2B9G,EAAS8G,WAAWlD,OAAQ2jB,EAAKzgB,iBAClF3jC,IAApBokD,EAAKxgB,aAA2B/G,EAAS+G,WAAawgB,EAAKxgB,iBACjC5jC,IAA1BokD,EAAKpgB,mBAAiCnH,EAASmH,iBAAmBogB,EAAKpgB,uBAClDhkC,IAArBokD,EAAKngB,cAA4BpH,EAASoH,YAAcmgB,EAAKngB,kBACzCjkC,IAApBokD,EAAKlgB,aAA2BrH,EAASqH,WAAakgB,EAAKlgB,iBAClClkC,IAAzBokD,EAAKjgB,kBAAgCtH,EAASsH,gBAAkBigB,EAAKjgB,sBAChDnkC,IAArBokD,EAAKhgB,cAA4BvH,EAASuH,YAAcggB,EAAKhgB,kBACvCpkC,IAAtBokD,EAAK/f,eAA6BxH,EAASwH,aAAe+f,EAAK/f,mBACzCrkC,IAAtBokD,EAAK9f,eAA6BzH,EAASyH,aAAe8f,EAAK9f,mBACzCtkC,IAAtBokD,EAAK7f,eAA6B1H,EAAS0H,aAAe6f,EAAK7f,mBAE5CvkC,IAAnBokD,EAAKza,YAA0B9M,EAAS8M,UAAYya,EAAKza,gBAC7B3pC,IAA5BokD,EAAKxa,qBAAmC/M,EAAS+M,mBAAqBwa,EAAKxa,yBACjD5pC,IAA1BokD,EAAKva,mBAAiChN,EAASgN,iBAAmBua,EAAKva,uBAC5C7pC,IAA3BokD,EAAKta,oBAAkCjN,EAASiN,kBAAoBsa,EAAKta,wBAEvD9pC,IAAlBokD,EAAKh1C,WAAyBytB,EAASztB,SAAWg1C,EAAKh1C,eAEpCpP,IAAnBokD,EAAK5a,YAA0B3M,EAAS2M,UAAY4a,EAAK5a,gBACvCxpC,IAAlBokD,EAAK3a,WAAyB5M,EAAS4M,SAAW2a,EAAK3a,eACtCzpC,IAAjBokD,EAAK1a,UAAwB7M,EAAS6M,QAAU0a,EAAK1a,cACtC1pC,IAAfokD,EAAK70C,QAAsBstB,EAASttB,MAAQ60C,EAAK70C,YAE1BvP,IAAvBokD,EAAKtf,gBAA8BjI,EAASiI,cAAgBsf,EAAKtf,oBACpC9kC,IAA7BokD,EAAKrf,sBAAoClI,EAASkI,oBAAsBqf,EAAKrf,0BACjD/kC,IAA5BokD,EAAKpf,qBAAmCnI,EAASmI,mBAAqBof,EAAKpf,yBAExDhlC,IAAnBokD,EAAKnf,YAA0BpI,EAASoI,UAAYmf,EAAKnf,gBAEhCjlC,IAAzBokD,EAAKlf,kBAAgCrI,EAASqI,gBAAkBkf,EAAKlf,sBACzCllC,IAA5BokD,EAAKjf,qBAAmCtI,EAASsI,mBAAqBif,EAAKjf,yBAClDnlC,IAAzBokD,EAAKhf,kBAAgCvI,EAASuI,gBAAkBgf,EAAKhf,sBAEpDplC,IAAjBokD,EAAKnuB,UAAwB4G,EAAS5G,QAAUmuB,EAAKnuB,cAEjCj2B,IAApBokD,EAAK/e,aAA2BxI,EAASwI,WAAa+e,EAAK/e,iBAEzCrlC,IAAlBokD,EAAK/rC,WAAyBwkB,EAASxkB,SAAW+rC,EAAK/rC,eAEjCrY,IAAtBokD,EAAKnhB,eAEyB,kBAAtBmhB,EAAKnhB,aAEhBpG,EAASoG,aAAiBmhB,EAAKnhB,aAAe,EAI9CpG,EAASoG,aAAemhB,EAAKnhB,mBAQRjjC,IAAlBokD,EAAKvO,SAET,IAAM,MAAMvlC,KAAQ8zC,EAAKvO,SAAW,CAEnC,MAAMixC,EAAU1iC,EAAKvO,SAAUvlC,GAI/B,OAFAusB,EAASgZ,SAAUvlC,GAAS,CAAC,EAEpBw2E,EAAQhnF,MAEhB,IAAK,IACJ+8B,EAASgZ,SAAUvlC,GAAOpO,MAAQ0kF,EAAYE,EAAQ5kF,OACtD,MAED,IAAK,IACJ26B,EAASgZ,SAAUvlC,GAAOpO,OAAQ,IAAIs+B,IAAQC,OAAQqmD,EAAQ5kF,OAC9D,MAED,IAAK,KACJ26B,EAASgZ,SAAUvlC,GAAOpO,OAAQ,IAAI8E,IAAUyD,UAAWq8E,EAAQ5kF,OACnE,MAED,IAAK,KACJ26B,EAASgZ,SAAUvlC,GAAOpO,OAAQ,IAAIggB,IAAUzX,UAAWq8E,EAAQ5kF,OACnE,MAED,IAAK,KACJ26B,EAASgZ,SAAUvlC,GAAOpO,OAAQ,IAAIqX,IAAU9O,UAAWq8E,EAAQ5kF,OACnE,MAED,IAAK,KACJ26B,EAASgZ,SAAUvlC,GAAOpO,OAAQ,IAAIkJ,IAAUX,UAAWq8E,EAAQ5kF,OACnE,MAED,IAAK,KACJ26B,EAASgZ,SAAUvlC,GAAOpO,OAAQ,IAAI2rB,IAAUpjB,UAAWq8E,EAAQ5kF,OACnE,MAED,QACC26B,EAASgZ,SAAUvlC,GAAOpO,MAAQ4kF,EAAQ5kF,MAI7C,CASD,QALsBlC,IAAjBokD,EAAK3N,UAAwB5Z,EAAS4Z,QAAU2N,EAAK3N,cAC/Bz2C,IAAtBokD,EAAKzN,eAA6B9Z,EAAS8Z,aAAeyN,EAAKzN,mBACvC32C,IAAxBokD,EAAKxN,iBAA+B/Z,EAAS+Z,eAAiBwN,EAAKxN,qBAC9C52C,IAArBokD,EAAK/M,cAA4Bxa,EAASwa,YAAc+M,EAAK/M,kBAEzCr3C,IAApBokD,EAAKrN,WAET,IAAM,MAAM5Z,KAAOinB,EAAKrN,WAEvBla,EAASka,WAAY5Z,GAAQinB,EAAKrN,WAAY5Z,GA0BhD,QApBqBn9B,IAAhBokD,EAAKvN,SAAuBha,EAASga,OAASuN,EAAKvN,aACjC72C,IAAlBokD,EAAKtN,WAAyBja,EAASia,SAAWsN,EAAKtN,eAIzC92C,IAAdokD,EAAKr+B,OAAqB8W,EAAS9W,KAAOq+B,EAAKr+B,WACtB/lB,IAAzBokD,EAAK7a,kBAAgC1M,EAAS0M,gBAAkB6a,EAAK7a,sBAIxDvpC,IAAbokD,EAAK1pB,MAAoBmC,EAASnC,IAAMksD,EAAYxiC,EAAK1pB,WACzC16B,IAAhBokD,EAAK9c,SAAuBzK,EAASyK,OAASs/C,EAAYxiC,EAAK9c,cAE7CtnC,IAAlBokD,EAAK7c,WAAyB1K,EAAS0K,SAAWq/C,EAAYxiC,EAAK7c,gBAElDvnC,IAAjBokD,EAAKxc,UAAwB/K,EAAS+K,QAAUg/C,EAAYxiC,EAAKxc,eAC9C5nC,IAAnBokD,EAAKvc,YAA0BhL,EAASgL,UAAYuc,EAAKvc,gBAEtC7nC,IAAnBokD,EAAKtc,YAA0BjL,EAASiL,UAAY8+C,EAAYxiC,EAAKtc,iBAC9C9nC,IAAvBokD,EAAKrc,gBAA8BlL,EAASkL,cAAgBqc,EAAKrc,oBAC5C/nC,IAArBokD,EAAKpc,YAA4B,CAErC,IAAIA,EAAcoc,EAAKpc,aAEe,IAAjCxxB,MAAMC,QAASuxB,KAInBA,EAAc,CAAEA,EAAaA,IAI9BnL,EAASmL,aAAc,IAAIhhC,IAAUyD,UAAWu9B,EAEjD,CA+CA,YA7C8BhoC,IAAzBokD,EAAKnc,kBAAgCpL,EAASoL,gBAAkB2+C,EAAYxiC,EAAKnc,uBACtDjoC,IAA3BokD,EAAKlc,oBAAkCrL,EAASqL,kBAAoBkc,EAAKlc,wBAC/CloC,IAA1BokD,EAAKjc,mBAAiCtL,EAASsL,iBAAmBic,EAAKjc,uBAEjDnoC,IAAtBokD,EAAKhc,eAA6BvL,EAASuL,aAAew+C,EAAYxiC,EAAKhc,oBACrDpoC,IAAtBokD,EAAK/b,eAA6BxL,EAASwL,aAAeu+C,EAAYxiC,EAAK/b,oBAEtDroC,IAArBokD,EAAK9b,cAA4BzL,EAASyL,YAAcs+C,EAAYxiC,EAAK9b,mBAC9CtoC,IAA3BokD,EAAKje,oBAAkCtJ,EAASsJ,kBAAoBie,EAAKje,wBAEpDnmC,IAArBokD,EAAK7b,cAA4B1L,EAAS0L,YAAcq+C,EAAYxiC,EAAK7b,mBAC3CvoC,IAA9BokD,EAAK5b,uBAAqC3L,EAAS2L,qBAAuBo+C,EAAYxiC,EAAK5b,4BACjExoC,IAA1BokD,EAAK3b,mBAAiC5L,EAAS4L,iBAAmBm+C,EAAYxiC,EAAK3b,wBAEnEzoC,IAAhBokD,EAAK1b,SAAuB7L,EAAS6L,OAASk+C,EAAYxiC,EAAK1b,cACvC1oC,IAAxBokD,EAAKxb,gBAA+B/L,EAAS+L,eAAen+B,UAAW25C,EAAKxb,qBACnD5oC,IAAzBokD,EAAKvb,kBAAgChM,EAASgM,gBAAkBub,EAAKvb,sBAE/C7oC,IAAtBokD,EAAKtb,eAA6BjM,EAASiM,aAAesb,EAAKtb,mBACtC9oC,IAAzBokD,EAAKrb,kBAAgClM,EAASkM,gBAAkBqb,EAAKrb,sBAEnD/oC,IAAlBokD,EAAK5c,WAAyB3K,EAAS2K,SAAWo/C,EAAYxiC,EAAK5c,gBACxCxnC,IAA3BokD,EAAK3c,oBAAkC5K,EAAS4K,kBAAoB2c,EAAK3c,wBAE1DznC,IAAfokD,EAAK1c,QAAsB7K,EAAS6K,MAAQk/C,EAAYxiC,EAAK1c,aACrC1nC,IAAxBokD,EAAKzc,iBAA+B9K,EAAS8K,eAAiByc,EAAKzc,qBAE9C3nC,IAArBokD,EAAKpb,cAA4BnM,EAASmM,YAAc49C,EAAYxiC,EAAKpb,mBAEnDhpC,IAAtBokD,EAAK1d,eAA6B7J,EAAS6J,aAAekgD,EAAYxiC,EAAK1d,oBAC5C1mC,IAA/BokD,EAAKzd,wBAAsC9J,EAAS8J,sBAAwBigD,EAAYxiC,EAAKzd,6BACjE3mC,IAA5BokD,EAAKxd,qBAAmC/J,EAAS+J,mBAAqBggD,EAAYxiC,EAAKxd,0BACzD5mC,IAA9BokD,EAAKvd,uBAAqChK,EAASgK,sBAAuB,IAAI7/B,IAAUyD,UAAW25C,EAAKvd,4BAEhF7mC,IAAxBokD,EAAKld,iBAA+BrK,EAASqK,eAAiB0/C,EAAYxiC,EAAKld,sBAC9ClnC,IAAjCokD,EAAKjd,0BAAwCtK,EAASsK,wBAA0By/C,EAAYxiC,EAAKjd,+BAExEnnC,IAAzBokD,EAAKlb,kBAAgCrM,EAASqM,gBAAkB09C,EAAYxiC,EAAKlb,uBAC3DlpC,IAAtBokD,EAAKhb,eAA6BvM,EAASuM,aAAew9C,EAAYxiC,EAAKhb,oBAEpDppC,IAAvBokD,EAAK/c,gBAA8BxK,EAASwK,cAAgBu/C,EAAYxiC,EAAK/c,qBAEtDrnC,IAAvBokD,EAAKorB,gBAA8B3yC,EAAS2yC,cAAgBoX,EAAYxiC,EAAKorB,qBAClDxvE,IAA3BokD,EAAKqrB,oBAAkC5yC,EAAS4yC,kBAAoBmX,EAAYxiC,EAAKqrB,oBAEnF5yC,CAER,CAEAkqD,WAAAA,CAAa7kF,GAGZ,OADAjC,KAAK6Y,SAAW5W,EACTjC,IAER,CAEA4mF,sBAAAA,CAAwB/mF,GAEvB,OAAO6mF,GAAeE,uBAAwB/mF,EAE/C,CAEA,6BAAO+mF,CAAwB/mF,GAuB9B,OAAO,GArBa,CACnBgvE,kBACAjvB,kBACAmvB,qBACAz4B,kBACAgb,kBACA6d,wBACAF,wBACAc,qBACAE,oBACAE,sBACAE,uBACAE,qBACAG,wBACAvmC,qBACAymC,sBACAE,sBACAjhB,qBACAjtB,aAGuB/iC,EAEzB,EAID,MAAMknF,GAEL,iBAAOC,CAAYnmF,GAIlB,GAFAgG,QAAQC,KAAM,yHAEc,qBAAhBk6E,YAEX,OAAO,IAAIA,aAAcC,OAAQpgF,GAOlC,IAAIkE,EAAI,GAER,IAAM,IAAIhE,EAAI,EAAGsb,EAAKxb,EAAMI,OAAQF,EAAIsb,EAAItb,IAG3CgE,GAAKiuC,OAAOi0C,aAAcpmF,EAAOE,IAIlC,IAIC,OAAOmmF,mBAAoBC,OAAQpiF,GAEpC,CAAE,MAAQ0D,GAET,OAAO1D,CAER,CAED,CAEA,qBAAOqiF,CAAgB9wE,GAEtB,MAAM9V,EAAQ8V,EAAI+wE,YAAa,KAE/B,OAAiB,IAAZ7mF,EAAuB,KAErB8V,EAAIxV,MAAO,EAAGN,EAAQ,EAE9B,CAEA,iBAAOs8E,CAAYxmE,EAAKimD,GAGvB,MAAoB,kBAARjmD,GAA4B,KAARA,EAAoB,IAG/C,gBAAgB5B,KAAM6nD,IAAU,MAAM7nD,KAAM4B,KAEhDimD,EAAOA,EAAK+qB,QAAS,0BAA2B,OAK5C,mBAAmB5yE,KAAM4B,IAGzB,gBAAgB5B,KAAM4B,IAGtB,aAAa5B,KAAM4B,GANqBA,EAStCimD,EAAOjmD,EAEf,EAID,MAAMixE,WAAgC15C,GAErCjrC,WAAAA,GAEC4U,QAEAxX,KAAKwnF,2BAA4B,EAEjCxnF,KAAKH,KAAO,0BACZG,KAAKqqD,cAAgBjlC,GAEtB,CAEAzd,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKqqD,cAAgB3yC,EAAO2yC,cAErBrqD,IAER,CAEAiW,MAAAA,GAEC,MAAMT,EAAOgC,MAAMvB,SAMnB,OAJAT,EAAK60C,cAAgBrqD,KAAKqqD,cAE1B70C,EAAKgyE,2BAA4B,EAE1BhyE,CAER,EAID,MAAMiyE,WAA6BlK,GAElC36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERk9E,EAAS,IAAIsB,GAAYrqC,EAAMqpC,SACrCN,EAAOe,QAAS9pC,EAAMooB,MACtB2gB,EAAOiB,iBAAkBhqC,EAAMypC,eAC/BV,EAAOc,mBAAoB7pC,EAAMupC,iBACjCR,EAAOW,KAAMvnE,GAAK,SAAWqqE,GAE5B,IAECzE,EAAQ/nC,EAAMx7B,MAAOD,KAAKC,MAAOgoE,IAElC,CAAE,MAAQl4E,GAEJ2zE,EAEJA,EAAS3zE,GAIT5B,QAAQ+wB,MAAOnvB,GAIhB0rC,EAAMqpC,QAAQX,UAAWvmE,EAE1B,CAED,GAAG6lE,EAAYC,EAEhB,CAEAzjE,KAAAA,CAAOwrC,GAEN,MAAMujC,EAAuB,CAAC,EACxBC,EAAiB,CAAC,EAExB,SAASC,EAAsBzjC,EAAMtuC,GAEpC,QAAsC9V,IAAjC2nF,EAAsB7xE,GAAuB,OAAO6xE,EAAsB7xE,GAE/E,MACM6pC,EADqByE,EAAKxE,mBACc9pC,GAExC1F,EAYP,SAAyBg0C,EAAMtuC,GAE9B,QAAgC9V,IAA3B4nF,EAAgB9xE,GAAuB,OAAO8xE,EAAgB9xE,GAEnE,MAAMwpC,EAAe8E,EAAK9E,aACpBohC,EAAcphC,EAAcxpC,GAE5Bq7B,EAAK,IAAIpuC,YAAa29E,GAActwE,OAI1C,OAFAw3E,EAAgB9xE,GAASq7B,EAElBA,CAER,CAzBgB22C,CAAgB1jC,EAAMzE,EAAkBvvC,QAEjDtP,EAAQqP,GAAewvC,EAAkB7/C,KAAMsQ,GAC/CovC,EAAK,IAAIJ,GAAmBt+C,EAAO6+C,EAAkBhO,QAK3D,OAJA6N,EAAG1pC,KAAO6pC,EAAkB7pC,KAE5B6xE,EAAsB7xE,GAAS0pC,EAExBA,CAER,CAiBA,MAAM14B,EAAWs9B,EAAKqjC,0BAA4B,IAAID,GAA4B,IAAI15C,GAEhFrtC,EAAQ2jD,EAAK3uC,KAAKhV,MAExB,QAAeT,IAAVS,EAAsB,CAE1B,MAAMsnF,EAAa53E,GAAe1P,EAAMX,KAAMW,EAAMK,OACpDgmB,EAASynB,SAAU,IAAIhD,GAAiBw8C,EAAY,GAErD,CAEA,MAAM95C,EAAamW,EAAK3uC,KAAKw4B,WAE7B,IAAM,MAAM9Q,KAAO8Q,EAAa,CAE/B,MAAMpjC,EAAYojC,EAAY9Q,GAC9B,IAAI6qD,EAEJ,GAAKn9E,EAAU6mC,6BAA+B,CAE7C,MAAMiO,EAAoBkoC,EAAsBzjC,EAAK3uC,KAAM5K,EAAU4K,MACrEuyE,EAAkB,IAAItoC,GAA4BC,EAAmB90C,EAAU2gC,SAAU3gC,EAAUH,OAAQG,EAAU4gC,WAEtH,KAAO,CAEN,MAAMs8C,EAAa53E,GAAetF,EAAU/K,KAAM+K,EAAU/J,OAE5DknF,EAAkB,IADYn9E,EAAU25C,2BAA6BF,GAA2B/Y,IACnDw8C,EAAYl9E,EAAU2gC,SAAU3gC,EAAU4gC,WAExF,MAEwBzrC,IAAnB6K,EAAUyF,OAAqB03E,EAAgB13E,KAAOzF,EAAUyF,WAC5CtQ,IAApB6K,EAAU+gC,OAAsBo8C,EAAgBh8C,SAAUnhC,EAAU+gC,OAEzE9kB,EAAS4nB,aAAcvR,EAAK6qD,EAE7B,CAEA,MAAM95C,EAAkBkW,EAAK3uC,KAAKy4B,gBAElC,GAAKA,EAEJ,IAAM,MAAM/Q,KAAO+Q,EAAkB,CAEpC,MAAM8D,EAAiB9D,EAAiB/Q,GAElCr8B,EAAQ,GAEd,IAAM,IAAIE,EAAI,EAAGsb,EAAK01B,EAAe9wC,OAAQF,EAAIsb,EAAItb,IAAO,CAE3D,MAAM6J,EAAYmnC,EAAgBhxC,GAClC,IAAIgnF,EAEJ,GAAKn9E,EAAU6mC,6BAA+B,CAE7C,MAAMiO,EAAoBkoC,EAAsBzjC,EAAK3uC,KAAM5K,EAAU4K,MACrEuyE,EAAkB,IAAItoC,GAA4BC,EAAmB90C,EAAU2gC,SAAU3gC,EAAUH,OAAQG,EAAU4gC,WAEtH,KAAO,CAEN,MAAMs8C,EAAa53E,GAAetF,EAAU/K,KAAM+K,EAAU/J,OAC5DknF,EAAkB,IAAIz8C,GAAiBw8C,EAAYl9E,EAAU2gC,SAAU3gC,EAAU4gC,WAElF,MAEwBzrC,IAAnB6K,EAAUyF,OAAqB03E,EAAgB13E,KAAOzF,EAAUyF,MACrExP,EAAMT,KAAM2nF,EAEb,CAEAlhE,EAASonB,gBAAiB/Q,GAAQr8B,CAEnC,CAI4BsjD,EAAK3uC,KAAK04B,uBAItCrnB,EAASqnB,sBAAuB,GAIjC,MAAMC,EAASgW,EAAK3uC,KAAK24B,QAAUgW,EAAK3uC,KAAKwyE,WAAa7jC,EAAK3uC,KAAKyyE,QAEpE,QAAgBloF,IAAXouC,EAEJ,IAAM,IAAIptC,EAAI,EAAGsB,EAAI8rC,EAAOltC,OAAQF,IAAMsB,IAAMtB,EAAI,CAEnD,MAAMuvC,EAAQnC,EAAQptC,GAEtB8lB,EAAS+nB,SAAU0B,EAAMrE,MAAOqE,EAAMt0B,MAAOs0B,EAAMzB,cAEpD,CAID,MAAM9S,EAAiBooB,EAAK3uC,KAAKumB,eAEjC,QAAwBh8B,IAAnBg8B,EAA+B,CAEnC,MAAM/wB,EAAS,IAAIiX,QAEYliB,IAA1Bg8B,EAAe/wB,QAEnBA,EAAOR,UAAWuxB,EAAe/wB,QAIlC6b,EAASkV,eAAiB,IAAIlS,GAAQ7e,EAAQ+wB,EAAevX,OAE9D,CAKA,OAHK2/B,EAAK9zC,OAAOwW,EAASxW,KAAO8zC,EAAK9zC,MACjC8zC,EAAK/rC,WAAWyO,EAASzO,SAAW+rC,EAAK/rC,UAEvCyO,CAER,EAID,MAAMqhE,WAAqB3K,GAE1B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERu8D,EAAuB,KAAdv8D,KAAKu8D,KAAgBwqB,GAAYK,eAAgB9wE,GAAQtW,KAAKu8D,KAC7Ev8D,KAAK29E,aAAe39E,KAAK29E,cAAgBphB,EAEzC,MAAM2gB,EAAS,IAAIsB,GAAYx+E,KAAKw9E,SACpCN,EAAOe,QAASj+E,KAAKu8D,MACrB2gB,EAAOiB,iBAAkBn+E,KAAK49E,eAC9BV,EAAOc,mBAAoBh+E,KAAK09E,iBAChCR,EAAOW,KAAMvnE,GAAK,SAAWqqE,GAE5B,IAAIx8B,EAAO,KAEX,IAECA,EAAOzrC,KAAKC,MAAOgoE,EAEpB,CAAE,MAAQ/oD,GAMT,YAJiB73B,IAAZq8E,GAAwBA,EAASxkD,QAEtC/wB,QAAQ+wB,MAAO,mCAAsCthB,EAAM,IAAKshB,EAAM/mB,QAIvE,CAEA,MAAMiI,EAAWqrC,EAAKrrC,SAEtB,QAAkB/Y,IAAb+Y,QAA4C/Y,IAAlB+Y,EAASjZ,MAAsD,aAAhCiZ,EAASjZ,KAAKkC,cAK3E,YAHiBhC,IAAZq8E,GAAwBA,EAAS,IAAIh5E,MAAO,kCAAqCkT,SAEtFzP,QAAQ+wB,MAAO,kCAAqCthB,GAKrD69B,EAAMx7B,MAAOwrC,EAAM+3B,EAEpB,GAAGC,EAAYC,EAEhB,CAEA,eAAM0B,CAAWxnE,EAAK6lE,GAErB,MAEM5f,EAAuB,KAAdv8D,KAAKu8D,KAAgBwqB,GAAYK,eAAgB9wE,GAAQtW,KAAKu8D,KAC7Ev8D,KAAK29E,aAAe39E,KAAK29E,cAAgBphB,EAEzC,MAAM2gB,EAAS,IAAIsB,GAAYx+E,KAAKw9E,SACpCN,EAAOe,QAASj+E,KAAKu8D,MACrB2gB,EAAOiB,iBAAkBn+E,KAAK49E,eAC9BV,EAAOc,mBAAoBh+E,KAAK09E,iBAEhC,MAAMiD,QAAazD,EAAOY,UAAWxnE,EAAK6lE,GAEpCh4B,EAAOzrC,KAAKC,MAAOgoE,GAEnB7nE,EAAWqrC,EAAKrrC,SAEtB,QAAkB/Y,IAAb+Y,QAA4C/Y,IAAlB+Y,EAASjZ,MAAsD,aAAhCiZ,EAASjZ,KAAKkC,cAE3E,MAAM,IAAIqB,MAAO,kCAAqCkT,GAIvD,aAtBctW,KAsBKmoF,WAAYhkC,EAEhC,CAEAxrC,KAAAA,CAAOwrC,EAAM+3B,GAEZ,MAAM7lD,EAAar2B,KAAKooF,gBAAiBjkC,EAAK9tB,YACxC+C,EAASp5B,KAAKqoF,YAAalkC,EAAK/qB,QAChCF,EAAal5B,KAAKsoF,gBAAiBnkC,EAAKjrB,WAAYE,GAEpDhjB,EAASpW,KAAKuoF,YAAapkC,EAAK/tC,QAAQ,gBAE7BrW,IAAXm8E,GAAuBA,EAAQj2D,EAErC,IAEMpN,EAAW7Y,KAAKwoF,cAAerkC,EAAKtrC,SAAUzC,GAC9C+iB,EAAYn5B,KAAKyoF,eAAgBtkC,EAAKhrB,UAAWtgB,GAEjDoN,EAASjmB,KAAK0oF,YAAavkC,EAAKl+B,OAAQiT,EAAYC,EAAWtgB,EAAUwd,GACzEgD,EAAYr5B,KAAK2oF,eAAgBxkC,EAAK9qB,UAAWpT,GAOvD,GALAjmB,KAAK4oF,cAAe3iE,EAAQoT,GAC5Br5B,KAAK6oF,iBAAkB5iE,QAIPlmB,IAAXm8E,EAAuB,CAE3B,IAAI4M,GAAY,EAEhB,IAAM,MAAMjzE,KAAQO,EAEnB,GAAKA,EAAQP,GAAOL,gBAAgBJ,iBAAmB,CAEtD0zE,GAAY,EACZ,KAED,EAIkB,IAAdA,GAAsB5M,EAAQj2D,EAEpC,CAEA,OAAOA,CAER,CAEA,gBAAMkiE,CAAYhkC,GAEjB,MAAM9tB,EAAar2B,KAAKooF,gBAAiBjkC,EAAK9tB,YACxC+C,EAASp5B,KAAKqoF,YAAalkC,EAAK/qB,QAChCF,EAAal5B,KAAKsoF,gBAAiBnkC,EAAKjrB,WAAYE,GAEpDhjB,QAAepW,KAAK+oF,iBAAkB5kC,EAAK/tC,QAE3CyC,EAAW7Y,KAAKwoF,cAAerkC,EAAKtrC,SAAUzC,GAC9C+iB,EAAYn5B,KAAKyoF,eAAgBtkC,EAAKhrB,UAAWtgB,GAEjDoN,EAASjmB,KAAK0oF,YAAavkC,EAAKl+B,OAAQiT,EAAYC,EAAWtgB,EAAUwd,GACzEgD,EAAYr5B,KAAK2oF,eAAgBxkC,EAAK9qB,UAAWpT,GAKvD,OAHAjmB,KAAK4oF,cAAe3iE,EAAQoT,GAC5Br5B,KAAK6oF,iBAAkB5iE,GAEhBA,CAER,CAEAoiE,WAAAA,CAAalkC,GAEZ,MAAM/qB,EAAS,CAAC,EAEhB,QAAcr5B,IAATokD,EAEJ,IAAM,IAAIpjD,EAAI,EAAGC,EAAImjD,EAAKljD,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,MAAMw7B,GAAQ,IAAI4jC,IAAQ3qB,SAAU2O,EAAMpjD,IAE1Cq4B,EAAQmD,EAAM1mB,MAAS0mB,CAExB,CAID,OAAOnD,CAER,CAEAuvD,cAAAA,CAAgBxkC,EAAMl+B,GAErB,MAAMoT,EAAY,CAAC,EACb+pB,EAAQ,CAAC,EAYf,GARAn9B,EAAO0S,UAAU,SAAW1D,GAEtBA,EAAMsuB,SAASH,EAAOnuB,EAAMpf,MAASof,EAE3C,SAIcl1B,IAATokD,EAEJ,IAAM,IAAIpjD,EAAI,EAAGC,EAAImjD,EAAKljD,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,MAAM47B,GAAW,IAAIgnB,IAAWnO,SAAU2O,EAAMpjD,GAAKqiD,GAErD/pB,EAAWsD,EAAS9mB,MAAS8mB,CAE9B,CAID,OAAOtD,CAER,CAEAivD,eAAAA,CAAiBnkC,EAAM/qB,GAEtB,MAAMF,EAAa,CAAC,EAEpB,QAAcn5B,IAATokD,EAAqB,CAEzB,MAAM6kC,EAAuB,IAAIvB,GAEjC,IAAM,IAAI1mF,EAAI,EAAGC,EAAImjD,EAAKljD,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,IAAI8lB,EACJ,MAAMrR,EAAO2uC,EAAMpjD,GAEnB,OAASyU,EAAK3V,MAEb,IAAK,iBACL,IAAK,0BAEJgnB,EAAWmiE,EAAqBrwE,MAAOnD,GACvC,MAED,QAEMA,EAAK3V,QAAQ+uE,GAEjB/nD,EAAW+nD,GAAYp5D,EAAK3V,MAAO21C,SAAUhgC,EAAM4jB,GAInDvyB,QAAQC,KAAM,kDAAmD0O,EAAK3V,SAMzEgnB,EAAShR,KAAOL,EAAKK,UAEF9V,IAAdyV,EAAKnF,OAAqBwW,EAASxW,KAAOmF,EAAKnF,WAC7BtQ,IAAlByV,EAAK4C,WAAyByO,EAASzO,SAAW5C,EAAK4C,UAE5D8gB,EAAY1jB,EAAKK,MAASgR,CAE3B,CAED,CAEA,OAAOqS,CAER,CAEAuvD,cAAAA,CAAgBtkC,EAAMtrC,GAErB,MAAMmkB,EAAQ,CAAC,EACT7D,EAAY,CAAC,EAEnB,QAAcp5B,IAATokD,EAAqB,CAEzB,MAAM+4B,EAAS,IAAIwJ,GACnBxJ,EAAO4J,YAAajuE,GAEpB,IAAM,IAAI9X,EAAI,EAAGC,EAAImjD,EAAKljD,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,MAAMyU,EAAO2uC,EAAMpjD,QAEShB,IAAvBi9B,EAAOxnB,EAAKK,QAEhBmnB,EAAOxnB,EAAKK,MAASqnE,EAAOvkE,MAAOnD,IAIpC2jB,EAAW3jB,EAAKK,MAASmnB,EAAOxnB,EAAKK,KAEtC,CAED,CAEA,OAAOsjB,CAER,CAEAivD,eAAAA,CAAiBjkC,GAEhB,MAAM9tB,EAAa,CAAC,EAEpB,QAAct2B,IAATokD,EAEJ,IAAM,IAAIpjD,EAAI,EAAGA,EAAIojD,EAAKljD,OAAQF,IAAO,CAExC,MAAMyU,EAAO2uC,EAAMpjD,GAEbsxE,EAAOoH,GAAc9gE,MAAOnD,GAElC6gB,EAAYg8C,EAAKx8D,MAASw8D,CAE3B,CAID,OAAOh8C,CAER,CAEAkyD,WAAAA,CAAapkC,EAAM+3B,GAElB,MAAM/nC,EAAQn0C,KACRoW,EAAS,CAAC,EAEhB,IAAI8mE,EAmBJ,SAAS+L,EAAkBx0E,GAE1B,GAAsB,kBAAVA,EAAqB,CAEhC,MAAM6B,EAAM7B,EAIZ,OAzBF,SAAoB6B,GAInB,OAFA69B,EAAMqpC,QAAQb,UAAWrmE,GAElB4mE,EAAOW,KAAMvnE,GAAK,WAExB69B,EAAMqpC,QAAQZ,QAAStmE,EAExB,QAAGvW,GAAW,WAEbo0C,EAAMqpC,QAAQX,UAAWvmE,GACzB69B,EAAMqpC,QAAQZ,QAAStmE,EAExB,GAED,CAUS4yE,CAFM,4BAA4Bx0E,KAAM4B,GAAQA,EAAM69B,EAAMwpC,aAAernE,EAInF,CAEC,OAAK7B,EAAMe,KAEH,CACNA,KAAMtF,GAAeuE,EAAM5U,KAAM4U,EAAMe,MACvCtO,MAAOuN,EAAMvN,MACbC,OAAQsN,EAAMtN,QAKR,IAMV,CAEA,QAAcpH,IAATokD,GAAsBA,EAAKljD,OAAS,EAAI,CAE5C,MAAMu8E,EAAU,IAAIvB,GAAgBC,GAEpCgB,EAAS,IAAI2E,GAAarE,GAC1BN,EAAOa,eAAgB/9E,KAAKy9E,aAE5B,IAAM,IAAI18E,EAAI,EAAGsb,EAAK8nC,EAAKljD,OAAQF,EAAIsb,EAAItb,IAAO,CAEjD,MAAM0T,EAAQ0vC,EAAMpjD,GACduV,EAAM7B,EAAM6B,IAElB,GAAKC,MAAMC,QAASF,GAAQ,CAI3B,MAAM6yE,EAAa,GAEnB,IAAM,IAAI7/D,EAAI,EAAG+lB,EAAK/4B,EAAIrV,OAAQqoB,EAAI+lB,EAAI/lB,IAAO,CAEhD,MAEM8/D,EAAoBH,EAFP3yE,EAAKgT,IAIG,OAAtB8/D,IAECA,aAA6Bh0E,iBAEjC+zE,EAAW/oF,KAAMgpF,GAMjBD,EAAW/oF,KAAM,IAAIojD,GAAa4lC,EAAkB5zE,KAAM4zE,EAAkBliF,MAAOkiF,EAAkBjiF,SAMxG,CAEAiP,EAAQ3B,EAAMoB,MAAS,IAAIH,GAAQyzE,EAEpC,KAAO,CAIN,MAAMC,EAAoBH,EAAkBx0E,EAAM6B,KAClDF,EAAQ3B,EAAMoB,MAAS,IAAIH,GAAQ0zE,EAGpC,CAED,CAED,CAEA,OAAOhzE,CAER,CAEA,sBAAM2yE,CAAkB5kC,GAEvB,MAAMhQ,EAAQn0C,KACRoW,EAAS,CAAC,EAEhB,IAAI8mE,EAEJmM,eAAeJ,EAAkBx0E,GAEhC,GAAsB,kBAAVA,EAAqB,CAEhC,MAAM6B,EAAM7B,EAEN8nD,EAAO,4BAA4B7nD,KAAM4B,GAAQA,EAAM69B,EAAMwpC,aAAernE,EAElF,aAAa4mE,EAAOY,UAAWvhB,EAEhC,CAEC,OAAK9nD,EAAMe,KAEH,CACNA,KAAMtF,GAAeuE,EAAM5U,KAAM4U,EAAMe,MACvCtO,MAAOuN,EAAMvN,MACbC,OAAQsN,EAAMtN,QAKR,IAMV,CAEA,QAAcpH,IAATokD,GAAsBA,EAAKljD,OAAS,EAAI,CAE5Ci8E,EAAS,IAAI2E,GAAa7hF,KAAKw9E,SAC/BN,EAAOa,eAAgB/9E,KAAKy9E,aAE5B,IAAM,IAAI18E,EAAI,EAAGsb,EAAK8nC,EAAKljD,OAAQF,EAAIsb,EAAItb,IAAO,CAEjD,MAAM0T,EAAQ0vC,EAAMpjD,GACduV,EAAM7B,EAAM6B,IAElB,GAAKC,MAAMC,QAASF,GAAQ,CAI3B,MAAM6yE,EAAa,GAEnB,IAAM,IAAI7/D,EAAI,EAAG+lB,EAAK/4B,EAAIrV,OAAQqoB,EAAI+lB,EAAI/lB,IAAO,CAEhD,MAAMggE,EAAahzE,EAAKgT,GAElB8/D,QAA0BH,EAAkBK,GAEvB,OAAtBF,IAECA,aAA6Bh0E,iBAEjC+zE,EAAW/oF,KAAMgpF,GAMjBD,EAAW/oF,KAAM,IAAIojD,GAAa4lC,EAAkB5zE,KAAM4zE,EAAkBliF,MAAOkiF,EAAkBjiF,SAMxG,CAEAiP,EAAQ3B,EAAMoB,MAAS,IAAIH,GAAQyzE,EAEpC,KAAO,CAIN,MAAMC,QAA0BH,EAAkBx0E,EAAM6B,KACxDF,EAAQ3B,EAAMoB,MAAS,IAAIH,GAAQ0zE,EAEpC,CAED,CAED,CAEA,OAAOhzE,CAER,CAEAoyE,aAAAA,CAAerkC,EAAM/tC,GAEpB,SAASmzE,EAAetnF,EAAOpC,GAE9B,MAAsB,kBAAVoC,EAA4BA,GAExC4E,QAAQC,KAAM,uEAAwE7E,GAE/EpC,EAAMoC,GAEd,CAEA,MAAM4W,EAAW,CAAC,EAElB,QAAc9Y,IAATokD,EAEJ,IAAM,IAAIpjD,EAAI,EAAGC,EAAImjD,EAAKljD,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,MAAMyU,EAAO2uC,EAAMpjD,QAEChB,IAAfyV,EAAKf,OAET5N,QAAQC,KAAM,+CAAgD0O,EAAKK,WAItC9V,IAAzBqW,EAAQZ,EAAKf,QAEjB5N,QAAQC,KAAM,sCAAuC0O,EAAKf,OAI3D,MAAMiD,EAAStB,EAAQZ,EAAKf,OACtBA,EAAQiD,EAAOlC,KAErB,IAAIyG,EAEC1F,MAAMC,QAAS/B,IAEnBwH,EAAU,IAAI2+B,GAEQ,IAAjBnmC,EAAMxT,SAAegb,EAAQjG,aAAc,KAM/CiG,EAFIxH,GAASA,EAAMe,KAET,IAAIguC,GAIJ,IAAI3sC,GAIVpC,IAAQwH,EAAQjG,aAAc,IAIpCiG,EAAQvE,OAASA,EAEjBuE,EAAQpG,KAAOL,EAAKK,UAED9V,IAAdyV,EAAKnF,OAAqB4L,EAAQ5L,KAAOmF,EAAKnF,WAE7BtQ,IAAjByV,EAAKuB,UAAwBkF,EAAQlF,QAAUwyE,EAAe/zE,EAAKuB,QAASyyE,UAC3DzpF,IAAjByV,EAAKoC,UAAwBqE,EAAQrE,QAAUpC,EAAKoC,cAEpC7X,IAAhByV,EAAK/K,QAAuBwR,EAAQxR,OAAOD,UAAWgL,EAAK/K,aAC3C1K,IAAhByV,EAAKsC,QAAuBmE,EAAQnE,OAAOtN,UAAWgL,EAAKsC,aAC3C/X,IAAhByV,EAAKxK,QAAuBiR,EAAQjR,OAAOR,UAAWgL,EAAKxK,aACzCjL,IAAlByV,EAAKrG,WAAyB8M,EAAQ9M,SAAWqG,EAAKrG,eAExCpP,IAAdyV,EAAKwD,OAETiD,EAAQhF,MAAQsyE,EAAe/zE,EAAKwD,KAAM,GAAKywE,IAC/CxtE,EAAQ/E,MAAQqyE,EAAe/zE,EAAKwD,KAAM,GAAKywE,UAI3B1pF,IAAhByV,EAAK6B,SAAuB4E,EAAQ5E,OAAS7B,EAAK6B,aAC1BtX,IAAxByV,EAAKqC,iBAA+BoE,EAAQpE,eAAiBrC,EAAKqC,qBACpD9X,IAAdyV,EAAK3V,OAAqBoc,EAAQpc,KAAO2V,EAAK3V,WAC1BE,IAApByV,EAAKtC,aAA2B+I,EAAQ/I,WAAasC,EAAKtC,iBAEvCnT,IAAnByV,EAAK4B,YAA0B6E,EAAQ7E,UAAYmyE,EAAe/zE,EAAK4B,UAAWsyE,UAC/D3pF,IAAnByV,EAAK2B,YAA0B8E,EAAQ9E,UAAYoyE,EAAe/zE,EAAK2B,UAAWuyE,UAC9D3pF,IAApByV,EAAK8B,aAA2B2E,EAAQ3E,WAAa9B,EAAK8B,iBAE3CvX,IAAfyV,EAAK0C,QAAsB+D,EAAQ/D,MAAQ1C,EAAK0C,YAEvBnY,IAAzByV,EAAKwC,kBAAgCiE,EAAQjE,gBAAkBxC,EAAKwC,sBAC1CjY,IAA1ByV,EAAKyC,mBAAiCgE,EAAQhE,iBAAmBzC,EAAKyC,uBAC7ClY,IAAzByV,EAAK2C,kBAAgC8D,EAAQ9D,gBAAkB3C,EAAK2C,sBAC3CpY,IAAzByV,EAAK+9C,kBAAgCt3C,EAAQs3C,gBAAkB/9C,EAAK+9C,sBAElDxzD,IAAlByV,EAAK4C,WAAyB6D,EAAQ7D,SAAW5C,EAAK4C,UAE3DS,EAAUrD,EAAKK,MAASoG,CAEzB,CAID,OAAOpD,CAER,CAEA6vE,WAAAA,CAAalzE,EAAM0jB,EAAYC,EAAWtgB,EAAUwd,GAEnD,IAAIpQ,EA8DAY,EAAU+V,EA5Dd,SAAS+sD,EAAat5E,GAQrB,YAN4BtQ,IAAvBm5B,EAAY7oB,IAEhBxJ,QAAQC,KAAM,yCAA0CuJ,GAIlD6oB,EAAY7oB,EAEpB,CAEA,SAASu5E,EAAav5E,GAErB,QAActQ,IAATsQ,EAAL,CAEA,GAAKkG,MAAMC,QAASnG,GAAS,CAE5B,MAAMxP,EAAQ,GAEd,IAAM,IAAIE,EAAI,EAAGC,EAAIqP,EAAKpP,OAAQF,EAAIC,EAAGD,IAAO,CAE/C,MAAM8U,EAAOxF,EAAMtP,QAEQhB,IAAtBo5B,EAAWtjB,IAEfhP,QAAQC,KAAM,yCAA0C+O,GAIzDhV,EAAMT,KAAM+4B,EAAWtjB,GAExB,CAEA,OAAOhV,CAER,CAQA,YAN2Bd,IAAtBo5B,EAAW9oB,IAEfxJ,QAAQC,KAAM,yCAA0CuJ,GAIlD8oB,EAAW9oB,EA9BwB,CAgC3C,CAEA,SAASs2E,EAAY9wE,GAQpB,YAN0B9V,IAArB8Y,EAAUhD,IAEdhP,QAAQC,KAAM,wCAAyC+O,GAIjDgD,EAAUhD,EAElB,CAIA,OAASL,EAAK3V,MAEb,IAAK,QAEJomB,EAAS,IAAIw4B,QAEY1+C,IAApByV,EAAKymB,aAEJnd,OAAO+qE,UAAWr0E,EAAKymB,YAE3BhW,EAAOgW,WAAa,IAAIsE,GAAO/qB,EAAKymB,YAIpChW,EAAOgW,WAAa0qD,EAAYnxE,EAAKymB,kBAMbl8B,IAArByV,EAAK2mB,cAETlW,EAAOkW,YAAcwqD,EAAYnxE,EAAK2mB,mBAIrBp8B,IAAbyV,EAAKu0B,MAEc,QAAlBv0B,EAAKu0B,IAAIlqC,KAEbomB,EAAO8jB,IAAM,IAAIwU,GAAK/oC,EAAKu0B,IAAIz3B,MAAOkD,EAAKu0B,IAAIrX,KAAMld,EAAKu0B,IAAIpX,KAEjC,YAAlBnd,EAAKu0B,IAAIlqC,OAEpBomB,EAAO8jB,IAAM,IAAIqU,GAAS5oC,EAAKu0B,IAAIz3B,MAAOkD,EAAKu0B,IAAIsU,UAI7B,KAAlB7oC,EAAKu0B,IAAI15B,OAEb4V,EAAO8jB,IAAI15B,KAAOmF,EAAKu0B,IAAI15B,YAMMtQ,IAA9ByV,EAAKkpC,uBAAqCz4B,EAAOy4B,qBAAuBlpC,EAAKkpC,2BAChD3+C,IAA7ByV,EAAKmpC,sBAAoC14B,EAAO04B,oBAAsBnpC,EAAKmpC,0BAC/C5+C,IAA5ByV,EAAKopC,oBAAmC34B,EAAO24B,mBAAmBp0C,UAAWgL,EAAKopC,yBAEpD7+C,IAA9ByV,EAAKqpC,uBAAqC54B,EAAO44B,qBAAuBrpC,EAAKqpC,2BAChD9+C,IAA7ByV,EAAKspC,qBAAoC74B,EAAO64B,oBAAoBt0C,UAAWgL,EAAKspC,qBAEzF,MAED,IAAK,oBAEJ74B,EAAS,IAAIyxB,GAAmBliC,EAAKmiC,IAAKniC,EAAKoiC,OAAQpiC,EAAKkd,KAAMld,EAAKmd,UAEnD5yB,IAAfyV,EAAKuiC,QAAsB9xB,EAAO8xB,MAAQviC,EAAKuiC,YACjCh4C,IAAdyV,EAAKsiC,OAAqB7xB,EAAO6xB,KAAOtiC,EAAKsiC,WAC1B/3C,IAAnByV,EAAKyiC,YAA0BhyB,EAAOgyB,UAAYziC,EAAKyiC,gBACnCl4C,IAApByV,EAAK0iC,aAA2BjyB,EAAOiyB,WAAa1iC,EAAK0iC,iBAC3Cn4C,IAAdyV,EAAKwiC,OAAqB/xB,EAAO+xB,KAAOxkC,OAAOC,OAAQ,CAAC,EAAG+B,EAAKwiC,OAErE,MAED,IAAK,qBAEJ/xB,EAAS,IAAIg/D,GAAoBzvE,EAAK8c,KAAM9c,EAAK+c,MAAO/c,EAAKgd,IAAKhd,EAAKid,OAAQjd,EAAKkd,KAAMld,EAAKmd,UAE5E5yB,IAAdyV,EAAKsiC,OAAqB7xB,EAAO6xB,KAAOtiC,EAAKsiC,WAC/B/3C,IAAdyV,EAAKwiC,OAAqB/xB,EAAO+xB,KAAOxkC,OAAOC,OAAQ,CAAC,EAAG+B,EAAKwiC,OAErE,MAED,IAAK,eAEJ/xB,EAAS,IAAIw/D,GAAcjwE,EAAKlD,MAAOkD,EAAK+sE,WAE5C,MAED,IAAK,mBAEJt8D,EAAS,IAAIs/D,GAAkB/vE,EAAKlD,MAAOkD,EAAK+sE,WAChDt8D,EAAOrlB,OAAS4U,EAAK5U,QAAU,GAE/B,MAED,IAAK,aAEJqlB,EAAS,IAAI8+D,GAAYvvE,EAAKlD,MAAOkD,EAAK+sE,UAAW/sE,EAAK4hB,SAAU5hB,EAAKitE,OAEzE,MAED,IAAK,gBAEJx8D,EAAS,IAAI0/D,GAAenwE,EAAKlD,MAAOkD,EAAK+sE,UAAW/sE,EAAKtO,MAAOsO,EAAKrO,QAEzE,MAED,IAAK,YAEJ8e,EAAS,IAAIo+D,GAAW7uE,EAAKlD,MAAOkD,EAAK+sE,UAAW/sE,EAAK4hB,SAAU5hB,EAAKjM,MAAOiM,EAAKktE,SAAUltE,EAAKitE,OACnGx8D,EAAOrlB,OAAS4U,EAAK5U,QAAU,GAE/B,MAED,IAAK,kBAEJqlB,EAAS,IAAI28D,GAAiBptE,EAAKlD,MAAOkD,EAAKgtE,YAAahtE,EAAK+sE,WAEjE,MAED,IAAK,aAEJt8D,GAAS,IAAIugE,IAAahxC,SAAUhgC,GAEpC,MAED,IAAK,cAEJqR,EAAW8iE,EAAan0E,EAAKqR,UAC5B+V,EAAWgtD,EAAap0E,EAAKonB,UAE9B3W,EAAS,IAAIw8B,GAAa57B,EAAU+V,QAEb78B,IAAlByV,EAAKinB,WAAyBxW,EAAOwW,SAAWjnB,EAAKinB,eACjC18B,IAApByV,EAAKknB,YAA2BzW,EAAOyW,WAAWlyB,UAAWgL,EAAKknB,iBAChD38B,IAAlByV,EAAKmnB,WAAyB1W,EAAO0W,SAAWnnB,EAAKmnB,UAE1D,MAED,IAAK,OAEJ9V,EAAW8iE,EAAan0E,EAAKqR,UAC7B+V,EAAWgtD,EAAap0E,EAAKonB,UAE7B3W,EAAS,IAAI0sB,GAAM9rB,EAAU+V,GAE7B,MAED,IAAK,gBAEJ/V,EAAW8iE,EAAan0E,EAAKqR,UAC7B+V,EAAWgtD,EAAap0E,EAAKonB,UAC7B,MAAM5gB,EAAQxG,EAAKwG,MACb0d,EAAiBlkB,EAAKkkB,eACtBC,EAAgBnkB,EAAKmkB,cAE3B1T,EAAS,IAAI8+B,GAAel+B,EAAU+V,EAAU5gB,GAChDiK,EAAOyT,eAAiB,IAAI2qB,GAA0B,IAAIxhD,aAAc62B,EAAe74B,OAAS,SACzEd,IAAlB45B,IAA8B1T,EAAO0T,cAAgB,IAAI0qB,GAA0B,IAAIxhD,aAAc82B,EAAc94B,OAAS84B,EAAc4R,WAE/I,MAED,IAAK,cAEJ1kB,EAAW8iE,EAAan0E,EAAKqR,UAC7B+V,EAAWgtD,EAAap0E,EAAKonB,UAE7B3W,EAAS,IAAImkC,GAAa50C,EAAKylB,iBAAkBzlB,EAAK2lB,eAAgB3lB,EAAK6lB,cAAeuB,GAC1F3W,EAAOY,SAAWA,EAClBZ,EAAO4T,uBAAyBrkB,EAAKqkB,uBACrC5T,EAAO6T,YAActkB,EAAKskB,YAE1B7T,EAAO+T,YAAcxkB,EAAKukB,WAC1B9T,EAAOiU,gBAAkB1kB,EAAKykB,eAE9BhU,EAAOmU,YAAc5kB,EAAK2kB,WAC1BlU,EAAOqU,QAAU9kB,EAAK6kB,OACtBpU,EAAOuU,QAAUhlB,EAAK+kB,OAAOE,KAAKC,IAEjC,MAAMtU,EAAM,IAAIjB,GAChBiB,EAAIlkB,IAAIsI,UAAWkwB,EAAME,QACzBxU,EAAIjkB,IAAIqI,UAAWkwB,EAAMG,QAEzB,MAAMhT,EAAS,IAAIgC,GAInB,OAHAhC,EAAOrD,OAASkW,EAAMK,aACtBlT,EAAO7c,OAAOR,UAAWkwB,EAAMM,cAExB,CACNL,eAAgBD,EAAMC,eACtBvU,IAAKA,EAEL0U,kBAAmBJ,EAAMI,kBACzBjT,OAAQA,EACR,IAIF5B,EAAOiV,kBAAoB1lB,EAAKylB,iBAChChV,EAAOmV,gBAAkB5lB,EAAK2lB,eAC9BlV,EAAOqV,eAAiB9lB,EAAK6lB,cAE7BpV,EAAOuV,qBAAuBhmB,EAAK+lB,oBACnCtV,EAAOyV,eAAiBlmB,EAAKimB,cAE7BxV,EAAO2V,iBAAmB+qD,EAAYnxE,EAAKmmB,gBAAgB9lB,WAC/B9V,IAAvByV,EAAKsmB,gBAA8B7V,EAAO4V,eAAiB8qD,EAAYnxE,EAAKsmB,cAAcjmB,OAE/F,MAED,IAAK,MAEJoQ,EAAS,IAAIk7B,GAEb,MAED,IAAK,OAEJl7B,EAAS,IAAIuqC,GAAMm5B,EAAan0E,EAAKqR,UAAY+iE,EAAap0E,EAAKonB,WAEnE,MAED,IAAK,WAEJ3W,EAAS,IAAIorC,GAAUs4B,EAAan0E,EAAKqR,UAAY+iE,EAAap0E,EAAKonB,WAEvE,MAED,IAAK,eAEJ3W,EAAS,IAAImrC,GAAcu4B,EAAan0E,EAAKqR,UAAY+iE,EAAap0E,EAAKonB,WAE3E,MAED,IAAK,aACL,IAAK,SAEJ3W,EAAS,IAAI2rC,GAAQ+3B,EAAan0E,EAAKqR,UAAY+iE,EAAap0E,EAAKonB,WAErE,MAED,IAAK,SAEJ3W,EAAS,IAAI06B,GAAQipC,EAAap0E,EAAKonB,WAEvC,MAED,IAAK,QAEJ3W,EAAS,IAAIq1B,GAEb,MAED,IAAK,OAEJr1B,EAAS,IAAIq9B,GAEb,MAED,QAECr9B,EAAS,IAAIkP,GA8Cf,GA1CAlP,EAAOpQ,KAAOL,EAAKK,UAEA9V,IAAdyV,EAAKnF,OAAqB4V,EAAO5V,KAAOmF,EAAKnF,WAE7BtQ,IAAhByV,EAAK3F,QAEToW,EAAOpW,OAAOrF,UAAWgL,EAAK3F,aAEC9P,IAA1ByV,EAAKuC,mBAAiCkO,EAAOlO,iBAAmBvC,EAAKuC,kBACrEkO,EAAOlO,kBAAmBkO,EAAOpW,OAAOmiB,UAAW/L,EAAOwL,SAAUxL,EAAO7G,WAAY6G,EAAO3W,cAI5EvP,IAAlByV,EAAKic,UAAyBxL,EAAOwL,SAASjnB,UAAWgL,EAAKic,eAC5C1xB,IAAlByV,EAAKrG,UAAyB8W,EAAO9W,SAAS3E,UAAWgL,EAAKrG,eAC1CpP,IAApByV,EAAK4J,YAA2B6G,EAAO7G,WAAW5U,UAAWgL,EAAK4J,iBACnDrf,IAAfyV,EAAKlG,OAAsB2W,EAAO3W,MAAM9E,UAAWgL,EAAKlG,aAI7CvP,IAAZyV,EAAKqa,IAAmB5J,EAAO4J,GAAGrlB,UAAWgL,EAAKqa,SAE9B9vB,IAApByV,EAAKygB,aAA2BhQ,EAAOgQ,WAAazgB,EAAKygB,iBAClCl2B,IAAvByV,EAAK0gB,gBAA8BjQ,EAAOiQ,cAAgB1gB,EAAK0gB,eAE/D1gB,EAAKmtE,cAEsB5iF,IAA1ByV,EAAKmtE,OAAOJ,YAA0Bt8D,EAAO08D,OAAOJ,UAAY/sE,EAAKmtE,OAAOJ,gBACvDxiF,IAArByV,EAAKmtE,OAAOQ,OAAqBl9D,EAAO08D,OAAOQ,KAAO3tE,EAAKmtE,OAAOQ,WACvCpjF,IAA3ByV,EAAKmtE,OAAOS,aAA2Bn9D,EAAO08D,OAAOS,WAAa5tE,EAAKmtE,OAAOS,iBACvDrjF,IAAvByV,EAAKmtE,OAAOn+D,SAAuByB,EAAO08D,OAAOn+D,OAAShP,EAAKmtE,OAAOn+D,aAC9CzkB,IAAxByV,EAAKmtE,OAAOW,SAAwBr9D,EAAO08D,OAAOW,QAAQ94E,UAAWgL,EAAKmtE,OAAOW,cAC1DvjF,IAAvByV,EAAKmtE,OAAOz/D,SAAuB+C,EAAO08D,OAAOz/D,OAASljB,KAAK0oF,YAAalzE,EAAKmtE,OAAOz/D,eAIxEnjB,IAAjByV,EAAKwgB,UAAwB/P,EAAO+P,QAAUxgB,EAAKwgB,cAC5Bj2B,IAAvByV,EAAK2gB,gBAA8BlQ,EAAOkQ,cAAgB3gB,EAAK2gB,oBAC1Cp2B,IAArByV,EAAK4gB,cAA4BnQ,EAAOmQ,YAAc5gB,EAAK4gB,kBACzCr2B,IAAlByV,EAAK4C,WAAyB6N,EAAO7N,SAAW5C,EAAK4C,eACrCrY,IAAhByV,EAAKye,SAAuBhO,EAAOgO,OAAON,KAAOne,EAAKye,aAEpCl0B,IAAlByV,EAAK+R,SAAyB,CAElC,MAAMA,EAAW/R,EAAK+R,SAEtB,IAAM,IAAIxmB,EAAI,EAAGA,EAAIwmB,EAAStmB,OAAQF,IAErCklB,EAAOpe,IAAK7H,KAAK0oF,YAAanhE,EAAUxmB,GAAKm4B,EAAYC,EAAWtgB,EAAUwd,GAIhF,CAEA,QAAyBt2B,IAApByV,EAAK6gB,WAA2B,CAEpC,MAAMyzD,EAAmBt0E,EAAK6gB,WAE9B,IAAM,IAAIt1B,EAAI,EAAGA,EAAI+oF,EAAiB7oF,OAAQF,IAAO,CAEpD,MAAM8U,EAAOi0E,EAAkB/oF,GAE/BklB,EAAOoQ,WAAWj2B,KAAMi2B,EAAYxgB,GAErC,CAED,CAEA,GAAmB,QAAdL,EAAK3V,KAAiB,MAEDE,IAApByV,EAAK+rC,aAA2Bt7B,EAAOs7B,WAAa/rC,EAAK+rC,YAE9D,MAAMF,EAAS7rC,EAAK6rC,OAEpB,IAAM,IAAIrgD,EAAI,EAAGA,EAAIqgD,EAAOpgD,OAAQD,IAAO,CAE1C,MAAMwgD,EAAQH,EAAQrgD,GAChBi0B,EAAQhP,EAAOiS,oBAAqB,OAAQspB,EAAMv7B,aAEzClmB,IAAVk1B,GAEJhP,EAAOw7B,SAAUxsB,EAAOusB,EAAMpqB,SAAUoqB,EAAME,WAIhD,CAED,CAEA,OAAOz7B,CAER,CAEA2iE,aAAAA,CAAe3iE,EAAQoT,GAEmB,IAApC7lB,OAAOyF,KAAMogB,GAAYp4B,QAE9BglB,EAAO0S,UAAU,SAAW1D,GAE3B,IAA6B,IAAxBA,EAAMuH,oBAA6Cz8B,IAAnBk1B,EAAM0H,SAAyB,CAEnE,MAAMA,EAAWtD,EAAWpE,EAAM0H,eAEhB58B,IAAb48B,EAEJ91B,QAAQC,KAAM,mDAAoDmuB,EAAM0H,UAIxE1H,EAAM2tB,KAAMjmB,EAAU1H,EAAMyH,WAI9B,CAED,GAED,CAEAmsD,gBAAAA,CAAkB5iE,GAEjBA,EAAO0S,UAAU,SAAW1D,GAE3B,GAAKA,EAAMuwD,oBAAsBvwD,EAAMqvD,YAAc,CAEpD,MAAMzuE,EAAOof,EAAMr0B,OAEbA,EAASqlB,EAAOiS,oBAAqB,OAAQriB,GAIlDof,EAAMr0B,YAFSb,IAAXa,EAEWA,EAIA,IAAIu0B,EAIrB,CAED,GAED,EAID,MAAMq0D,GAAkB,CACvB1yF,UAAWA,GACXC,sBAAuBA,GACvBC,sBAAuBA,GACvBC,iCAAkCA,GAClCC,iCAAkCA,GAClCC,wBAAyBA,IAGpBsyF,GAAmB,CACxBryF,eAAgBA,GAChBC,oBAAqBA,GACrBC,uBAAwBA,IAGnBoyF,GAAiB,CACtBnyF,cAAeA,GACfC,2BAA4BA,GAC5BE,0BAA2BA,GAC3BE,aAAcA,GACdC,0BAA2BA,GAC3BE,yBAA0BA,IAG3B,MAAMgyF,WAA0BxM,GAE/B36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,GAEPx9E,KAAKgqF,qBAAsB,EAEO,qBAAtBC,mBAEXpjF,QAAQC,KAAM,+DAIO,qBAAVm4E,OAEXp4E,QAAQC,KAAM,mDAIf9G,KAAKob,QAAU,CAAEnD,iBAAkB,OAEpC,CAEAiyE,UAAAA,CAAY9uE,GAIX,OAFApb,KAAKob,QAAUA,EAERpb,IAER,CAEA69E,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,QAEjBr8E,IAARuW,IAAoBA,EAAM,SAEZvW,IAAdC,KAAKu8D,OAAqBjmD,EAAMtW,KAAKu8D,KAAOjmD,GAEjDA,EAAMtW,KAAKw9E,QAAQV,WAAYxmE,GAE/B,MAAM69B,EAAQn0C,KAERy+E,EAAS3C,GAAMxM,IAAKh5D,GAE1B,QAAgBvW,IAAX0+E,EAKJ,OAHAtqC,EAAMqpC,QAAQb,UAAWrmE,GAGpBmoE,EAAOS,UAEXT,EAAOS,MAAMiL,IAEPjO,GAASA,EAAQiO,GAEtBh2C,EAAMqpC,QAAQZ,QAAStmE,EAAK,IAEzB4qE,OAAOz4E,IAEL2zE,GAAUA,EAAS3zE,EAAG,KAQ7B4I,YAAY,WAEN6qE,GAASA,EAAQuC,GAEtBtqC,EAAMqpC,QAAQZ,QAAStmE,EAExB,GAAG,GAEImoE,GAIR,MAAM2L,EAAe,CAAC,EACtBA,EAAatL,YAAqC,cAArB9+E,KAAKy9E,YAAgC,cAAgB,UAClF2M,EAAaxL,QAAU5+E,KAAK49E,cAE5B,MAAMyM,EAAUpL,MAAO3oE,EAAK8zE,GAAelL,MAAM,SAAWoL,GAE3D,OAAOA,EAAI5J,MAEZ,IAAIxB,MAAM,SAAWwB,GAEpB,OAAOuJ,kBAAmBvJ,EAAMltE,OAAOC,OAAQ0gC,EAAM/4B,QAAS,CAAEmvE,qBAAsB,SAEvF,IAAIrL,MAAM,SAAWiL,GAQpB,OANArO,GAAMj0E,IAAKyO,EAAK6zE,GAEXjO,GAASA,EAAQiO,GAEtBh2C,EAAMqpC,QAAQZ,QAAStmE,GAEhB6zE,CAER,IAAIjJ,OAAO,SAAWz4E,GAEhB2zE,GAAUA,EAAS3zE,GAExBqzE,GAAMhkD,OAAQxhB,GAEd69B,EAAMqpC,QAAQX,UAAWvmE,GACzB69B,EAAMqpC,QAAQZ,QAAStmE,EAExB,IAEAwlE,GAAMj0E,IAAKyO,EAAK+zE,GAChBl2C,EAAMqpC,QAAQb,UAAWrmE,EAE1B,EAID,IAAIk0E,GAEJ,MAAMC,GAEL,iBAAO31E,GAQN,YANkB/U,IAAbyqF,KAEJA,GAAW,IAAME,OAAOD,cAAgBC,OAAOC,qBAIzCH,EAER,CAEA,iBAAOI,CAAY3oF,GAElBuoF,GAAWvoF,CAEZ,EAID,MAAM4oF,WAAoBtN,GAEzB36E,WAAAA,CAAa46E,GAEZhmE,MAAOgmE,EAER,CAEAK,IAAAA,CAAMvnE,EAAK4lE,EAAQC,EAAYC,GAE9B,MAAMjoC,EAAQn0C,KAERk9E,EAAS,IAAIsB,GAAYx+E,KAAKw9E,SA4BpC,SAASsN,EAAariF,GAEhB2zE,EAEJA,EAAS3zE,GAIT5B,QAAQ+wB,MAAOnvB,GAIhB0rC,EAAMqpC,QAAQX,UAAWvmE,EAE1B,CAzCA4mE,EAAOmE,gBAAiB,eACxBnE,EAAOe,QAASj+E,KAAKu8D,MACrB2gB,EAAOiB,iBAAkBn+E,KAAK49E,eAC9BV,EAAOc,mBAAoBh+E,KAAK09E,iBAChCR,EAAOW,KAAMvnE,GAAK,SAAWnG,GAE5B,IAIC,MAAM46E,EAAa56E,EAAOrP,MAAO,GAEjB2pF,GAAa31E,aACrBk2E,gBAAiBD,GAAY,SAAWE,GAE/C/O,EAAQ+O,EAET,IAAI/J,MAAO4J,EAEZ,CAAE,MAAQriF,GAETqiF,EAAariF,EAEd,CAED,GAAG0zE,EAAYC,EAkBhB,EAID,MAAM8O,GAA0B,IAAIt9D,GAC9Bu9D,GAAyB,IAAIv9D,GAC7Bw9D,GAAkC,IAAIx9D,GAE5C,MAAMy9D,GAELzoF,WAAAA,GAEC5C,KAAKH,KAAO,eAEZG,KAAK43C,OAAS,EAEd53C,KAAKsrF,OAAS,KAEdtrF,KAAKurF,QAAU,IAAI7zC,GACnB13C,KAAKurF,QAAQt3D,OAAOL,OAAQ,GAC5B5zB,KAAKurF,QAAQxzE,kBAAmB,EAEhC/X,KAAKwrF,QAAU,IAAI9zC,GACnB13C,KAAKwrF,QAAQv3D,OAAOL,OAAQ,GAC5B5zB,KAAKwrF,QAAQzzE,kBAAmB,EAEhC/X,KAAK2Q,OAAS,CACbonC,MAAO,KACPJ,IAAK,KACLC,OAAQ,KACRllB,KAAM,KACNC,IAAK,KACLmlB,KAAM,KACNwzC,OAAQ,KAGV,CAEA/rE,MAAAA,CAAQ2D,GAEP,MAAM8Z,EAAQh9B,KAAK2Q,OAMnB,GAJoBqsB,EAAM+a,QAAU70B,EAAO60B,OAAS/a,EAAM2a,MAAQz0B,EAAOy0B,KACxE3a,EAAM4a,SAAW10B,EAAO00B,OAAS53C,KAAK43C,QAAU5a,EAAMtK,OAASxP,EAAOwP,MACtEsK,EAAMrK,MAAQzP,EAAOyP,KAAOqK,EAAM8a,OAAS50B,EAAO40B,MAAQ9a,EAAMsuD,SAAWtrF,KAAKsrF,OAE9D,CAElBtuD,EAAM+a,MAAQ70B,EAAO60B,MACrB/a,EAAM2a,IAAMz0B,EAAOy0B,IACnB3a,EAAM4a,OAAS10B,EAAO00B,OAAS53C,KAAK43C,OACpC5a,EAAMtK,KAAOxP,EAAOwP,KACpBsK,EAAMrK,IAAMzP,EAAOyP,IACnBqK,EAAM8a,KAAO50B,EAAO40B,KACpB9a,EAAMsuD,OAAStrF,KAAKsrF,OAKpBF,GAAkBzjF,KAAMub,EAAOtR,kBAC/B,MAAM65E,EAAazuD,EAAMsuD,OAAS,EAC5BI,EAAqBD,EAAazuD,EAAMtK,KAAOsK,EAAM+a,MACrD4zC,EAAS3uD,EAAMtK,KAAOpxB,KAAKo3C,IAAKr3C,GAAU27B,EAAM2a,IAAM,IAAU3a,EAAM8a,KAC5E,IAAI8zC,EAAMC,EAIVV,GAASziF,SAAU,KAAS+iF,EAC5BP,GAAUxiF,SAAU,IAAO+iF,EAI3BG,GAASD,EAAO3uD,EAAM4a,OAAS8zC,EAC/BG,EAAOF,EAAO3uD,EAAM4a,OAAS8zC,EAE7BN,GAAkB1iF,SAAU,GAAM,EAAIs0B,EAAMtK,MAASm5D,EAAOD,GAC5DR,GAAkB1iF,SAAU,IAAQmjF,EAAOD,IAAWC,EAAOD,GAE7D5rF,KAAKurF,QAAQ35E,iBAAiBjK,KAAMyjF,IAIpCQ,GAASD,EAAO3uD,EAAM4a,OAAS8zC,EAC/BG,EAAOF,EAAO3uD,EAAM4a,OAAS8zC,EAE7BN,GAAkB1iF,SAAU,GAAM,EAAIs0B,EAAMtK,MAASm5D,EAAOD,GAC5DR,GAAkB1iF,SAAU,IAAQmjF,EAAOD,IAAWC,EAAOD,GAE7D5rF,KAAKwrF,QAAQ55E,iBAAiBjK,KAAMyjF,GAErC,CAEAprF,KAAKurF,QAAQjoE,YAAY3b,KAAMub,EAAOI,aAAclb,SAAU+iF,IAC9DnrF,KAAKwrF,QAAQloE,YAAY3b,KAAMub,EAAOI,aAAclb,SAAU8iF,GAE/D,EAID,MAAMY,WAAoBp0C,GAEzB90C,WAAAA,GAA0B,IAAb/B,EAAKsD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEpBqT,QAEAxX,KAAK+rF,eAAgB,EAErB/rF,KAAKi6C,QAAUp5C,EACfb,KAAKQ,MAAQ,CAEd,EAID,MAAMwrF,GAELppF,WAAAA,GAAgC,IAAnBqpF,IAAS9nF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,KAAAA,UAAA,GAErBnE,KAAKisF,UAAYA,EAEjBjsF,KAAKk4E,UAAY,EACjBl4E,KAAKksF,QAAU,EACflsF,KAAKmsF,YAAc,EAEnBnsF,KAAKosF,SAAU,CAEhB,CAEAngD,KAAAA,GAECjsC,KAAKk4E,UAAYmU,KAEjBrsF,KAAKksF,QAAUlsF,KAAKk4E,UACpBl4E,KAAKmsF,YAAc,EACnBnsF,KAAKosF,SAAU,CAEhB,CAEAlpB,IAAAA,GAECljE,KAAKssF,iBACLtsF,KAAKosF,SAAU,EACfpsF,KAAKisF,WAAY,CAElB,CAEAK,cAAAA,GAGC,OADAtsF,KAAKusF,WACEvsF,KAAKmsF,WAEb,CAEAI,QAAAA,GAEC,IAAIvyB,EAAO,EAEX,GAAKh6D,KAAKisF,YAAejsF,KAAKosF,QAG7B,OADApsF,KAAKisC,QACE,EAIR,GAAKjsC,KAAKosF,QAAU,CAEnB,MAAMI,EAAUH,KAEhBryB,GAASwyB,EAAUxsF,KAAKksF,SAAY,IACpClsF,KAAKksF,QAAUM,EAEfxsF,KAAKmsF,aAAenyB,CAErB,CAEA,OAAOA,CAER,EAID,SAASqyB,KAER,OAAOI,YAAYJ,KAEpB,CAEA,MAAMK,GAA4B,IAAIzqE,GAChC0qE,GAA8B,IAAIpvE,GAClCqvE,GAAyB,IAAI3qE,GAC7B4qE,GAA+B,IAAI5qE,GAEzC,MAAM6qE,WAAsB33D,GAE3BvyB,WAAAA,GAEC4U,QAEAxX,KAAKH,KAAO,gBAEZG,KAAK6U,QAAU41E,GAAa31E,aAE5B9U,KAAK+sF,KAAO/sF,KAAK6U,QAAQm4E,aACzBhtF,KAAK+sF,KAAKxwC,QAASv8C,KAAK6U,QAAQo4E,aAEhCjtF,KAAKmvD,OAAS,KAEdnvD,KAAKktF,UAAY,EAIjBltF,KAAKmtF,OAAS,IAAInB,EAEnB,CAEAoB,QAAAA,GAEC,OAAOptF,KAAK+sF,IAEb,CAEAM,YAAAA,GAWC,OATqB,OAAhBrtF,KAAKmvD,SAETnvD,KAAK+sF,KAAKnwC,WAAY58C,KAAKmvD,QAC3BnvD,KAAKmvD,OAAOvS,WAAY58C,KAAK6U,QAAQo4E,aACrCjtF,KAAK+sF,KAAKxwC,QAASv8C,KAAK6U,QAAQo4E,aAChCjtF,KAAKmvD,OAAS,MAIRnvD,IAER,CAEAstF,SAAAA,GAEC,OAAOttF,KAAKmvD,MAEb,CAEAo+B,SAAAA,CAAWtrF,GAiBV,OAfqB,OAAhBjC,KAAKmvD,QAETnvD,KAAK+sF,KAAKnwC,WAAY58C,KAAKmvD,QAC3BnvD,KAAKmvD,OAAOvS,WAAY58C,KAAK6U,QAAQo4E,cAIrCjtF,KAAK+sF,KAAKnwC,WAAY58C,KAAK6U,QAAQo4E,aAIpCjtF,KAAKmvD,OAASltD,EACdjC,KAAK+sF,KAAKxwC,QAASv8C,KAAKmvD,QACxBnvD,KAAKmvD,OAAO5S,QAASv8C,KAAK6U,QAAQo4E,aAE3BjtF,IAER,CAEAwtF,eAAAA,GAEC,OAAOxtF,KAAK+sF,KAAKA,KAAK9qF,KAEvB,CAEAwrF,eAAAA,CAAiBxrF,GAIhB,OAFAjC,KAAK+sF,KAAKA,KAAKW,gBAAiBzrF,EAAOjC,KAAK6U,QAAQ84E,YAAa,KAE1D3tF,IAER,CAEA84B,iBAAAA,CAAmBC,GAElBvhB,MAAMshB,kBAAmBC,GAEzB,MAAMj5B,EAAWE,KAAK6U,QAAQ/U,SACxB+vB,EAAK7vB,KAAK6vB,GAQhB,GANA7vB,KAAKktF,UAAYltF,KAAKmtF,OAAOZ,WAE7BvsF,KAAKsjB,YAAY0O,UAAW06D,GAAaC,GAAeC,IAExDC,GAAejmF,IAAK,EAAG,GAAK,GAAIyb,gBAAiBsqE,IAE5C7sF,EAAS8tF,UAAY,CAIzB,MAAMzV,EAAUn4E,KAAK6U,QAAQ84E,YAAc3tF,KAAKktF,UAEhDptF,EAAS8tF,UAAUC,wBAAyBnB,GAAYlqF,EAAG21E,GAC3Dr4E,EAASguF,UAAUD,wBAAyBnB,GAAYjqF,EAAG01E,GAC3Dr4E,EAASiuF,UAAUF,wBAAyBnB,GAAYnzE,EAAG4+D,GAC3Dr4E,EAASkuF,SAASH,wBAAyBhB,GAAerqF,EAAG21E,GAC7Dr4E,EAASmuF,SAASJ,wBAAyBhB,GAAepqF,EAAG01E,GAC7Dr4E,EAASouF,SAASL,wBAAyBhB,GAAetzE,EAAG4+D,GAC7Dr4E,EAASquF,IAAIN,wBAAyBh+D,EAAGrtB,EAAG21E,GAC5Cr4E,EAASsuF,IAAIP,wBAAyBh+D,EAAGptB,EAAG01E,GAC5Cr4E,EAASuuF,IAAIR,wBAAyBh+D,EAAGtW,EAAG4+D,EAE7C,MAECr4E,EAAS8wB,YAAa87D,GAAYlqF,EAAGkqF,GAAYjqF,EAAGiqF,GAAYnzE,GAChEzZ,EAASwuF,eAAgBzB,GAAerqF,EAAGqqF,GAAepqF,EAAGoqF,GAAetzE,EAAGsW,EAAGrtB,EAAGqtB,EAAGptB,EAAGotB,EAAGtW,EAIhG,EAID,MAAMg1E,WAAcp5D,GAEnBvyB,WAAAA,CAAa9C,GAEZ0X,QAEAxX,KAAKH,KAAO,QAEZG,KAAKF,SAAWA,EAChBE,KAAK6U,QAAU/U,EAAS+U,QAExB7U,KAAK+sF,KAAO/sF,KAAK6U,QAAQm4E,aACzBhtF,KAAK+sF,KAAKxwC,QAASz8C,EAASstF,YAE5BptF,KAAKwuF,UAAW,EAEhBxuF,KAAKmQ,OAAS,KACdnQ,KAAKyuF,OAAS,EACdzuF,KAAK0uF,MAAO,EACZ1uF,KAAK2uF,UAAY,EACjB3uF,KAAK4uF,QAAU,EACf5uF,KAAKyK,OAAS,EACdzK,KAAK05E,cAAW35E,EAChBC,KAAK6uF,aAAe,EACpB7uF,KAAK8uF,WAAY,EACjB9uF,KAAK+uF,oBAAqB,EAC1B/uF,KAAK0X,OAAS,KACd1X,KAAKgvF,WAAa,QAElBhvF,KAAKivF,WAAa,EAClBjvF,KAAKkvF,UAAY,EACjBlvF,KAAKmvF,YAAa,EAElBnvF,KAAKovF,QAAU,EAEhB,CAEAC,SAAAA,GAEC,OAAOrvF,KAAK+sF,IAEb,CAEAuC,aAAAA,CAAeC,GAOd,OALAvvF,KAAK+uF,oBAAqB,EAC1B/uF,KAAKgvF,WAAa,YAClBhvF,KAAK0X,OAAS63E,EACdvvF,KAAKu8C,UAEEv8C,IAER,CAEAwvF,qBAAAA,CAAuBC,GAOtB,OALAzvF,KAAK+uF,oBAAqB,EAC1B/uF,KAAKgvF,WAAa,YAClBhvF,KAAK0X,OAAS1X,KAAK6U,QAAQ66E,yBAA0BD,GACrDzvF,KAAKu8C,UAEEv8C,IAER,CAEA2vF,oBAAAA,CAAsBC,GAOrB,OALA5vF,KAAK+uF,oBAAqB,EAC1B/uF,KAAKgvF,WAAa,kBAClBhvF,KAAK0X,OAAS1X,KAAK6U,QAAQg7E,wBAAyBD,GACpD5vF,KAAKu8C,UAEEv8C,IAER,CAEA8vF,SAAAA,CAAW7E,GAOV,OALAjrF,KAAKmQ,OAAS86E,EACdjrF,KAAKgvF,WAAa,SAEbhvF,KAAKwuF,UAAWxuF,KAAK+vF,OAEnB/vF,IAER,CAEA+vF,IAAAA,GAAkB,IAAZC,EAAK7rF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEb,IAAwB,IAAnBnE,KAAK8uF,UAGT,YADAjoF,QAAQC,KAAM,0CAKf,IAAiC,IAA5B9G,KAAK+uF,mBAGT,YADAloF,QAAQC,KAAM,oDAKf9G,KAAKivF,WAAajvF,KAAK6U,QAAQ84E,YAAcqC,EAE7C,MAAMt4E,EAAS1X,KAAK6U,QAAQo7E,qBAe5B,OAdAv4E,EAAOvH,OAASnQ,KAAKmQ,OACrBuH,EAAOg3E,KAAO1uF,KAAK0uF,KACnBh3E,EAAOi3E,UAAY3uF,KAAK2uF,UACxBj3E,EAAOk3E,QAAU5uF,KAAK4uF,QACtBl3E,EAAOw4E,QAAUlwF,KAAKmwF,QAAQvtC,KAAM5iD,MACpC0X,EAAOu0B,MAAOjsC,KAAKivF,WAAYjvF,KAAKkvF,UAAYlvF,KAAKyK,OAAQzK,KAAK05E,UAElE15E,KAAK8uF,WAAY,EAEjB9uF,KAAK0X,OAASA,EAEd1X,KAAKowF,UAAWpwF,KAAKyuF,QACrBzuF,KAAKqwF,gBAAiBrwF,KAAK6uF,cAEpB7uF,KAAKu8C,SAEb,CAEA+zC,KAAAA,GAEC,IAAiC,IAA5BtwF,KAAK+uF,mBA4BV,OArBwB,IAAnB/uF,KAAK8uF,YAIT9uF,KAAKkvF,WAAa5tF,KAAKa,IAAKnC,KAAK6U,QAAQ84E,YAAc3tF,KAAKivF,WAAY,GAAMjvF,KAAK6uF,cAEhE,IAAd7uF,KAAK0uF,OAIT1uF,KAAKkvF,UAAYlvF,KAAKkvF,WAAclvF,KAAK05E,UAAY15E,KAAKmQ,OAAOupE,WAIlE15E,KAAK0X,OAAOwrD,OACZljE,KAAK0X,OAAOw4E,QAAU,KAEtBlwF,KAAK8uF,WAAY,GAIX9uF,KA1BN6G,QAAQC,KAAM,mDA4BhB,CAEAo8D,IAAAA,GAAkB,IAAZ8sB,EAAK7rF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEb,IAAiC,IAA5BnE,KAAK+uF,mBAkBV,OAXA/uF,KAAKkvF,UAAY,EAEI,OAAhBlvF,KAAK0X,SAET1X,KAAK0X,OAAOwrD,KAAMljE,KAAK6U,QAAQ84E,YAAcqC,GAC7ChwF,KAAK0X,OAAOw4E,QAAU,MAIvBlwF,KAAK8uF,WAAY,EAEV9uF,KAhBN6G,QAAQC,KAAM,mDAkBhB,CAEAy1C,OAAAA,GAEC,GAAKv8C,KAAKovF,QAAQnuF,OAAS,EAAI,CAE9BjB,KAAK0X,OAAO6kC,QAASv8C,KAAKovF,QAAS,IAEnC,IAAM,IAAIruF,EAAI,EAAGC,EAAIhB,KAAKovF,QAAQnuF,OAAQF,EAAIC,EAAGD,IAEhDf,KAAKovF,QAASruF,EAAI,GAAIw7C,QAASv8C,KAAKovF,QAASruF,IAI9Cf,KAAKovF,QAASpvF,KAAKovF,QAAQnuF,OAAS,GAAIs7C,QAASv8C,KAAKqvF,YAEvD,MAECrvF,KAAK0X,OAAO6kC,QAASv8C,KAAKqvF,aAM3B,OAFArvF,KAAKmvF,YAAa,EAEXnvF,IAER,CAEA48C,UAAAA,GAEC,IAAyB,IAApB58C,KAAKmvF,WAAV,CAMA,GAAKnvF,KAAKovF,QAAQnuF,OAAS,EAAI,CAE9BjB,KAAK0X,OAAOklC,WAAY58C,KAAKovF,QAAS,IAEtC,IAAM,IAAIruF,EAAI,EAAGC,EAAIhB,KAAKovF,QAAQnuF,OAAQF,EAAIC,EAAGD,IAEhDf,KAAKovF,QAASruF,EAAI,GAAI67C,WAAY58C,KAAKovF,QAASruF,IAIjDf,KAAKovF,QAASpvF,KAAKovF,QAAQnuF,OAAS,GAAI27C,WAAY58C,KAAKqvF,YAE1D,MAECrvF,KAAK0X,OAAOklC,WAAY58C,KAAKqvF,aAM9B,OAFArvF,KAAKmvF,YAAa,EAEXnvF,IAtBP,CAwBD,CAEAuwF,UAAAA,GAEC,OAAOvwF,KAAKovF,OAEb,CAEAoB,UAAAA,CAAYvuF,GAgBX,OAdOA,IAAQA,EAAQ,KAEE,IAApBjC,KAAKmvF,YAETnvF,KAAK48C,aACL58C,KAAKovF,QAAUntF,EAAMnB,QACrBd,KAAKu8C,WAILv8C,KAAKovF,QAAUntF,EAAMnB,QAIfd,IAER,CAEAowF,SAAAA,CAAWnuF,GAUV,OARAjC,KAAKyuF,OAASxsF,GAEU,IAAnBjC,KAAK8uF,gBAA6C/uF,IAAvBC,KAAK0X,OAAO+2E,QAE3CzuF,KAAK0X,OAAO+2E,OAAOf,gBAAiB1tF,KAAKyuF,OAAQzuF,KAAK6U,QAAQ84E,YAAa,KAIrE3tF,IAER,CAEAywF,SAAAA,GAEC,OAAOzwF,KAAKyuF,MAEb,CAEAnB,SAAAA,GAEC,OAAOttF,KAAKuwF,aAAc,EAE3B,CAEAhD,SAAAA,CAAWp+B,GAEV,OAAOnvD,KAAKwwF,WAAYrhC,EAAS,CAAEA,GAAW,GAE/C,CAEAkhC,eAAAA,CAAiBpuF,GAEhB,IAAiC,IAA5BjC,KAAK+uF,mBAeV,OARA/uF,KAAK6uF,aAAe5sF,GAEI,IAAnBjC,KAAK8uF,WAET9uF,KAAK0X,OAAOm3E,aAAanB,gBAAiB1tF,KAAK6uF,aAAc7uF,KAAK6U,QAAQ84E,YAAa,KAIjF3tF,KAbN6G,QAAQC,KAAM,mDAehB,CAEA4pF,eAAAA,GAEC,OAAO1wF,KAAK6uF,YAEb,CAEAsB,OAAAA,GAECnwF,KAAK8uF,WAAY,EACjB9uF,KAAKkvF,UAAY,CAElB,CAEAyB,OAAAA,GAEC,OAAiC,IAA5B3wF,KAAK+uF,oBAETloF,QAAQC,KAAM,qDACP,GAID9G,KAAK0uF,IAEb,CAEAkC,OAAAA,CAAS3uF,GAER,IAAiC,IAA5BjC,KAAK+uF,mBAeV,OARA/uF,KAAK0uF,KAAOzsF,GAEY,IAAnBjC,KAAK8uF,YAET9uF,KAAK0X,OAAOg3E,KAAO1uF,KAAK0uF,MAIlB1uF,KAbN6G,QAAQC,KAAM,mDAehB,CAEA+pF,YAAAA,CAAc5uF,GAIb,OAFAjC,KAAK2uF,UAAY1sF,EAEVjC,IAER,CAEA8wF,UAAAA,CAAY7uF,GAIX,OAFAjC,KAAK4uF,QAAU3sF,EAERjC,IAER,CAEA+wF,SAAAA,GAEC,OAAO/wF,KAAK+sF,KAAKA,KAAK9qF,KAEvB,CAEA+uF,SAAAA,CAAW/uF,GAIV,OAFAjC,KAAK+sF,KAAKA,KAAKW,gBAAiBzrF,EAAOjC,KAAK6U,QAAQ84E,YAAa,KAE1D3tF,IAER,CAEA2H,IAAAA,CAAM+P,EAAQylB,GAIb,OAFA3lB,MAAM7P,KAAM+P,EAAQylB,GAEO,WAAtBzlB,EAAOs3E,YAEXnoF,QAAQC,KAAM,oDAEP9G,OAIRA,KAAKwuF,SAAW92E,EAAO82E,SAEvBxuF,KAAKmQ,OAASuH,EAAOvH,OACrBnQ,KAAKyuF,OAAS/2E,EAAO+2E,OACrBzuF,KAAK0uF,KAAOh3E,EAAOg3E,KACnB1uF,KAAK2uF,UAAYj3E,EAAOi3E,UACxB3uF,KAAK4uF,QAAUl3E,EAAOk3E,QACtB5uF,KAAKyK,OAASiN,EAAOjN,OACrBzK,KAAK05E,SAAWhiE,EAAOgiE,SACvB15E,KAAK6uF,aAAen3E,EAAOm3E,aAC3B7uF,KAAK+uF,mBAAqBr3E,EAAOq3E,mBACjC/uF,KAAKgvF,WAAat3E,EAAOs3E,WAEzBhvF,KAAKovF,QAAU13E,EAAO03E,QAAQtuF,QAEvBd,KAER,CAEA0H,KAAAA,CAAOy1B,GAEN,OAAO,IAAIn9B,KAAK4C,YAAa5C,KAAKF,UAAW6H,KAAM3H,KAAMm9B,EAE1D,EAID,MAAM8zD,GAA0B,IAAIhvE,GAC9BivE,GAA4B,IAAI3zE,GAChC4zE,GAAuB,IAAIlvE,GAC3BmvE,GAA6B,IAAInvE,GAEvC,MAAMovE,WAAwB9C,GAE7B3rF,WAAAA,CAAa9C,GAEZ0X,MAAO1X,GAEPE,KAAKsxF,OAAStxF,KAAK6U,QAAQ08E,eAC3BvxF,KAAKsxF,OAAOE,aAAe,OAC3BxxF,KAAKsxF,OAAO/0C,QAASv8C,KAAK+sF,KAE3B,CAEAxwC,OAAAA,GAEC/kC,MAAM+kC,UAENv8C,KAAKsxF,OAAO/0C,QAASv8C,KAAK+sF,KAE3B,CAEAnwC,UAAAA,GAECplC,MAAMolC,aAEN58C,KAAKsxF,OAAO10C,WAAY58C,KAAK+sF,KAE9B,CAEAsC,SAAAA,GAEC,OAAOrvF,KAAKsxF,MAEb,CAEAG,cAAAA,GAEC,OAAOzxF,KAAKsxF,OAAOI,WAEpB,CAEAC,cAAAA,CAAgB1vF,GAIf,OAFAjC,KAAKsxF,OAAOI,YAAczvF,EAEnBjC,IAER,CAEA4xF,gBAAAA,GAEC,OAAO5xF,KAAKsxF,OAAOO,aAEpB,CAEAC,gBAAAA,CAAkB7vF,GAIjB,OAFAjC,KAAKsxF,OAAOO,cAAgB5vF,EAErBjC,IAER,CAEA+xF,gBAAAA,GAEC,OAAO/xF,KAAKsxF,OAAOU,aAEpB,CAEAC,gBAAAA,CAAkBhwF,GAIjB,OAFAjC,KAAKsxF,OAAOU,cAAgB/vF,EAErBjC,IAER,CAEAkyF,cAAAA,GAEC,OAAOlyF,KAAKsxF,OAAOa,WAEpB,CAEAC,cAAAA,CAAgBnwF,GAIf,OAFAjC,KAAKsxF,OAAOa,YAAclwF,EAEnBjC,IAER,CAEAqyF,kBAAAA,CAAoBC,EAAgBC,EAAgBC,GAMnD,OAJAxyF,KAAKsxF,OAAOgB,eAAiBA,EAC7BtyF,KAAKsxF,OAAOiB,eAAiBA,EAC7BvyF,KAAKsxF,OAAOkB,cAAgBA,EAErBxyF,IAER,CAEA84B,iBAAAA,CAAmBC,GAIlB,GAFAvhB,MAAMshB,kBAAmBC,IAEQ,IAA5B/4B,KAAK+uF,qBAAkD,IAAnB/uF,KAAK8uF,UAAsB,OAEpE9uF,KAAKsjB,YAAY0O,UAAWi/D,GAAWC,GAAaC,IAEpDC,GAAaxqF,IAAK,EAAG,EAAG,GAAIyb,gBAAiB6uE,IAE7C,MAAMI,EAAStxF,KAAKsxF,OAEpB,GAAKA,EAAO1D,UAAY,CAIvB,MAAMzV,EAAUn4E,KAAK6U,QAAQ84E,YAAc3tF,KAAKF,SAASotF,UAEzDoE,EAAO1D,UAAUC,wBAAyBoD,GAAUzuF,EAAG21E,GACvDmZ,EAAOxD,UAAUD,wBAAyBoD,GAAUxuF,EAAG01E,GACvDmZ,EAAOvD,UAAUF,wBAAyBoD,GAAU13E,EAAG4+D,GACvDmZ,EAAOmB,aAAa5E,wBAAyBuD,GAAa5uF,EAAG21E,GAC7DmZ,EAAOoB,aAAa7E,wBAAyBuD,GAAa3uF,EAAG01E,GAC7DmZ,EAAOqB,aAAa9E,wBAAyBuD,GAAa73E,EAAG4+D,EAE9D,MAECmZ,EAAO1gE,YAAaqgE,GAAUzuF,EAAGyuF,GAAUxuF,EAAGwuF,GAAU13E,GACxD+3E,EAAOhD,eAAgB8C,GAAa5uF,EAAG4uF,GAAa3uF,EAAG2uF,GAAa73E,EAItE,EAID,MAAMq5E,GAELhwF,WAAAA,CAAaiwF,GAAwB,IAAjBC,EAAO3uF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAE7BnE,KAAK+yF,SAAWF,EAAMh+E,QAAQm+E,iBAC9BhzF,KAAK+yF,SAASD,QAAUA,EAExB9yF,KAAKwV,KAAO,IAAIxS,WAAYhD,KAAK+yF,SAASE,mBAE1CJ,EAAMxD,YAAY9yC,QAASv8C,KAAK+yF,SAEjC,CAGAG,gBAAAA,GAIC,OAFAlzF,KAAK+yF,SAASI,qBAAsBnzF,KAAKwV,MAElCxV,KAAKwV,IAEb,CAEA49E,mBAAAA,GAEC,IAAInxF,EAAQ,EACZ,MAAMuT,EAAOxV,KAAKkzF,mBAElB,IAAM,IAAInyF,EAAI,EAAGA,EAAIyU,EAAKvU,OAAQF,IAEjCkB,GAASuT,EAAMzU,GAIhB,OAAOkB,EAAQuT,EAAKvU,MAErB,EAID,MAAMoyF,GAELzwF,WAAAA,CAAa0wF,EAAS1X,EAAUpJ,GAK/B,IAAI+gB,EACHC,EACAC,EAkBD,OAvBAzzF,KAAKszF,QAAUA,EACftzF,KAAKwyE,UAAYA,EAsBRoJ,GAER,IAAK,aACJ2X,EAAcvzF,KAAK0zF,OACnBF,EAAsBxzF,KAAK2zF,eAC3BF,EAAczzF,KAAK4zF,+BAEnB5zF,KAAKmQ,OAAS,IAAIF,aAA0B,EAAZuiE,GAChCxyE,KAAK6zF,WAAa,EAClB,MAED,IAAK,SACL,IAAK,OACJN,EAAcvzF,KAAK8zF,QAInBN,EAAsBxzF,KAAK8zF,QAE3BL,EAAczzF,KAAK+zF,0BAEnB/zF,KAAKmQ,OAAS,IAAIoG,MAAmB,EAAZi8D,GACzB,MAED,QACC+gB,EAAcvzF,KAAKg0F,MACnBR,EAAsBxzF,KAAKi0F,cAC3BR,EAAczzF,KAAKk0F,4BAEnBl0F,KAAKmQ,OAAS,IAAIF,aAA0B,EAAZuiE,GAIlCxyE,KAAKm0F,iBAAmBZ,EACxBvzF,KAAKo0F,yBAA2BZ,EAChCxzF,KAAKq0F,aAAeZ,EACpBzzF,KAAKs0F,WAAa,EAClBt0F,KAAKu0F,UAAY,EAEjBv0F,KAAKw0F,iBAAmB,EACxBx0F,KAAKy0F,yBAA2B,EAEhCz0F,KAAK00F,SAAW,EAChB10F,KAAK20F,eAAiB,CAEvB,CAGAC,UAAAA,CAAYC,EAAW3xC,GAKtB,MAAM/yC,EAASnQ,KAAKmQ,OACnBuhC,EAAS1xC,KAAKwyE,UACd/nE,EAASoqF,EAAYnjD,EAASA,EAE/B,IAAIojD,EAAgB90F,KAAKw0F,iBAEzB,GAAuB,IAAlBM,EAAsB,CAI1B,IAAM,IAAI/zF,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAEjCoP,EAAQ1F,EAAS1J,GAAMoP,EAAQpP,GAIhC+zF,EAAgB5xC,CAEjB,KAAO,CAIN4xC,GAAiB5xC,EACjB,MAAM6xC,EAAM7xC,EAAS4xC,EACrB90F,KAAKm0F,iBAAkBhkF,EAAQ1F,EAAQ,EAAGsqF,EAAKrjD,EAEhD,CAEA1xC,KAAKw0F,iBAAmBM,CAEzB,CAGAE,kBAAAA,CAAoB9xC,GAEnB,MAAM/yC,EAASnQ,KAAKmQ,OACnBuhC,EAAS1xC,KAAKwyE,UACd/nE,EAASinC,EAAS1xC,KAAKu0F,UAEe,IAAlCv0F,KAAKy0F,0BAITz0F,KAAKq0F,eAMNr0F,KAAKo0F,yBAA0BjkF,EAAQ1F,EAAQ,EAAGy4C,EAAQxR,GAC1D1xC,KAAKy0F,0BAA4BvxC,CAElC,CAGA4uB,KAAAA,CAAO+iB,GAEN,MAAMnjD,EAAS1xC,KAAKwyE,UACnBriE,EAASnQ,KAAKmQ,OACd1F,EAASoqF,EAAYnjD,EAASA,EAE9BwR,EAASljD,KAAKw0F,iBACdS,EAAiBj1F,KAAKy0F,yBAEtBnB,EAAUtzF,KAAKszF,QAKhB,GAHAtzF,KAAKw0F,iBAAmB,EACxBx0F,KAAKy0F,yBAA2B,EAE3BvxC,EAAS,EAAI,CAIjB,MAAMgyC,EAAsBxjD,EAAS1xC,KAAKs0F,WAE1Ct0F,KAAKm0F,iBACJhkF,EAAQ1F,EAAQyqF,EAAqB,EAAIhyC,EAAQxR,EAEnD,CAEKujD,EAAiB,GAIrBj1F,KAAKo0F,yBAA0BjkF,EAAQ1F,EAAQzK,KAAKu0F,UAAY7iD,EAAQ,EAAGA,GAI5E,IAAM,IAAI3wC,EAAI2wC,EAAQjpC,EAAIipC,EAASA,EAAQ3wC,IAAM0H,IAAM1H,EAEtD,GAAKoP,EAAQpP,KAAQoP,EAAQpP,EAAI2wC,GAAW,CAI3C4hD,EAAQ6B,SAAUhlF,EAAQ1F,GAC1B,KAED,CAIF,CAGA2qF,iBAAAA,GAEC,MAAM9B,EAAUtzF,KAAKszF,QAEfnjF,EAASnQ,KAAKmQ,OACnBuhC,EAAS1xC,KAAKwyE,UAEd0iB,EAAsBxjD,EAAS1xC,KAAKs0F,WAErChB,EAAQ+B,SAAUllF,EAAQ+kF,GAG1B,IAAM,IAAIn0F,EAAI2wC,EAAQjpC,EAAIysF,EAAqBn0F,IAAM0H,IAAM1H,EAE1DoP,EAAQpP,GAAMoP,EAAQ+kF,EAAwBn0F,EAAI2wC,GAKnD1xC,KAAKq0F,eAELr0F,KAAKw0F,iBAAmB,EACxBx0F,KAAKy0F,yBAA2B,CAEjC,CAGAa,oBAAAA,GAEC,MAAMJ,EAAuC,EAAjBl1F,KAAKwyE,UACjCxyE,KAAKszF,QAAQ6B,SAAUn1F,KAAKmQ,OAAQ+kF,EAErC,CAEAhB,2BAAAA,GAEC,MAAMpgB,EAAa9zE,KAAKu0F,UAAYv0F,KAAKwyE,UACnCuB,EAAWD,EAAa9zE,KAAKwyE,UAEnC,IAAM,IAAIzxE,EAAI+yE,EAAY/yE,EAAIgzE,EAAUhzE,IAEvCf,KAAKmQ,OAAQpP,GAAM,CAIrB,CAEA6yF,8BAAAA,GAEC5zF,KAAKk0F,8BACLl0F,KAAKmQ,OAAQnQ,KAAKu0F,UAAYv0F,KAAKwyE,UAAY,GAAM,CAEtD,CAEAuhB,yBAAAA,GAEC,MAAMjgB,EAAa9zE,KAAKs0F,WAAat0F,KAAKwyE,UACpC+iB,EAAcv1F,KAAKu0F,UAAYv0F,KAAKwyE,UAE1C,IAAM,IAAIzxE,EAAI,EAAGA,EAAIf,KAAKwyE,UAAWzxE,IAEpCf,KAAKmQ,OAAQolF,EAAcx0F,GAAMf,KAAKmQ,OAAQ2jE,EAAa/yE,EAI7D,CAKA+yF,OAAAA,CAAS3jF,EAAQ4N,EAAW0zD,EAAW/uE,EAAGgvC,GAEzC,GAAKhvC,GAAK,GAET,IAAM,IAAI3B,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAEjCoP,EAAQ4N,EAAYhd,GAAMoP,EAAQshE,EAAY1wE,EAMjD,CAEA2yF,MAAAA,CAAQvjF,EAAQ4N,EAAW0zD,EAAW/uE,GAErC6a,GAAWM,UAAW1N,EAAQ4N,EAAW5N,EAAQ4N,EAAW5N,EAAQshE,EAAW/uE,EAEhF,CAEAixF,cAAAA,CAAgBxjF,EAAQ4N,EAAW0zD,EAAW/uE,EAAGgvC,GAEhD,MAAM8jD,EAAax1F,KAAK6zF,WAAaniD,EAGrCn0B,GAAW2B,wBAAyB/O,EAAQqlF,EAAYrlF,EAAQ4N,EAAW5N,EAAQshE,GAGnFl0D,GAAWM,UAAW1N,EAAQ4N,EAAW5N,EAAQ4N,EAAW5N,EAAQqlF,EAAY9yF,EAEjF,CAEAsxF,KAAAA,CAAO7jF,EAAQ4N,EAAW0zD,EAAW/uE,EAAGgvC,GAEvC,MAAM3sC,EAAI,EAAIrC,EAEd,IAAM,IAAI3B,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAAI,CAErC,MAAMuoB,EAAIvL,EAAYhd,EAEtBoP,EAAQmZ,GAAMnZ,EAAQmZ,GAAMvkB,EAAIoL,EAAQshE,EAAY1wE,GAAM2B,CAE3D,CAED,CAEAuxF,aAAAA,CAAe9jF,EAAQ4N,EAAW0zD,EAAW/uE,EAAGgvC,GAE/C,IAAM,IAAI3wC,EAAI,EAAGA,IAAM2wC,IAAW3wC,EAAI,CAErC,MAAMuoB,EAAIvL,EAAYhd,EAEtBoP,EAAQmZ,GAAMnZ,EAAQmZ,GAAMnZ,EAAQshE,EAAY1wE,GAAM2B,CAEvD,CAED,EAKD,MAAM+yF,GAAqB,gBACrBC,GAAc,IAAIC,OAAQ,IAAMF,GAAqB,IAAK,KAK1DG,GAAY,KAAOH,GAAqB,IACxCI,GAAiB,KAAOJ,GAAmBnO,QAAS,MAAO,IAAO,IAiBlEwO,GAAW,IAAIH,OAClB,IAdgC,kBAAkBj+E,OAAO4vE,QAAS,KAAMsO,IAG7C,WAAWl+E,OAAO4vE,QAAS,OAAQuO,IAIjC,4BAA4Bn+E,OAAO4vE,QAAS,KAAMsO,IAIhD,uBAAuBl+E,OAAO4vE,QAAS,KAAMsO,IAQ5E,KAGGG,GAAwB,CAAE,WAAY,YAAa,QAAS,OAoElE,MAAMC,GAELpzF,WAAAA,CAAaqzF,EAAU15B,EAAM25B,GAE5Bl2F,KAAKu8D,KAAOA,EACZv8D,KAAKk2F,WAAaA,GAAcF,GAAgBG,eAAgB55B,GAEhEv8D,KAAKo2F,KAAOJ,GAAgBK,SAAUJ,EAAUj2F,KAAKk2F,WAAWI,UAEhEt2F,KAAKi2F,SAAWA,EAGhBj2F,KAAKq1F,SAAWr1F,KAAKu2F,kBACrBv2F,KAAKm1F,SAAWn1F,KAAKw2F,iBAEtB,CAGA,aAAOC,CAAQC,EAAMn6B,EAAM25B,GAE1B,OAASQ,GAAQA,EAAKC,uBAMd,IAAIX,GAAgBY,UAAWF,EAAMn6B,EAAM25B,GAJ3C,IAAIF,GAAiBU,EAAMn6B,EAAM25B,EAQ1C,CASA,uBAAOW,CAAkBxmF,GAExB,OAAOA,EAAKi3E,QAAS,MAAO,KAAMA,QAASoO,GAAa,GAEzD,CAEA,qBAAOS,CAAgBlb,GAEtB,MAAM6b,EAAUhB,GAAS90D,KAAMi6C,GAE/B,GAAiB,OAAZ6b,EAEJ,MAAM,IAAI1zF,MAAO,4CAA8C63E,GAIhE,MAAM8b,EAAU,CAEfT,SAAUQ,EAAS,GACnBE,WAAYF,EAAS,GACrBG,YAAaH,EAAS,GACtB3b,aAAc2b,EAAS,GACvBI,cAAeJ,EAAS,IAGnBK,EAAUJ,EAAQT,UAAYS,EAAQT,SAASjP,YAAa,KAElE,QAAiBtnF,IAAZo3F,IAAuC,IAAdA,EAAkB,CAE/C,MAAMH,EAAaD,EAAQT,SAASc,UAAWD,EAAU,IAMF,IAAlDpB,GAAsB51F,QAAS62F,KAEnCD,EAAQT,SAAWS,EAAQT,SAASc,UAAW,EAAGD,GAClDJ,EAAQC,WAAaA,EAIvB,CAEA,GAA8B,OAAzBD,EAAQ5b,cAAyD,IAAhC4b,EAAQ5b,aAAal6E,OAE1D,MAAM,IAAImC,MAAO,+DAAiE63E,GAInF,OAAO8b,CAER,CAEA,eAAOV,CAAUK,EAAMJ,GAEtB,QAAkBv2F,IAAbu2F,GAAuC,KAAbA,GAAgC,MAAbA,IAAmC,IAAfA,GAAoBA,IAAaI,EAAKrmF,MAAQimF,IAAaI,EAAK7gF,KAErI,OAAO6gF,EAKR,GAAKA,EAAK/5D,SAAW,CAEpB,MAAMqnB,EAAO0yC,EAAK/5D,SAASunB,cAAeoyC,GAE1C,QAAcv2F,IAATikD,EAEJ,OAAOA,CAIT,CAGA,GAAK0yC,EAAKnvE,SAAW,CAEpB,MAAM8vE,EAAoB,SAAW9vE,GAEpC,IAAM,IAAIxmB,EAAI,EAAGA,EAAIwmB,EAAStmB,OAAQF,IAAO,CAE5C,MAAMu2F,EAAY/vE,EAAUxmB,GAE5B,GAAKu2F,EAAUjnF,OAASimF,GAAYgB,EAAUzhF,OAASygF,EAEtD,OAAOgB,EAIR,MAAMj/D,EAASg/D,EAAmBC,EAAU/vE,UAE5C,GAAK8Q,EAAS,OAAOA,CAEtB,CAEA,OAAO,IAER,EAEMk/D,EAAcF,EAAmBX,EAAKnvE,UAE5C,GAAKgwE,EAEJ,OAAOA,CAIT,CAEA,OAAO,IAER,CAGAC,qBAAAA,GAAyB,CACzBC,qBAAAA,GAAyB,CAIzBC,gBAAAA,CAAkBvnF,EAAQ1F,GAEzB0F,EAAQ1F,GAAWzK,KAAK23F,aAAc33F,KAAKm7E,aAE5C,CAEAyc,eAAAA,CAAiBznF,EAAQ1F,GAExB,MAAMiN,EAAS1X,KAAK63F,iBAEpB,IAAM,IAAI92F,EAAI,EAAGsB,EAAIqV,EAAOzW,OAAQF,IAAMsB,IAAMtB,EAE/CoP,EAAQ1F,KAAciN,EAAQ3W,EAIhC,CAEA+2F,sBAAAA,CAAwB3nF,EAAQ1F,GAE/B0F,EAAQ1F,GAAWzK,KAAK63F,iBAAkB73F,KAAKk3F,cAEhD,CAEAa,iBAAAA,CAAmB5nF,EAAQ1F,GAE1BzK,KAAK63F,iBAAiBntF,QAASyF,EAAQ1F,EAExC,CAIAutF,gBAAAA,CAAkB7nF,EAAQ1F,GAEzBzK,KAAK23F,aAAc33F,KAAKm7E,cAAiBhrE,EAAQ1F,EAElD,CAEAwtF,+BAAAA,CAAiC9nF,EAAQ1F,GAExCzK,KAAK23F,aAAc33F,KAAKm7E,cAAiBhrE,EAAQ1F,GACjDzK,KAAK23F,aAAa3hF,aAAc,CAEjC,CAEAkiF,0CAAAA,CAA4C/nF,EAAQ1F,GAEnDzK,KAAK23F,aAAc33F,KAAKm7E,cAAiBhrE,EAAQ1F,GACjDzK,KAAK23F,aAAa5hE,wBAAyB,CAE5C,CAIAoiE,eAAAA,CAAiBhoF,EAAQ1F,GAExB,MAAM2tF,EAAOp4F,KAAK63F,iBAElB,IAAM,IAAI92F,EAAI,EAAGsB,EAAI+1F,EAAKn3F,OAAQF,IAAMsB,IAAMtB,EAE7Cq3F,EAAMr3F,GAAMoP,EAAQ1F,IAItB,CAEA4tF,8BAAAA,CAAgCloF,EAAQ1F,GAEvC,MAAM2tF,EAAOp4F,KAAK63F,iBAElB,IAAM,IAAI92F,EAAI,EAAGsB,EAAI+1F,EAAKn3F,OAAQF,IAAMsB,IAAMtB,EAE7Cq3F,EAAMr3F,GAAMoP,EAAQ1F,KAIrBzK,KAAK23F,aAAa3hF,aAAc,CAEjC,CAEAsiF,yCAAAA,CAA2CnoF,EAAQ1F,GAElD,MAAM2tF,EAAOp4F,KAAK63F,iBAElB,IAAM,IAAI92F,EAAI,EAAGsB,EAAI+1F,EAAKn3F,OAAQF,IAAMsB,IAAMtB,EAE7Cq3F,EAAMr3F,GAAMoP,EAAQ1F,KAIrBzK,KAAK23F,aAAa5hE,wBAAyB,CAE5C,CAIAwiE,sBAAAA,CAAwBpoF,EAAQ1F,GAE/BzK,KAAK63F,iBAAkB73F,KAAKk3F,eAAkB/mF,EAAQ1F,EAEvD,CAEA+tF,qCAAAA,CAAuCroF,EAAQ1F,GAE9CzK,KAAK63F,iBAAkB73F,KAAKk3F,eAAkB/mF,EAAQ1F,GACtDzK,KAAK23F,aAAa3hF,aAAc,CAEjC,CAEAyiF,gDAAAA,CAAkDtoF,EAAQ1F,GAEzDzK,KAAK63F,iBAAkB73F,KAAKk3F,eAAkB/mF,EAAQ1F,GACtDzK,KAAK23F,aAAa5hE,wBAAyB,CAE5C,CAIA2iE,mBAAAA,CAAqBvoF,EAAQ1F,GAE5BzK,KAAK63F,iBAAiBrtF,UAAW2F,EAAQ1F,EAE1C,CAEAkuF,kCAAAA,CAAoCxoF,EAAQ1F,GAE3CzK,KAAK63F,iBAAiBrtF,UAAW2F,EAAQ1F,GACzCzK,KAAK23F,aAAa3hF,aAAc,CAEjC,CAEA4iF,6CAAAA,CAA+CzoF,EAAQ1F,GAEtDzK,KAAK63F,iBAAiBrtF,UAAW2F,EAAQ1F,GACzCzK,KAAK23F,aAAa5hE,wBAAyB,CAE5C,CAEAwgE,iBAAAA,CAAmBsC,EAAapuF,GAE/BzK,KAAK4iD,OACL5iD,KAAKq1F,SAAUwD,EAAapuF,EAE7B,CAEA+rF,iBAAAA,CAAmBsC,EAAaruF,GAE/BzK,KAAK4iD,OACL5iD,KAAKm1F,SAAU2D,EAAaruF,EAE7B,CAGAm4C,IAAAA,GAEC,IAAI+0C,EAAe33F,KAAKo2F,KACxB,MAAMF,EAAal2F,KAAKk2F,WAElBc,EAAad,EAAWc,WACxB7b,EAAe+a,EAAW/a,aAChC,IAAI+b,EAAgBhB,EAAWgB,cAe/B,GAbOS,IAENA,EAAe3B,GAAgBK,SAAUr2F,KAAKi2F,SAAUC,EAAWI,UAEnEt2F,KAAKo2F,KAAOuB,GAKb33F,KAAKq1F,SAAWr1F,KAAKw3F,sBACrBx3F,KAAKm1F,SAAWn1F,KAAKy3F,uBAGdE,EAGN,YADA9wF,QAAQC,KAAM,0DAA4D9G,KAAKu8D,KAAO,KAKvF,GAAKy6B,EAAa,CAEjB,IAAIC,EAAcf,EAAWe,YAG7B,OAASD,GAER,IAAK,YAEJ,IAAOW,EAAa/6D,SAGnB,YADA/1B,QAAQ+wB,MAAO,oFAAqF53B,MAKrG,IAAO23F,EAAa/6D,SAASzD,UAG5B,YADAtyB,QAAQ+wB,MAAO,8GAA+G53B,MAK/H23F,EAAeA,EAAa/6D,SAASzD,UAErC,MAED,IAAK,QAEJ,IAAOw+D,EAAah7D,SAGnB,YADA91B,QAAQ+wB,MAAO,iFAAkF53B,MAQlG23F,EAAeA,EAAah7D,SAASymB,MAGrC,IAAM,IAAIriD,EAAI,EAAGA,EAAI42F,EAAa12F,OAAQF,IAEzC,GAAK42F,EAAc52F,GAAIsP,OAAS4mF,EAAc,CAE7CA,EAAcl2F,EACd,KAED,CAID,MAED,IAAK,MAEJ,GAAK,QAAS42F,EAAe,CAE5BA,EAAeA,EAAal9D,IAC5B,KAED,CAEA,IAAOk9D,EAAa/6D,SAGnB,YADA/1B,QAAQ+wB,MAAO,oFAAqF53B,MAKrG,IAAO23F,EAAa/6D,SAASnC,IAG5B,YADA5zB,QAAQ+wB,MAAO,4FAA6F53B,MAK7G23F,EAAeA,EAAa/6D,SAASnC,IACrC,MAED,QAEC,QAAoC16B,IAA/B43F,EAAcX,GAGlB,YADAnwF,QAAQ+wB,MAAO,uEAAwE53B,MAKxF23F,EAAeA,EAAcX,GAK/B,QAAqBj3F,IAAhBk3F,EAA4B,CAEhC,QAAqCl3F,IAAhC43F,EAAcV,GAGlB,YADApwF,QAAQ+wB,MAAO,wFAAyF53B,KAAM23F,GAK/GA,EAAeA,EAAcV,EAE9B,CAED,CAGA,MAAM8B,EAAepB,EAAcxc,GAEnC,QAAsBp7E,IAAjBg5F,EAA6B,CAEjC,MAAMzC,EAAWJ,EAAWI,SAI5B,YAFAzvF,QAAQ+wB,MAAO,+DAAiE0+D,EAC/E,IAAMnb,EAAe,wBAA0Bwc,EAGjD,CAGA,IAAIqB,EAAah5F,KAAKi5F,WAAWC,KAEjCl5F,KAAK23F,aAAeA,GAEa,IAA5BA,EAAa90D,WAEjBm2D,EAAah5F,KAAKi5F,WAAWE,aAEU,IAA5BxB,EAAaviE,aAExB4jE,EAAah5F,KAAKi5F,WAAWG,wBAK9B,IAAIC,EAAcr5F,KAAKs5F,YAAYC,OAEnC,QAAuBx5F,IAAlBm3F,EAA8B,CAIlC,GAAsB,0BAAjB/b,EAA2C,CAK/C,IAAOwc,EAAa9wE,SAGnB,YADAhgB,QAAQ+wB,MAAO,sGAAuG53B,MAKvH,IAAO23F,EAAa9wE,SAASonB,gBAG5B,YADApnC,QAAQ+wB,MAAO,sHAAuH53B,WAK1ED,IAAxD43F,EAAa7kD,sBAAuBokD,KAExCA,EAAgBS,EAAa7kD,sBAAuBokD,GAItD,CAEAmC,EAAcr5F,KAAKs5F,YAAYE,aAE/Bx5F,KAAK63F,iBAAmBkB,EACxB/4F,KAAKk3F,cAAgBA,CAEtB,WAAuCn3F,IAA3Bg5F,EAAavuF,gBAAoDzK,IAAzBg5F,EAAaruF,SAIhE2uF,EAAcr5F,KAAKs5F,YAAYG,eAE/Bz5F,KAAK63F,iBAAmBkB,GAEbxiF,MAAMC,QAASuiF,IAE1BM,EAAcr5F,KAAKs5F,YAAYI,YAE/B15F,KAAK63F,iBAAmBkB,GAIxB/4F,KAAKm7E,aAAeA,EAKrBn7E,KAAKq1F,SAAWr1F,KAAK25F,oBAAqBN,GAC1Cr5F,KAAKm1F,SAAWn1F,KAAK45F,iCAAkCP,GAAeL,EAEvE,CAEAa,MAAAA,GAEC75F,KAAKo2F,KAAO,KAIZp2F,KAAKq1F,SAAWr1F,KAAKu2F,kBACrBv2F,KAAKm1F,SAAWn1F,KAAKw2F,iBAEtB,EAIDR,GAAgBY,UA/mBhB,MAECh0F,WAAAA,CAAak3F,EAAav9B,EAAMw9B,GAE/B,MAAM7D,EAAa6D,GAAsB/D,GAAgBG,eAAgB55B,GAEzEv8D,KAAKg6F,aAAeF,EACpB95F,KAAKi6F,UAAYH,EAAYI,WAAY39B,EAAM25B,EAEhD,CAEAb,QAAAA,CAAUx0F,EAAO4J,GAEhBzK,KAAK4iD,OAEL,MAAMu3C,EAAkBn6F,KAAKg6F,aAAaI,gBACzC9G,EAAUtzF,KAAKi6F,UAAWE,QAGVp6F,IAAZuzF,GAAwBA,EAAQ+B,SAAUx0F,EAAO4J,EAEvD,CAEA0qF,QAAAA,CAAUt0F,EAAO4J,GAEhB,MAAM4vF,EAAWr6F,KAAKi6F,UAEtB,IAAM,IAAIl5F,EAAIf,KAAKg6F,aAAaI,gBAAiB/3F,EAAIg4F,EAASp5F,OAAQF,IAAMsB,IAAMtB,EAEjFs5F,EAAUt5F,GAAIo0F,SAAUt0F,EAAO4J,EAIjC,CAEAm4C,IAAAA,GAEC,MAAMy3C,EAAWr6F,KAAKi6F,UAEtB,IAAM,IAAIl5F,EAAIf,KAAKg6F,aAAaI,gBAAiB/3F,EAAIg4F,EAASp5F,OAAQF,IAAMsB,IAAMtB,EAEjFs5F,EAAUt5F,GAAI6hD,MAIhB,CAEAi3C,MAAAA,GAEC,MAAMQ,EAAWr6F,KAAKi6F,UAEtB,IAAM,IAAIl5F,EAAIf,KAAKg6F,aAAaI,gBAAiB/3F,EAAIg4F,EAASp5F,OAAQF,IAAMsB,IAAMtB,EAEjFs5F,EAAUt5F,GAAI84F,QAIhB,GAwjBD7D,GAAgBhvF,UAAUsyF,YAAc,CACvCC,OAAQ,EACRG,YAAa,EACbF,aAAc,EACdC,eAAgB,GAGjBzD,GAAgBhvF,UAAUiyF,WAAa,CACtCC,KAAM,EACNC,YAAa,EACbC,uBAAwB,GAGzBpD,GAAgBhvF,UAAU2yF,oBAAsB,CAE/C3D,GAAgBhvF,UAAU0wF,iBAC1B1B,GAAgBhvF,UAAU4wF,gBAC1B5B,GAAgBhvF,UAAU8wF,uBAC1B9B,GAAgBhvF,UAAU+wF,mBAI3B/B,GAAgBhvF,UAAU4yF,iCAAmC,CAE5D,CAEC5D,GAAgBhvF,UAAUgxF,iBAC1BhC,GAAgBhvF,UAAUixF,gCAC1BjC,GAAgBhvF,UAAUkxF,4CAExB,CAIFlC,GAAgBhvF,UAAUmxF,gBAC1BnC,GAAgBhvF,UAAUqxF,+BAC1BrC,GAAgBhvF,UAAUsxF,2CAExB,CAGFtC,GAAgBhvF,UAAUuxF,uBAC1BvC,GAAgBhvF,UAAUwxF,sCAC1BxC,GAAgBhvF,UAAUyxF,kDAExB,CAGFzC,GAAgBhvF,UAAU0xF,oBAC1B1C,GAAgBhvF,UAAU2xF,mCAC1B3C,GAAgBhvF,UAAU4xF,gDAmC5B,MAAM0B,GAEL13F,WAAAA,GAEC5C,KAAK22F,wBAAyB,EAE9B32F,KAAK6V,KAAOpU,KAGZzB,KAAKu6F,SAAWhkF,MAAMvP,UAAUlG,MAAMI,KAAMiD,WAE5CnE,KAAKo6F,gBAAkB,EAGvB,MAAM7oD,EAAU,CAAC,EACjBvxC,KAAKw6F,eAAiBjpD,EAEtB,IAAM,IAAIxwC,EAAI,EAAGsB,EAAI8B,UAAUlD,OAAQF,IAAMsB,IAAMtB,EAElDwwC,EAASptC,UAAWpD,GAAI8U,MAAS9U,EAIlCf,KAAKy6F,OAAS,GACdz6F,KAAK06F,aAAe,GACpB16F,KAAKi6F,UAAY,GACjBj6F,KAAK26F,uBAAyB,CAAC,EAE/B,MAAMxmD,EAAQn0C,KAEdA,KAAK46F,MAAQ,CAEZC,QAAS,CACR,SAAInb,GAEH,OAAOvrC,EAAMomD,SAASt5F,MAEvB,EACA,SAAI65F,GAEH,OAAO96F,KAAK0/E,MAAQvrC,EAAMimD,eAE3B,GAED,qBAAIW,GAEH,OAAO5mD,EAAM8lD,UAAUh5F,MAExB,EAIF,CAEA4G,GAAAA,GAEC,MAAMgzF,EAAU76F,KAAKu6F,SACpBS,EAAgBh7F,KAAKw6F,eACrBS,EAAQj7F,KAAKy6F,OACbS,EAAcl7F,KAAK06F,aACnBL,EAAWr6F,KAAKi6F,UAChBkB,EAAYd,EAASp5F,OAEtB,IAAIm6F,EACHC,EAAWR,EAAQ55F,OACnBq6F,EAAiBt7F,KAAKo6F,gBAEvB,IAAM,IAAIr5F,EAAI,EAAGsB,EAAI8B,UAAUlD,OAAQF,IAAMsB,IAAMtB,EAAI,CAEtD,MAAMklB,EAAS9hB,UAAWpD,GACzB8U,EAAOoQ,EAAOpQ,KACf,IAAIrV,EAAQw6F,EAAenlF,GAE3B,QAAe9V,IAAVS,EAAsB,CAI1BA,EAAQ66F,IACRL,EAAenlF,GAASrV,EACxBq6F,EAAQz6F,KAAM6lB,GAId,IAAM,IAAIqD,EAAI,EAAGhnB,EAAI64F,EAAW7xE,IAAMhnB,IAAMgnB,EAE3C+wE,EAAU/wE,GAAIlpB,KAAM,IAAI41F,GAAiB/vE,EAAQg1E,EAAO3xE,GAAK4xE,EAAa5xE,IAI5E,MAAO,GAAK9oB,EAAQ86F,EAAiB,CAEpCF,EAAcP,EAASr6F,GAIvB,MAAM+6F,IAAsBD,EAC3BE,EAAmBX,EAASU,GAE7BP,EAAeQ,EAAiB3lF,MAASrV,EACzCq6F,EAASr6F,GAAUg7F,EAEnBR,EAAenlF,GAAS0lF,EACxBV,EAASU,GAAqBt1E,EAI9B,IAAM,IAAIqD,EAAI,EAAGhnB,EAAI64F,EAAW7xE,IAAMhnB,IAAMgnB,EAAI,CAE/C,MAAMmyE,EAAkBpB,EAAU/wE,GACjCoyE,EAAaD,EAAiBF,GAE/B,IAAIjI,EAAUmI,EAAiBj7F,GAE/Bi7F,EAAiBj7F,GAAUk7F,OAEV37F,IAAZuzF,IAMJA,EAAU,IAAI0C,GAAiB/vE,EAAQg1E,EAAO3xE,GAAK4xE,EAAa5xE,KAIjEmyE,EAAiBF,GAAqBjI,CAEvC,CAED,MAAYuH,EAASr6F,KAAY46F,GAEhCv0F,QAAQ+wB,MAAO,qJAKjB,CAEA53B,KAAKo6F,gBAAkBkB,CAExB,CAEAxjE,MAAAA,GAEC,MAAM+iE,EAAU76F,KAAKu6F,SACpBS,EAAgBh7F,KAAKw6F,eACrBH,EAAWr6F,KAAKi6F,UAChBkB,EAAYd,EAASp5F,OAEtB,IAAIq6F,EAAiBt7F,KAAKo6F,gBAE1B,IAAM,IAAIr5F,EAAI,EAAGsB,EAAI8B,UAAUlD,OAAQF,IAAMsB,IAAMtB,EAAI,CAEtD,MAAMklB,EAAS9hB,UAAWpD,GACzB8U,EAAOoQ,EAAOpQ,KACdrV,EAAQw6F,EAAenlF,GAExB,QAAe9V,IAAVS,GAAuBA,GAAS86F,EAAiB,CAIrD,MAAMK,EAAkBL,IACvBM,EAAoBf,EAASc,GAE9BX,EAAeY,EAAkB/lF,MAASrV,EAC1Cq6F,EAASr6F,GAAUo7F,EAEnBZ,EAAenlF,GAAS8lF,EACxBd,EAASc,GAAoB11E,EAI7B,IAAM,IAAIqD,EAAI,EAAGhnB,EAAI64F,EAAW7xE,IAAMhnB,IAAMgnB,EAAI,CAE/C,MAAMmyE,EAAkBpB,EAAU/wE,GACjCuyE,EAAcJ,EAAiBE,GAC/BrI,EAAUmI,EAAiBj7F,GAE5Bi7F,EAAiBj7F,GAAUq7F,EAC3BJ,EAAiBE,GAAoBrI,CAEtC,CAED,CAED,CAEAtzF,KAAKo6F,gBAAkBkB,CAExB,CAGAQ,OAAAA,GAEC,MAAMjB,EAAU76F,KAAKu6F,SACpBS,EAAgBh7F,KAAKw6F,eACrBH,EAAWr6F,KAAKi6F,UAChBkB,EAAYd,EAASp5F,OAEtB,IAAIq6F,EAAiBt7F,KAAKo6F,gBACzBiB,EAAWR,EAAQ55F,OAEpB,IAAM,IAAIF,EAAI,EAAGsB,EAAI8B,UAAUlD,OAAQF,IAAMsB,IAAMtB,EAAI,CAEtD,MACC8U,EADc1R,UAAWpD,GACX8U,KACdrV,EAAQw6F,EAAenlF,GAExB,QAAe9V,IAAVS,EAIJ,UAFOw6F,EAAenlF,GAEjBrV,EAAQ86F,EAAiB,CAI7B,MAAMC,IAAsBD,EAC3BE,EAAmBX,EAASU,GAC5B3nB,IAAeynB,EACfU,EAAalB,EAASjnB,GAGvBonB,EAAeQ,EAAiB3lF,MAASrV,EACzCq6F,EAASr6F,GAAUg7F,EAGnBR,EAAee,EAAWlmF,MAAS0lF,EACnCV,EAASU,GAAqBQ,EAC9BlB,EAAQ/rC,MAIR,IAAM,IAAIxlC,EAAI,EAAGhnB,EAAI64F,EAAW7xE,IAAMhnB,IAAMgnB,EAAI,CAE/C,MAAMmyE,EAAkBpB,EAAU/wE,GACjCoyE,EAAaD,EAAiBF,GAC9BlnC,EAAOonC,EAAiB7nB,GAEzB6nB,EAAiBj7F,GAAUk7F,EAC3BD,EAAiBF,GAAqBlnC,EACtConC,EAAgB3sC,KAEjB,CAED,KAAO,CAIN,MAAM8kB,IAAeynB,EACpBU,EAAalB,EAASjnB,GAElBA,EAAY,IAEhBonB,EAAee,EAAWlmF,MAASrV,GAIpCq6F,EAASr6F,GAAUu7F,EACnBlB,EAAQ/rC,MAIR,IAAM,IAAIxlC,EAAI,EAAGhnB,EAAI64F,EAAW7xE,IAAMhnB,IAAMgnB,EAAI,CAE/C,MAAMmyE,EAAkBpB,EAAU/wE,GAElCmyE,EAAiBj7F,GAAUi7F,EAAiB7nB,GAC5C6nB,EAAgB3sC,KAEjB,CAED,CAIF,CAEA9uD,KAAKo6F,gBAAkBkB,CAExB,CAIApB,UAAAA,CAAY39B,EAAM25B,GAKjB,MAAM8F,EAAgBh8F,KAAK26F,uBAC3B,IAAIn6F,EAAQw7F,EAAez/B,GAC3B,MAAM89B,EAAWr6F,KAAKi6F,UAEtB,QAAel6F,IAAVS,EAAsB,OAAO65F,EAAU75F,GAE5C,MAAMy6F,EAAQj7F,KAAKy6F,OAClBS,EAAcl7F,KAAK06F,aACnBG,EAAU76F,KAAKu6F,SACfc,EAAWR,EAAQ55F,OACnBq6F,EAAiBt7F,KAAKo6F,gBACtBqB,EAAkB,IAAIllF,MAAO8kF,GAE9B76F,EAAQ65F,EAASp5F,OAEjB+6F,EAAez/B,GAAS/7D,EAExBy6F,EAAM76F,KAAMm8D,GACZ2+B,EAAY96F,KAAM81F,GAClBmE,EAASj6F,KAAMq7F,GAEf,IAAM,IAAI16F,EAAIu6F,EAAgBj5F,EAAIw4F,EAAQ55F,OAAQF,IAAMsB,IAAMtB,EAAI,CAEjE,MAAMklB,EAAS40E,EAAS95F,GACxB06F,EAAiB16F,GAAM,IAAIi1F,GAAiB/vE,EAAQs2C,EAAM25B,EAE3D,CAEA,OAAOuF,CAER,CAEAQ,YAAAA,CAAc1/B,GAKb,MAAMy/B,EAAgBh8F,KAAK26F,uBAC1Bn6F,EAAQw7F,EAAez/B,GAExB,QAAex8D,IAAVS,EAAsB,CAE1B,MAAMy6F,EAAQj7F,KAAKy6F,OAClBS,EAAcl7F,KAAK06F,aACnBL,EAAWr6F,KAAKi6F,UAChBiC,EAAoB7B,EAASp5F,OAAS,EACtCk7F,EAAe9B,EAAU6B,GAG1BF,EAFoBz/B,EAAM2/B,IAEU17F,EAEpC65F,EAAU75F,GAAU27F,EACpB9B,EAASvrC,MAETosC,EAAa16F,GAAU06F,EAAagB,GACpChB,EAAYpsC,MAEZmsC,EAAOz6F,GAAUy6F,EAAOiB,GACxBjB,EAAMnsC,KAEP,CAED,EAID,MAAMstC,GAELx5F,WAAAA,CAAay5F,EAAOhqB,GAAqD,IAA/CiqB,EAASn4F,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAAMmwE,EAASnwE,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGkuE,EAAKiC,UAE5Dt0E,KAAKu8F,OAASF,EACdr8F,KAAKw8F,MAAQnqB,EACbryE,KAAKy8F,WAAaH,EAClBt8F,KAAKs0E,UAAYA,EAEjB,MAAMhC,EAASD,EAAKC,OACnBoqB,EAAUpqB,EAAOrxE,OACjB07F,EAAe,IAAIpmF,MAAOmmF,GAErBE,EAAsB,CAC3B7mB,YAAa/5E,GACbg6E,UAAWh6E,IAGZ,IAAM,IAAI+E,EAAI,EAAGA,IAAM27F,IAAY37F,EAAI,CAEtC,MAAMizE,EAAc1B,EAAQvxE,GAAI0yE,kBAAmB,MACnDkpB,EAAc57F,GAAMizE,EACpBA,EAAYY,SAAWgoB,CAExB,CAEA58F,KAAK68F,qBAAuBD,EAE5B58F,KAAK88F,cAAgBH,EAGrB38F,KAAK+8F,kBAAoB,IAAIxmF,MAAOmmF,GAEpC18F,KAAKg9F,YAAc,KACnBh9F,KAAKi9F,kBAAoB,KAEzBj9F,KAAKk9F,sBAAwB,KAC7Bl9F,KAAKm9F,mBAAqB,KAE1Bn9F,KAAK0uF,KAAO/yF,GACZqE,KAAKo9F,YAAe,EAIpBp9F,KAAKq9F,WAAa,KAIlBr9F,KAAK6xE,KAAO,EAEZ7xE,KAAKg4E,UAAY,EACjBh4E,KAAKs9F,oBAAsB,EAE3Bt9F,KAAKkjD,OAAS,EACdljD,KAAKu9F,iBAAmB,EAExBv9F,KAAKw9F,YAAcp4E,IAEnBplB,KAAKy9F,QAAS,EACdz9F,KAAKkS,SAAU,EAEflS,KAAK09F,mBAAoB,EAEzB19F,KAAK29F,kBAAmB,EACxB39F,KAAK49F,gBAAiB,CAEvB,CAIA7N,IAAAA,GAIC,OAFA/vF,KAAKu8F,OAAOsB,gBAAiB79F,MAEtBA,IAER,CAEAkjE,IAAAA,GAIC,OAFAljE,KAAKu8F,OAAOuB,kBAAmB99F,MAExBA,KAAKopD,OAEb,CAEAA,KAAAA,GASC,OAPAppD,KAAKy9F,QAAS,EACdz9F,KAAKkS,SAAU,EAEflS,KAAK6xE,KAAO,EACZ7xE,KAAKo9F,YAAe,EACpBp9F,KAAKq9F,WAAa,KAEXr9F,KAAK+9F,aAAaC,aAE1B,CAEAC,SAAAA,GAEC,OAAOj+F,KAAKkS,UAAalS,KAAKy9F,QAA6B,IAAnBz9F,KAAKg4E,WACxB,OAApBh4E,KAAKq9F,YAAuBr9F,KAAKu8F,OAAO2B,gBAAiBl+F,KAE3D,CAGAm+F,WAAAA,GAEC,OAAOn+F,KAAKu8F,OAAO2B,gBAAiBl+F,KAErC,CAEAo+F,OAAAA,CAASvsB,GAIR,OAFA7xE,KAAKq9F,WAAaxrB,EAEX7xE,IAER,CAEA4wF,OAAAA,CAASyN,EAAMb,GAKd,OAHAx9F,KAAK0uF,KAAO2P,EACZr+F,KAAKw9F,YAAcA,EAEZx9F,IAER,CAOAs+F,kBAAAA,CAAoBp7C,GAOnB,OALAljD,KAAKkjD,OAASA,EAGdljD,KAAKu9F,iBAAmBv9F,KAAKkS,QAAUgxC,EAAS,EAEzCljD,KAAK+9F,YAEb,CAGAQ,kBAAAA,GAEC,OAAOv+F,KAAKu9F,gBAEb,CAEAiB,MAAAA,CAAQ9kB,GAEP,OAAO15E,KAAKy+F,gBAAiB/kB,EAAU,EAAG,EAE3C,CAEAglB,OAAAA,CAAShlB,GAER,OAAO15E,KAAKy+F,gBAAiB/kB,EAAU,EAAG,EAE3C,CAEAilB,aAAAA,CAAeC,EAAellB,EAAUmlB,GAKvC,GAHAD,EAAcF,QAAShlB,GACvB15E,KAAKw+F,OAAQ9kB,GAERmlB,EAAO,CAEX,MAAMC,EAAiB9+F,KAAKw8F,MAAM9iB,SACjCqlB,EAAkBH,EAAcpC,MAAM9iB,SAEtCslB,EAAgBD,EAAkBD,EAClCG,EAAgBH,EAAiBC,EAElCH,EAAcC,KAAM,EAAKG,EAAetlB,GACxC15E,KAAK6+F,KAAMI,EAAe,EAAKvlB,EAEhC,CAEA,OAAO15E,IAER,CAEAk/F,WAAAA,CAAaC,EAAczlB,EAAUmlB,GAEpC,OAAOM,EAAaR,cAAe3+F,KAAM05E,EAAUmlB,EAEpD,CAEAd,UAAAA,GAEC,MAAMqB,EAAoBp/F,KAAKm9F,mBAS/B,OAP2B,OAAtBiC,IAEJp/F,KAAKm9F,mBAAqB,KAC1Bn9F,KAAKu8F,OAAO8C,4BAA6BD,IAInCp/F,IAER,CAOAs/F,qBAAAA,CAAuBtnB,GAKtB,OAHAh4E,KAAKg4E,UAAYA,EACjBh4E,KAAKs9F,oBAAsBt9F,KAAKy9F,OAAS,EAAIzlB,EAEtCh4E,KAAKg+F,aAEb,CAGAuB,qBAAAA,GAEC,OAAOv/F,KAAKs9F,mBAEb,CAEAkC,WAAAA,CAAa9lB,GAIZ,OAFA15E,KAAKg4E,UAAYh4E,KAAKw8F,MAAM9iB,SAAWA,EAEhC15E,KAAKg+F,aAEb,CAEAyB,QAAAA,CAAUC,GAKT,OAHA1/F,KAAK6xE,KAAO6tB,EAAO7tB,KACnB7xE,KAAKg4E,UAAY0nB,EAAO1nB,UAEjBh4E,KAAKg+F,aAEb,CAEA2B,IAAAA,CAAMjmB,GAEL,OAAO15E,KAAK6+F,KAAM7+F,KAAKs9F,oBAAqB,EAAG5jB,EAEhD,CAEAmlB,IAAAA,CAAMe,EAAgBC,EAAcnmB,GAEnC,MAAM2iB,EAAQr8F,KAAKu8F,OAClBlQ,EAAMgQ,EAAMxqB,KACZmG,EAAYh4E,KAAKg4E,UAElB,IAAIhE,EAAch0E,KAAKk9F,sBAEF,OAAhBlpB,IAEJA,EAAcqoB,EAAMyD,0BACpB9/F,KAAKk9F,sBAAwBlpB,GAI9B,MAAM1C,EAAQ0C,EAAYQ,mBACzBv3C,EAAS+2C,EAAYS,aAQtB,OANAnD,EAAO,GAAM+a,EACb/a,EAAO,GAAM+a,EAAM3S,EAEnBz8C,EAAQ,GAAM2iE,EAAiB5nB,EAC/B/6C,EAAQ,GAAM4iE,EAAe7nB,EAEtBh4E,IAER,CAEAg+F,WAAAA,GAEC,MAAM+B,EAAuB//F,KAAKk9F,sBASlC,OAP8B,OAAzB6C,IAEJ//F,KAAKk9F,sBAAwB,KAC7Bl9F,KAAKu8F,OAAO8C,4BAA6BU,IAInC//F,IAER,CAIAggG,QAAAA,GAEC,OAAOhgG,KAAKu8F,MAEb,CAEA0D,OAAAA,GAEC,OAAOjgG,KAAKw8F,KAEb,CAEA0D,OAAAA,GAEC,OAAOlgG,KAAKy8F,YAAcz8F,KAAKu8F,OAAO4D,KAEvC,CAIAC,OAAAA,CAASvuB,EAAMwuB,EAAWC,EAAezL,GAIxC,IAAO70F,KAAKkS,QAKX,YADAlS,KAAKugG,cAAe1uB,GAKrB,MAAMqG,EAAYl4E,KAAKq9F,WAEvB,GAAmB,OAAdnlB,EAAqB,CAIzB,MAAMsoB,GAAgB3uB,EAAOqG,GAAcooB,EACtCE,EAAc,GAAuB,IAAlBF,EAEvBD,EAAY,GAKZrgG,KAAKq9F,WAAa,KAClBgD,EAAYC,EAAgBE,EAI9B,CAIAH,GAAargG,KAAKygG,iBAAkB5uB,GACpC,MAAM6uB,EAAW1gG,KAAK2gG,YAAaN,GAK7Bn9C,EAASljD,KAAKugG,cAAe1uB,GAEnC,GAAK3uB,EAAS,EAAI,CAEjB,MAAMy5C,EAAe38F,KAAK88F,cACpB8D,EAAiB5gG,KAAK+8F,kBAE5B,GAAS/8F,KAAKs0E,YAERl4E,GAEJ,IAAM,IAAIktB,EAAI,EAAGhnB,EAAIq6F,EAAa17F,OAAQqoB,IAAMhnB,IAAMgnB,EAErDqzE,EAAcrzE,GAAI2qD,SAAUysB,GAC5BE,EAAgBt3E,GAAI0rE,mBAAoB9xC,QASzC,IAAM,IAAI55B,EAAI,EAAGhnB,EAAIq6F,EAAa17F,OAAQqoB,IAAMhnB,IAAMgnB,EAErDqzE,EAAcrzE,GAAI2qD,SAAUysB,GAC5BE,EAAgBt3E,GAAIsrE,WAAYC,EAAW3xC,EAM/C,CAED,CAEAq9C,aAAAA,CAAe1uB,GAEd,IAAI3uB,EAAS,EAEb,GAAKljD,KAAKkS,QAAU,CAEnBgxC,EAASljD,KAAKkjD,OACd,MAAM8wB,EAAch0E,KAAKm9F,mBAEzB,GAAqB,OAAhBnpB,EAAuB,CAE3B,MAAM6sB,EAAmB7sB,EAAYC,SAAUpC,GAAQ,GAEvD3uB,GAAU29C,EAELhvB,EAAOmC,EAAYQ,mBAAoB,KAE3Cx0E,KAAK+9F,aAEqB,IAArB8C,IAGJ7gG,KAAKkS,SAAU,GAMlB,CAED,CAGA,OADAlS,KAAKu9F,iBAAmBr6C,EACjBA,CAER,CAEAu9C,gBAAAA,CAAkB5uB,GAEjB,IAAImG,EAAY,EAEhB,IAAOh4E,KAAKy9F,OAAS,CAEpBzlB,EAAYh4E,KAAKg4E,UAEjB,MAAMhE,EAAch0E,KAAKk9F,sBAEzB,GAAqB,OAAhBlpB,EAAuB,CAI3BgE,GAFyBhE,EAAYC,SAAUpC,GAAQ,GAIlDA,EAAOmC,EAAYQ,mBAAoB,KAE3Cx0E,KAAKg+F,cAEc,IAAdhmB,EAGJh4E,KAAKy9F,QAAS,EAKdz9F,KAAKg4E,UAAYA,EAMpB,CAED,CAGA,OADAh4E,KAAKs9F,oBAAsBtlB,EACpBA,CAER,CAEA2oB,WAAAA,CAAaN,GAEZ,MAAM3mB,EAAW15E,KAAKw8F,MAAM9iB,SACtBgV,EAAO1uF,KAAK0uF,KAElB,IAAI7c,EAAO7xE,KAAK6xE,KAAOwuB,EACnBS,EAAY9gG,KAAKo9F,WAErB,MAAM2D,EAAarS,IAAS9yF,GAE5B,GAAmB,IAAdykG,EAEJ,OAAqB,IAAhBS,EAA2BjvB,EAEvBkvB,GAAkC,KAAR,EAAZD,GAA0BpnB,EAAW7H,EAAOA,EAIpE,GAAK6c,IAAShzF,GAAW,EAEH,IAAhBolG,IAIJ9gG,KAAKo9F,WAAa,EAClBp9F,KAAKghG,aAAa,GAAM,GAAM,IAI/BC,EAAa,CAEZ,GAAKpvB,GAAQ6H,EAEZ7H,EAAO6H,MAED,MAAK7H,EAAO,GAIZ,CAEN7xE,KAAK6xE,KAAOA,EAEZ,MAAMovB,CAEP,CARCpvB,EAAO,CAQR,CAEK7xE,KAAK09F,kBAAoB19F,KAAKy9F,QAAS,EACvCz9F,KAAKkS,SAAU,EAEpBlS,KAAK6xE,KAAOA,EAEZ7xE,KAAKu8F,OAAO77F,cAAe,CAC1Bb,KAAM,WAAY6/F,OAAQ1/F,KAC1B+qB,UAAWs1E,EAAY,GAAM,EAAI,GAGnC,CAED,KAAO,CAwBN,IAtBqB,IAAhBS,IAICT,GAAa,GAEjBS,EAAY,EAEZ9gG,KAAKghG,aAAa,EAA2B,IAArBhhG,KAAKw9F,YAAmBuD,IAQhD/gG,KAAKghG,YAAkC,IAArBhhG,KAAKw9F,aAAmB,EAAMuD,IAM7ClvB,GAAQ6H,GAAY7H,EAAO,EAAI,CAInC,MAAMqvB,EAAY5/F,KAAKoD,MAAOmtE,EAAO6H,GACrC7H,GAAQ6H,EAAWwnB,EAEnBJ,GAAax/F,KAAK8C,IAAK88F,GAEvB,MAAMC,EAAUnhG,KAAKw9F,YAAcsD,EAEnC,GAAKK,GAAW,EAIVnhG,KAAK09F,kBAAoB19F,KAAKy9F,QAAS,EACvCz9F,KAAKkS,SAAU,EAEpB2/D,EAAOwuB,EAAY,EAAI3mB,EAAW,EAElC15E,KAAK6xE,KAAOA,EAEZ7xE,KAAKu8F,OAAO77F,cAAe,CAC1Bb,KAAM,WAAY6/F,OAAQ1/F,KAC1B+qB,UAAWs1E,EAAY,EAAI,GAAM,QAG5B,CAIN,GAAiB,IAAZc,EAAgB,CAIpB,MAAMC,EAAUf,EAAY,EAC5BrgG,KAAKghG,YAAaI,GAAWA,EAASL,EAEvC,MAEC/gG,KAAKghG,aAAa,GAAO,EAAOD,GAIjC/gG,KAAKo9F,WAAa0D,EAElB9gG,KAAK6xE,KAAOA,EAEZ7xE,KAAKu8F,OAAO77F,cAAe,CAC1Bb,KAAM,OAAQ6/F,OAAQ1/F,KAAMkhG,UAAWA,GAGzC,CAED,MAEClhG,KAAK6xE,KAAOA,EAIb,GAAKkvB,GAAkC,KAAR,EAAZD,GAIlB,OAAOpnB,EAAW7H,CAIpB,CAEA,OAAOA,CAER,CAEAmvB,WAAAA,CAAaI,EAASC,EAAON,GAE5B,MAAMnsB,EAAW50E,KAAK68F,qBAEjBkE,GAEJnsB,EAASmB,YAAc95E,GACvB24E,EAASoB,UAAY/5E,KAQpB24E,EAASmB,YAFLqrB,EAEmBphG,KAAK29F,iBAAmB1hG,GAAkBD,GAI1CE,GAMvB04E,EAASoB,UAFLqrB,EAEiBrhG,KAAK49F,eAAiB3hG,GAAkBD,GAItCE,GAM1B,CAEAuiG,eAAAA,CAAiB/kB,EAAU4nB,EAAWC,GAErC,MAAMlF,EAAQr8F,KAAKu8F,OAAQlQ,EAAMgQ,EAAMxqB,KACvC,IAAImC,EAAch0E,KAAKm9F,mBAEF,OAAhBnpB,IAEJA,EAAcqoB,EAAMyD,0BACpB9/F,KAAKm9F,mBAAqBnpB,GAI3B,MAAM1C,EAAQ0C,EAAYQ,mBACzBv3C,EAAS+2C,EAAYS,aAOtB,OALAnD,EAAO,GAAM+a,EACbpvD,EAAQ,GAAMqkE,EACdhwB,EAAO,GAAM+a,EAAM3S,EACnBz8C,EAAQ,GAAMskE,EAEPvhG,IAER,EAID,MAAMwhG,GAAmC,IAAI3+F,aAAc,GAG3D,MAAM4+F,WAAuB9hG,GAE5BiD,WAAAA,CAAa8zF,GAEZl/E,QAEAxX,KAAKmgG,MAAQzJ,EACb12F,KAAK0hG,qBACL1hG,KAAK2hG,WAAa,EAClB3hG,KAAK6xE,KAAO,EACZ7xE,KAAKg4E,UAAY,CAElB,CAEA4pB,WAAAA,CAAalC,EAAQmC,GAEpB,MAAMnL,EAAOgJ,EAAOjD,YAAcz8F,KAAKmgG,MACtC7tB,EAASotB,EAAOlD,MAAMlqB,OACtBoqB,EAAUpqB,EAAOrxE,OACjBo5F,EAAWqF,EAAO3C,kBAClBJ,EAAe+C,EAAO5C,cACtBgF,EAAWpL,EAAK7gF,KAChBksF,EAAiB/hG,KAAKgiG,uBAEvB,IAAIC,EAAiBF,EAAgBD,QAEb/hG,IAAnBkiG,IAEJA,EAAiB,CAAC,EAClBF,EAAgBD,GAAaG,GAI9B,IAAM,IAAIlhG,EAAI,EAAGA,IAAM27F,IAAY37F,EAAI,CAEtC,MAAMwxE,EAAQD,EAAQvxE,GACrBk6E,EAAY1I,EAAMliE,KAEnB,IAAIijF,EAAU2O,EAAgBhnB,GAE9B,QAAiBl7E,IAAZuzF,IAEDA,EAAQqB,eACX0F,EAAUt5F,GAAMuyF,MAEV,CAIN,GAFAA,EAAU+G,EAAUt5F,QAEHhB,IAAZuzF,EAAwB,CAIC,OAAxBA,EAAQ0J,gBAET1J,EAAQqB,eACX30F,KAAKkiG,oBAAqB5O,EAASwO,EAAU7mB,IAI9C,QAED,CAEA,MAAM1e,EAAOslC,GAAmBA,EAC/B9E,kBAAmBh8F,GAAIuyF,QAAQ4C,WAEhC5C,EAAU,IAAID,GACb2C,GAAgBS,OAAQC,EAAMzb,EAAW1e,GACzCgW,EAAMa,cAAeb,EAAME,kBAEzB6gB,EAAQqB,eACX30F,KAAKkiG,oBAAqB5O,EAASwO,EAAU7mB,GAE7Cof,EAAUt5F,GAAMuyF,CAEjB,CAEAqJ,EAAc57F,GAAImzE,aAAeof,EAAQnjF,MAE1C,CAED,CAEA0tF,eAAAA,CAAiB6B,GAEhB,IAAO1/F,KAAKk+F,gBAAiBwB,GAAW,CAEvC,GAA4B,OAAvBA,EAAO1C,YAAuB,CAKlC,MAAM8E,GAAapC,EAAOjD,YAAcz8F,KAAKmgG,OAAQtqF,KACpDssF,EAAWzC,EAAOlD,MAAM3mF,KACxBusF,EAAiBpiG,KAAKqiG,eAAgBF,GAEvCniG,KAAK4hG,YAAalC,EACjB0C,GAAkBA,EAAeE,aAAc,IAEhDtiG,KAAKuiG,mBAAoB7C,EAAQyC,EAAUL,EAE5C,CAEA,MAAMzH,EAAWqF,EAAO3C,kBAGxB,IAAM,IAAIh8F,EAAI,EAAGsB,EAAIg4F,EAASp5F,OAAQF,IAAMsB,IAAMtB,EAAI,CAErD,MAAMuyF,EAAU+G,EAAUt5F,GAEG,IAAxBuyF,EAAQoB,aAEZ10F,KAAKwiG,aAAclP,GACnBA,EAAQ8B,oBAIV,CAEAp1F,KAAKyiG,YAAa/C,EAEnB,CAED,CAEA5B,iBAAAA,CAAmB4B,GAElB,GAAK1/F,KAAKk+F,gBAAiBwB,GAAW,CAErC,MAAMrF,EAAWqF,EAAO3C,kBAGxB,IAAM,IAAIh8F,EAAI,EAAGsB,EAAIg4F,EAASp5F,OAAQF,IAAMsB,IAAMtB,EAAI,CAErD,MAAMuyF,EAAU+G,EAAUt5F,GAEG,MAArBuyF,EAAQoB,WAEfpB,EAAQgC,uBACRt1F,KAAK0iG,iBAAkBpP,GAIzB,CAEAtzF,KAAK2iG,gBAAiBjD,EAEvB,CAED,CAIAgC,kBAAAA,GAEC1hG,KAAK4iG,SAAW,GAChB5iG,KAAK6iG,gBAAkB,EAEvB7iG,KAAKqiG,eAAiB,CAAC,EAQvBriG,KAAKi6F,UAAY,GACjBj6F,KAAK8iG,iBAAmB,EAExB9iG,KAAKgiG,uBAAyB,CAAC,EAG/BhiG,KAAK+iG,qBAAuB,GAC5B/iG,KAAKgjG,4BAA8B,EAEnC,MAAM7uD,EAAQn0C,KAEdA,KAAK46F,MAAQ,CAEZqI,QAAS,CACR,SAAIvjB,GAEH,OAAOvrC,EAAMyuD,SAAS3hG,MAEvB,EACA,SAAI65F,GAEH,OAAO3mD,EAAM0uD,eAEd,GAEDxI,SAAU,CACT,SAAI3a,GAEH,OAAOvrC,EAAM8lD,UAAUh5F,MAExB,EACA,SAAI65F,GAEH,OAAO3mD,EAAM2uD,gBAEd,GAEDI,oBAAqB,CACpB,SAAIxjB,GAEH,OAAOvrC,EAAM4uD,qBAAqB9hG,MAEnC,EACA,SAAI65F,GAEH,OAAO3mD,EAAM6uD,2BAEd,GAKH,CAIA9E,eAAAA,CAAiBwB,GAEhB,MAAMl/F,EAAQk/F,EAAO1C,YACrB,OAAiB,OAAVx8F,GAAkBA,EAAQR,KAAK6iG,eAEvC,CAEAN,kBAAAA,CAAoB7C,EAAQyC,EAAUL,GAErC,MAAMmB,EAAUjjG,KAAK4iG,SACpBO,EAAgBnjG,KAAKqiG,eAEtB,IAAID,EAAiBe,EAAehB,GAEpC,QAAwBpiG,IAAnBqiG,EAEJA,EAAiB,CAEhBE,aAAc,CAAE5C,GAChB0D,aAAc,CAAC,GAIhB1D,EAAOzC,kBAAoB,EAE3BkG,EAAehB,GAAaC,MAEtB,CAEN,MAAME,EAAeF,EAAeE,aAEpC5C,EAAOzC,kBAAoBqF,EAAarhG,OACxCqhG,EAAaliG,KAAMs/F,EAEpB,CAEAA,EAAO1C,YAAciG,EAAQhiG,OAC7BgiG,EAAQ7iG,KAAMs/F,GAEd0C,EAAegB,aAActB,GAAapC,CAE3C,CAEA2D,qBAAAA,CAAuB3D,GAEtB,MAAMuD,EAAUjjG,KAAK4iG,SACpBU,EAAqBL,EAASA,EAAQhiG,OAAS,GAC/CsiG,EAAa7D,EAAO1C,YAErBsG,EAAmBtG,YAAcuG,EACjCN,EAASM,GAAeD,EACxBL,EAAQn0C,MAER4wC,EAAO1C,YAAc,KAGrB,MAAMmF,EAAWzC,EAAOlD,MAAM3mF,KAC7BstF,EAAgBnjG,KAAKqiG,eACrBD,EAAiBe,EAAehB,GAChCqB,EAAsBpB,EAAeE,aAErCmB,EACCD,EAAqBA,EAAoBviG,OAAS,GAEnDyiG,EAAmBhE,EAAOzC,kBAE3BwG,EAAgBxG,kBAAoByG,EACpCF,EAAqBE,GAAqBD,EAC1CD,EAAoB10C,MAEpB4wC,EAAOzC,kBAAoB,YAGNmF,EAAegB,cACtB1D,EAAOjD,YAAcz8F,KAAKmgG,OAAQtqF,MAIZ,IAA/B2tF,EAAoBviG,eAEjBkiG,EAAehB,GAIvBniG,KAAK2jG,iCAAkCjE,EAExC,CAEAiE,gCAAAA,CAAkCjE,GAEjC,MAAMrF,EAAWqF,EAAO3C,kBAExB,IAAM,IAAIh8F,EAAI,EAAGsB,EAAIg4F,EAASp5F,OAAQF,IAAMsB,IAAMtB,EAAI,CAErD,MAAMuyF,EAAU+G,EAAUt5F,GAES,MAA3BuyF,EAAQqB,gBAEf30F,KAAK4jG,uBAAwBtQ,EAI/B,CAED,CAEAmP,WAAAA,CAAa/C,GAQZ,MAAMuD,EAAUjjG,KAAK4iG,SACpBiB,EAAYnE,EAAO1C,YAEnB8G,EAAkB9jG,KAAK6iG,kBAEvBkB,EAAsBd,EAASa,GAEhCpE,EAAO1C,YAAc8G,EACrBb,EAASa,GAAoBpE,EAE7BqE,EAAoB/G,YAAc6G,EAClCZ,EAASY,GAAcE,CAExB,CAEApB,eAAAA,CAAiBjD,GAQhB,MAAMuD,EAAUjjG,KAAK4iG,SACpBiB,EAAYnE,EAAO1C,YAEnBgH,IAAwBhkG,KAAK6iG,gBAE7BoB,EAAmBhB,EAASe,GAE7BtE,EAAO1C,YAAcgH,EACrBf,EAASe,GAAuBtE,EAEhCuE,EAAiBjH,YAAc6G,EAC/BZ,EAASY,GAAcI,CAExB,CAIA/B,mBAAAA,CAAqB5O,EAASwO,EAAU7mB,GAEvC,MAAM8mB,EAAiB/hG,KAAKgiG,uBAC3B3H,EAAWr6F,KAAKi6F,UAEjB,IAAIiK,EAAgBnC,EAAgBD,QAEb/hG,IAAlBmkG,IAEJA,EAAgB,CAAC,EACjBnC,EAAgBD,GAAaoC,GAI9BA,EAAejpB,GAAcqY,EAE7BA,EAAQ0J,YAAc3C,EAASp5F,OAC/Bo5F,EAASj6F,KAAMkzF,EAEhB,CAEAsQ,sBAAAA,CAAwBtQ,GAEvB,MAAM+G,EAAWr6F,KAAKi6F,UACrBkK,EAAc7Q,EAAQA,QACtBwO,EAAWqC,EAAYlO,SAASpgF,KAChColE,EAAYkpB,EAAY5nC,KACxBwlC,EAAiB/hG,KAAKgiG,uBACtBkC,EAAgBnC,EAAgBD,GAEhCsC,EAAsB/J,EAAUA,EAASp5F,OAAS,GAClDsiG,EAAajQ,EAAQ0J,YAEtBoH,EAAoBpH,YAAcuG,EAClClJ,EAAUkJ,GAAea,EACzB/J,EAASvrC,aAEFo1C,EAAejpB,GAEuB,IAAxCznE,OAAOyF,KAAMirF,GAAgBjjG,eAE1B8gG,EAAgBD,EAIzB,CAEAU,YAAAA,CAAclP,GAEb,MAAM+G,EAAWr6F,KAAKi6F,UACrB4J,EAAYvQ,EAAQ0J,YAEpB8G,EAAkB9jG,KAAK8iG,mBAEvBuB,EAAuBhK,EAAUyJ,GAElCxQ,EAAQ0J,YAAc8G,EACtBzJ,EAAUyJ,GAAoBxQ,EAE9B+Q,EAAqBrH,YAAc6G,EACnCxJ,EAAUwJ,GAAcQ,CAEzB,CAEA3B,gBAAAA,CAAkBpP,GAEjB,MAAM+G,EAAWr6F,KAAKi6F,UACrB4J,EAAYvQ,EAAQ0J,YAEpBgH,IAAwBhkG,KAAK8iG,iBAE7BwB,EAAoBjK,EAAU2J,GAE/B1Q,EAAQ0J,YAAcgH,EACtB3J,EAAU2J,GAAuB1Q,EAEjCgR,EAAkBtH,YAAc6G,EAChCxJ,EAAUwJ,GAAcS,CAEzB,CAKAxE,uBAAAA,GAEC,MAAMnD,EAAe38F,KAAK+iG,qBACzBe,EAAkB9jG,KAAKgjG,8BAExB,IAAIhvB,EAAc2oB,EAAcmH,GAahC,YAXqB/jG,IAAhBi0E,IAEJA,EAAc,IAAI8C,GACjB,IAAIj0E,aAAc,GAAK,IAAIA,aAAc,GACzC,EAAG2+F,IAEJxtB,EAAYuwB,aAAeT,EAC3BnH,EAAcmH,GAAoB9vB,GAI5BA,CAER,CAEAqrB,2BAAAA,CAA6BrrB,GAE5B,MAAM2oB,EAAe38F,KAAK+iG,qBACzBc,EAAY7vB,EAAYuwB,aAExBP,IAAwBhkG,KAAKgjG,4BAE7BwB,EAAwB7H,EAAcqH,GAEvChwB,EAAYuwB,aAAeP,EAC3BrH,EAAcqH,GAAuBhwB,EAErCwwB,EAAsBD,aAAeV,EACrClH,EAAckH,GAAcW,CAE7B,CAKAC,UAAAA,CAAYpyB,EAAMqyB,EAAcpwB,GAE/B,MAAMoiB,EAAOgO,GAAgB1kG,KAAKmgG,MACjC2B,EAAWpL,EAAK7gF,KAEjB,IAAI8uF,EAA6B,kBAATtyB,EAAoBoH,GAAcU,WAAYuc,EAAMrkB,GAASA,EAErF,MAAM8vB,EAA0B,OAAfwC,EAAsBA,EAAW9uF,KAAOw8D,EAEnD+vB,EAAiBpiG,KAAKqiG,eAAgBF,GAC5C,IAAIN,EAAkB,KAgBtB,QAdmB9hG,IAAdu0E,IAIHA,EAFmB,OAAfqwB,EAEQA,EAAWrwB,UAIXn4E,SAMU4D,IAAnBqiG,EAA+B,CAEnC,MAAMwC,EAAiBxC,EAAegB,aAActB,GAEpD,QAAwB/hG,IAAnB6kG,GAAgCA,EAAetwB,YAAcA,EAEjE,OAAOswB,EAMR/C,EAAkBO,EAAeE,aAAc,GAG3B,OAAfqC,IACJA,EAAa9C,EAAgBrF,MAE/B,CAGA,GAAoB,OAAfmI,EAAsB,OAAO,KAGlC,MAAME,EAAY,IAAIzI,GAAiBp8F,KAAM2kG,EAAYD,EAAcpwB,GAOvE,OALAt0E,KAAK4hG,YAAaiD,EAAWhD,GAG7B7hG,KAAKuiG,mBAAoBsC,EAAW1C,EAAUL,GAEvC+C,CAER,CAGAD,cAAAA,CAAgBvyB,EAAMqyB,GAErB,MAAMhO,EAAOgO,GAAgB1kG,KAAKmgG,MACjC2B,EAAWpL,EAAK7gF,KAEhB8uF,EAA6B,kBAATtyB,EACnBoH,GAAcU,WAAYuc,EAAMrkB,GAASA,EAE1C8vB,EAAWwC,EAAaA,EAAW9uF,KAAOw8D,EAE1C+vB,EAAiBpiG,KAAKqiG,eAAgBF,GAEvC,YAAwBpiG,IAAnBqiG,GAEGA,EAAegB,aAActB,IAI9B,IAER,CAGAgD,aAAAA,GAEC,MAAM7B,EAAUjjG,KAAK4iG,SAGrB,IAAM,IAAI7hG,EAFEf,KAAK6iG,gBAEQ,EAAG9hG,GAAK,IAAMA,EAEtCkiG,EAASliG,GAAImiE,OAId,OAAOljE,IAER,CAGAuf,MAAAA,CAAQ8gF,GAEPA,GAAargG,KAAKg4E,UAElB,MAAMirB,EAAUjjG,KAAK4iG,SACpBmC,EAAW/kG,KAAK6iG,gBAEhBhxB,EAAO7xE,KAAK6xE,MAAQwuB,EACpBC,EAAgBh/F,KAAKisB,KAAM8yE,GAE3BxL,EAAY70F,KAAK2hG,YAAc,EAIhC,IAAM,IAAI5gG,EAAI,EAAGA,IAAMgkG,IAAahkG,EAAI,CAExBkiG,EAASliG,GAEjBq/F,QAASvuB,EAAMwuB,EAAWC,EAAezL,EAEjD,CAIA,MAAMwF,EAAWr6F,KAAKi6F,UACrBkB,EAAYn7F,KAAK8iG,iBAElB,IAAM,IAAI/hG,EAAI,EAAGA,IAAMo6F,IAAcp6F,EAEpCs5F,EAAUt5F,GAAI+wE,MAAO+iB,GAItB,OAAO70F,IAER,CAGAglG,OAAAA,CAASC,GAERjlG,KAAK6xE,KAAO,EACZ,IAAM,IAAI9wE,EAAI,EAAGA,EAAIf,KAAK4iG,SAAS3hG,OAAQF,IAE1Cf,KAAK4iG,SAAU7hG,GAAI8wE,KAAO,EAI3B,OAAO7xE,KAAKuf,OAAQ0lF,EAErB,CAGA/E,OAAAA,GAEC,OAAOlgG,KAAKmgG,KAEb,CAGA+E,WAAAA,CAAa7yB,GAEZ,MAAM4wB,EAAUjjG,KAAK4iG,SACpBT,EAAW9vB,EAAKx8D,KAChBstF,EAAgBnjG,KAAKqiG,eACrBD,EAAiBe,EAAehB,GAEjC,QAAwBpiG,IAAnBqiG,EAA+B,CAMnC,MAAM+C,EAAkB/C,EAAeE,aAEvC,IAAM,IAAIvhG,EAAI,EAAGsB,EAAI8iG,EAAgBlkG,OAAQF,IAAMsB,IAAMtB,EAAI,CAE5D,MAAM2+F,EAASyF,EAAiBpkG,GAEhCf,KAAK89F,kBAAmB4B,GAExB,MAAM6D,EAAa7D,EAAO1C,YACzBsG,EAAqBL,EAASA,EAAQhiG,OAAS,GAEhDy+F,EAAO1C,YAAc,KACrB0C,EAAOzC,kBAAoB,KAE3BqG,EAAmBtG,YAAcuG,EACjCN,EAASM,GAAeD,EACxBL,EAAQn0C,MAER9uD,KAAK2jG,iCAAkCjE,EAExC,QAEOyD,EAAehB,EAEvB,CAED,CAGAiD,WAAAA,CAAa1O,GAEZ,MAAMoL,EAAWpL,EAAK7gF,KACrBstF,EAAgBnjG,KAAKqiG,eAEtB,IAAM,MAAMF,KAAYgB,EAAgB,CAEvC,MACCzD,EADoByD,EAAehB,GAAWiB,aACvBtB,QAER/hG,IAAX2/F,IAEJ1/F,KAAK89F,kBAAmB4B,GACxB1/F,KAAKqjG,sBAAuB3D,GAI9B,CAEA,MACCwE,EADsBlkG,KAAKgiG,uBACKF,GAEjC,QAAuB/hG,IAAlBmkG,EAEJ,IAAM,MAAMjpB,KAAaipB,EAAgB,CAExC,MAAM5Q,EAAU4Q,EAAejpB,GAC/BqY,EAAQgC,uBACRt1F,KAAK4jG,uBAAwBtQ,EAE9B,CAIF,CAGA+R,aAAAA,CAAehzB,EAAMqyB,GAEpB,MAAMhF,EAAS1/F,KAAK4kG,eAAgBvyB,EAAMqyB,GAE1B,OAAXhF,IAEJ1/F,KAAK89F,kBAAmB4B,GACxB1/F,KAAKqjG,sBAAuB3D,GAI9B,EAID,MAAM4F,WAAuBnqF,GAE5BvY,WAAAA,GAA8D,IAAjDsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE3CqT,MAAOtQ,EAAOC,EAFuChD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAIzDnE,KAAKulG,kBAAmB,EAExBvlG,KAAKsb,MAAQA,EAEbtb,KAAKic,QAAU,IAAIkB,GAAe,KAAMjW,EAAOC,EAAQmU,GAEvDtb,KAAKic,QAAQ1D,uBAAwB,CAEtC,EAID,MAAMitF,WAA0BrqF,GAE/BvY,WAAAA,GAA8D,IAAjDsE,EAAK/C,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGgD,EAAMhD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmX,EAAKnX,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE3CqT,MAAOtQ,EAAOC,EAFuChD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,CAAC,GAIzDnE,KAAKylG,qBAAsB,EAE3BzlG,KAAKsb,MAAQA,EAEbtb,KAAKic,QAAU,IAAIO,GAAkB,KAAMtV,EAAOC,EAAQmU,GAE1Dtb,KAAKic,QAAQ1D,uBAAwB,CAEtC,EAID,MAAMmtF,GAEL9iG,WAAAA,CAAaX,GAEZjC,KAAKiC,MAAQA,CAEd,CAEAyF,KAAAA,GAEC,OAAO,IAAIg+F,QAA8B3lG,IAArBC,KAAKiC,MAAMyF,MAAsB1H,KAAKiC,MAAQjC,KAAKiC,MAAMyF,QAE9E,EAID,IAAIi+F,GAAM,EAEV,MAAMC,WAAsBjmG,GAE3BiD,WAAAA,GAEC4U,QAEAxX,KAAK6lG,iBAAkB,EAEvBryF,OAAOoC,eAAgB5V,KAAM,KAAM,CAAEiC,MAAO0jG,OAE5C3lG,KAAKqQ,KAAO,GAEZrQ,KAAK2rC,MAAQhtC,GACbqB,KAAK41C,SAAW,EAEjB,CAEA/tC,GAAAA,CAAKg/E,GAIJ,OAFA7mF,KAAK41C,SAASx1C,KAAMymF,GAEb7mF,IAER,CAEA83B,MAAAA,CAAQ+uD,GAEP,MAAMrmF,EAAQR,KAAK41C,SAASz1C,QAAS0mF,GAIrC,OAFiB,IAAZrmF,GAAgBR,KAAK41C,SAASn1C,OAAQD,EAAO,GAE3CR,IAER,CAEA8lG,OAAAA,CAASz1F,GAIR,OAFArQ,KAAKqQ,KAAOA,EAELrQ,IAER,CAEA+rC,QAAAA,CAAU9pC,GAIT,OAFAjC,KAAK2rC,MAAQ1pC,EAENjC,IAER,CAEAkZ,OAAAA,GAIC,OAFAlZ,KAAKU,cAAe,CAAEb,KAAM,YAErBG,IAER,CAEA2H,IAAAA,CAAM+P,GAEL1X,KAAKqQ,KAAOqH,EAAOrH,KACnBrQ,KAAK2rC,MAAQj0B,EAAOi0B,MAEpB,MAAMo6D,EAAiBruF,EAAOk+B,SAE9B51C,KAAK41C,SAAS30C,OAAS,EAEvB,IAAM,IAAIF,EAAI,EAAGC,EAAI+kG,EAAe9kG,OAAQF,EAAIC,EAAGD,IAAO,CAEzD,MAAM60C,EAAWr/B,MAAMC,QAASuvF,EAAgBhlG,IAAQglG,EAAgBhlG,GAAM,CAAEglG,EAAgBhlG,IAEhG,IAAM,IAAIuoB,EAAI,EAAGA,EAAIssB,EAAS30C,OAAQqoB,IAErCtpB,KAAK41C,SAASx1C,KAAMw1C,EAAUtsB,GAAI5hB,QAIpC,CAEA,OAAO1H,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAMgmG,WAAmC7mD,GAExCv8C,WAAAA,CAAa/B,EAAO6wC,GAA+B,IAAvB4S,EAAgBngD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE9CqT,MAAO3W,EAAO6wC,GAEd1xC,KAAKimG,8BAA+B,EAEpCjmG,KAAKskD,iBAAmBA,CAEzB,CAEA38C,IAAAA,CAAM+P,GAML,OAJAF,MAAM7P,KAAM+P,GAEZ1X,KAAKskD,iBAAmB5sC,EAAO4sC,iBAExBtkD,IAER,CAEA0H,KAAAA,CAAO8N,GAEN,MAAM+pC,EAAK/nC,MAAM9P,MAAO8N,GAIxB,OAFA+pC,EAAG+E,iBAAmBtkD,KAAKskD,iBAEpB/E,CAER,CAEAtpC,MAAAA,CAAQT,GAEP,MAAM2uC,EAAO3sC,MAAMvB,OAAQT,GAK3B,OAHA2uC,EAAK8hD,8BAA+B,EACpC9hD,EAAKG,iBAAmBtkD,KAAKskD,iBAEtBH,CAER,EAID,MAAM+hD,GAELtjG,WAAAA,CAAauN,EAAQtQ,EAAM0rC,EAAU46D,EAAanqF,GAEjDhc,KAAKmvC,qBAAsB,EAE3BnvC,KAAKqQ,KAAO,GAEZrQ,KAAKmQ,OAASA,EACdnQ,KAAKH,KAAOA,EACZG,KAAKurC,SAAWA,EAChBvrC,KAAKmmG,YAAcA,EACnBnmG,KAAKgc,MAAQA,EAEbhc,KAAK+V,QAAU,CAEhB,CAEA,eAAIC,CAAa/T,IAED,IAAVA,GAAiBjC,KAAK+V,SAE5B,CAEA+5E,SAAAA,CAAW3/E,GAIV,OAFAnQ,KAAKmQ,OAASA,EAEPnQ,IAER,CAEAomG,OAAAA,CAASvmG,EAAMsmG,GAKd,OAHAnmG,KAAKH,KAAOA,EACZG,KAAKmmG,YAAcA,EAEZnmG,IAER,CAEAqmG,WAAAA,CAAa96D,GAIZ,OAFAvrC,KAAKurC,SAAWA,EAETvrC,IAER,CAEAsmG,QAAAA,CAAUtqF,GAIT,OAFAhc,KAAKgc,MAAQA,EAENhc,IAER,EAID,MAAMumG,GAAwB,IAAI34E,GAElC,MAAM44E,GAEL5jG,WAAAA,CAAakoB,EAAQC,GAAsC,IAA3B2H,EAAIvuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGwuB,EAAGxuB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAGihB,IAE/CplB,KAAKgrB,IAAM,IAAIH,GAAKC,EAAQC,GAG5B/qB,KAAK0yB,KAAOA,EACZ1yB,KAAK2yB,IAAMA,EACX3yB,KAAKkjB,OAAS,KACdljB,KAAKi0B,OAAS,IAAIP,GAElB1zB,KAAK2wD,OAAS,CACbhe,KAAM,CAAC,EACP6d,KAAM,CAAE1S,UAAW,GACnBqD,IAAK,CAAC,EACNyQ,OAAQ,CAAE9T,UAAW,GACrB6C,OAAQ,CAAC,EAGX,CAEA/5C,GAAAA,CAAKkkB,EAAQC,GAIZ/qB,KAAKgrB,IAAIpkB,IAAKkkB,EAAQC,EAEvB,CAEA07E,aAAAA,CAAeC,EAAQxjF,GAEjBA,EAAO20B,qBAEX73C,KAAKgrB,IAAIF,OAAO9P,sBAAuBkI,EAAOI,aAC9CtjB,KAAKgrB,IAAID,UAAUnkB,IAAK8/F,EAAOlkG,EAAGkkG,EAAOjkG,EAAG,IAAM2gB,UAAWF,GAASjb,IAAKjI,KAAKgrB,IAAIF,QAASznB,YAC7FrD,KAAKkjB,OAASA,GAEHA,EAAOgiE,sBAElBllF,KAAKgrB,IAAIF,OAAOlkB,IAAK8/F,EAAOlkG,EAAGkkG,EAAOjkG,GAAKygB,EAAOwP,KAAOxP,EAAOyP,MAAUzP,EAAOwP,KAAOxP,EAAOyP,MAAQvP,UAAWF,GAClHljB,KAAKgrB,IAAID,UAAUnkB,IAAK,EAAG,GAAK,GAAI2c,mBAAoBL,EAAOI,aAC/DtjB,KAAKkjB,OAASA,GAIdrc,QAAQ+wB,MAAO,6CAA+C1U,EAAOrjB,KAIvE,CAEA8mG,mBAAAA,CAAqB7mB,GAOpB,OALAymB,GAAQx6F,WAAWyiB,gBAAiBsxD,EAAWx8D,aAE/CtjB,KAAKgrB,IAAIF,OAAO9P,sBAAuB8kE,EAAWx8D,aAClDtjB,KAAKgrB,IAAID,UAAUnkB,IAAK,EAAG,GAAK,GAAIgT,aAAc2sF,IAE3CvmG,IAER,CAEA4mG,eAAAA,CAAiB3gF,GAA4C,IAAlBotB,EAAUlvC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAMvD,OAJA8kB,GAAWhD,EAAQjmB,KAAMqzC,IAFQlvC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,KAAAA,UAAA,IAIjCkvC,EAAW6Z,KAAM25C,IAEVxzD,CAER,CAEAyzD,gBAAAA,CAAkBjM,GAA6C,IAApC19D,IAASh5B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,KAAAA,UAAA,GAASkvC,EAAUlvC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAEzD,IAAM,IAAIpD,EAAI,EAAGC,EAAI65F,EAAQ55F,OAAQF,EAAIC,EAAGD,IAE3CkoB,GAAW4xE,EAAS95F,GAAKf,KAAMqzC,EAAYlW,GAM5C,OAFAkW,EAAW6Z,KAAM25C,IAEVxzD,CAER,EAID,SAASwzD,GAAS/gG,EAAGC,GAEpB,OAAOD,EAAEsxB,SAAWrxB,EAAEqxB,QAEvB,CAEA,SAASnO,GAAWhD,EAAQmtB,EAAWC,EAAYlW,GAElD,IAAI4pE,GAAY,EAEhB,GAAK9gF,EAAOgO,OAAOvf,KAAM0+B,EAAUnf,QAAW,EAI7B,IAFDhO,EAAOyS,QAAS0a,EAAWC,KAElB0zD,GAAY,EAErC,CAEA,IAAmB,IAAdA,IAAoC,IAAd5pE,EAAqB,CAE/C,MAAM5V,EAAWtB,EAAOsB,SAExB,IAAM,IAAIxmB,EAAI,EAAGC,EAAIumB,EAAStmB,OAAQF,EAAIC,EAAGD,IAE5CkoB,GAAW1B,EAAUxmB,GAAKqyC,EAAWC,GAAY,EAInD,CAED,CAQA,MAAM2zD,GAELpkG,WAAAA,GAA8C,IAAjC4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGsgB,EAAGtgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGwF,EAAKxF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAMzC,OAJAnE,KAAKwkB,OAASA,EACdxkB,KAAKykB,IAAMA,EACXzkB,KAAK2J,MAAQA,EAEN3J,IAER,CAEA4G,GAAAA,CAAK4d,EAAQC,EAAK9a,GAMjB,OAJA3J,KAAKwkB,OAASA,EACdxkB,KAAKykB,IAAMA,EACXzkB,KAAK2J,MAAQA,EAEN3J,IAER,CAEA2H,IAAAA,CAAMs/F,GAML,OAJAjnG,KAAKwkB,OAASyiF,EAAMziF,OACpBxkB,KAAKykB,IAAMwiF,EAAMxiF,IACjBzkB,KAAK2J,MAAQs9F,EAAMt9F,MAEZ3J,IAER,CAGAknG,QAAAA,GAEC,MAAMC,EAAM,KAGZ,OAFAnnG,KAAKykB,IAAMziB,GAAOhC,KAAKykB,IAAK0iF,EAAK7lG,KAAKC,GAAK4lG,GAEpCnnG,IAER,CAEAuzB,cAAAA,CAAgB3rB,GAEf,OAAO5H,KAAKonG,uBAAwBx/F,EAAEpF,EAAGoF,EAAEnF,EAAGmF,EAAE2R,EAEjD,CAEA6tF,sBAAAA,CAAwB5kG,EAAGC,EAAG8W,GAgB7B,OAdAvZ,KAAKwkB,OAASljB,KAAK+H,KAAM7G,EAAIA,EAAIC,EAAIA,EAAI8W,EAAIA,GAExB,IAAhBvZ,KAAKwkB,QAETxkB,KAAK2J,MAAQ,EACb3J,KAAKykB,IAAM,IAIXzkB,KAAK2J,MAAQrI,KAAKkI,MAAOhH,EAAG+W,GAC5BvZ,KAAKykB,IAAMnjB,KAAKsI,KAAM5H,GAAOS,EAAIzC,KAAKwkB,QAAU,EAAG,KAI7CxkB,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAQD,MAAMqnG,GAELzkG,WAAAA,GAA4C,IAA/B4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGwF,EAAKxF,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG1B,EAAC0B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAMvC,OAJAnE,KAAKwkB,OAASA,EACdxkB,KAAK2J,MAAQA,EACb3J,KAAKyC,EAAIA,EAEFzC,IAER,CAEA4G,GAAAA,CAAK4d,EAAQ7a,EAAOlH,GAMnB,OAJAzC,KAAKwkB,OAASA,EACdxkB,KAAK2J,MAAQA,EACb3J,KAAKyC,EAAIA,EAEFzC,IAER,CAEA2H,IAAAA,CAAMs/F,GAML,OAJAjnG,KAAKwkB,OAASyiF,EAAMziF,OACpBxkB,KAAK2J,MAAQs9F,EAAMt9F,MACnB3J,KAAKyC,EAAIwkG,EAAMxkG,EAERzC,IAER,CAEAuzB,cAAAA,CAAgB3rB,GAEf,OAAO5H,KAAKonG,uBAAwBx/F,EAAEpF,EAAGoF,EAAEnF,EAAGmF,EAAE2R,EAEjD,CAEA6tF,sBAAAA,CAAwB5kG,EAAGC,EAAG8W,GAM7B,OAJAvZ,KAAKwkB,OAASljB,KAAK+H,KAAM7G,EAAIA,EAAI+W,EAAIA,GACrCvZ,KAAK2J,MAAQrI,KAAKkI,MAAOhH,EAAG+W,GAC5BvZ,KAAKyC,EAAIA,EAEFzC,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAMsnG,GAEL1kG,WAAAA,CAAawI,EAAKC,EAAKE,EAAKC,GAE3B87F,GAAQtgG,UAAUugG,WAAY,EAE9BvnG,KAAK0I,SAAW,CACf,EAAG,EACH,EAAG,QAGS3I,IAARqL,GAEJpL,KAAK4G,IAAKwE,EAAKC,EAAKE,EAAKC,EAI3B,CAEAO,QAAAA,GAOC,OALA/L,KAAK4G,IACJ,EAAG,EACH,EAAG,GAGG5G,IAER,CAEAwK,SAAAA,CAAW3J,GAAoB,IAAb4J,EAAMtG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE1B,IAAM,IAAIpD,EAAI,EAAGA,EAAI,EAAGA,IAEvBf,KAAK0I,SAAU3H,GAAMF,EAAOE,EAAI0J,GAIjC,OAAOzK,IAER,CAEA4G,GAAAA,CAAKwE,EAAKC,EAAKE,EAAKC,GAEnB,MAAMM,EAAK9L,KAAK0I,SAKhB,OAHAoD,EAAI,GAAMV,EAAKU,EAAI,GAAMT,EACzBS,EAAI,GAAMP,EAAKO,EAAI,GAAMN,EAElBxL,IAER,EAID,MAAMwnG,GAA0B,IAAIzgG,GAEpC,MAAM0gG,GAEL7kG,WAAAA,GAAwG,IAA3FV,EAAGiC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,GAAWqe,IAAYA,KAAYjjB,EAAGgC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI4C,IAAWqe,KAAYA,KAE1FplB,KAAK0nG,QAAS,EAEd1nG,KAAKkC,IAAMA,EACXlC,KAAKmC,IAAMA,CAEZ,CAEAyE,GAAAA,CAAK1E,EAAKC,GAKT,OAHAnC,KAAKkC,IAAIyF,KAAMzF,GACflC,KAAKmC,IAAIwF,KAAMxF,GAERnC,IAER,CAEA2lB,aAAAA,CAAeC,GAEd5lB,KAAKulB,YAEL,IAAM,IAAIxkB,EAAI,EAAGsb,EAAKuJ,EAAO3kB,OAAQF,EAAIsb,EAAItb,IAE5Cf,KAAKwlB,cAAeI,EAAQ7kB,IAI7B,OAAOf,IAER,CAEA6lB,oBAAAA,CAAsB7a,EAAQ8a,GAE7B,MAAMC,EAAWyhF,GAAU7/F,KAAMme,GAAOzd,eAAgB,IAIxD,OAHArI,KAAKkC,IAAIyF,KAAMqD,GAAS/C,IAAK8d,GAC7B/lB,KAAKmC,IAAIwF,KAAMqD,GAASnD,IAAKke,GAEtB/lB,IAER,CAEA0H,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,CAEA2H,IAAAA,CAAMye,GAKL,OAHApmB,KAAKkC,IAAIyF,KAAMye,EAAIlkB,KACnBlC,KAAKmC,IAAIwF,KAAMye,EAAIjkB,KAEZnC,IAER,CAEAulB,SAAAA,GAKC,OAHAvlB,KAAKkC,IAAIM,EAAIxC,KAAKkC,IAAIO,EAAM2iB,IAC5BplB,KAAKmC,IAAIK,EAAIxC,KAAKmC,IAAIM,GAAM2iB,IAErBplB,IAER,CAEAqmB,OAAAA,GAIC,OAASrmB,KAAKmC,IAAIK,EAAIxC,KAAKkC,IAAIM,GAASxC,KAAKmC,IAAIM,EAAIzC,KAAKkC,IAAIO,CAE/D,CAEA6jB,SAAAA,CAAW1lB,GAEV,OAAOZ,KAAKqmB,UAAYzlB,EAAOgG,IAAK,EAAG,GAAMhG,EAAOmH,WAAY/H,KAAKkC,IAAKlC,KAAKmC,KAAMkG,eAAgB,GAEtG,CAEAke,OAAAA,CAAS3lB,GAER,OAAOZ,KAAKqmB,UAAYzlB,EAAOgG,IAAK,EAAG,GAAMhG,EAAOuH,WAAYnI,KAAKmC,IAAKnC,KAAKkC,IAEhF,CAEAsjB,aAAAA,CAAegB,GAKd,OAHAxmB,KAAKkC,IAAIA,IAAKskB,GACdxmB,KAAKmC,IAAIA,IAAKqkB,GAEPxmB,IAER,CAEAymB,cAAAA,CAAgBC,GAKf,OAHA1mB,KAAKkC,IAAI+F,IAAKye,GACd1mB,KAAKmC,IAAI0F,IAAK6e,GAEP1mB,IAER,CAEA2mB,cAAAA,CAAgBtf,GAKf,OAHArH,KAAKkC,IAAI4F,WAAaT,GACtBrH,KAAKmC,IAAI2F,UAAWT,GAEbrH,IAER,CAEAwnB,aAAAA,CAAehB,GAEd,OAAOA,EAAMhkB,GAAKxC,KAAKkC,IAAIM,GAAKgkB,EAAMhkB,GAAKxC,KAAKmC,IAAIK,GACnDgkB,EAAM/jB,GAAKzC,KAAKkC,IAAIO,GAAK+jB,EAAM/jB,GAAKzC,KAAKmC,IAAIM,CAE/C,CAEAglB,WAAAA,CAAarB,GAEZ,OAAOpmB,KAAKkC,IAAIM,GAAK4jB,EAAIlkB,IAAIM,GAAK4jB,EAAIjkB,IAAIK,GAAKxC,KAAKmC,IAAIK,GACvDxC,KAAKkC,IAAIO,GAAK2jB,EAAIlkB,IAAIO,GAAK2jB,EAAIjkB,IAAIM,GAAKzC,KAAKmC,IAAIM,CAEnD,CAEAilB,YAAAA,CAAclB,EAAO5lB,GAKpB,OAAOA,EAAOgG,KACX4f,EAAMhkB,EAAIxC,KAAKkC,IAAIM,IAAQxC,KAAKmC,IAAIK,EAAIxC,KAAKkC,IAAIM,IACjDgkB,EAAM/jB,EAAIzC,KAAKkC,IAAIO,IAAQzC,KAAKmC,IAAIM,EAAIzC,KAAKkC,IAAIO,GAGrD,CAEAklB,aAAAA,CAAevB,GAId,OAAOA,EAAIjkB,IAAIK,GAAKxC,KAAKkC,IAAIM,GAAK4jB,EAAIlkB,IAAIM,GAAKxC,KAAKmC,IAAIK,GACvD4jB,EAAIjkB,IAAIM,GAAKzC,KAAKkC,IAAIO,GAAK2jB,EAAIlkB,IAAIO,GAAKzC,KAAKmC,IAAIM,CAEnD,CAEAqlB,UAAAA,CAAYtB,EAAO5lB,GAElB,OAAOA,EAAO+G,KAAM6e,GAAQxkB,MAAOhC,KAAKkC,IAAKlC,KAAKmC,IAEnD,CAEA4mB,eAAAA,CAAiBvC,GAEhB,OAAOxmB,KAAK8nB,WAAYtB,EAAOghF,IAAY39F,WAAY2c,EAExD,CAEAyC,SAAAA,CAAW7C,GAOV,OALApmB,KAAKkC,IAAIC,IAAKikB,EAAIlkB,KAClBlC,KAAKmC,IAAID,IAAKkkB,EAAIjkB,KAEbnC,KAAKqmB,WAAYrmB,KAAKulB,YAEpBvlB,IAER,CAEAsnB,KAAAA,CAAOlB,GAKN,OAHApmB,KAAKkC,IAAIA,IAAKkkB,EAAIlkB,KAClBlC,KAAKmC,IAAIA,IAAKikB,EAAIjkB,KAEXnC,IAER,CAEA2P,SAAAA,CAAWlF,GAKV,OAHAzK,KAAKkC,IAAI2F,IAAK4C,GACdzK,KAAKmC,IAAI0F,IAAK4C,GAEPzK,IAER,CAEAuK,MAAAA,CAAQ6b,GAEP,OAAOA,EAAIlkB,IAAIqI,OAAQvK,KAAKkC,MAASkkB,EAAIjkB,IAAIoI,OAAQvK,KAAKmC,IAE3D,EAID,MAAMwlG,GAAwB,IAAI1lF,GAC5B2lF,GAA0B,IAAI3lF,GAEpC,MAAM4lF,GAELjlG,WAAAA,GAA0D,IAA7CqpC,EAAK9nC,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAW4kC,EAAG1iD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAE7CjiB,KAAKisC,MAAQA,EACbjsC,KAAK6mD,IAAMA,CAEZ,CAEAjgD,GAAAA,CAAKqlC,EAAO4a,GAKX,OAHA7mD,KAAKisC,MAAMtkC,KAAMskC,GACjBjsC,KAAK6mD,IAAIl/C,KAAMk/C,GAER7mD,IAER,CAEA2H,IAAAA,CAAM8+C,GAKL,OAHAzmD,KAAKisC,MAAMtkC,KAAM8+C,EAAKxa,OACtBjsC,KAAK6mD,IAAIl/C,KAAM8+C,EAAKI,KAEb7mD,IAER,CAEAsmB,SAAAA,CAAW1lB,GAEV,OAAOA,EAAOmH,WAAY/H,KAAKisC,MAAOjsC,KAAK6mD,KAAMx+C,eAAgB,GAElE,CAEAgiB,KAAAA,CAAOzpB,GAEN,OAAOA,EAAOuH,WAAYnI,KAAK6mD,IAAK7mD,KAAKisC,MAE1C,CAEA67D,UAAAA,GAEC,OAAO9nG,KAAKisC,MAAMniC,kBAAmB9J,KAAK6mD,IAE3C,CAEAzvB,QAAAA,GAEC,OAAOp3B,KAAKisC,MAAMpiC,WAAY7J,KAAK6mD,IAEpC,CAEA57B,EAAAA,CAAIvoB,EAAG9B,GAEN,OAAOZ,KAAKqqB,MAAOzpB,GAASyH,eAAgB3F,GAAImF,IAAK7H,KAAKisC,MAE3D,CAEA87D,4BAAAA,CAA8BvhF,EAAOwhF,GAEpCL,GAAQx/F,WAAYqe,EAAOxmB,KAAKisC,OAChC27D,GAAUz/F,WAAYnI,KAAK6mD,IAAK7mD,KAAKisC,OAErC,MAAMg8D,EAAYL,GAAU1+F,IAAK0+F,IAGjC,IAAIllG,EAFoBklG,GAAU1+F,IAAKy+F,IAEbM,EAQ1B,OANKD,IAEJtlG,EAAIV,GAAOU,EAAG,EAAG,IAIXA,CAER,CAEA0oB,mBAAAA,CAAqB5E,EAAOwhF,EAAapnG,GAExC,MAAM8B,EAAI1C,KAAK+nG,6BAA8BvhF,EAAOwhF,GAEpD,OAAOhoG,KAAKqqB,MAAOzpB,GAASyH,eAAgB3F,GAAImF,IAAK7H,KAAKisC,MAE3D,CAEAryB,YAAAA,CAAc/J,GAKb,OAHA7P,KAAKisC,MAAMryB,aAAc/J,GACzB7P,KAAK6mD,IAAIjtC,aAAc/J,GAEhB7P,IAER,CAEAuK,MAAAA,CAAQk8C,GAEP,OAAOA,EAAKxa,MAAM1hC,OAAQvK,KAAKisC,QAAWwa,EAAKI,IAAIt8C,OAAQvK,KAAK6mD,IAEjE,CAEAn/C,KAAAA,GAEC,OAAO,IAAI1H,KAAK4C,aAAc+E,KAAM3H,KAErC,EAID,MAAMkoG,GAA0B,IAAIjmF,GAEpC,MAAMkmF,WAAwBhzE,GAE7BvyB,WAAAA,CAAakhF,EAAOxxE,GAEnBkF,QAEAxX,KAAK8jF,MAAQA,EAEb9jF,KAAK+X,kBAAmB,EAExB/X,KAAKsS,MAAQA,EAEbtS,KAAKH,KAAO,kBAEZ,MAAMgnB,EAAW,IAAIgnB,GAEfu6D,EAAY,CACjB,EAAG,EAAG,EAAI,EAAG,EAAG,EAChB,EAAG,EAAG,EAAI,EAAG,EAAG,EAChB,EAAG,EAAG,GAAK,EAAG,EAAG,EACjB,EAAG,EAAG,EAAI,EAAG,EAAG,EAChB,EAAG,EAAG,EAAI,GAAK,EAAG,GAGnB,IAAM,IAAIrnG,EAAI,EAAGuoB,EAAI,EAAGtoB,EAAI,GAAID,EAAIC,EAAGD,IAAMuoB,IAAO,CAEnD,MAAME,EAAOzoB,EAAIC,EAAMM,KAAKC,GAAK,EAC3BkoB,EAAOH,EAAItoB,EAAMM,KAAKC,GAAK,EAEjC6mG,EAAUhoG,KACTkB,KAAK4E,IAAKsjB,GAAMloB,KAAK6E,IAAKqjB,GAAM,EAChCloB,KAAK4E,IAAKujB,GAAMnoB,KAAK6E,IAAKsjB,GAAM,EAGlC,CAEA5C,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB+6D,EAAW,IAE1E,MAAMxrE,EAAW,IAAIizB,GAAmB,CAAE9lB,KAAK,EAAO3E,YAAY,IAElEplC,KAAKqoG,KAAO,IAAIj3C,GAAcvqC,EAAU+V,GACxC58B,KAAK6H,IAAK7H,KAAKqoG,MAEfroG,KAAKuf,QAEN,CAEArG,OAAAA,GAEClZ,KAAKqoG,KAAKxhF,SAAS3N,UACnBlZ,KAAKqoG,KAAKzrE,SAAS1jB,SAEpB,CAEAqG,MAAAA,GAECvf,KAAK8jF,MAAMl9D,mBAAmB,GAAM,GACpC5mB,KAAK8jF,MAAMljF,OAAOgmB,mBAAmB,GAAM,GAGtC5mB,KAAKq1B,QAETr1B,KAAKq1B,OAAOzO,mBAAmB,GAE/B5mB,KAAK6P,OACHlI,KAAM3H,KAAKq1B,OAAO/R,aAClBpV,SACA9F,SAAUpI,KAAK8jF,MAAMxgE,cAIvBtjB,KAAK6P,OAAOlI,KAAM3H,KAAK8jF,MAAMxgE,aAI9BtjB,KAAKsjB,YAAY3b,KAAM3H,KAAK8jF,MAAMxgE,aAElC,MAAMglF,EAAatoG,KAAK8jF,MAAM1sD,SAAWp3B,KAAK8jF,MAAM1sD,SAAW,IACzDmxE,EAAYD,EAAahnG,KAAKo3C,IAAK14C,KAAK8jF,MAAMv6E,OAEpDvJ,KAAKqoG,KAAK/4F,MAAM1I,IAAK2hG,EAAWA,EAAWD,GAE3CJ,GAAUltF,sBAAuBhb,KAAK8jF,MAAMljF,OAAO0iB,aAEnDtjB,KAAKqoG,KAAKn9E,OAAQg9E,SAEEnoG,IAAfC,KAAKsS,MAETtS,KAAKqoG,KAAKzrE,SAAStqB,MAAM1L,IAAK5G,KAAKsS,OAInCtS,KAAKqoG,KAAKzrE,SAAStqB,MAAM3K,KAAM3H,KAAK8jF,MAAMxxE,MAI5C,EAID,MAAMk2F,GAA0B,IAAIvmF,GAC9BwmF,GAA4B,IAAI76E,GAChC86E,GAAgC,IAAI96E,GAG1C,MAAM+6E,WAAuBv3C,GAE5BxuD,WAAAA,CAAaqjB,GAEZ,MAAMm9B,EAAQwlD,GAAa3iF,GAErBY,EAAW,IAAIgnB,GAEfuG,EAAW,GACXy0D,EAAS,GAETvmE,EAAS,IAAI/B,GAAO,EAAG,EAAG,GAC1BgC,EAAS,IAAIhC,GAAO,EAAG,EAAG,GAEhC,IAAM,IAAIx/B,EAAI,EAAGA,EAAIqiD,EAAMniD,OAAQF,IAAO,CAEzC,MAAMijD,EAAOZ,EAAOriD,GAEfijD,EAAK3uB,QAAU2uB,EAAK3uB,OAAOkuB,SAE/BnP,EAASh0C,KAAM,EAAG,EAAG,GACrBg0C,EAASh0C,KAAM,EAAG,EAAG,GACrByoG,EAAOzoG,KAAMkiC,EAAOzzB,EAAGyzB,EAAOt0B,EAAGs0B,EAAOv8B,GACxC8iG,EAAOzoG,KAAMmiC,EAAO1zB,EAAG0zB,EAAOv0B,EAAGu0B,EAAOx8B,GAI1C,CAEA8gB,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACzEvtB,EAAS4nB,aAAc,QAAS,IAAIpB,GAAwBw7D,EAAQ,IAIpErxF,MAAOqP,EAFU,IAAIgpC,GAAmB,CAAE7sB,cAAc,EAAMa,WAAW,EAAOC,YAAY,EAAOsB,YAAY,EAAOlC,aAAa,KAInIljC,KAAK8oG,kBAAmB,EAExB9oG,KAAKH,KAAO,iBAEZG,KAAK02F,KAAOzwE,EACZjmB,KAAKojD,MAAQA,EAEbpjD,KAAK6P,OAASoW,EAAO3C,YACrBtjB,KAAK+X,kBAAmB,CAEzB,CAEA+gB,iBAAAA,CAAmBC,GAElB,MAAMqqB,EAAQpjD,KAAKojD,MAEbv8B,EAAW7mB,KAAK6mB,SAChB4K,EAAW5K,EAASE,aAAc,YAExC2hF,GAAgB/gG,KAAM3H,KAAK02F,KAAKpzE,aAAcpV,SAE9C,IAAM,IAAInN,EAAI,EAAGuoB,EAAI,EAAGvoB,EAAIqiD,EAAMniD,OAAQF,IAAO,CAEhD,MAAMijD,EAAOZ,EAAOriD,GAEfijD,EAAK3uB,QAAU2uB,EAAK3uB,OAAOkuB,SAE/BklD,GAAYl8F,iBAAkBm8F,GAAiB1kD,EAAK1gC,aACpDklF,GAAUxtF,sBAAuBytF,IACjCh3E,EAAS+a,OAAQljB,EAAGk/E,GAAUhmG,EAAGgmG,GAAU/lG,EAAG+lG,GAAUjvF,GAExDkvF,GAAYl8F,iBAAkBm8F,GAAiB1kD,EAAK3uB,OAAO/R,aAC3DklF,GAAUxtF,sBAAuBytF,IACjCh3E,EAAS+a,OAAQljB,EAAI,EAAGk/E,GAAUhmG,EAAGgmG,GAAU/lG,EAAG+lG,GAAUjvF,GAE5D+P,GAAK,EAIP,CAEAzC,EAASE,aAAc,YAAa/Q,aAAc,EAElDwB,MAAMshB,kBAAmBC,EAE1B,CAEA7f,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAKD,SAAS0vF,GAAa3iF,GAErB,MAAM8iF,EAAW,IAEM,IAAlB9iF,EAAOs9B,QAEXwlD,EAAS3oG,KAAM6lB,GAIhB,IAAM,IAAIllB,EAAI,EAAGA,EAAIklB,EAAOsB,SAAStmB,OAAQF,IAE5CgoG,EAAS3oG,KAAK0xE,MAAOi3B,EAAUH,GAAa3iF,EAAOsB,SAAUxmB,KAI9D,OAAOgoG,CAER,CAEA,MAAMC,WAAyBr2D,GAE9B/vC,WAAAA,CAAakhF,EAAOmlB,EAAY32F,GAK/BkF,MAHiB,IAAIk1D,GAAgBu8B,EAAY,EAAG,GACnC,IAAI9+D,GAAmB,CAAET,WAAW,EAAMK,KAAK,EAAO3E,YAAY,KAInFplC,KAAK8jF,MAAQA,EAEb9jF,KAAKsS,MAAQA,EAEbtS,KAAKH,KAAO,mBAEZG,KAAK6P,OAAS7P,KAAK8jF,MAAMxgE,YACzBtjB,KAAK+X,kBAAmB,EAExB/X,KAAKuf,QA0BN,CAEArG,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,CAEAqG,MAAAA,GAECvf,KAAK8jF,MAAMl9D,mBAAmB,GAAM,QAEhB7mB,IAAfC,KAAKsS,MAETtS,KAAK48B,SAAStqB,MAAM1L,IAAK5G,KAAKsS,OAI9BtS,KAAK48B,SAAStqB,MAAM3K,KAAM3H,KAAK8jF,MAAMxxE,MAmBvC,EAID,MAAM42F,GAA0B,IAAIjnF,GAC9BknF,GAAwB,IAAI5oE,GAC5B6oE,GAAwB,IAAI7oE,GAElC,MAAM8oE,WAA8Bl0E,GAEnCvyB,WAAAA,CAAakhF,EAAOh+D,EAAMxT,GAEzBkF,QAEAxX,KAAK8jF,MAAQA,EAEb9jF,KAAK6P,OAASi0E,EAAMxgE,YACpBtjB,KAAK+X,kBAAmB,EAExB/X,KAAKsS,MAAQA,EAEbtS,KAAKH,KAAO,wBAEZ,MAAMgnB,EAAW,IAAI2kD,GAAoB1lD,GACzCe,EAASoQ,QAAmB,GAAV31B,KAAKC,IAEvBvB,KAAK48B,SAAW,IAAIuN,GAAmB,CAAET,WAAW,EAAMK,KAAK,EAAO3E,YAAY,SAC9DrlC,IAAfC,KAAKsS,QAAsBtS,KAAK48B,SAASoG,cAAe,GAE7D,MAAMvR,EAAW5K,EAASE,aAAc,YAClC8hF,EAAS,IAAIhmG,aAA+B,EAAjB4uB,EAASzV,OAE1C6K,EAAS4nB,aAAc,QAAS,IAAInD,GAAiBu9D,EAAQ,IAE7D7oG,KAAK6H,IAAK,IAAI8qC,GAAM9rB,EAAU7mB,KAAK48B,WAEnC58B,KAAKuf,QAEN,CAEArG,OAAAA,GAEClZ,KAAKunB,SAAU,GAAIV,SAAS3N,UAC5BlZ,KAAKunB,SAAU,GAAIqV,SAAS1jB,SAE7B,CAEAqG,MAAAA,GAEC,MAAM47B,EAAOn7C,KAAKunB,SAAU,GAE5B,QAAoBxnB,IAAfC,KAAKsS,MAETtS,KAAK48B,SAAStqB,MAAM1L,IAAK5G,KAAKsS,WAExB,CAEN,MAAMu2F,EAAS1tD,EAAKt0B,SAASE,aAAc,SAE3CoiF,GAAQxhG,KAAM3H,KAAK8jF,MAAMxxE,OACzB82F,GAAQzhG,KAAM3H,KAAK8jF,MAAMtB,aAEzB,IAAM,IAAIzhF,EAAI,EAAGC,EAAI6nG,EAAO7sF,MAAOjb,EAAIC,EAAGD,IAAO,CAEhD,MAAMuR,EAAUvR,EAAMC,EAAI,EAAQmoG,GAAUC,GAE5CP,EAAOr8D,OAAQzrC,EAAGuR,EAAMzD,EAAGyD,EAAMtE,EAAGsE,EAAMvM,EAE3C,CAEA8iG,EAAO7yF,aAAc,CAEtB,CAEAhW,KAAK8jF,MAAMl9D,mBAAmB,GAAM,GAEpCu0B,EAAKjwB,OAAQg+E,GAAUluF,sBAAuBhb,KAAK8jF,MAAMxgE,aAAcra,SAExE,EAID,MAAMqgG,WAAmBl4C,GAExBxuD,WAAAA,GAA+E,IAAlEkjB,EAAI3hB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAI4vD,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIm+B,EAAMn+B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,QAAUo+B,EAAMp+B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,QAEnEm+B,EAAS,IAAI/B,GAAO+B,GACpBC,EAAS,IAAIhC,GAAOgC,GAEpB,MAAMv3B,EAAS+oD,EAAY,EACrBzzC,EAAOwF,EAAOiuC,EACdhuC,EAAWD,EAAO,EAElBsuB,EAAW,GAAIy0D,EAAS,GAE9B,IAAM,IAAI9nG,EAAI,EAAGuoB,EAAI,EAAGsuC,GAAM7xC,EAAUhlB,GAAKgzD,EAAWhzD,IAAM62D,GAAKt3C,EAAO,CAEzE8zB,EAASh0C,MAAQ2lB,EAAU,EAAG6xC,EAAG7xC,EAAU,EAAG6xC,GAC9CxjB,EAASh0C,KAAMw3D,EAAG,GAAK7xC,EAAU6xC,EAAG,EAAG7xC,GAEvC,MAAMzT,EAAQvR,IAAMiK,EAASs3B,EAASC,EAEtCjwB,EAAM5H,QAASm+F,EAAQv/E,GAAKA,GAAK,EACjChX,EAAM5H,QAASm+F,EAAQv/E,GAAKA,GAAK,EACjChX,EAAM5H,QAASm+F,EAAQv/E,GAAKA,GAAK,EACjChX,EAAM5H,QAASm+F,EAAQv/E,GAAKA,GAAK,CAElC,CAEA,MAAMzC,EAAW,IAAIgnB,GACrBhnB,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACzEvtB,EAAS4nB,aAAc,QAAS,IAAIpB,GAAwBw7D,EAAQ,IAIpErxF,MAAOqP,EAFU,IAAIgpC,GAAmB,CAAE7sB,cAAc,EAAMoC,YAAY,KAI1EplC,KAAKH,KAAO,YAEb,CAEAqZ,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAID,MAAMqwF,WAAwBn4C,GAE7BxuD,WAAAA,GAA0G,IAA7F4hB,EAAMrgB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIqlG,EAAOrlG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIslG,EAAKtlG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAG4vD,EAAS5vD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,GAAIm+B,EAAMn+B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,QAAUo+B,EAAMp+B,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,QAE9Fm+B,EAAS,IAAI/B,GAAO+B,GACpBC,EAAS,IAAIhC,GAAOgC,GAEpB,MAAM6R,EAAW,GACXy0D,EAAS,GAIf,GAAKW,EAAU,EAEd,IAAM,IAAIzoG,EAAI,EAAGA,EAAIyoG,EAASzoG,IAAO,CAEpC,MAAM6G,EAAM7G,EAAIyoG,GAAwB,EAAVloG,KAAKC,IAE7BiB,EAAIlB,KAAK6E,IAAKyB,GAAM4c,EACpBjL,EAAIjY,KAAK4E,IAAK0B,GAAM4c,EAE1B4vB,EAASh0C,KAAM,EAAG,EAAG,GACrBg0C,EAASh0C,KAAMoC,EAAG,EAAG+W,GAErB,MAAMjH,EAAc,EAAJvR,EAAUuhC,EAASC,EAEnCsmE,EAAOzoG,KAAMkS,EAAMzD,EAAGyD,EAAMtE,EAAGsE,EAAMvM,GACrC8iG,EAAOzoG,KAAMkS,EAAMzD,EAAGyD,EAAMtE,EAAGsE,EAAMvM,EAEtC,CAMD,IAAM,IAAIhF,EAAI,EAAGA,EAAI0oG,EAAO1oG,IAAO,CAElC,MAAMuR,EAAc,EAAJvR,EAAUuhC,EAASC,EAE7B1zB,EAAI2V,EAAWA,EAASilF,EAAQ1oG,EAEtC,IAAM,IAAIuoB,EAAI,EAAGA,EAAIyqC,EAAWzqC,IAAO,CAItC,IAAI1hB,EAAM0hB,EAAIyqC,GAA0B,EAAVzyD,KAAKC,IAE/BiB,EAAIlB,KAAK6E,IAAKyB,GAAMiH,EACpB0K,EAAIjY,KAAK4E,IAAK0B,GAAMiH,EAExBulC,EAASh0C,KAAMoC,EAAG,EAAG+W,GACrBsvF,EAAOzoG,KAAMkS,EAAMzD,EAAGyD,EAAMtE,EAAGsE,EAAMvM,GAIrC6B,GAAQ0hB,EAAI,GAAMyqC,GAA0B,EAAVzyD,KAAKC,IAEvCiB,EAAIlB,KAAK6E,IAAKyB,GAAMiH,EACpB0K,EAAIjY,KAAK4E,IAAK0B,GAAMiH,EAEpBulC,EAASh0C,KAAMoC,EAAG,EAAG+W,GACrBsvF,EAAOzoG,KAAMkS,EAAMzD,EAAGyD,EAAMtE,EAAGsE,EAAMvM,EAEtC,CAED,CAEA,MAAM8gB,EAAW,IAAIgnB,GACrBhnB,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACzEvtB,EAAS4nB,aAAc,QAAS,IAAIpB,GAAwBw7D,EAAQ,IAIpErxF,MAAOqP,EAFU,IAAIgpC,GAAmB,CAAE7sB,cAAc,EAAMoC,YAAY,KAI1EplC,KAAKH,KAAO,iBAEb,CAEAqZ,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAID,MAAMwwF,GAAoB,IAAIznF,GACxB0nF,GAAoB,IAAI1nF,GACxB2nF,GAAoB,IAAI3nF,GAE9B,MAAM4nF,WAA+B10E,GAEpCvyB,WAAAA,CAAakhF,EAAOh+D,EAAMxT,GAEzBkF,QAEAxX,KAAK8jF,MAAQA,EAEb9jF,KAAK6P,OAASi0E,EAAMxgE,YACpBtjB,KAAK+X,kBAAmB,EAExB/X,KAAKsS,MAAQA,EAEbtS,KAAKH,KAAO,8BAEEE,IAAT+lB,IAAqBA,EAAO,GAEjC,IAAIe,EAAW,IAAIgnB,GACnBhnB,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB,EAC5DvnB,EAAMA,EAAM,EACdA,EAAMA,EAAM,EACZA,GAAQA,EAAM,GACZA,GAAQA,EAAM,GACdA,EAAMA,EAAM,GACZ,IAEH,MAAM8W,EAAW,IAAIizB,GAAmB,CAAE9lB,KAAK,EAAO3E,YAAY,IAElEplC,KAAK8pG,WAAa,IAAIt5C,GAAM3pC,EAAU+V,GACtC58B,KAAK6H,IAAK7H,KAAK8pG,YAEfjjF,EAAW,IAAIgnB,GACfhnB,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAErFrtC,KAAK+pG,WAAa,IAAIv5C,GAAM3pC,EAAU+V,GACtC58B,KAAK6H,IAAK7H,KAAK+pG,YAEf/pG,KAAKuf,QAEN,CAEArG,OAAAA,GAEClZ,KAAK8pG,WAAWjjF,SAAS3N,UACzBlZ,KAAK8pG,WAAWltE,SAAS1jB,UACzBlZ,KAAK+pG,WAAWljF,SAAS3N,UACzBlZ,KAAK+pG,WAAWntE,SAAS1jB,SAE1B,CAEAqG,MAAAA,GAECvf,KAAK8jF,MAAMl9D,mBAAmB,GAAM,GACpC5mB,KAAK8jF,MAAMljF,OAAOgmB,mBAAmB,GAAM,GAE3C8iF,GAAI1uF,sBAAuBhb,KAAK8jF,MAAMxgE,aACtCqmF,GAAI3uF,sBAAuBhb,KAAK8jF,MAAMljF,OAAO0iB,aAC7CsmF,GAAIzhG,WAAYwhG,GAAKD,IAErB1pG,KAAK8pG,WAAW5+E,OAAQy+E,SAEJ5pG,IAAfC,KAAKsS,OAETtS,KAAK8pG,WAAWltE,SAAStqB,MAAM1L,IAAK5G,KAAKsS,OACzCtS,KAAK+pG,WAAWntE,SAAStqB,MAAM1L,IAAK5G,KAAKsS,SAIzCtS,KAAK8pG,WAAWltE,SAAStqB,MAAM3K,KAAM3H,KAAK8jF,MAAMxxE,OAChDtS,KAAK+pG,WAAWntE,SAAStqB,MAAM3K,KAAM3H,KAAK8jF,MAAMxxE,QAIjDtS,KAAK+pG,WAAW7+E,OAAQy+E,IACxB3pG,KAAK+pG,WAAWz6F,MAAMiK,EAAIqwF,GAAI3oG,QAE/B,EAID,MAAM+oG,GAAwB,IAAI/nF,GAC5BgoF,GAAwB,IAAI3yD,GASlC,MAAM4yD,WAAqB94C,GAE1BxuD,WAAAA,CAAasgB,GAEZ,MAAM2D,EAAW,IAAIgnB,GACfjR,EAAW,IAAIizB,GAAmB,CAAEv9C,MAAO,SAAU0wB,cAAc,EAAMoC,YAAY,IAErFgP,EAAW,GACXy0D,EAAS,GAETsB,EAAW,CAAC,EAiDlB,SAASC,EAAStkG,EAAGC,GAEpBskG,EAAUvkG,GACVukG,EAAUtkG,EAEX,CAEA,SAASskG,EAAUpyE,GAElBmc,EAASh0C,KAAM,EAAG,EAAG,GACrByoG,EAAOzoG,KAAM,EAAG,EAAG,QAEKL,IAAnBoqG,EAAUlyE,KAEdkyE,EAAUlyE,GAAO,IAIlBkyE,EAAUlyE,GAAK73B,KAAQg0C,EAASnzC,OAAS,EAAM,EAEhD,CAjEAmpG,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MAIfA,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MAIfA,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MAIfA,EAAS,IAAK,MACdA,EAAS,IAAK,MACdA,EAAS,IAAK,MACdA,EAAS,IAAK,MAIdA,EAAS,KAAM,MACfA,EAAS,KAAM,MACfA,EAAS,KAAM,MAIfA,EAAS,IAAK,KACdA,EAAS,IAAK,KAIdA,EAAS,MAAO,OAChBA,EAAS,MAAO,OAEhBA,EAAS,MAAO,OAChBA,EAAS,MAAO,OAwBhBvjF,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACzEvtB,EAAS4nB,aAAc,QAAS,IAAIpB,GAAwBw7D,EAAQ,IAEpErxF,MAAOqP,EAAU+V,GAEjB58B,KAAKH,KAAO,eAEZG,KAAKkjB,OAASA,EACTljB,KAAKkjB,OAAOi1B,wBAAyBn4C,KAAKkjB,OAAOi1B,yBAEtDn4C,KAAK6P,OAASqT,EAAOI,YACrBtjB,KAAK+X,kBAAmB,EAExB/X,KAAKmqG,SAAWA,EAEhBnqG,KAAKuf,SAIL,MAAM+qF,EAAe,IAAI/pE,GAAO,UAC1BgqE,EAAY,IAAIhqE,GAAO,UACvBiqE,EAAU,IAAIjqE,GAAO,OACrBkqE,EAAc,IAAIlqE,GAAO,UACzBmqE,EAAa,IAAInqE,GAAO,SAE9BvgC,KAAK2qG,UAAWL,EAAcC,EAAWC,EAASC,EAAaC,EAEhE,CAEAC,SAAAA,CAAWpjD,EAAS8gD,EAAMx4E,EAAIjvB,EAAQuI,GAErC,MAEMyhG,EAFW5qG,KAAK6mB,SAEUE,aAAc,SAI9C6jF,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACrH6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACrH6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACrH6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAIrH6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,EAAG+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACrH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACvH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACvH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAIvH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACvH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACvH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GACvH6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAAK6kG,EAAep+D,OAAQ,GAAI+a,EAAQ14C,EAAG04C,EAAQv5C,EAAGu5C,EAAQxhD,GAIvH6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GAAK6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GACrG6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GAAK6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GACrG6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GAAK6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GACrG6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GAAK6kG,EAAep+D,OAAQ,GAAI67D,EAAKx5F,EAAGw5F,EAAKr6F,EAAGq6F,EAAKtiG,GAIrG6kG,EAAep+D,OAAQ,GAAI3c,EAAGhhB,EAAGghB,EAAG7hB,EAAG6hB,EAAG9pB,GAAK6kG,EAAep+D,OAAQ,GAAI3c,EAAGhhB,EAAGghB,EAAG7hB,EAAG6hB,EAAG9pB,GACzF6kG,EAAep+D,OAAQ,GAAI3c,EAAGhhB,EAAGghB,EAAG7hB,EAAG6hB,EAAG9pB,GAAK6kG,EAAep+D,OAAQ,GAAI3c,EAAGhhB,EAAGghB,EAAG7hB,EAAG6hB,EAAG9pB,GACzF6kG,EAAep+D,OAAQ,GAAI3c,EAAGhhB,EAAGghB,EAAG7hB,EAAG6hB,EAAG9pB,GAAK6kG,EAAep+D,OAAQ,GAAI3c,EAAGhhB,EAAGghB,EAAG7hB,EAAG6hB,EAAG9pB,GAIzF6kG,EAAep+D,OAAQ,GAAI5rC,EAAOiO,EAAGjO,EAAOoN,EAAGpN,EAAOmF,GAAK6kG,EAAep+D,OAAQ,GAAI5rC,EAAOiO,EAAGjO,EAAOoN,EAAGpN,EAAOmF,GACjH6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAAK6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAI3G6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAAK6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAC3G6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAAK6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAE3G6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAAK6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAC3G6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAAK6kG,EAAep+D,OAAQ,GAAIrjC,EAAM0F,EAAG1F,EAAM6E,EAAG7E,EAAMpD,GAE3G6kG,EAAe50F,aAAc,CAE9B,CAEAuJ,MAAAA,GAEC,MAAMsH,EAAW7mB,KAAK6mB,SAChBsjF,EAAWnqG,KAAKmqG,SAOtBF,GAAQ5mF,wBAAwB1b,KAAM3H,KAAKkjB,OAAOG,yBAGlD,MAAMwnF,EAAQ7qG,KAAKkjB,OAAO0P,mBAAqBtzB,IAA0B,EAAI,EAG7EwrG,GAAU,IAAKX,EAAUtjF,EAAUojF,GAAS,EAAG,EAAGY,GAClDC,GAAU,IAAKX,EAAUtjF,EAAUojF,GAAS,EAAG,EAAG,GAIlDa,GAAU,KAAMX,EAAUtjF,EAAUojF,IAhB1B,GAAO,EAgBsCY,GACvDC,GAAU,KAAMX,EAAUtjF,EAAUojF,GAjB1B,GAAO,EAiBoCY,GACrDC,GAAU,KAAMX,EAAUtjF,EAAUojF,IAlB1B,EAAO,EAkBoCY,GACrDC,GAAU,KAAMX,EAAUtjF,EAAUojF,GAnB1B,EAAO,EAmBkCY,GAInDC,GAAU,KAAMX,EAAUtjF,EAAUojF,IAvB1B,GAAO,EAuBsC,GACvDa,GAAU,KAAMX,EAAUtjF,EAAUojF,GAxB1B,GAAO,EAwBoC,GACrDa,GAAU,KAAMX,EAAUtjF,EAAUojF,IAzB1B,EAAO,EAyBoC,GACrDa,GAAU,KAAMX,EAAUtjF,EAAUojF,GA1B1B,EAAO,EA0BkC,GAInDa,GAAU,KAAMX,EAAUtjF,EAAUojF,GAASzwF,GAASvL,IAAS48F,GAC/DC,GAAU,KAAMX,EAAUtjF,EAAUojF,IAAS,GAAWh8F,IAAS48F,GACjEC,GAAU,KAAMX,EAAUtjF,EAAUojF,GAAS,EAAGh8F,EAAO48F,GAIvDC,GAAU,MAAOX,EAAUtjF,EAAUojF,IApC3B,EAoCyC,EAAG,GACtDa,GAAU,MAAOX,EAAUtjF,EAAUojF,GArC3B,EAqCuC,EAAG,GACpDa,GAAU,MAAOX,EAAUtjF,EAAUojF,GAAS,GAtC7B,EAsCqC,GACtDa,GAAU,MAAOX,EAAUtjF,EAAUojF,GAAS,EAvC7B,EAuCmC,GAEpDa,GAAU,MAAOX,EAAUtjF,EAAUojF,IAzC3B,EAyCyC,EAAGY,GACtDC,GAAU,MAAOX,EAAUtjF,EAAUojF,GA1C3B,EA0CuC,EAAGY,GACpDC,GAAU,MAAOX,EAAUtjF,EAAUojF,GAAS,GA3C7B,EA2CqCY,GACtDC,GAAU,MAAOX,EAAUtjF,EAAUojF,GAAS,EA5C7B,EA4CmCY,GAEpDhkF,EAASE,aAAc,YAAa/Q,aAAc,CAEnD,CAEAkD,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAKD,SAAS4xF,GAAUtkF,EAAO2jF,EAAUtjF,EAAU3D,EAAQ1gB,EAAGC,EAAG8W,GAE3DywF,GAAQpjG,IAAKpE,EAAGC,EAAG8W,GAAI6J,UAAWF,GAElC,MAAM0C,EAASukF,EAAU3jF,GAEzB,QAAgBzmB,IAAX6lB,EAAuB,CAE3B,MAAM6L,EAAW5K,EAASE,aAAc,YAExC,IAAM,IAAIhmB,EAAI,EAAGC,EAAI4kB,EAAO3kB,OAAQF,EAAIC,EAAGD,IAE1C0wB,EAAS+a,OAAQ5mB,EAAQ7kB,GAAKipG,GAAQxnG,EAAGwnG,GAAQvnG,EAAGunG,GAAQzwF,EAI9D,CAED,CAEA,MAAMwxF,GAAqB,IAAI5lF,GAE/B,MAAM6lF,WAAkB55C,GAEvBxuD,WAAAA,CAAaqjB,GAA2B,IAAnB3T,EAAKnO,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,SAE5B,MAAMotC,EAAU,IAAIxuC,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAClGqlG,EAAY,IAAIvlG,aAAc,IAE9BgkB,EAAW,IAAIgnB,GACrBhnB,EAASynB,SAAU,IAAIhD,GAAiBiG,EAAS,IACjD1qB,EAAS4nB,aAAc,WAAY,IAAInD,GAAiB88D,EAAW,IAEnE5wF,MAAOqP,EAAU,IAAIgpC,GAAmB,CAAEv9C,MAAOA,EAAO8yB,YAAY,KAEpEplC,KAAKimB,OAASA,EACdjmB,KAAKH,KAAO,YAEZG,KAAK+X,kBAAmB,EAExB/X,KAAKuf,QAEN,CAEAA,MAAAA,CAAQ0G,GAcP,QAZgBlmB,IAAXkmB,GAEJpf,QAAQC,KAAM,4DAIM/G,IAAhBC,KAAKimB,QAET8kF,GAAK/kF,cAAehmB,KAAKimB,QAIrB8kF,GAAK1kF,UAAY,OAEtB,MAAMnkB,EAAM6oG,GAAK7oG,IACXC,EAAM4oG,GAAK5oG,IAkBXsvB,EAAWzxB,KAAK6mB,SAASmnB,WAAWvc,SACpC5wB,EAAQ4wB,EAAS5wB,MAEvBA,EAAO,GAAMsB,EAAIK,EAAG3B,EAAO,GAAMsB,EAAIM,EAAG5B,EAAO,GAAMsB,EAAIoX,EACzD1Y,EAAO,GAAMqB,EAAIM,EAAG3B,EAAO,GAAMsB,EAAIM,EAAG5B,EAAO,GAAMsB,EAAIoX,EACzD1Y,EAAO,GAAMqB,EAAIM,EAAG3B,EAAO,GAAMqB,EAAIO,EAAG5B,EAAO,GAAMsB,EAAIoX,EACzD1Y,EAAO,GAAMsB,EAAIK,EAAG3B,EAAO,IAAOqB,EAAIO,EAAG5B,EAAO,IAAOsB,EAAIoX,EAC3D1Y,EAAO,IAAOsB,EAAIK,EAAG3B,EAAO,IAAOsB,EAAIM,EAAG5B,EAAO,IAAOqB,EAAIqX,EAC5D1Y,EAAO,IAAOqB,EAAIM,EAAG3B,EAAO,IAAOsB,EAAIM,EAAG5B,EAAO,IAAOqB,EAAIqX,EAC5D1Y,EAAO,IAAOqB,EAAIM,EAAG3B,EAAO,IAAOqB,EAAIO,EAAG5B,EAAO,IAAOqB,EAAIqX,EAC5D1Y,EAAO,IAAOsB,EAAIK,EAAG3B,EAAO,IAAOqB,EAAIO,EAAG5B,EAAO,IAAOqB,EAAIqX,EAE5DkY,EAASzb,aAAc,EAEvBhW,KAAK6mB,SAASooB,uBAEf,CAEAjpB,aAAAA,CAAeC,GAKd,OAHAjmB,KAAKimB,OAASA,EACdjmB,KAAKuf,SAEEvf,IAER,CAEA2H,IAAAA,CAAM+P,EAAQylB,GAMb,OAJA3lB,MAAM7P,KAAM+P,EAAQylB,GAEpBn9B,KAAKimB,OAASvO,EAAOuO,OAEdjmB,IAER,CAEAkZ,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAID,MAAM+xF,WAAmB75C,GAExBxuD,WAAAA,CAAawjB,GAAwB,IAAnB9T,EAAKnO,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,SAEzB,MAAMotC,EAAU,IAAIxuC,YAAa,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAIlG8jB,EAAW,IAAIgnB,GAErBhnB,EAASynB,SAAU,IAAIhD,GAAiBiG,EAAS,IAEjD1qB,EAAS4nB,aAAc,WAAY,IAAIpB,GANrB,CAAE,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,GAAK,GAAK,GAAK,GAAK,EAAG,GAAK,GAAK,GAMvC,IAE1E71B,MAAOqP,EAAU,IAAIgpC,GAAmB,CAAEv9C,MAAOA,EAAO8yB,YAAY,KAEpEplC,KAAKomB,IAAMA,EAEXpmB,KAAKH,KAAO,aAEZG,KAAK6mB,SAASooB,uBAEf,CAEAnW,iBAAAA,CAAmBC,GAElB,MAAM3S,EAAMpmB,KAAKomB,IAEZA,EAAIC,YAETD,EAAIE,UAAWtmB,KAAKyxB,UAEpBrL,EAAIG,QAASvmB,KAAKsP,OAElBtP,KAAKsP,MAAMjH,eAAgB,IAE3BmP,MAAMshB,kBAAmBC,GAE1B,CAEA7f,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAID,MAAMgyF,WAAoB16C,GAEzB5tD,WAAAA,CAAaolB,GAAkC,IAA3BlC,EAAI3hB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAE1B,MAAMmO,EAF0BnO,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,SAM7B0iB,EAAW,IAAIgnB,GACrBhnB,EAAS4nB,aAAc,WAAY,IAAIpB,GAHrB,CAAE,GAAK,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,EAAG,EAAG,EAAG,GAG/B,IAC1ExmB,EAASooB,wBAETz3B,MAAOqP,EAAU,IAAIgpC,GAAmB,CAAEv9C,MAAOA,EAAO8yB,YAAY,KAEpEplC,KAAKH,KAAO,cAEZG,KAAKgoB,MAAQA,EAEbhoB,KAAK8lB,KAAOA,EAEZ,MAEM6rB,EAAY,IAAI9D,GACtB8D,EAAUlD,aAAc,WAAY,IAAIpB,GAHrB,CAAE,EAAG,EAAG,GAAK,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,EAAG,EAAG,GAAK,GAAK,EAAG,EAAG,GAAK,EAAG,GAGR,IAC5EsE,EAAU1C,wBAEVjvC,KAAK6H,IAAK,IAAI8qC,GAAMhB,EAAW,IAAIxH,GAAmB,CAAE73B,MAAOA,EAAO2wB,QAAS,GAAKC,aAAa,EAAMY,YAAY,EAAOsB,YAAY,KAEvI,CAEAtM,iBAAAA,CAAmBC,GAElB/4B,KAAKyxB,SAAS7qB,IAAK,EAAG,EAAG,GAEzB5G,KAAKsP,MAAM1I,IAAK,GAAM5G,KAAK8lB,KAAM,GAAM9lB,KAAK8lB,KAAM,GAElD9lB,KAAKkrB,OAAQlrB,KAAKgoB,MAAM5D,QAExBpkB,KAAKu3B,YAAcv3B,KAAKgoB,MAAMC,UAE9BzQ,MAAMshB,kBAAmBC,EAE1B,CAEA7f,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,UACdlZ,KAAKunB,SAAU,GAAIV,SAAS3N,UAC5BlZ,KAAKunB,SAAU,GAAIqV,SAAS1jB,SAE7B,EAID,MAAMiyF,GAAsB,IAAIlpF,GAChC,IAAImpF,GAAeC,GAEnB,MAAMC,WAAoBn2E,GAIzBvyB,WAAAA,GAAoK,IAAvJgc,EAAGza,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAS,EAAG,EAAG,GAAK6I,EAAM3mB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,IAAI8d,GAAS,EAAG,EAAG,GAAKhhB,EAAMkD,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAAGmO,EAAKnO,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,SAAUonG,EAAUpnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAY,GAATlD,EAAcuqG,EAASrnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAgB,GAAbonG,EAEhJ/zF,QAEAxX,KAAKH,KAAO,mBAEWE,IAAlBqrG,KAEJA,GAAgB,IAAIv9D,GACpBu9D,GAAc38D,aAAc,WAAY,IAAIpB,GAAwB,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAK,IAE1Fg+D,GAAgB,IAAIzuC,GAAkB,EAAG,GAAK,EAAG,EAAG,GACpDyuC,GAAc17F,UAAW,GAAK,GAAK,IAIpC3P,KAAKyxB,SAAS9pB,KAAMmjB,GAEpB9qB,KAAKymD,KAAO,IAAI+J,GAAM46C,GAAe,IAAIv7C,GAAmB,CAAEv9C,MAAOA,EAAO8yB,YAAY,KACxFplC,KAAKymD,KAAK1uC,kBAAmB,EAC7B/X,KAAK6H,IAAK7H,KAAKymD,MAEfzmD,KAAKqoG,KAAO,IAAI11D,GAAM04D,GAAe,IAAIlhE,GAAmB,CAAE73B,MAAOA,EAAO8yB,YAAY,KACxFplC,KAAKqoG,KAAKtwF,kBAAmB,EAC7B/X,KAAK6H,IAAK7H,KAAKqoG,MAEfroG,KAAKyrG,aAAc7sF,GACnB5e,KAAKkK,UAAWjJ,EAAQsqG,EAAYC,EAErC,CAEAC,YAAAA,CAAc7sF,GAIb,GAAKA,EAAInc,EAAI,OAEZzC,KAAKof,WAAWxY,IAAK,EAAG,EAAG,EAAG,QAExB,GAAKgY,EAAInc,GAAM,OAErBzC,KAAKof,WAAWxY,IAAK,EAAG,EAAG,EAAG,OAExB,CAENukG,GAAMvkG,IAAKgY,EAAIrF,EAAG,GAAKqF,EAAIpc,GAAIa,YAE/B,MAAM+B,EAAU9D,KAAKsI,KAAMgV,EAAInc,GAE/BzC,KAAKof,WAAWS,iBAAkBsrF,GAAO/lG,EAE1C,CAED,CAEA8E,SAAAA,CAAWjJ,GAAkE,IAA1DsqG,EAAUpnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAY,GAATlD,EAAcuqG,EAASrnG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAgB,GAAbonG,EAEzDvrG,KAAKymD,KAAKn3C,MAAM1I,IAAK,EAAGtF,KAAKa,IAAK,KAAQlB,EAASsqG,GAAc,GACjEvrG,KAAKymD,KAAKhuC,eAEVzY,KAAKqoG,KAAK/4F,MAAM1I,IAAK4kG,EAAWD,EAAYC,GAC5CxrG,KAAKqoG,KAAK52E,SAAShvB,EAAIxB,EACvBjB,KAAKqoG,KAAK5vF,cAEX,CAEAizF,QAAAA,CAAUp5F,GAETtS,KAAKymD,KAAK7pB,SAAStqB,MAAM1L,IAAK0L,GAC9BtS,KAAKqoG,KAAKzrE,SAAStqB,MAAM1L,IAAK0L,EAE/B,CAEA3K,IAAAA,CAAM+P,GAOL,OALAF,MAAM7P,KAAM+P,GAAQ,GAEpB1X,KAAKymD,KAAK9+C,KAAM+P,EAAO+uC,MACvBzmD,KAAKqoG,KAAK1gG,KAAM+P,EAAO2wF,MAEhBroG,IAER,CAEAkZ,OAAAA,GAEClZ,KAAKymD,KAAK5/B,SAAS3N,UACnBlZ,KAAKymD,KAAK7pB,SAAS1jB,UACnBlZ,KAAKqoG,KAAKxhF,SAAS3N,UACnBlZ,KAAKqoG,KAAKzrE,SAAS1jB,SAEpB,EAID,MAAMyyF,WAAmBv6C,GAExBxuD,WAAAA,GAAwB,IAAXkjB,EAAI3hB,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,EAEnB,MAAMiwC,EAAW,CAChB,EAAG,EAAG,EAAGtuB,EAAM,EAAG,EAClB,EAAG,EAAG,EAAG,EAAGA,EAAM,EAClB,EAAG,EAAG,EAAG,EAAG,EAAGA,GASVe,EAAW,IAAIgnB,GACrBhnB,EAAS4nB,aAAc,WAAY,IAAIpB,GAAwB+G,EAAU,IACzEvtB,EAAS4nB,aAAc,QAAS,IAAIpB,GARrB,CACd,EAAG,EAAG,EAAG,EAAG,GAAK,EACjB,EAAG,EAAG,EAAG,GAAK,EAAG,EACjB,EAAG,EAAG,EAAG,EAAG,GAAK,GAKkD,IAIpE71B,MAAOqP,EAFU,IAAIgpC,GAAmB,CAAE7sB,cAAc,EAAMoC,YAAY,KAI1EplC,KAAKH,KAAO,YAEb,CAEA8qG,SAAAA,CAAWiB,EAAYC,EAAYC,GAElC,MAAMx5F,EAAQ,IAAIiuB,GACZ1/B,EAAQb,KAAK6mB,SAASmnB,WAAW17B,MAAMzR,MAgB7C,OAdAyR,EAAM1L,IAAKglG,GACXt5F,EAAM5H,QAAS7J,EAAO,GACtByR,EAAM5H,QAAS7J,EAAO,GAEtByR,EAAM1L,IAAKilG,GACXv5F,EAAM5H,QAAS7J,EAAO,GACtByR,EAAM5H,QAAS7J,EAAO,GAEtByR,EAAM1L,IAAKklG,GACXx5F,EAAM5H,QAAS7J,EAAO,IACtByR,EAAM5H,QAAS7J,EAAO,IAEtBb,KAAK6mB,SAASmnB,WAAW17B,MAAM0D,aAAc,EAEtChW,IAER,CAEAkZ,OAAAA,GAEClZ,KAAK6mB,SAAS3N,UACdlZ,KAAK48B,SAAS1jB,SAEf,EAID,MAAM6yF,GAELnpG,WAAAA,GAEC5C,KAAKH,KAAO,YAEZG,KAAKsS,MAAQ,IAAIiuB,GAEjBvgC,KAAKgsG,SAAW,GAChBhsG,KAAKisG,YAAc,IAEpB,CAEAxxC,MAAAA,CAAQj4D,EAAGC,GAMV,OAJAzC,KAAKisG,YAAc,IAAI1xC,GACvBv6D,KAAKgsG,SAAS5rG,KAAMJ,KAAKisG,aACzBjsG,KAAKisG,YAAYxxC,OAAQj4D,EAAGC,GAErBzC,IAER,CAEA06D,MAAAA,CAAQl4D,EAAGC,GAIV,OAFAzC,KAAKisG,YAAYvxC,OAAQl4D,EAAGC,GAErBzC,IAER,CAEA26D,gBAAAA,CAAkBC,EAAMC,EAAMnF,EAAIC,GAIjC,OAFA31D,KAAKisG,YAAYtxC,iBAAkBC,EAAMC,EAAMnF,EAAIC,GAE5C31D,IAER,CAEA86D,aAAAA,CAAeC,EAAOC,EAAOC,EAAOC,EAAOxF,EAAIC,GAI9C,OAFA31D,KAAKisG,YAAYnxC,cAAeC,EAAOC,EAAOC,EAAOC,EAAOxF,EAAIC,GAEzD31D,IAER,CAEAm7D,UAAAA,CAAYb,GAIX,OAFAt6D,KAAKisG,YAAY9wC,WAAYb,GAEtBt6D,IAER,CAEAksG,QAAAA,CAAUC,GAqBT,SAASC,EAAsBxkC,EAAMykC,GAEpC,MAAMC,EAAUD,EAAUprG,OAM1B,IAAIujE,GAAS,EACb,IAAM,IAAI1xC,EAAIw5E,EAAU,EAAGzmG,EAAI,EAAGA,EAAIymG,EAASx5E,EAAIjtB,IAAO,CAEzD,IAAI0mG,EAAYF,EAAWv5E,GACvB05E,EAAaH,EAAWxmG,GAExB4mG,EAASD,EAAWhqG,EAAI+pG,EAAU/pG,EAClCkqG,EAASF,EAAW/pG,EAAI8pG,EAAU9pG,EAEtC,GAAKnB,KAAK8C,IAAKsoG,GAAW5tF,OAAOC,QAAU,CAU1C,GAPK2tF,EAAS,IAEbH,EAAYF,EAAWxmG,GAAK4mG,GAAWA,EACvCD,EAAaH,EAAWv5E,GAAK45E,GAAWA,GAIlC9kC,EAAKnlE,EAAI8pG,EAAU9pG,GAASmlE,EAAKnlE,EAAI+pG,EAAW/pG,EAAQ,SAE/D,GAAKmlE,EAAKnlE,IAAM8pG,EAAU9pG,GAEzB,GAAKmlE,EAAKplE,IAAM+pG,EAAU/pG,EAAK,OAAO,MAGhC,CAEN,MAAMmqG,EAAWD,GAAW9kC,EAAKplE,EAAI+pG,EAAU/pG,GAAMiqG,GAAW7kC,EAAKnlE,EAAI8pG,EAAU9pG,GACnF,GAAkB,IAAbkqG,EAAoB,OAAO,EAChC,GAAKA,EAAW,EAAQ,SACxBnoC,GAAWA,CAEZ,CAED,KAAO,CAGN,GAAKoD,EAAKnlE,IAAM8pG,EAAU9pG,EAAM,SAEhC,GAAS+pG,EAAWhqG,GAAKolE,EAAKplE,GAASolE,EAAKplE,GAAK+pG,EAAU/pG,GACrD+pG,EAAU/pG,GAAKolE,EAAKplE,GAASolE,EAAKplE,GAAKgqG,EAAWhqG,EAAS,OAAO,CAGzE,CAED,CAEA,OAAOgiE,CAER,CAEA,MAAMe,EAAcF,GAAWE,YAEzBymC,EAAWhsG,KAAKgsG,SACtB,GAAyB,IAApBA,EAAS/qG,OAAe,MAAO,GAEpC,IAAI2rG,EAAOC,EAASC,EACpB,MAAM1zE,EAAS,GAEf,GAAyB,IAApB4yE,EAAS/qG,OAMb,OAJA4rG,EAAUb,EAAU,GACpBc,EAAW,IAAI3sC,GACf2sC,EAASvzC,OAASszC,EAAQtzC,OAC1BngC,EAAOh5B,KAAM0sG,GACN1zE,EAIR,IAAI2zE,GAAexnC,EAAaymC,EAAU,GAAIl4C,aAC9Ci5C,EAAaZ,GAAUY,EAAaA,EAIpC,MAAMC,EAAmB,GACnBC,EAAY,GAClB,IAEIC,EAiGAC,EAnGAC,EAAgB,GAChBC,EAAU,EAGdJ,EAAWI,QAAYttG,EACvBqtG,EAAeC,GAAY,GAE3B,IAAM,IAAItsG,EAAI,EAAGC,EAAIgrG,EAAS/qG,OAAQF,EAAIC,EAAGD,IAE5C8rG,EAAUb,EAAUjrG,GACpBmsG,EAAYL,EAAQ/4C,YACpB84C,EAAQrnC,EAAa2nC,GACrBN,EAAQT,GAAUS,EAAQA,EAErBA,IAEKG,GAAkBE,EAAWI,IAAcA,IAEpDJ,EAAWI,GAAY,CAAEtoG,EAAG,IAAIo7D,GAASrtC,EAAGo6E,GAC5CD,EAAWI,GAAUtoG,EAAEw0D,OAASszC,EAAQtzC,OAEnCwzC,GAAaM,IAClBD,EAAeC,GAAY,IAM3BD,EAAeC,GAAUjtG,KAAM,CAAE6N,EAAG4+F,EAAS/5E,EAAGo6E,EAAW,KAS7D,IAAOD,EAAW,GAAM,OA7IxB,SAA0BK,GAEzB,MAAMl0E,EAAS,GAEf,IAAM,IAAIr4B,EAAI,EAAGC,EAAIssG,EAAWrsG,OAAQF,EAAIC,EAAGD,IAAO,CAErD,MAAM8rG,EAAUS,EAAYvsG,GAEtB+rG,EAAW,IAAI3sC,GACrB2sC,EAASvzC,OAASszC,EAAQtzC,OAE1BngC,EAAOh5B,KAAM0sG,EAEd,CAEA,OAAO1zE,CAER,CA4H+Bm0E,CAAiBvB,GAGhD,GAAKiB,EAAUhsG,OAAS,EAAI,CAE3B,IAAIusG,GAAY,EACZC,EAAW,EAEf,IAAM,IAAIC,EAAO,EAAGC,EAAOV,EAAUhsG,OAAQysG,EAAOC,EAAMD,IAEzDV,EAAkBU,GAAS,GAI5B,IAAM,IAAIA,EAAO,EAAGC,EAAOV,EAAUhsG,OAAQysG,EAAOC,EAAMD,IAAU,CAEnE,MAAME,EAAMR,EAAeM,GAE3B,IAAM,IAAIG,EAAO,EAAGA,EAAOD,EAAI3sG,OAAQ4sG,IAAU,CAEhD,MAAMC,EAAKF,EAAKC,GAChB,IAAIE,GAAkB,EAEtB,IAAM,IAAIC,EAAQ,EAAGA,EAAQf,EAAUhsG,OAAQ+sG,IAEzC5B,EAAsB0B,EAAGh7E,EAAGm6E,EAAWe,GAAQl7E,KAE9C46E,IAASM,GAAQP,IAEjBM,GAEJA,GAAkB,EAClBf,EAAkBgB,GAAQ5tG,KAAM0tG,IAIhCN,GAAY,GAQVO,GAEJf,EAAkBU,GAAOttG,KAAM0tG,EAIjC,CAED,CAEKL,EAAW,IAAmB,IAAdD,IAEpBJ,EAAgBJ,EAIlB,CAIA,IAAM,IAAIjsG,EAAI,EAAGsb,EAAK4wF,EAAUhsG,OAAQF,EAAIsb,EAAItb,IAAO,CAEtD+rG,EAAWG,EAAWlsG,GAAIgE,EAC1Bq0B,EAAOh5B,KAAM0sG,GACbK,EAAWC,EAAersG,GAE1B,IAAM,IAAIuoB,EAAI,EAAG+lB,EAAK89D,EAASlsG,OAAQqoB,EAAI+lB,EAAI/lB,IAE9CwjF,EAAS1sC,MAAMhgE,KAAM+sG,EAAU7jF,GAAIrb,EAIrC,CAIA,OAAOmrB,CAER,EAID,MAAM60E,WAAiBtuG,GAEtBiD,WAAAA,CAAaqjB,GAA4B,IAApBioF,EAAU/pG,UAAAlD,OAAA,QAAAlB,IAAAoE,UAAA,GAAAA,UAAA,GAAG,KAEjCqT,QAEAxX,KAAKimB,OAASA,EACdjmB,KAAKkuG,WAAaA,EAElBluG,KAAKkS,SAAU,EAEflS,KAAKmuG,OAAU,EAEfnuG,KAAKiZ,KAAO,CAAC,EACbjZ,KAAKouG,aAAe,CAAEz7G,KAAM,KAAMC,OAAQ,KAAMC,MAAO,MACvDmN,KAAKquG,QAAU,CAAEC,IAAK,KAAMC,IAAK,KAElC,CAEAhyD,OAAAA,GAAW,CAEXK,UAAAA,GAAc,CAEd1jC,OAAAA,GAAW,CAEXqG,MAAAA,GAAuB,EAgFxB,SAASivF,GAAetnG,EAAOC,EAAQkQ,EAAQxX,GAE9C,MAAM4uG,EAqGP,SAAmC5uG,GAElC,OAASA,GAER,KAAK5H,GACL,KAAKC,GACJ,MAAO,CAAEkoF,WAAY,EAAGn/C,WAAY,GACrC,KAAK7oC,GACL,KAAKD,GACL,KAAKK,GACJ,MAAO,CAAE4nF,WAAY,EAAGn/C,WAAY,GACrC,KAAKxoC,GACL,KAAKC,GACJ,MAAO,CAAE0nF,WAAY,EAAGn/C,WAAY,GACrC,KAAK3oC,GACL,KAAKD,GACL,KAAKE,GACJ,MAAO,CAAE6nF,WAAY,EAAGn/C,WAAY,GACrC,KAAKroC,GACJ,MAAO,CAAEwnF,WAAY,EAAGn/C,WAAY,GAItC,MAAM,IAAI79B,MAAO,wBAAwBvD,KAE1C,CA9HwB6uG,CAA0B7uG,GAEjD,OAASwX,GAGR,KAAKxe,GAEL,KAAKG,GACJ,OAAOkO,EAAQC,EAChB,KAAKlO,GACJ,OAAOiO,EAAQC,EAAS,EACzB,KAAK/N,GAEL,KAAKC,GACJ,OAAW6N,EAAQC,EAAWsnG,EAAextE,WAAewtE,EAAeruB,WAC5E,KAAK9mF,GAEL,KAAKC,GACJ,OAAW2N,EAAQC,EAAS,EAAMsnG,EAAextE,WAAewtE,EAAeruB,WAChF,KAAKtnF,GACJ,OAAWoO,EAAQC,EAAS,EAAMsnG,EAAextE,WAAewtE,EAAeruB,WAChF,KAAKrnF,GAEL,KAAKU,GACJ,OAAWyN,EAAQC,EAAS,EAAMsnG,EAAextE,WAAewtE,EAAeruB,WAGhF,KAAK1mF,GACL,KAAKC,GACJ,OAAO2H,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,EAC7E,KAAKvN,GACL,KAAKC,GACJ,OAAOyH,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAG7E,KAAKpN,GACL,KAAKE,GACJ,OAASqH,KAAKa,IAAK+E,EAAO,IAAO5F,KAAKa,IAAKgF,EAAQ,GAAQ,EAC5D,KAAKrN,GACL,KAAKE,GACJ,OAASsH,KAAKa,IAAK+E,EAAO,GAAM5F,KAAKa,IAAKgF,EAAQ,GAAQ,EAG3D,KAAKjN,GACL,KAAKC,GACJ,OAAOmH,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,EAC7E,KAAK/M,GAIL,KAAKC,GACJ,OAAOiH,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAK7M,GACJ,OAAOgH,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAK5M,GACJ,OAAO+G,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAK3M,GACJ,OAAO8G,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAK1M,GACJ,OAAO6G,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAKzM,GACJ,OAAO4G,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAKxM,GACJ,OAAO2G,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAKvM,GACJ,OAAO0G,KAAKoD,OAASwC,EAAQ,GAAM,GAAM5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC7E,KAAKtM,GACJ,OAAOyG,KAAKoD,OAASwC,EAAQ,GAAM,IAAO5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC9E,KAAKrM,GACJ,OAAOwG,KAAKoD,OAASwC,EAAQ,GAAM,IAAO5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC9E,KAAKpM,GACJ,OAAOuG,KAAKoD,OAASwC,EAAQ,GAAM,IAAO5F,KAAKoD,OAASyC,EAAS,GAAM,GAAM,GAC9E,KAAKnM,GACJ,OAAOsG,KAAKoD,OAASwC,EAAQ,GAAM,IAAO5F,KAAKoD,OAASyC,EAAS,GAAM,IAAO,GAC/E,KAAKlM,GACJ,OAAOqG,KAAKoD,OAASwC,EAAQ,IAAO,IAAO5F,KAAKoD,OAASyC,EAAS,GAAM,IAAO,GAChF,KAAKjM,GACJ,OAAOoG,KAAKoD,OAASwC,EAAQ,IAAO,IAAO5F,KAAKoD,OAASyC,EAAS,IAAO,IAAO,GAGjF,KAAKhM,GACL,KAAKC,GACL,KAAKC,GACJ,OAAOiG,KAAKkE,KAAM0B,EAAQ,GAAM5F,KAAKkE,KAAM2B,EAAS,GAAM,GAG3D,KAAK7L,GACL,KAAKC,GACJ,OAAO+F,KAAKkE,KAAM0B,EAAQ,GAAM5F,KAAKkE,KAAM2B,EAAS,GAAM,EAC3D,KAAK3L,GACL,KAAKC,GACJ,OAAO6F,KAAKkE,KAAM0B,EAAQ,GAAM5F,KAAKkE,KAAM2B,EAAS,GAAM,GAI5D,MAAM,IAAI/D,MACT,+CAA+CiU,YAGjD,CA6BA,MAAMs3F,GAAe,CACpBC,QA/MD,SAAkB3yF,EAAS27B,GAE1B,MAAMi3D,EAAgB5yF,EAAQxH,OAASwH,EAAQxH,MAAMvN,MAAU+U,EAAQxH,MAAMvN,MAAQ+U,EAAQxH,MAAMtN,OAAS,EAoB5G,OAlBK0nG,EAAcj3D,GAElB37B,EAAQnE,OAAOtV,EAAI,EACnByZ,EAAQnE,OAAOrV,EAAIosG,EAAcj3D,EAEjC37B,EAAQxR,OAAOjI,EAAI,EACnByZ,EAAQxR,OAAOhI,GAAM,EAAIwZ,EAAQnE,OAAOrV,GAAM,IAI9CwZ,EAAQnE,OAAOtV,EAAIo1C,EAASi3D,EAC5B5yF,EAAQnE,OAAOrV,EAAI,EAEnBwZ,EAAQxR,OAAOjI,GAAM,EAAIyZ,EAAQnE,OAAOtV,GAAM,EAC9CyZ,EAAQxR,OAAOhI,EAAI,GAIbwZ,CAER,EAwLC6yF,MAtLD,SAAgB7yF,EAAS27B,GAExB,MAAMi3D,EAAgB5yF,EAAQxH,OAASwH,EAAQxH,MAAMvN,MAAU+U,EAAQxH,MAAMvN,MAAQ+U,EAAQxH,MAAMtN,OAAS,EAoB5G,OAlBK0nG,EAAcj3D,GAElB37B,EAAQnE,OAAOtV,EAAIo1C,EAASi3D,EAC5B5yF,EAAQnE,OAAOrV,EAAI,EAEnBwZ,EAAQxR,OAAOjI,GAAM,EAAIyZ,EAAQnE,OAAOtV,GAAM,EAC9CyZ,EAAQxR,OAAOhI,EAAI,IAInBwZ,EAAQnE,OAAOtV,EAAI,EACnByZ,EAAQnE,OAAOrV,EAAIosG,EAAcj3D,EAEjC37B,EAAQxR,OAAOjI,EAAI,EACnByZ,EAAQxR,OAAOhI,GAAM,EAAIwZ,EAAQnE,OAAOrV,GAAM,GAIxCwZ,CAER,EA+JCypC,KA7JD,SAAezpC,GAQd,OANAA,EAAQnE,OAAOtV,EAAI,EACnByZ,EAAQnE,OAAOrV,EAAI,EAEnBwZ,EAAQxR,OAAOjI,EAAI,EACnByZ,EAAQxR,OAAOhI,EAAI,EAEZwZ,CAER,EAoJCuyF,kBAGkC,qBAAvBxvD,oBAEXA,mBAAmBt+C,cAAe,IAAIu+C,YAAa,WAAY,CAAEC,OAAQ,CACxE6vD,SAAUt8G,MAKW,qBAAXi4F,SAENA,OAAOskB,UAEXnoG,QAAQC,KAAM,2DAId4jF,OAAOskB,UAAYv8G","sources":["../node_modules/three/build/three.core.js"],"sourcesContent":["/**\n * @license\n * Copyright 2010-2025 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '173';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AgXToneMapping = 6;\nconst NeutralToneMapping = 7;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst UnsignedInt5999Type = 35902;\nconst AlphaFormat = 1021;\nconst RGBFormat = 1022;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBIntegerFormat = 1032;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst RGBDepthPacking = 3202;\nconst RGDepthPacking = 3203;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\nconst TimestampQuery = {\n\tCOMPUTE: 'compute',\n\tRENDER: 'render'\n};\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return false;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return;\n\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners === undefined ) return;\n\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\nfunction probeAsync( gl, sync, interval ) {\n\n\treturn new Promise( function ( resolve, reject ) {\n\n\t\tfunction probe() {\n\n\t\t\tswitch ( gl.clientWaitSync( sync, gl.SYNC_FLUSH_COMMANDS_BIT, 0 ) ) {\n\n\t\t\t\tcase gl.WAIT_FAILED:\n\t\t\t\t\treject();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.TIMEOUT_EXPIRED:\n\t\t\t\t\tsetTimeout( probe, interval );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tresolve();\n\n\t\t\t}\n\n\t\t}\n\n\t\tsetTimeout( probe, interval );\n\n\t} );\n\n}\n\nfunction toNormalizedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\n\t// Convert [-1, 1] to [0, 1] projection matrix\n\tm[ 2 ] = 0.5 * m[ 2 ] + 0.5 * m[ 3 ];\n\tm[ 6 ] = 0.5 * m[ 6 ] + 0.5 * m[ 7 ];\n\tm[ 10 ] = 0.5 * m[ 10 ] + 0.5 * m[ 11 ];\n\tm[ 14 ] = 0.5 * m[ 14 ] + 0.5 * m[ 15 ];\n\n}\n\nfunction toReversedProjectionMatrix( projectionMatrix ) {\n\n\tconst m = projectionMatrix.elements;\n\tconst isPerspectiveMatrix = m[ 11 ] === - 1;\n\n\t// Reverse [0, 1] projection matrix\n\tif ( isPerspectiveMatrix ) {\n\n\t\tm[ 10 ] = - m[ 10 ] - 1;\n\t\tm[ 14 ] = - m[ 14 ];\n\n\t} else {\n\n\t\tm[ 10 ] = - m[ 10 ];\n\t\tm[ 14 ] = - m[ 14 ] + 1;\n\n\t}\n\n}\n\nconst LINEAR_REC709_TO_XYZ = /*@__PURE__*/ new Matrix3().set(\n\t0.4123908, 0.3575843, 0.1804808,\n\t0.2126390, 0.7151687, 0.0721923,\n\t0.0193308, 0.1191948, 0.9505322\n);\n\nconst XYZ_TO_LINEAR_REC709 = /*@__PURE__*/ new Matrix3().set(\n\t3.2409699, - 1.5373832, - 0.4986108,\n\t- 0.9692436, 1.8759675, 0.0415551,\n\t0.0556301, - 0.2039770, 1.0569715\n);\n\nfunction createColorManagement() {\n\n\tconst ColorManagement = {\n\n\t\tenabled: true,\n\n\t\tworkingColorSpace: LinearSRGBColorSpace,\n\n\t\t/**\n\t\t * Implementations of supported color spaces.\n\t\t *\n\t\t * Required:\n\t\t *\t- primaries: chromaticity coordinates [ rx ry gx gy bx by ]\n\t\t *\t- whitePoint: reference white [ x y ]\n\t\t *\t- transfer: transfer function (pre-defined)\n\t\t *\t- toXYZ: Matrix3 RGB to XYZ transform\n\t\t *\t- fromXYZ: Matrix3 XYZ to RGB transform\n\t\t *\t- luminanceCoefficients: RGB luminance coefficients\n\t\t *\n\t\t * Optional:\n\t\t *  - outputColorSpaceConfig: { drawingBufferColorSpace: ColorSpace }\n\t\t *  - workingColorSpaceConfig: { unpackColorSpace: ColorSpace }\n\t\t *\n\t\t * Reference:\n\t\t * - https://www.russellcottrell.com/photo/matrixCalculator.htm\n\t\t */\n\t\tspaces: {},\n\n\t\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\t\treturn color;\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = SRGBToLinear( color.r );\n\t\t\t\tcolor.g = SRGBToLinear( color.g );\n\t\t\t\tcolor.b = SRGBToLinear( color.b );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ sourceColorSpace ].primaries !== this.spaces[ targetColorSpace ].primaries ) {\n\n\t\t\t\tcolor.applyMatrix3( this.spaces[ sourceColorSpace ].toXYZ );\n\t\t\t\tcolor.applyMatrix3( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t\t}\n\n\t\t\tif ( this.spaces[ targetColorSpace ].transfer === SRGBTransfer ) {\n\n\t\t\t\tcolor.r = LinearToSRGB( color.r );\n\t\t\t\tcolor.g = LinearToSRGB( color.g );\n\t\t\t\tcolor.b = LinearToSRGB( color.b );\n\n\t\t\t}\n\n\t\t\treturn color;\n\n\t\t},\n\n\t\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\t\treturn this.convert( color, this.workingColorSpace, targetColorSpace );\n\n\t\t},\n\n\t\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\t\treturn this.convert( color, sourceColorSpace, this.workingColorSpace );\n\n\t\t},\n\n\t\tgetPrimaries: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].primaries;\n\n\t\t},\n\n\t\tgetTransfer: function ( colorSpace ) {\n\n\t\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\t\treturn this.spaces[ colorSpace ].transfer;\n\n\t\t},\n\n\t\tgetLuminanceCoefficients: function ( target, colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn target.fromArray( this.spaces[ colorSpace ].luminanceCoefficients );\n\n\t\t},\n\n\t\tdefine: function ( colorSpaces ) {\n\n\t\t\tObject.assign( this.spaces, colorSpaces );\n\n\t\t},\n\n\t\t// Internal APIs\n\n\t\t_getMatrix: function ( targetMatrix, sourceColorSpace, targetColorSpace ) {\n\n\t\t\treturn targetMatrix\n\t\t\t\t.copy( this.spaces[ sourceColorSpace ].toXYZ )\n\t\t\t\t.multiply( this.spaces[ targetColorSpace ].fromXYZ );\n\n\t\t},\n\n\t\t_getDrawingBufferColorSpace: function ( colorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].outputColorSpaceConfig.drawingBufferColorSpace;\n\n\t\t},\n\n\t\t_getUnpackColorSpace: function ( colorSpace = this.workingColorSpace ) {\n\n\t\t\treturn this.spaces[ colorSpace ].workingColorSpaceConfig.unpackColorSpace;\n\n\t\t}\n\n\t};\n\n\t/******************************************************************************\n\t * sRGB definitions\n\t */\n\n\tconst REC709_PRIMARIES = [ 0.640, 0.330, 0.300, 0.600, 0.150, 0.060 ];\n\tconst REC709_LUMINANCE_COEFFICIENTS = [ 0.2126, 0.7152, 0.0722 ];\n\tconst D65 = [ 0.3127, 0.3290 ];\n\n\tColorManagement.define( {\n\n\t\t[ LinearSRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: LinearTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\tworkingColorSpaceConfig: { unpackColorSpace: SRGBColorSpace },\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t\t[ SRGBColorSpace ]: {\n\t\t\tprimaries: REC709_PRIMARIES,\n\t\t\twhitePoint: D65,\n\t\t\ttransfer: SRGBTransfer,\n\t\t\ttoXYZ: LINEAR_REC709_TO_XYZ,\n\t\t\tfromXYZ: XYZ_TO_LINEAR_REC709,\n\t\t\tluminanceCoefficients: REC709_LUMINANCE_COEFFICIENTS,\n\t\t\toutputColorSpaceConfig: { drawingBufferColorSpace: SRGBColorSpace }\n\t\t},\n\n\t} );\n\n\treturn ColorManagement;\n\n}\n\nconst ColorManagement = /*@__PURE__*/ createColorManagement();\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\treturn canvas.toDataURL( 'image/png' );\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tthis.colorSpace = colorSpace;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.renderTarget = null; // assign texture to a render target\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.pmremVersion = 0; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.renderTarget = source.renderTarget;\n\t\tthis.isRenderTargetTexture = source.isRenderTargetTexture;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tset needsPMREMUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.pmremVersion ++;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\t\tthis.w /= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\t\tthis.w = e[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\t\tthis.w = clamp( this.w, min.w, max.w );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\t\tthis.w = clamp( this.w, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tresolveDepthBuffer: true,\n\t\t\tresolveStencilBuffer: true,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0,\n\t\t\tcount: 1\n\t\t}, options );\n\n\t\tconst texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\ttexture.flipY = false;\n\t\ttexture.generateMipmaps = options.generateMipmaps;\n\t\ttexture.internalFormat = options.internalFormat;\n\n\t\tthis.textures = [];\n\n\t\tconst count = options.count;\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.textures[ i ] = texture.clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = options.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = options.resolveStencilBuffer;\n\n\t\tthis._depthTexture = null;\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tget texture() {\n\n\t\treturn this.textures[ 0 ];\n\n\t}\n\n\tset texture( value ) {\n\n\t\tthis.textures[ 0 ] = value;\n\n\t}\n\n\tset depthTexture( current ) {\n\n\t\tif ( this._depthTexture !== null ) this._depthTexture.renderTarget = null;\n\t\tif ( current !== null ) current.renderTarget = this;\n\n\t\tthis._depthTexture = current;\n\n\t}\n\n\tget depthTexture() {\n\n\t\treturn this._depthTexture;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.textures.length; i < il; i ++ ) {\n\n\t\t\t\tthis.textures[ i ].image.width = width;\n\t\t\t\tthis.textures[ i ].image.height = height;\n\t\t\t\tthis.textures[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.textures.length = 0;\n\n\t\tfor ( let i = 0, il = source.textures.length; i < il; i ++ ) {\n\n\t\t\tthis.textures[ i ] = source.textures[ i ].clone();\n\t\t\tthis.textures[ i ].isRenderTargetTexture = true;\n\t\t\tthis.textures[ i ].renderTarget = this;\n\n\t\t}\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tthis.resolveDepthBuffer = source.resolveDepthBuffer;\n\t\tthis.resolveStencilBuffer = source.resolveStencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in Data3DTexture directly.\n\t\t//\n\t\t//\tconst texture = new THREE.Data3DTexture( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update = true ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize(); // normalize calls _onChangeCallback()\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// sets this quaternion to a uniform random unit quaternnion\n\n\t\t// Ken Shoemake\n\t\t// Uniform random rotations\n\t\t// D. Kirk, editor, Graphics Gems III, pages 124-132. Academic Press, New York, 1992.\n\n\t\tconst theta1 = 2 * Math.PI * Math.random();\n\t\tconst theta2 = 2 * Math.PI * Math.random();\n\n\t\tconst x0 = Math.random();\n\t\tconst r1 = Math.sqrt( 1 - x0 );\n\t\tconst r2 = Math.sqrt( x0 );\n\n\t\treturn this.set(\n\t\t\tr1 * Math.sin( theta1 ),\n\t\t\tr1 * Math.cos( theta1 ),\n\t\t\tr2 * Math.sin( theta2 ),\n\t\t\tr2 * Math.cos( theta2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = clamp( this.x, min.x, max.x );\n\t\tthis.y = clamp( this.y, min.y, max.y );\n\t\tthis.z = clamp( this.z, min.z, max.z );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = clamp( this.x, minVal, maxVal );\n\t\tthis.y = clamp( this.y, minVal, maxVal );\n\t\tthis.z = clamp( this.z, minVal, maxVal );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( clamp( length, min, max ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst theta = Math.random() * Math.PI * 2;\n\t\tconst u = Math.random() * 2 - 1;\n\t\tconst c = Math.sqrt( 1 - u * u );\n\n\t\tthis.x = c * Math.cos( theta );\n\t\tthis.y = u;\n\t\tthis.z = c * Math.sin( theta );\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y &&\n\t\t\tpoint.z >= this.min.z && point.z <= this.max.z;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y &&\n\t\t\tbox.max.z >= this.min.z && box.min.z <= this.max.z;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.isSphere = true;\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$2 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$2.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$2, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nconst _childaddedEvent = { type: 'childadded', child: null };\nconst _childremovedEvent = { type: 'childremoved', child: null };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tobject.removeFromParent();\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t_childaddedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t\t_childaddedEvent.child = null;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t_childremovedEvent.child = object;\n\t\t\tthis.dispatchEvent( _childremovedEvent );\n\t\t\t_childremovedEvent.child = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tobject.removeFromParent();\n\t\tobject.parent = this;\n\t\tthis.children.push( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t_childaddedEvent.child = object;\n\t\tthis.dispatchEvent( _childaddedEvent );\n\t\t_childaddedEvent.child = null;\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// make sure descendants are updated if required\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tchild.updateMatrixWorld( force );\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldAutoUpdate === true ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// make sure descendants are updated\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxInstanceCount = this._maxInstanceCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this._colorsTexture !== null ) object.colorsTexture = this._colorsTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$2 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nconst _v40 = /*@__PURE__*/ new Vector4();\nconst _v41 = /*@__PURE__*/ new Vector4();\nconst _v42 = /*@__PURE__*/ new Vector4();\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\ttarget.set( 0, 0, 0 );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\t// if the triangle is degenerate then we can't contain a point\n\t\tif ( this.getBarycoord( point, a, b, c, _v3$2 ) === null ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn ( _v3$2.x >= 0 ) && ( _v3$2.y >= 0 ) && ( ( _v3$2.x + _v3$2.y ) <= 1 );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tif ( this.getBarycoord( point, p1, p2, p3, _v3$2 ) === null ) {\n\n\t\t\ttarget.x = 0;\n\t\t\ttarget.y = 0;\n\t\t\tif ( 'z' in target ) target.z = 0;\n\t\t\tif ( 'w' in target ) target.w = 0;\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$2.x );\n\t\ttarget.addScaledVector( v2, _v3$2.y );\n\t\ttarget.addScaledVector( v3, _v3$2.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic getInterpolatedAttribute( attr, i1, i2, i3, barycoord, target ) {\n\n\t\t_v40.setScalar( 0 );\n\t\t_v41.setScalar( 0 );\n\t\t_v42.setScalar( 0 );\n\n\t\t_v40.fromBufferAttribute( attr, i1 );\n\t\t_v41.fromBufferAttribute( attr, i2 );\n\t\t_v42.fromBufferAttribute( attr, i3 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( _v40, barycoord.x );\n\t\ttarget.addScaledVector( _v41, barycoord.y );\n\t\ttarget.addScaledVector( _v42, barycoord.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\t// onBeforeRender and onBeforeCompile only supported in WebGLRenderer\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== undefined && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.dispersion !== undefined ) data.dispersion = this.dispersion;\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapRotation !== undefined ) data.envMapRotation = this.envMapRotation.toArray();\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {\n\n\t\tconsole.warn( 'Material: onBuild() has been removed.' ); // @deprecated, r166\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nlet _id$2 = 0;\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$1 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$1 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.indirect = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetIndirect( indirect ) {\n\n\t\tthis.indirect = indirect;\n\n\t\treturn this;\n\n\t}\n\n\tgetIndirect() {\n\n\t\treturn this.indirect;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute === undefined ) {\n\n\t\t\tconst position = [];\n\n\t\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t} else {\n\n\t\t\tconst l = Math.min( points.length, positionAttribute.count ); // make sure data do not exceed buffer size\n\n\t\t\tfor ( let i = 0; i < l; i ++ ) {\n\n\t\t\t\tconst point = points[ i ];\n\t\t\t\tpositionAttribute.setXYZ( i, point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tif ( points.length > positionAttribute.count ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry.' );\n\n\t\t\t}\n\n\t\t\tpositionAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst positionAttribute = attributes.position;\n\t\tconst normalAttribute = attributes.normal;\n\t\tconst uvAttribute = attributes.uv;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * positionAttribute.count ), 4 ) );\n\n\t\t}\n\n\t\tconst tangentAttribute = this.getAttribute( 'tangent' );\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( positionAttribute, a );\n\t\t\tvB.fromBufferAttribute( positionAttribute, b );\n\t\t\tvC.fromBufferAttribute( positionAttribute, c );\n\n\t\t\tuvA.fromBufferAttribute( uvAttribute, a );\n\t\t\tuvB.fromBufferAttribute( uvAttribute, b );\n\t\t\tuvC.fromBufferAttribute( uvAttribute, c );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: index.count\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindex.getX( j + 0 ),\n\t\t\t\t\tindex.getX( j + 1 ),\n\t\t\t\t\tindex.getX( j + 2 )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromBufferAttribute( normalAttribute, v );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangentAttribute.setXYZW( v, tmp.x, tmp.y, tmp.z, w );\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( index.getX( j + 0 ) );\n\t\t\t\thandleVertex( index.getX( j + 1 ) );\n\t\t\t\thandleVertex( index.getX( j + 2 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection$1( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection$1( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tconst barycoord = new Vector3();\n\t\tTriangle.getBarycoord( _intersectionPoint, _vA$1, _vB$1, _vC$1, barycoord );\n\n\t\tif ( uv ) {\n\n\t\t\tintersection.uv = Triangle.getInterpolatedAttribute( uv, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\tintersection.uv1 = Triangle.getInterpolatedAttribute( uv1, a, b, c, barycoord, new Vector2() );\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\tintersection.normal = Triangle.getInterpolatedAttribute( normal, a, b, c, barycoord, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\t\tintersection.barycoord = barycoord;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\tif ( currentRenderTarget === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\t// https://github.com/mrdoob/three.js/issues/27868\n\tif ( currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\treturn currentRenderTarget.texture.colorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tclipCullDistance: false, // set to use vertex shader clipping\n\t\t\tmultiDraw: false // set to use vertex shader multi_draw / enable gl_DrawID\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _v3$1 = /*@__PURE__*/ new Vector3();\nconst _minTarget = /*@__PURE__*/ new Vector2();\nconst _maxTarget = /*@__PURE__*/ new Vector2();\n\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * @param {number} focalLength - Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t *\n\t * @returns {number}\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Computes the 2D bounds of the camera's viewable rectangle at a given distance along the viewing direction.\n\t * Sets minTarget and maxTarget to the coordinates of the lower-left and upper-right corners of the view rectangle.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} minTarget\n\t * @param {Vector2} maxTarget\n\t */\n\tgetViewBounds( distance, minTarget, maxTarget ) {\n\n\t\t_v3$1.set( - 1, - 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tminTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t\t_v3$1.set( 1, 1, 0.5 ).applyMatrix4( this.projectionMatrixInverse );\n\n\t\tmaxTarget.set( _v3$1.x, _v3$1.y ).multiplyScalar( - distance / _v3$1.z );\n\n\t}\n\n\t/**\n\t * Computes the width and height of the camera's viewable rectangle at a given distance along the viewing direction.\n\t *\n\t * @param {number} distance\n\t * @param {Vector2} target - Vector2 target used to store result where x is width and y is height.\n\t * @returns {Vector2}\n\t */\n\tgetViewSize( distance, target ) {\n\n\t\tthis.getViewBounds( distance, _minTarget, _maxTarget );\n\n\t\treturn target.subVectors( _maxTarget, _minTarget );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t *\n\t * @param {number} fullWidth\n\t * @param {number} fullHeight\n\t * @param {number} x\n\t * @param {number} y\n\t * @param {number} width\n\t * @param {number} height\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\t\tthis.backgroundRotation = new Euler();\n\n\t\tthis.environmentIntensity = 1;\n\t\tthis.environmentRotation = new Euler();\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\t\tthis.backgroundRotation.copy( source.backgroundRotation );\n\n\t\tthis.environmentIntensity = source.environmentIntensity;\n\t\tthis.environmentRotation.copy( source.environmentRotation );\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\t\tdata.object.backgroundRotation = this.backgroundRotation.toArray();\n\n\t\tif ( this.environmentIntensity !== 1 ) data.object.environmentIntensity = this.environmentIntensity;\n\t\tdata.object.environmentRotation = this.environmentRotation.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$7.fromBufferAttribute( this, i );\n\n\t\t\t_vector$7.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$7.x, _vector$7.y, _vector$7.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.data.stride + this.offset + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tremoveLevel( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0; i < levels.length; i ++ ) {\n\n\t\t\tif ( levels[ i ].distance === distance ) {\n\n\t\t\t\tconst removedElements = levels.splice( i, 1 );\n\t\t\t\tthis.remove( removedElements[ 0 ].object );\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$5.copy( this.boundingSphere );\n\t\t_sphere$5.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$5 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\t\tthis.morphTexture = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$4.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$4 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.morphTexture !== null ) this.morphTexture = source.morphTexture.clone();\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tgetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tconst len = objectInfluences.length + 1; // All influences + the baseInfluenceSum\n\n\t\tconst dataIndex = index * len + 1; // Skip the baseInfluenceSum at the beginning\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tobjectInfluences[ i ] = array[ dataIndex + i ];\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ).fill( 1 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tsetMorphAt( index, object ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tconst len = objectInfluences.length + 1; // morphBaseInfluence + all influences\n\n\t\tif ( this.morphTexture === null ) {\n\n\t\t\tthis.morphTexture = new DataTexture( new Float32Array( len * this.count ), len, this.count, RedFormat, FloatType );\n\n\t\t}\n\n\t\tconst array = this.morphTexture.source.data.data;\n\n\t\tlet morphInfluencesSum = 0;\n\n\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t}\n\n\t\tconst morphBaseInfluence = this.geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\tconst dataIndex = len * index;\n\n\t\tarray[ dataIndex ] = morphBaseInfluence;\n\n\t\tarray.set( objectInfluences, dataIndex + 1 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\tif ( this.morphTexture !== null ) {\n\n\t\t\tthis.morphTexture.dispose();\n\t\t\tthis.morphTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$3.center.set( 0, 0, 0 );\n\t\t_sphere$3.radius = 0.7071067811865476;\n\t\t_sphere$3.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$3 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$6.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$6.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$6.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$6 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction ascIdSort( a, b ) {\n\n\treturn a - b;\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( start, count, z, index ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\t\t\t\tindex: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = start;\n\t\titem.count = count;\n\t\titem.z = z;\n\t\titem.index = index;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _whiteColor = /*@__PURE__*/ new Color( 1, 1, 1 );\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _forward = /*@__PURE__*/ new Vector3();\nconst _temp = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\n// safely copies array contents to a potentially smaller array\nfunction copyArrayContents( src, target ) {\n\n\tif ( src.constructor !== target.constructor ) {\n\n\t\t// if arrays are of a different type (eg due to index size increasing) then data must be per-element copied\n\t\tconst len = Math.min( src.length, target.length );\n\t\tfor ( let i = 0; i < len; i ++ ) {\n\n\t\t\ttarget[ i ] = src[ i ];\n\n\t\t}\n\n\t} else {\n\n\t\t// if the arrays use the same data layout we can use a fast block copy\n\t\tconst len = Math.min( src.length, target.length );\n\t\ttarget.set( new src.constructor( src.buffer, 0, len ) );\n\n\t}\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxInstanceCount() {\n\n\t\treturn this._maxInstanceCount;\n\n\t}\n\n\tget instanceCount() {\n\n\t\treturn this._instanceInfo.length - this._availableInstanceIds.length;\n\n\t}\n\n\tget unusedVertexCount() {\n\n\t\treturn this._maxVertexCount - this._nextVertexStart;\n\n\t}\n\n\tget unusedIndexCount() {\n\n\t\treturn this._maxIndexCount - this._nextIndexStart;\n\n\t}\n\n\tconstructor( maxInstanceCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\t// stores visible, active, and geometry id per instance and reserved buffer ranges for geometries\n\t\tthis._instanceInfo = [];\n\t\tthis._geometryInfo = [];\n\n\t\t// instance, geometry ids that have been set as inactive, and are available to be overwritten\n\t\tthis._availableInstanceIds = [];\n\t\tthis._availableGeometryIds = [];\n\n\t\t// used to track where the next point is that geometry should be inserted\n\t\tthis._nextIndexStart = 0;\n\t\tthis._nextVertexStart = 0;\n\t\tthis._geometryCount = 0;\n\n\t\t// flags\n\t\tthis._visibilityChanged = true;\n\t\tthis._geometryInitialized = false;\n\n\t\t// cached user options\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\t// buffers for multi draw\n\t\tthis._multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._multiDrawInstances = null;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\t\tthis._indirectTexture = null;\n\t\tthis._colorsTexture = null;\n\n\t\tthis._initMatricesTexture();\n\t\tthis._initIndirectTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initIndirectTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\tconst indirectArray = new Uint32Array( size * size );\n\t\tconst indirectTexture = new DataTexture( indirectArray, size, size, RedIntegerFormat, UnsignedIntType );\n\n\t\tthis._indirectTexture = indirectTexture;\n\n\t}\n\n\t_initColorsTexture() {\n\n\t\tlet size = Math.sqrt( this._maxInstanceCount );\n\t\tsize = Math.ceil( size );\n\n\t\t// 4 floats per RGBA pixel initialized to white\n\t\tconst colorsArray = new Float32Array( size * size * 4 ).fill( 1 );\n\t\tconst colorsTexture = new DataTexture( colorsArray, size, size, RGBAFormat, FloatType );\n\t\tcolorsTexture.colorSpace = ColorManagement.workingColorSpace;\n\n\t\tthis._colorsTexture = colorsTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new BufferAttribute( dstArray, itemSize, normalized );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\t// Reserve last u16 index for primitive restart.\n\t\t\t\tconst indexArray = maxVertexCount > 65535\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry attributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `THREE.BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tvalidateInstanceId( instanceId ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tif ( instanceId < 0 || instanceId >= instanceInfo.length || instanceInfo[ instanceId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid instanceId ${instanceId}. Instance is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\tvalidateGeometryId( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId < 0 || geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\tthrow new Error( `THREE.BatchedMesh: Invalid geometryId ${geometryId}. Geometry is either out of range or has been deleted.` );\n\n\t\t}\n\n\t}\n\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst instanceInfo = this._instanceInfo;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active === false ) continue;\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddInstance( geometryId ) {\n\n\t\tconst atCapacity = this._instanceInfo.length >= this.maxInstanceCount;\n\n\t\t// ensure we're not over geometry\n\t\tif ( atCapacity && this._availableInstanceIds.length === 0 ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum item count reached.' );\n\n\t\t}\n\n\t\tconst instanceInfo = {\n\t\t\tvisible: true,\n\t\t\tactive: true,\n\t\t\tgeometryIndex: geometryId,\n\t\t};\n\n\t\tlet drawId = null;\n\n\t\t// Prioritize using previously freed instance ids\n\t\tif ( this._availableInstanceIds.length > 0 ) {\n\n\t\t\tthis._availableInstanceIds.sort( ascIdSort );\n\n\t\t\tdrawId = this._availableInstanceIds.shift();\n\t\t\tthis._instanceInfo[ drawId ] = instanceInfo;\n\n\t\t} else {\n\n\t\t\tdrawId = this._instanceInfo.length;\n\t\t\tthis._instanceInfo.push( instanceInfo );\n\n\t\t}\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\t_matrix$1.identity().toArray( matricesTexture.image.data, drawId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\tconst colorsTexture = this._colorsTexture;\n\t\tif ( colorsTexture ) {\n\n\t\t\t_whiteColor.toArray( colorsTexture.image.data, drawId * 4 );\n\t\t\tcolorsTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn drawId;\n\n\t}\n\n\taddGeometry( geometry, reservedVertexCount = - 1, reservedIndexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst geometryInfo = {\n\t\t\t// geometry information\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\treservedVertexCount: - 1,\n\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t\treservedIndexCount: - 1,\n\n\t\t\t// draw range information\n\t\t\tstart: - 1,\n\t\t\tcount: - 1,\n\n\t\t\t// state\n\t\t\tboundingBox: null,\n\t\t\tboundingSphere: null,\n\t\t\tactive: true,\n\t\t};\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tgeometryInfo.vertexStart = this._nextVertexStart;\n\t\tgeometryInfo.reservedVertexCount = reservedVertexCount === - 1 ? geometry.getAttribute( 'position' ).count : reservedVertexCount;\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tgeometryInfo.indexStart = this._nextIndexStart;\n\t\t\tgeometryInfo.reservedIndexCount = reservedIndexCount === - 1 ? index.count : reservedIndexCount;\n\n\t\t}\n\n\t\tif (\n\t\t\tgeometryInfo.indexStart !== - 1 &&\n\t\t\tgeometryInfo.indexStart + geometryInfo.reservedIndexCount > this._maxIndexCount ||\n\t\t\tgeometryInfo.vertexStart + geometryInfo.reservedVertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\t// update id\n\t\tlet geometryId;\n\t\tif ( this._availableGeometryIds.length > 0 ) {\n\n\t\t\tthis._availableGeometryIds.sort( ascIdSort );\n\n\t\t\tgeometryId = this._availableGeometryIds.shift();\n\t\t\tgeometryInfoList[ geometryId ] = geometryInfo;\n\n\n\t\t} else {\n\n\t\t\tgeometryId = this._geometryCount;\n\t\t\tthis._geometryCount ++;\n\t\t\tgeometryInfoList.push( geometryInfo );\n\n\t\t}\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\t// increment the next geometry position\n\t\tthis._nextIndexStart = geometryInfo.indexStart + geometryInfo.reservedIndexCount;\n\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( geometryId, geometry ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > geometryInfo.reservedIndexCount ||\n\t\t\tgeometry.attributes.position.count > geometryInfo.reservedVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'THREE.BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry buffer data over\n\t\tconst vertexStart = geometryInfo.vertexStart;\n\t\tconst reservedVertexCount = geometryInfo.reservedVertexCount;\n\t\tgeometryInfo.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = reservedVertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\t\t\tdstAttribute.addUpdateRange( vertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = geometryInfo.indexStart;\n\t\t\tconst reservedIndexCount = geometryInfo.reservedIndexCount;\n\t\t\tgeometryInfo.indexCount = geometry.getIndex().count;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedIndexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\t\t\tdstIndex.addUpdateRange( indexStart, geometryInfo.reservedIndexCount );\n\n\t\t}\n\n\t\t// update the draw range\n\t\tgeometryInfo.start = hasIndex ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\t\tgeometryInfo.count = hasIndex ? geometryInfo.indexCount : geometryInfo.vertexCount;\n\n\t\t// store the bounding boxes\n\t\tgeometryInfo.boundingBox = null;\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tgeometryInfo.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tgeometryInfo.boundingSphere = null;\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tgeometryInfo.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tthis._visibilityChanged = true;\n\t\treturn geometryId;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tif ( geometryId >= geometryInfoList.length || geometryInfoList[ geometryId ].active === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// delete any instances associated with this geometry\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( instanceInfo[ i ].active && instanceInfo[ i ].geometryIndex === geometryId ) {\n\n\t\t\t\tthis.deleteInstance( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometryInfoList[ geometryId ].active = false;\n\t\tthis._availableGeometryIds.push( geometryId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteInstance( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tthis._instanceInfo[ instanceId ].active = false;\n\t\tthis._availableInstanceIds.push( instanceId );\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\toptimize() {\n\n\t\t// track the next indices to copy data to\n\t\tlet nextVertexStart = 0;\n\t\tlet nextIndexStart = 0;\n\n\t\t// Iterate over all geometry ranges in order sorted from earliest in the geometry buffer to latest\n\t\t// in the geometry buffer. Because draw range objects can be reused there is no guarantee of their order.\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst indices = geometryInfoList\n\t\t\t.map( ( e, i ) => i )\n\t\t\t.sort( ( a, b ) => {\n\n\t\t\t\treturn geometryInfoList[ a ].vertexStart - geometryInfoList[ b ].vertexStart;\n\n\t\t\t} );\n\n\t\tconst geometry = this.geometry;\n\t\tfor ( let i = 0, l = geometryInfoList.length; i < l; i ++ ) {\n\n\t\t\t// if a geometry range is inactive then don't copy anything\n\t\t\tconst index = indices[ i ];\n\t\t\tconst geometryInfo = geometryInfoList[ index ];\n\t\t\tif ( geometryInfo.active === false ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// if a geometry contains an index buffer then shift it, as well\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\tif ( geometryInfo.indexStart !== nextIndexStart ) {\n\n\t\t\t\t\tconst { indexStart, vertexStart, reservedIndexCount } = geometryInfo;\n\t\t\t\t\tconst index = geometry.index;\n\t\t\t\t\tconst array = index.array;\n\n\t\t\t\t\t// shift the index pointers based on how the vertex data will shift\n\t\t\t\t\t// adjusting the index must happen first so the original vertex start value is available\n\t\t\t\t\tconst elementDelta = nextVertexStart - vertexStart;\n\t\t\t\t\tfor ( let j = indexStart; j < indexStart + reservedIndexCount; j ++ ) {\n\n\t\t\t\t\t\tarray[ j ] = array[ j ] + elementDelta;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tindex.array.copyWithin( nextIndexStart, indexStart, indexStart + reservedIndexCount );\n\t\t\t\t\tindex.addUpdateRange( nextIndexStart, reservedIndexCount );\n\n\t\t\t\t\tgeometryInfo.indexStart = nextIndexStart;\n\n\t\t\t\t}\n\n\t\t\t\tnextIndexStart += geometryInfo.reservedIndexCount;\n\n\t\t\t}\n\n\t\t\t// if a geometry needs to be moved then copy attribute data to overwrite unused space\n\t\t\tif ( geometryInfo.vertexStart !== nextVertexStart ) {\n\n\t\t\t\tconst { vertexStart, reservedVertexCount } = geometryInfo;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tfor ( const key in attributes ) {\n\n\t\t\t\t\tconst attribute = attributes[ key ];\n\t\t\t\t\tconst { array, itemSize } = attribute;\n\t\t\t\t\tarray.copyWithin( nextVertexStart * itemSize, vertexStart * itemSize, ( vertexStart + reservedVertexCount ) * itemSize );\n\t\t\t\t\tattribute.addUpdateRange( nextVertexStart * itemSize, reservedVertexCount * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tgeometryInfo.vertexStart = nextVertexStart;\n\n\t\t\t}\n\n\t\t\tnextVertexStart += geometryInfo.reservedVertexCount;\n\t\t\tgeometryInfo.start = geometry.index ? geometryInfo.indexStart : geometryInfo.vertexStart;\n\n\t\t\t// step the next geometry points to the shifted position\n\t\t\tthis._nextIndexStart = geometry.index ? geometryInfo.indexStart + geometryInfo.reservedIndexCount : 0;\n\t\t\tthis._nextVertexStart = geometryInfo.vertexStart + geometryInfo.reservedVertexCount;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingBox === null ) {\n\n\t\t\tconst box = new Box3();\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tgeometryInfo.boundingBox = box;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingBox );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( geometryId, target ) {\n\n\t\tif ( geometryId >= this._geometryCount ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst geometry = this.geometry;\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\tif ( geometryInfo.boundingSphere === null ) {\n\n\t\t\tconst sphere = new Sphere();\n\t\t\tthis.getBoundingBoxAt( geometryId, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = geometryInfo.start, l = geometryInfo.start + geometryInfo.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tgeometryInfo.boundingSphere = sphere;\n\n\t\t}\n\n\t\ttarget.copy( geometryInfo.boundingSphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tmatrix.toArray( matricesArray, instanceId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( instanceId, matrix ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn matrix.fromArray( this._matricesTexture.image.data, instanceId * 16 );\n\n\t}\n\n\tsetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._colorsTexture === null ) {\n\n\t\t\tthis._initColorsTexture();\n\n\t\t}\n\n\t\tcolor.toArray( this._colorsTexture.image.data, instanceId * 4 );\n\t\tthis._colorsTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( instanceId, color ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\treturn color.fromArray( this._colorsTexture.image.data, instanceId * 4 );\n\n\t}\n\n\tsetVisibleAt( instanceId, value ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\tif ( this._instanceInfo[ instanceId ].visible === value ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis._instanceInfo[ instanceId ].visible = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].visible;\n\n\t}\n\n\tsetGeometryIdAt( instanceId, geometryId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tthis._instanceInfo[ instanceId ].geometryIndex = geometryId;\n\n\t\treturn this;\n\n\t}\n\n\tgetGeometryIdAt( instanceId ) {\n\n\t\tthis.validateInstanceId( instanceId );\n\n\t\treturn this._instanceInfo[ instanceId ].geometryIndex;\n\n\t}\n\n\tgetGeometryRangeAt( geometryId, target = {} ) {\n\n\t\tthis.validateGeometryId( geometryId );\n\n\t\tconst geometryInfo = this._geometryInfo[ geometryId ];\n\t\ttarget.vertexStart = geometryInfo.vertexStart;\n\t\ttarget.vertexCount = geometryInfo.vertexCount;\n\t\ttarget.reservedVertexCount = geometryInfo.reservedVertexCount;\n\n\t\ttarget.indexStart = geometryInfo.indexStart;\n\t\ttarget.indexCount = geometryInfo.indexCount;\n\t\ttarget.reservedIndexCount = geometryInfo.reservedIndexCount;\n\n\t\ttarget.start = geometryInfo.start;\n\t\ttarget.count = geometryInfo.count;\n\n\t\treturn target;\n\n\t}\n\n\tsetInstanceCount( maxInstanceCount ) {\n\n\t\t// shrink the available instances as much as possible\n\t\tconst availableInstanceIds = this._availableInstanceIds;\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tavailableInstanceIds.sort( ascIdSort );\n\t\twhile ( availableInstanceIds[ availableInstanceIds.length - 1 ] === instanceInfo.length ) {\n\n\t\t\tinstanceInfo.pop();\n\t\t\tavailableInstanceIds.pop();\n\n\t\t}\n\n\t\t// throw an error if it can't be shrunk to the desired size\n\t\tif ( maxInstanceCount < instanceInfo.length ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Instance ids outside the range ${ maxInstanceCount } are being used. Cannot shrink instance count.` );\n\n\t\t}\n\n\t\t// copy the multi draw counts\n\t\tconst multiDrawCounts = new Int32Array( maxInstanceCount );\n\t\tconst multiDrawStarts = new Int32Array( maxInstanceCount );\n\t\tcopyArrayContents( this._multiDrawCounts, multiDrawCounts );\n\t\tcopyArrayContents( this._multiDrawStarts, multiDrawStarts );\n\n\t\tthis._multiDrawCounts = multiDrawCounts;\n\t\tthis._multiDrawStarts = multiDrawStarts;\n\t\tthis._maxInstanceCount = maxInstanceCount;\n\n\t\t// update texture data for instance sampling\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst colorsTexture = this._colorsTexture;\n\n\t\tindirectTexture.dispose();\n\t\tthis._initIndirectTexture();\n\t\tcopyArrayContents( indirectTexture.image.data, this._indirectTexture.image.data );\n\n\t\tmatricesTexture.dispose();\n\t\tthis._initMatricesTexture();\n\t\tcopyArrayContents( matricesTexture.image.data, this._matricesTexture.image.data );\n\n\t\tif ( colorsTexture ) {\n\n\t\t\tcolorsTexture.dispose();\n\t\t\tthis._initColorsTexture();\n\t\t\tcopyArrayContents( colorsTexture.image.data, this._colorsTexture.image.data );\n\n\t\t}\n\n\t}\n\n\tsetGeometrySize( maxVertexCount, maxIndexCount ) {\n\n\t\t// Check if we can shrink to the requested vertex attribute size\n\t\tconst validRanges = [ ...this._geometryInfo ].filter( info => info.active );\n\t\tconst requiredVertexLength = Math.max( ...validRanges.map( range => range.vertexStart + range.reservedVertexCount ) );\n\t\tif ( requiredVertexLength > maxVertexCount ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry vertex values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t}\n\n\t\t// Check if we can shrink to the requested index attribute size\n\t\tif ( this.geometry.index ) {\n\n\t\t\tconst requiredIndexLength = Math.max( ...validRanges.map( range => range.indexStart + range.reservedIndexCount ) );\n\t\t\tif ( requiredIndexLength > maxIndexCount ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Geometry index values are being used outside the range ${ maxIndexCount }. Cannot shrink further.` );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\t// dispose of the previous geometry\n\t\tconst oldGeometry = this.geometry;\n\t\toldGeometry.dispose();\n\n\t\t// recreate the geometry needed based on the previous variant\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tif ( this._geometryInitialized ) {\n\n\t\t\tthis._geometryInitialized = false;\n\t\t\tthis.geometry = new BufferGeometry();\n\t\t\tthis._initializeGeometry( oldGeometry );\n\n\t\t}\n\n\t\t// copy data from the previous geometry\n\t\tconst geometry = this.geometry;\n\t\tif ( oldGeometry.index ) {\n\n\t\t\tcopyArrayContents( oldGeometry.index.array, geometry.index.array );\n\n\t\t}\n\n\t\tfor ( const key in oldGeometry.attributes ) {\n\n\t\t\tcopyArrayContents( oldGeometry.attributes[ key ].array, geometry.attributes[ key ].array );\n\n\t\t}\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\tif ( ! instanceInfo[ i ].visible || ! instanceInfo[ i ].active ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t_mesh.geometry.setDrawRange( geometryInfo.start, geometryInfo.count );\n\n\t\t\t// get the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( geometryId, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( geometryId, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._geometryInfo = source._geometryInfo.map( info => ( {\n\t\t\t...info,\n\n\t\t\tboundingBox: info.boundingBox !== null ? info.boundingBox.clone() : null,\n\t\t\tboundingSphere: info.boundingSphere !== null ? info.boundingSphere.clone() : null,\n\t\t} ) );\n\t\tthis._instanceInfo = source._instanceInfo.map( info => ( { ...info } ) );\n\n\t\tthis._maxInstanceCount = source._maxInstanceCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.data.slice();\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture = source._colorsTexture.clone();\n\t\t\tthis._colorsTexture.image.data = this._colorsTexture.image.data.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\n\t\tthis._indirectTexture.dispose();\n\t\tthis._indirectTexture = null;\n\n\t\tif ( this._colorsTexture !== null ) {\n\n\t\t\tthis._colorsTexture.dispose();\n\t\t\tthis._colorsTexture = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst instanceInfo = this._instanceInfo;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst geometryInfoList = this._geometryInfo;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\tconst indirectTexture = this._indirectTexture;\n\t\tconst indirectArray = indirectTexture.image.data;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_matrix$1\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_matrix$1,\n\t\t\t\trenderer.coordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet multiDrawCount = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_matrix$1.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _matrix$1 );\n\t\t\t_forward.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld ).transformDirection( _matrix$1 );\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tconst z = _temp.subVectors( _sphere$2.center, _vector$5 ).dot( _forward );\n\t\t\t\t\t\t_renderList.push( geometryInfo.start, geometryInfo.count, z, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ multiDrawCount ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ multiDrawCount ] = item.count;\n\t\t\t\tindirectArray[ multiDrawCount ] = item.index;\n\t\t\t\tmultiDrawCount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = instanceInfo.length; i < l; i ++ ) {\n\n\t\t\t\tif ( instanceInfo[ i ].visible && instanceInfo[ i ].active ) {\n\n\t\t\t\t\tconst geometryId = instanceInfo[ i ].geometryIndex;\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix$1 );\n\t\t\t\t\t\tthis.getBoundingSphereAt( geometryId, _sphere$2 ).applyMatrix4( _matrix$1 );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst geometryInfo = geometryInfoList[ geometryId ];\n\t\t\t\t\t\tmultiDrawStarts[ multiDrawCount ] = geometryInfo.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ multiDrawCount ] = geometryInfo.count;\n\t\t\t\t\t\tindirectArray[ multiDrawCount ] = i;\n\t\t\t\t\t\tmultiDrawCount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tindirectTexture.needsUpdate = true;\n\t\tthis._multiDrawCount = multiDrawCount;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vStart = /*@__PURE__*/ new Vector3();\nconst _vEnd = /*@__PURE__*/ new Vector3();\n\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nconst _intersectPointOnRay = /*@__PURE__*/ new Vector3();\nconst _intersectPointOnSegment = /*@__PURE__*/ new Vector3();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vStart.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_vEnd.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _vStart.distanceTo( _vEnd );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, i );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst a = index.getX( end - 1 );\n\t\t\t\tconst b = index.getX( start );\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, a, b, end - 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, i, i + 1, i );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.isLineLoop ) {\n\n\t\t\t\tconst intersect = checkIntersection( this, raycaster, _ray$1, localThresholdSq, end - 1, start, end - 1 );\n\n\t\t\t\tif ( intersect ) {\n\n\t\t\t\t\tintersects.push( intersect );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, raycaster, ray, thresholdSq, a, b, i ) {\n\n\tconst positionAttribute = object.geometry.attributes.position;\n\n\t_vStart.fromBufferAttribute( positionAttribute, a );\n\t_vEnd.fromBufferAttribute( positionAttribute, b );\n\n\tconst distSq = ray.distanceSqToSegment( _vStart, _vEnd, _intersectPointOnRay, _intersectPointOnSegment );\n\n\tif ( distSq > thresholdSq ) return;\n\n\t_intersectPointOnRay.applyMatrix4( object.matrixWorld ); // Move back to world space for distance calculation\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectPointOnRay );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\treturn {\n\n\t\tdistance: distance,\n\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t// point: raycaster.ray.at( distance ),\n\t\tpoint: _intersectPointOnSegment.clone().applyMatrix4( object.matrixWorld ),\n\t\tindex: i,\n\t\tface: null,\n\t\tfaceIndex: null,\n\t\tbarycoord: null,\n\t\tobject: object\n\n\t};\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tfaceIndex: null,\n\t\t\tbarycoord: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass VideoFrameTexture extends VideoTexture {\n\n\tconstructor( mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( {}, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoFrameTexture = true;\n\n\t}\n\n\tupdate() {\n\n\t\t// overwrites `VideoTexture.update()` with an empty method since\n\t\t// this type of texture is updated via `setFrame()`.\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this ); // restoring Texture.clone()\n\n\t}\n\n\tsetFrame( frame ) {\n\n\t\tthis.image = frame;\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.layerUpdates = new Set();\n\n\t}\n\n\taddLayerUpdate( layerIndex ) {\n\n\t\tthis.layerUpdates.add( layerIndex );\n\n\t}\n\n\tclearLayerUpdates() {\n\n\t\tthis.layerUpdates.clear();\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format = DepthFormat ) {\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tif ( radiusTop > 0 || y !== 0 ) {\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( radiusBottom > 0 || y !== heightSegments - 1 ) {\n\n\t\t\t\t\t\tindices.push( b, c, d );\n\t\t\t\t\t\tgroupCount += 3;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // doesn't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._dispersion = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget dispersion() {\n\n\t\treturn this._dispersion;\n\n\t}\n\n\tset dispersion( value ) {\n\n\t\tif ( this._dispersion > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._dispersion = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.dispersion = source.dispersion;\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapRotation = new Euler();\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapRotation.copy( source.envMapRotation );\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\n// DefaultInterpolation is inherited;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {\n\n\t// No interpolation parameter because only InterpolateDiscrete is valid.\n\tconstructor( name, times, values ) {\n\n\t\tsuper( name, times, values );\n\n\t}\n\n}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name = '', duration = - 1, tracks = [], blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'X-File-Size' ) || response.headers.get( 'Content-Length' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t}, ( e ) => {\n\n\t\t\t\t\t\t\t\t\tcontroller.error( e );\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\t\tif ( this.target !== undefined ) data.object.target = this.target.uuid;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.intensity = 1;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.intensity = source.intensity;\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.intensity !== 1 ) object.intensity = this.intensity;\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = this.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.dispersion !== undefined ) material.dispersion = json.dispersion;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapRotation !== undefined ) material.envMapRotation.fromArray( json.envMapRotation );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tcreateMaterialFromType( type ) {\n\n\t\treturn MaterialLoader.createMaterialFromType( type );\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) { // @deprecated, r165\n\n\t\tconsole.warn( 'THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead.' );\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\t\tthis.bindLightTargets( object );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\t\t\t\tif ( data.backgroundRotation !== undefined ) object.backgroundRotation.fromArray( data.backgroundRotation );\n\n\t\t\t\tif ( data.environmentIntensity !== undefined ) object.environmentIntensity = data.environmentIntensity;\n\t\t\t\tif ( data.environmentRotation !== undefined ) object.environmentRotation.fromArray( data.environmentRotation );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\t\t\t\tobject.target = data.target || '';\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxInstanceCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxInstanceCount = data.maxInstanceCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\t\t\t\tif ( data.colorsTexture !== undefined ) object._colorsTexture = getTexture( data.colorsTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.intensity !== undefined ) object.shadow.intensity = data.shadow.intensity;\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tbindLightTargets( object ) {\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isDirectionalLight || child.isSpotLight ) {\n\n\t\t\t\tconst uuid = child.target;\n\n\t\t\t\tconst target = object.getObjectByProperty( 'uuid', uuid );\n\n\t\t\t\tif ( target !== undefined ) {\n\n\t\t\t\t\tchild.target = target;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.target = new Object3D();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\t// If cached is a promise, wait for it to resolve\n\t\t\tif ( cached.then ) {\n\n\t\t\t\tcached.then( imageBitmap => {\n\n\t\t\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} ).catch( e => {\n\n\t\t\t\t\tif ( onError ) onError( e );\n\n\t\t\t\t} );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// If cached is not a promise (i.e., it's already an imageBitmap)\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tconst promise = fetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t\treturn imageBitmap;\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tCache.remove( url );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tCache.add( url, promise );\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn performance.now();\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop( delay = 0 ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop( this.context.currentTime + delay );\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.isPlaying === true && this.source.detune !== undefined ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\t\tthis._progress = 0;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.sourceType !== 'buffer' ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio source type cannot be copied.' );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.autoplay = source.autoplay;\n\n\t\tthis.buffer = source.buffer;\n\t\tthis.detune = source.detune;\n\t\tthis.loop = source.loop;\n\t\tthis.loopStart = source.loopStart;\n\t\tthis.loopEnd = source.loopEnd;\n\t\tthis.offset = source.offset;\n\t\tthis.duration = source.duration;\n\t\tthis.playbackRate = source.playbackRate;\n\t\tthis.hasPlaybackControl = source.hasPlaybackControl;\n\t\tthis.sourceType = source.sourceType;\n\n\t\tthis.filters = source.filters.slice();\n\n\t\treturn this;\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor( this.listener ).copy( this, recursive );\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.isMaterial === true ) {\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.isObject3D === true ) {\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass RenderTarget3D extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTarget3D = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass RenderTargetArray extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isRenderTargetArray = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tconst uniforms = Array.isArray( uniformsSource[ i ] ) ? uniformsSource[ i ] : [ uniformsSource[ i ] ];\n\n\t\t\tfor ( let j = 0; j < uniforms.length; j ++ ) {\n\n\t\t\t\tthis.uniforms.push( uniforms[ j ].clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _matrix = /*@__PURE__*/ new Matrix4();\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tsetFromXRController( controller ) {\n\n\t\t_matrix.identity().extractRotation( controller.matrixWorld );\n\n\t\tthis.ray.origin.setFromMatrixPosition( controller.matrixWorld );\n\t\tthis.ray.direction.set( 0, 0, - 1 ).applyMatrix4( _matrix );\n\n\t\treturn this;\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersect( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersect( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersect( object, raycaster, intersects, recursive ) {\n\n\tlet propagate = true;\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tconst result = object.raycast( raycaster, intersects );\n\n\t\tif ( result === false ) propagate = false;\n\n\t}\n\n\tif ( propagate === true && recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersect( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * phi (the polar angle) is measured from the positive y-axis. The positive y-axis is up.\n * theta (the azimuthal angle) is measured from the positive z-axis.\n */\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = clamp( this.phi, EPS, Math.PI - EPS );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix2 {\n\n\tconstructor( n11, n12, n21, n22 ) {\n\n\t\tMatrix2.prototype.isMatrix2 = true;\n\n\t\tthis.elements = [\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n21, n22 );\n\n\t\t}\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\t\t\t1, 0,\n\t\t\t0, 1,\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( n11, n12, n21, n22 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 2 ] = n12;\n\t\tte[ 1 ] = n21; te[ 3 ] = n22;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x >= this.min.x && point.x <= this.max.x &&\n\t\t\tpoint.y >= this.min.y && point.y <= this.max.y;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x >= this.min.x && box.min.x <= this.max.x &&\n\t\t\tbox.max.y >= this.min.y && box.min.y <= this.max.y;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t// update the local matrix based on the parent and light target transforms\n\t\tif ( this.parent ) {\n\n\t\t\tthis.parent.updateWorldMatrix( true );\n\n\t\t\tthis.matrix\n\t\t\t\t.copy( this.parent.matrixWorld )\n\t\t\t\t.invert()\n\t\t\t\t.multiply( this.light.matrixWorld );\n\n\t\t} else {\n\n\t\t\tthis.matrix.copy( this.light.matrixWorld );\n\n\t\t}\n\n\t\tthis.matrixWorld.copy( this.light.matrixWorld );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// Adjust z values based on coordinate system\n\t\tconst nearZ = this.camera.coordinateSystem === WebGLCoordinateSystem ? - 1 : 0;\n\n\t\t// center / target\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, nearZ );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, nearZ );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, nearZ );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, nearZ );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, nearZ );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, nearZ );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, nearZ );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, nearZ );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, nearZ );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, nearZ );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, nearZ );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nclass Controls extends EventDispatcher {\n\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\n\t\tthis.enabled = true;\n\n\t\tthis.state = - 1;\n\n\t\tthis.keys = {};\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\tconnect() {}\n\n\tdisconnect() {}\n\n\tdispose() {}\n\n\tupdate( /* delta */ ) {}\n\n}\n\nfunction contain( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t} else {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction cover( texture, aspect ) {\n\n\tconst imageAspect = ( texture.image && texture.image.width ) ? texture.image.width / texture.image.height : 1;\n\n\tif ( imageAspect > aspect ) {\n\n\t\ttexture.repeat.x = aspect / imageAspect;\n\t\ttexture.repeat.y = 1;\n\n\t\ttexture.offset.x = ( 1 - texture.repeat.x ) / 2;\n\t\ttexture.offset.y = 0;\n\n\t} else {\n\n\t\ttexture.repeat.x = 1;\n\t\ttexture.repeat.y = imageAspect / aspect;\n\n\t\ttexture.offset.x = 0;\n\t\ttexture.offset.y = ( 1 - texture.repeat.y ) / 2;\n\n\t}\n\n\treturn texture;\n\n}\n\nfunction fill( texture ) {\n\n\ttexture.repeat.x = 1;\n\ttexture.repeat.y = 1;\n\n\ttexture.offset.x = 0;\n\ttexture.offset.y = 0;\n\n\treturn texture;\n\n}\n\n\n\n/**\n * Given the width, height, format, and type of a texture. Determines how many\n * bytes must be used to represent the texture.\n *\n * @param {Number} width\n * @param {Number} height\n * @param {Number} format\n * @param {Number} type\n * @return {Number} The number of bytes required to represent the texture.\n */\nfunction getByteLength( width, height, format, type ) {\n\n\tconst typeByteLength = getTextureTypeByteLength( type );\n\n\tswitch ( format ) {\n\n\t\t// https://registry.khronos.org/OpenGL-Refpages/es3.0/html/glTexImage2D.xhtml\n\t\tcase AlphaFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceFormat:\n\t\t\treturn width * height;\n\t\tcase LuminanceAlphaFormat:\n\t\t\treturn width * height * 2;\n\t\tcase RedFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RedIntegerFormat:\n\t\t\treturn ( ( width * height ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGIntegerFormat:\n\t\t\treturn ( ( width * height * 2 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBFormat:\n\t\t\treturn ( ( width * height * 3 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\t\tcase RGBAIntegerFormat:\n\t\t\treturn ( ( width * height * 4 ) / typeByteLength.components ) * typeByteLength.byteLength;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_s3tc_srgb/\n\t\tcase RGB_S3TC_DXT1_Format:\n\t\tcase RGBA_S3TC_DXT1_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_S3TC_DXT3_Format:\n\t\tcase RGBA_S3TC_DXT5_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_pvrtc/\n\t\tcase RGB_PVRTC_2BPPV1_Format:\n\t\tcase RGBA_PVRTC_2BPPV1_Format:\n\t\t\treturn ( Math.max( width, 16 ) * Math.max( height, 8 ) ) / 4;\n\t\tcase RGB_PVRTC_4BPPV1_Format:\n\t\tcase RGBA_PVRTC_4BPPV1_Format:\n\t\t\treturn ( Math.max( width, 8 ) * Math.max( height, 8 ) ) / 2;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_etc/\n\t\tcase RGB_ETC1_Format:\n\t\tcase RGB_ETC2_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 8;\n\t\tcase RGBA_ETC2_EAC_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/WEBGL_compressed_texture_astc/\n\t\tcase RGBA_ASTC_4x4_Format:\n\t\t\treturn Math.floor( ( width + 3 ) / 4 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x4_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 3 ) / 4 ) * 16;\n\t\tcase RGBA_ASTC_5x5_Format:\n\t\t\treturn Math.floor( ( width + 4 ) / 5 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x5_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_6x6_Format:\n\t\t\treturn Math.floor( ( width + 5 ) / 6 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x5_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_8x6_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_8x8_Format:\n\t\t\treturn Math.floor( ( width + 7 ) / 8 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x5_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 4 ) / 5 ) * 16;\n\t\tcase RGBA_ASTC_10x6_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 5 ) / 6 ) * 16;\n\t\tcase RGBA_ASTC_10x8_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 7 ) / 8 ) * 16;\n\t\tcase RGBA_ASTC_10x10_Format:\n\t\t\treturn Math.floor( ( width + 9 ) / 10 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x10_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 9 ) / 10 ) * 16;\n\t\tcase RGBA_ASTC_12x12_Format:\n\t\t\treturn Math.floor( ( width + 11 ) / 12 ) * Math.floor( ( height + 11 ) / 12 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_bptc/\n\t\tcase RGBA_BPTC_Format:\n\t\tcase RGB_BPTC_SIGNED_Format:\n\t\tcase RGB_BPTC_UNSIGNED_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t\t// https://registry.khronos.org/webgl/extensions/EXT_texture_compression_rgtc/\n\t\tcase RED_RGTC1_Format:\n\t\tcase SIGNED_RED_RGTC1_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 8;\n\t\tcase RED_GREEN_RGTC2_Format:\n\t\tcase SIGNED_RED_GREEN_RGTC2_Format:\n\t\t\treturn Math.ceil( width / 4 ) * Math.ceil( height / 4 ) * 16;\n\n\t}\n\n\tthrow new Error(\n\t\t`Unable to determine texture byte length for ${format} format.`,\n\t);\n\n}\n\nfunction getTextureTypeByteLength( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase UnsignedByteType:\n\t\tcase ByteType:\n\t\t\treturn { byteLength: 1, components: 1 };\n\t\tcase UnsignedShortType:\n\t\tcase ShortType:\n\t\tcase HalfFloatType:\n\t\t\treturn { byteLength: 2, components: 1 };\n\t\tcase UnsignedShort4444Type:\n\t\tcase UnsignedShort5551Type:\n\t\t\treturn { byteLength: 2, components: 4 };\n\t\tcase UnsignedIntType:\n\t\tcase IntType:\n\t\tcase FloatType:\n\t\t\treturn { byteLength: 4, components: 1 };\n\t\tcase UnsignedInt5999Type:\n\t\t\treturn { byteLength: 4, components: 3 };\n\n\t}\n\n\tthrow new Error( `Unknown texture type ${type}.` );\n\n}\n\nconst TextureUtils = {\n\tcontain,\n\tcover,\n\tfill,\n\tgetByteLength\n};\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AgXToneMapping, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, Controls, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix2, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeutralToneMapping, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, PCFShadowMap, PCFSoftShadowMap, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RAD2DEG, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGBDepthPacking, RGBFormat, RGBIntegerFormat, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGDepthPacking, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RenderTarget3D, RenderTargetArray, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TextureUtils, TimestampQuery, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedInt5999Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoFrameTexture, VideoTexture, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLRenderTarget, WebGPUCoordinateSystem, WebXRController, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, arrayNeedsUint32, cloneUniforms, createCanvasElement, createElementNS, getByteLength, getUnlitUniformColorSpace, mergeUniforms, probeAsync, toNormalizedProjectionMatrix, toReversedProjectionMatrix, warnOnce };\n"],"names":["REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AgXToneMapping","NeutralToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","UnsignedInt5999Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","BasicDepthPacking","RGBADepthPacking","RGBDepthPacking","RGDepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","LinearTransfer","SRGBTransfer","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","WebGLCoordinateSystem","WebGPUCoordinateSystem","TimestampQuery","COMPUTE","RENDER","EventDispatcher","addEventListener","type","listener","undefined","this","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","target","array","slice","i","l","length","call","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","toLowerCase","clamp","value","min","max","euclideanModulo","n","m","lerp","x","y","t","denormalize","constructor","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","Error","normalize","round","MathUtils","mapLinear","a1","a2","b1","b2","inverseLerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","Vector2","prototype","isVector2","width","height","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","v","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","Symbol","iterator","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","f","g","h","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","r","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","name","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","probeAsync","gl","sync","interval","Promise","resolve","reject","setTimeout","probe","clientWaitSync","SYNC_FLUSH_COMMANDS_BIT","WAIT_FAILED","TIMEOUT_EXPIRED","toNormalizedProjectionMatrix","projectionMatrix","toReversedProjectionMatrix","LINEAR_REC709_TO_XYZ","XYZ_TO_LINEAR_REC709","createColorManagement","ColorManagement","enabled","workingColorSpace","spaces","convert","color","sourceColorSpace","targetColorSpace","transfer","SRGBToLinear","primaries","toXYZ","fromXYZ","LinearToSRGB","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","colorSpace","getTransfer","getLuminanceCoefficients","luminanceCoefficients","define","colorSpaces","Object","assign","_getMatrix","targetMatrix","_getDrawingBufferColorSpace","outputColorSpaceConfig","drawingBufferColorSpace","_getUnpackColorSpace","workingColorSpaceConfig","unpackColorSpace","REC709_PRIMARIES","REC709_LUMINANCE_COEFFICIENTS","D65","whitePoint","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","defineProperty","uuid","dataReady","version","needsUpdate","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","super","isTexture","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","renderTarget","isRenderTargetTexture","pmremVersion","updateMatrix","JSON","parse","stringify","textures","metadata","generator","wrap","keys","dispose","transformUv","uv","needsPMREMUpdate","Vector4","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","setFromMatrixPosition","getZ","getW","RenderTarget","options","isRenderTarget","depth","scissor","scissorTest","viewport","depthBuffer","stencilBuffer","resolveDepthBuffer","resolveStencilBuffer","depthTexture","samples","count","texture","_depthTexture","current","setSize","il","WebGLRenderTarget","isWebGLRenderTarget","DataArrayTexture","isDataArrayTexture","wrapR","layerUpdates","Set","addLayerUpdate","layerIndex","clearLayerUpdates","clear","WebGLArrayRenderTarget","isWebGLArrayRenderTarget","Data3DTexture","isData3DTexture","WebGL3DRenderTarget","isWebGL3DRenderTarget","Quaternion","isQuaternion","_x","_y","_z","_w","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","Number","EPSILON","len","tDir","multiplyQuaternionsFlat","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","theta1","theta2","r1","r2","_onChange","callback","Vector3","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","u","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","isSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","isNaN","intersectTriangle","backfaceCulling","sign","DdN","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","p","zInv","_matrix$2","_quaternion$3","Euler","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","_childaddedEvent","child","_childremovedEvent","Object3D","isObject3D","parent","DEFAULT_UP","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","removeFromParent","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","serialize","library","element","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxInstanceCount","_maxInstanceCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","_colorsTexture","colorsTexture","boundingSphere","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","_v0$1","_v1$3","_v2$2","_v3$2","_vab","_vac","_vbc","_vap","_vbp","_vcp","_v40","_v41","_v42","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","getInterpolation","p3","v3","getInterpolatedAttribute","attr","i1","i2","i3","barycoord","isFrontFacing","setFromPointsAndIndices","i0","setFromAttributeAndIndices","getArea","getMidpoint","getPlane","setFromCoplanarPoints","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","hue2rgb","Color","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","charAt","setColorName","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","NAMES","_materialId","Material","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","alphaTest","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","dispersion","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapRotation","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","onBuild","MeshBasicMaterial","isMeshBasicMaterial","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","_id$2","BufferAttribute","itemSize","normalized","TypeError","isBufferAttribute","usage","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","_id$1","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","isBufferGeometry","indirect","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setIndirect","getIndirect","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","normalAttribute","uvAttribute","tangentAttribute","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","normals","toNonIndexed","convertBufferAttribute","indices","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","String","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","uv1","groupMaterial","checkGeometryIntersection","faceIndex","face","checkIntersection$1","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","uvs","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","getUnlitUniformColorSpace","renderer","currentRenderTarget","getRenderTarget","outputColorSpace","isXRRenderTarget","UniformsUtils","merge","ShaderMaterial","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","clipCullDistance","multiDraw","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","cloneUniformsGroups","Camera","_v3$1","_minTarget","_maxTarget","PerspectiveCamera","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","getViewBounds","minTarget","maxTarget","getViewSize","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","concat","scene","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","isCubeTexture","WebGLCubeRenderTarget","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","inputjoint","_getHandJoint","disconnect","frame","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","FogExp2","density","isFogExp2","Fog","isFog","Scene","backgroundBlurriness","backgroundIntensity","backgroundRotation","environmentIntensity","environmentRotation","overrideMaterial","__THREE_DEVTOOLS__","CustomEvent","detail","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$7","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","SpriteMaterial","isSpriteMaterial","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","isSprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","isLOD","autoUpdate","level","addLevel","hysteresis","removeLevel","removedElements","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_vector3","_matrix4","_vertex","_sphere$5","_inverseMatrix$2","_ray$2","SkinnedMesh","bindMatrixInverse","applyBoneTransform","bind","calculateInverses","pose","normalizeSkinWeights","skinWeight","skinIndex","weight","boneIndex","bones","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","boneTexture","init","inverse","bone","computeBoneTexture","getBoneByName","json","boneInverse","InstancedBufferAttribute","meshPerAttribute","isInstancedBufferAttribute","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$4","InstancedMesh","morphTexture","setMatrixAt","getMatrixAt","getColorAt","getMorphAt","objectInfluences","dataIndex","raycastTimes","instanceId","setColorAt","fill","setMorphAt","morphInfluencesSum","morphBaseInfluence","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$3","_vector$6","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","ascIdSort","sortOpaque","sortTransparent","MultiDrawRenderList","pool","list","item","reset","_matrix$1","_whiteColor","_frustum","_box$1","_sphere$2","_vector$5","_forward","_temp","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","copyArrayContents","BatchedMesh","instanceCount","_instanceInfo","_availableInstanceIds","unusedVertexCount","_nextVertexStart","unusedIndexCount","_nextIndexStart","customSort","_geometryInfo","_availableGeometryIds","_visibilityChanged","_multiDrawCounts","_multiDrawStarts","_multiDrawCount","_multiDrawInstances","_indirectTexture","_initMatricesTexture","_initIndirectTexture","matricesArray","indirectArray","indirectTexture","_initColorsTexture","colorsArray","_initializeGeometry","reference","attributeName","srcAttribute","dstArray","dstAttribute","indexArray","_validateGeometry","batchGeometry","Boolean","validateInstanceId","instanceInfo","validateGeometryId","geometryId","geometryInfoList","setCustomSort","func","geometryIndex","getBoundingBoxAt","getBoundingSphereAt","addInstance","drawId","sort","shift","addGeometry","reservedVertexCount","reservedIndexCount","geometryInfo","vertexStart","indexStart","indexCount","setGeometryAt","hasIndex","dstIndex","srcIndex","deleteGeometry","deleteInstance","optimize","nextVertexStart","nextIndexStart","elementDelta","copyWithin","iv","setVisibleAt","getVisibleAt","setGeometryIdAt","getGeometryIdAt","getGeometryRangeAt","setInstanceCount","availableInstanceIds","pop","multiDrawCounts","multiDrawStarts","setGeometrySize","validRanges","filter","info","oldGeometry","batchId","bytesPerElement","BYTES_PER_ELEMENT","multiDrawCount","culled","shadowCamera","depthMaterial","LineBasicMaterial","isLineBasicMaterial","linecap","linejoin","_vStart","_vEnd","_inverseMatrix$1","_ray$1","_sphere$1","_intersectPointOnRay","_intersectPointOnSegment","Line","computeLineDistances","lineDistances","params","localThreshold","localThresholdSq","isLineSegments","checkIntersection","isLineLoop","thresholdSq","_start","_end","LineSegments","LineLoop","PointsMaterial","isPointsMaterial","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","isVideoTexture","requestVideoFrameCallback","updateVideo","readyState","HAVE_CURRENT_DATA","VideoFrameTexture","isVideoFrameTexture","setFrame","FramebufferTexture","isFramebufferTexture","CompressedTexture","isCompressedTexture","CompressedArrayTexture","isCompressedArrayTexture","CompressedCubeTexture","isCompressedCubeTexture","CanvasTexture","isCanvasTexture","DepthTexture","isDepthTexture","compareFunction","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","last","sum","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","tangents","binormals","vec","mat","MAX_VALUE","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","px","py","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezier","k","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","CubicBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezierCurve","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","freeze","__proto__","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","segmentLength","lens","cacheLengths","sums","resolution","pts","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","phiStart","phiLength","initNormals","inverseSegments","vertex","curNormal","prevNormal","base","CapsuleGeometry","capSegments","radialSegments","path","CircleGeometry","thetaStart","thetaLength","segment","CylinderGeometry","radiusTop","radiusBottom","openEnded","halfHeight","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","slope","indexRow","generateTorso","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivideFace","cols","aj","bj","rows","pushVertex","getVertexByIndex","correctUV","azimuth","subdivide","applyRadius","centroid","azi","correctUVs","correctSeam","generateUVs","details","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","hash","reverseHash","index0","Shape","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","triangles","next","prev","minX","minY","maxX","maxY","invSize","queue","steiner","getLeftmost","compareX","eliminateHole","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","area","ear","pass","zOrder","prevZ","nextZ","tail","numMerges","pSize","qSize","inSize","sortLinked","indexCurve","stop","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","maxZ","locallyInside","isValidDiagonal","splitPolygon","bridge","hx","hy","mx","my","tanMin","sectorContainsSector","findHoleBridge","bridgeReverse","leftmost","intersectsPolygon","inside","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","splineTube","binormal","position2","extrudeByPath","shapePoints","reverse","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","sidewalls","layeroffset","sl","slen1","slen2","f4","f3","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","layer","buildLidFaces","buildSideFaces","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","OctahedronGeometry","PlaneGeometry","width_half","height_half","segment_width","segment_height","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TorusGeometry","tube","tubularSegments","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","frames","P","generateSegment","generateIndices","generateBufferData","WireframeGeometry","edges","o","ol","isUniqueEdge","hash1","hash2","has","Geometries","ShadowMaterial","isShadowMaterial","RawShaderMaterial","isRawShaderMaterial","MeshStandardMaterial","isMeshStandardMaterial","MeshPhysicalMaterial","isMeshPhysicalMaterial","ior","get","sheenColorMap","sheenRoughnessMap","_anisotropy","_clearcoat","_dispersion","_iridescence","_sheen","_transmission","MeshPhongMaterial","isMeshPhongMaterial","MeshToonMaterial","isMeshToonMaterial","MeshNormalMaterial","isMeshNormalMaterial","MeshLambertMaterial","isMeshLambertMaterial","MeshDepthMaterial","isMeshDepthMaterial","depthPacking","MeshDistanceMaterial","isMeshDistanceMaterial","MeshMatcapMaterial","isMeshMatcapMaterial","LineDashedMaterial","isLineDashedMaterial","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","time","apply","AnimationUtils","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","lastIndex","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","numTimes","valueStart","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","trim","startTime","endTime","nKeys","to","validate","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","morphTargets","animationToMorphTargets","pattern","morphTarget","parts","match","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","typeName","getTrackTypeForValueTypeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","urlModifier","isLoading","itemsLoaded","itemsTotal","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","response","FileLoader","cached","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","then","status","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","controller","readData","read","_ref","done","close","byteLength","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","DOMParser","parseFromString","label","decoder","TextDecoder","decode","catch","err","finally","setResponseType","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","urls","DataTextureLoader","texData","TextureLoader","Light","intensity","groundColor","decay","penumbra","shadow","HemisphereLight","skyColor","isHemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","bias","normalBias","blurSamples","mapSize","mapPass","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowMatrix","getViewport","viewportIndex","getFrameExtents","SpotLightShadow","isSpotLightShadow","SpotLight","isSpotLight","power","_projScreenMatrix","_lightPositionWorld","_lookTarget","PointLightShadow","isPointLightShadow","_cubeDirections","_cubeUps","PointLight","isPointLight","OrthographicCamera","isOrthographicCamera","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","isDirectionalLight","AmbientLight","isAmbientLight","RectAreaLight","isRectAreaLight","SphericalHarmonics3","isSphericalHarmonics3","coefficients","zero","getAt","coeff","getIrradianceAt","sh","addScaledSH","getBasisAt","shBasis","LightProbe","isLightProbe","MaterialLoader","getTexture","createMaterialFromType","uniform","setTextures","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","replace","InstancedBufferGeometry","isInstancedBufferGeometry","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","drawcalls","offsets","ObjectLoader","parseAsync","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","bindLightTargets","hasImages","parseImagesAsync","bufferGeometryLoader","deserializeImage","loadImage","imageArray","deserializedImage","async","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","isImageBitmapLoader","createImageBitmap","setOptions","imageBitmap","fetchOptions","promise","res","colorSpaceConversion","_context","AudioContext","window","webkitAudioContext","setContext","AudioLoader","handleError","bufferCopy","decodeAudioData","audioBuffer","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","cameraL","cameraR","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","ArrayCamera","isArrayCamera","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","setValue","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_trackRe","_supportedObjectNames","PropertyBinding","rootNode","parsedPath","parseTrackName","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","create","root","isAnimationObjectGroup","Composite","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","targetGroup","optionalParsedPath","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","AnimationObjectGroup","_objects","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","objects","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","mode","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","RenderTarget3D","isRenderTarget3D","RenderTargetArray","isRenderTargetArray","Uniform","_id","UniformsGroup","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","isInstancedInterleavedBuffer","GLBufferAttribute","elementSize","setType","setItemSize","setCount","_matrix","Raycaster","setFromCamera","coords","setFromXRController","intersectObject","ascSort","intersectObjects","propagate","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","Matrix2","isMatrix2","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","_vector$3","SpotLightHelper","positions","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","GridHelper","PolarGridHelper","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","nearZ","setPoint","_box","BoxHelper","Box3Helper","PlaneHelper","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","tmpPath","tmpShape","holesFirst","betterShapeHoles","newShapes","tmpPoints","tmpHoles","newShapeHoles","mainIdx","inSubpaths","toShapesNoHoles","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","Controls","domElement","state","mouseButtons","touches","ONE","TWO","getByteLength","typeByteLength","getTextureTypeByteLength","TextureUtils","contain","imageAspect","cover","revision","__THREE__"],"sourceRoot":""}